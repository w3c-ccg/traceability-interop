{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b73485c-395d-4b53-bbe8-62f178d49e79",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2aed3804-dadf-40df-8da0-72ad460c39cf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e07a497-a82d-4c63-89c6-404b5ecbd83f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "82cf9fe4-9069-4d8c-a988-3503f128d6db"
                }
              }
            ]
          },
          {
            "id": "b9b191eb-dead-4f94-91ac-b4074bc2fdf8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d9c65ce7-8d0d-4e8e-ae72-18dcad40c8f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9ab4472e-a4b0-4274-b57b-ed8d91de24da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "416d68bd-1d1d-4d13-a3db-e102ed4e156b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "86becf1d-ed27-4bff-b76e-21369bfcb1aa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "389507f1-2de2-4ef0-bf6c-cf1108f8107f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b95a95d6-9ed3-4cec-965f-2d7f46ea1be7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9550154-b43c-4ab7-aa13-bbaa45632c20"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "474dc926-dd86-48ea-aff2-1bdb30f543e5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "00c8bfdc-51fd-4d7f-a8f8-ac22e2944a11"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5084b11c-be77-4fd6-8a68-a49cd235665c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b516fcfa-45a2-4832-901e-b97f44e483a7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a5584c7-88d4-4b4d-9c78-fe066e73b6dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2fe936d8-2c88-4fd5-b0b7-e12c93117ab4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c04b04ee-6cd3-4ba3-a04f-02fa0843c145",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fe89683a-4a1b-465c-b36e-d469fde3556d"
            }
          }
        ]
      },
      {
        "id": "1fbedd28-bc43-47c2-9987-37edfaf0b82b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "00f18250-b60f-46a9-a177-a93b1e1d6e83",
            "name": "Negative Testing",
            "item": [
              {
                "id": "780ee2c8-f07a-42ab-abd9-2e895722ab6f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43b10319-9d35-4984-bea8-edcd5d0cea81",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896b2355-daa0-4a01-a9a1-f875da530389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ccd1960-3ae9-42f4-9b7d-5194f093ffb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec803281-0eac-45ac-a43c-ed0940224974",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e8c1e5-f60e-4584-8970-97b804819e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61d663dd-1e86-408c-ba23-c2f88aad5355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dafe3d1-41aa-4364-82d3-69ea849da8c0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a42528-ef65-443d-9da1-e8d7b3e81477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d559d327-1375-4c50-8b2f-5fd3c5524f9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d927526d-de88-4a5c-b3eb-5c213f30c7cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "80205fc6-2fe6-4217-8bb4-7c4ff5474fca",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e515f298-7004-4dbf-a1bf-2732a08bd349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b08c3fd4-0c6e-44ca-9688-3a286b7fc70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ba6ea4-1516-4928-bfc3-5677da55bde4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044ef855-fd35-475a-b883-b1312e23ad91"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d3d7491-d3ca-461e-b740-a3770024703d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9e4f51c7-52ce-4f4d-9b4b-916410127f4e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca7cc161-5f5e-4687-88c9-d24ea2958202",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "38f7370b-8f2a-49ff-92aa-731affe305c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e8ca7b2-05e9-4b16-ac35-1af6f4eaffe1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e2248550-a4f9-4412-bc24-c5bb40d2ea4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "382ebd16-2269-43c1-8ffb-f93a9b738941",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "72fec8a1-44b2-4864-abe5-f735aad47bbd"
            }
          }
        ]
      },
      {
        "id": "68fb494e-ff12-40a6-bd14-df98095752bf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9f3021ba-096f-4ce8-8cb0-4cc6ba9951d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97a3e999-99b9-4840-828d-306372e3a928",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "41b72124-34c8-4448-b043-2ac3cdcad8b1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ec0d20-c38c-4f12-80ab-31a42cb8286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfc4fb0-36d2-42b9-861c-1d7105be020f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f82b7e-eb31-45ae-8b4d-0abe54906496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0dab135c-0732-4b88-951a-a9cdf1515bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af0c363-ca06-48ab-9751-f04d6d28f2ca",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a1eeaa-8397-4f60-9c84-2f7ee9a56e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbc44e3-527c-4b80-b793-c810344f3706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92088e5f-7a30-4800-800d-6ac502268b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8836b5a-18c5-4f4d-b9ee-b04ab601eab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd3c6a-b858-49e9-ab56-bd3505dba548",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95363ec8-3ef7-4168-82cb-d8325116c89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20381bdf-efbf-4403-9b27-3c1081924be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f65453-d30f-4c91-b328-b1866b2b4b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0729921b-1061-41c9-bfce-6205793f5dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f989847a-3e62-4fb7-93cd-1df96b2de8e9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ca3a3-810a-4150-be59-6195e114cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3cf339-c373-4e49-ace3-46193c35e7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86fd071-1f82-40e6-a227-92d90befd4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d226994-5fa4-4d69-80c7-2cc72aaddaf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91721d1-1fe3-464c-8828-c72f6a39e14d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457d621d-09df-490d-80db-8fe2943d1d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64df3c3f-90ca-4149-80f5-33bd92f642bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736d45bd-84c0-495a-98b6-9a2f95866549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e966535-4dff-44ec-b0d3-e0132c9788fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fd048c-ae23-4efd-8319-089bf5bebe08",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dc62f7-beb1-4669-bebd-50b896fd70ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c42692f-91e6-4ab8-9d64-eddd9725ae4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0675ced-53ca-459c-9deb-f9d439094ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1162c90-cc65-452a-b79a-4582794c4433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a86ac71-54a6-4a17-87ae-7b1c04b4fb4f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38188f18-92a7-4ad7-b7f0-aa4b5341057e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78354144-d765-45a2-8242-97a1561677d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d11dcb1-d18d-446b-94a8-d636317f4050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "625ca350-cebe-484c-ac15-f196f0f5f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd59dfb8-d0a0-40d1-8afa-92ca483882f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231554df-44c5-43ad-8698-87eead3973bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698a558f-bb87-4aa4-90c3-2dbae92c34b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2586fe7c-f329-42bd-a8fe-edd0f0540566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e773f2b6-40ab-4c1d-aa6b-5e55da9651b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd6b91c-dd03-4095-aa92-589eaada3fd1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede14608-5328-424c-a680-8268626bef23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8287e2-e279-4124-8f67-bf9f72a1bf71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e85b7a8-de5f-405c-92be-e7b317981dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20bf8486-8c29-49ff-90b6-085263fac341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c12e89-17a2-4eff-86f6-52f5ee3f8ac8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0235a11e-44e4-43ad-8a6a-8e279583784e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0f9cfc-ad14-476d-8fda-adf3180946a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb0e80-87ae-4e33-aefa-7fbd128db7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "998f3787-2fbf-4fa4-a9f1-5aac5072acfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881de3e7-c8d2-4f98-a568-3512a536f2ff",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982265a4-599c-4b24-818f-20aa830ca071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9240e00-9b57-4381-9dca-5dbcd72ac1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dbcc688-7e01-41eb-864a-83073dc35d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af0e3fef-91c8-42d4-a1f8-6a29e84926d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d666aa-4d30-4e35-876f-874ed897093e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308244c0-721a-48b2-96ab-959a10922668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da79f7e1-a81a-4752-b03d-b3f5d12a2b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d7dcd8-ae6f-40d4-9e26-802ed25be524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e933ac2-d6e5-4649-adae-744df23cc76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00bdbce-d6af-4882-a62a-b83c208537c1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a9c6e9-675d-43ac-8a51-36026ae74cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d8fb1e-70d2-4206-bcde-12cdd4bad340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95736f9-f229-4e3d-989c-052fd1fb786e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "023d53ad-b22a-4a78-91ff-ee141fee5c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc61431-fc22-4a79-8f02-0813acac8012",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65532a9-d19f-4d21-9337-847893604f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d997ad5d-dc57-456a-9c39-4c76d9d19ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768fccc5-c800-484f-82e3-8fc03066601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b4cca70-db04-4790-8966-9f9dc95e776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3675786b-e1c6-451f-a678-4707e2dd6b96",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643e5592-11de-46ec-bd13-e25a46a2290b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bff5d5-830a-4743-8ed1-b2a9234708de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98421e66-92da-4b0f-b650-193bc296c025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83d92335-d538-4b41-a97c-ed5f36fa05da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb84490-58dd-4430-b76a-1d4384c05319",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5507ec22-a7b5-4495-ba01-e984eae0ebac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ee60d2-211d-4b17-987f-a7615d155004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a98cb3a6-4997-4af7-a872-9db02e8ba114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcad2379-6c9a-4fd5-a47a-1a60d87951fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33ca0c6-6869-4cbd-943e-ce781533abfa",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1989f3a-da4b-453a-a6cb-dc57dff30bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a89c496-7269-4247-a13c-53f1ddb600bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16993648-e86c-4976-9416-c365bd1c84f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4002db9-eb01-48a5-87a4-4302e803a4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e9931c-c2cd-46cf-ae55-28fd82914f64",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a295323d-d9f6-43f1-b65f-336d57eb1f02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf024307-017a-42f8-9672-e4d0756fa1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f709c8-09fa-4068-b8fb-c14f6c9c2e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "340b82db-04bc-4686-862a-092aaccfd72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1ed9ea-e03d-46ed-8ba7-1d7dfb5d975d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5c4b75-5a18-4ebb-af06-a6d894938439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "555ea3f8-5bfd-4f6a-99b1-9346e4e64508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5872a89a-48a2-4437-b987-2c9517197362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22505a99-c683-475b-982b-1a6cac9821f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4087933a-c9ce-4a9d-bf2a-9784fb6103af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5554884-65c2-493f-8483-11c4c3011292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5c45d8-5558-4a58-beb3-e54e83914cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5b5082-1f16-4806-be56-d7e7dd85c154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e10b71-3c73-4b63-ab34-a44a8c39f958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ddaf47-a9bb-4fa4-a84e-173bf3707e1a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e63597-f6dd-4020-9bdb-00aa1d646a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d991bbd-086e-4e21-84cd-7059b87afe92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf418ab-cde5-4be3-be28-4931aeafd9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1777411-b1bd-4fe0-8d7a-f3e2b443ecc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad40c849-3c71-42af-955a-4200557b2aec",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4be73cf-dff6-4e80-b9b4-b3af298fa33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffa4dd2-92bf-447d-bc6b-7a3cdfe0e176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b902443-aa75-40c6-954b-072e5280b5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "48508d02-3bd9-4256-8d51-fa14cdc6356d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ccb55f-30e2-45f9-b766-ffc934508459",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cedd9f-7ac5-410f-bc68-18cd084d7c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2caf24c3-a028-4c3f-9f53-75269bd0254f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011b8873-e3ee-4cde-ab0a-0f546a43ac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "552fdb4a-59fc-49b0-aa3a-390dff310a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f1f25f-3072-4e3f-8a07-78488963a150",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715a535f-cf91-401e-8794-330953cb1954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89353fe1-e9ce-4008-88c1-a1eed8c3a423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985297de-583e-47c2-b5bb-bfb8ae55917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c566679b-ce18-463c-8ec6-f43b36d81a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d085f7d-947a-424b-ab0b-e7fa9f483993",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c492a25b-565a-4c6b-aa8e-19071354f626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283ba0c4-f48e-4768-b244-c7398c072754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2414bbcf-521c-4807-9cca-ce68385758b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b618083-88fd-4186-b703-cbda8b08cac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc2199-57ad-4eaa-b463-d021f8212f58",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4059a5f3-d7e5-4c6c-a676-2e8aa7762028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31cbc15-c829-49a2-a402-f9087c988dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce7b00-aec1-4801-ae83-6f6569febdef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14526e7c-7988-4398-a534-3ddab8053462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbc717f-d365-489a-9c2a-7c97e74f5274",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e19e709-c934-461e-9cf5-8816b429f57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d512342e-8788-4529-9141-69d678d59aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1af4af-045c-44e3-8bb8-96e61981f9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca41e87-f9f6-43c8-ba36-ce62d9dddd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cf8ef1-cc87-49aa-ab03-2250ef3ee84c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5009b7b0-f6d3-4e7d-aaa1-ee6efd6668c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0be7077-7a60-4625-bc6f-99cdbe7f0d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7774a2e8-3295-482b-84bb-1c0d9705bdeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb1cee7-c8bc-4b17-87bb-dd809fd417bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81655a66-5079-4dc6-8d3c-a83068d7cc73",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d666662-d413-4be2-86ad-f637a60f3670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf8fefb-bc81-4623-90b1-517b5f038dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11337f3a-89be-431e-8853-3c0812593d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2350385-90e6-4b8c-a900-9d90409a741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2fab87-8436-4ca3-a4a8-6d9ddfb6df31",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023df83-aadc-4e63-98b4-1ca95487ee6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b1d139-97f1-41bf-b04c-2c90e2404db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c6d550-d084-4f06-b2d6-ca55c6a3edc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1219e9ee-e4f0-4c49-a86f-465f53d7a8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00f5c71-983e-4004-80cd-b91e7c4d5f0d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2fd6e-9050-4f21-80a2-f3ad69df97d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5111981-2fc8-4929-bc6d-68734bb33b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e00e3f-da97-4d3c-a4d0-d9e199d5826d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d96f76-0217-4ac2-a69b-5fbe99497dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9476726e-0cc7-422e-a61e-ba7966c291b3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9e246a-1f94-4226-a78c-01ac62c3cd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c149442-b662-427f-bcb4-4d507b05d5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7477b892-0fa3-4f13-bcf4-8754e651c6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7579b7e-44c8-4c82-bef2-4d2681f05023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2082cf-4aa8-4743-ad86-d29129bf2d56",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b23be9-807e-4e5f-a315-2ffda987ff32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d9fae4-b2a8-4ce5-ba0f-03e99454d131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e13690-bc2c-42bc-8566-8609197991d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9156045a-03eb-4a7f-8dff-3b3400a955ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11e19a4-d700-495f-953f-3996ed344902",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47234288-75ef-4a91-a88e-e1812c0ecb8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e822f7d2-98ac-45de-bcd0-f5e87440989b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494dd554-a3d5-476b-8069-9fed21721746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64131108-37f6-4558-8fb9-4c95c09dec3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40105c9-5ebd-45fa-9d9e-396ba41efcca",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299eb5c3-95cf-4c71-b2a3-dda2dfb8591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a9aa7f-50e1-4d59-9972-d68e17f7f29e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c8c367-d0be-49c4-ae3c-8161637d3740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0c222d2d-6b8e-4f30-9a9e-de977a98ee4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3f55ed-fa0b-4ba6-9333-f30716222736",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd64f092-7797-4fbf-b127-d5d0fe6738c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ad3d2c1-dc3c-46bf-9e54-0913d8fe3593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a410d5a-eac5-4f7a-9d08-1a8cdda7d1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cb5252-0821-4c82-b378-c4a707beca66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95aebee4-0a62-4584-98c5-dbcd465b4940",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80335f2e-472e-433b-8fa1-83616da0b967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c04da1-be61-4c2d-ab3e-8080b6caba84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5989098a-8ba1-4e73-8292-a1adac7ebcf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef45cc0b-da07-45f6-b59d-2a9a95f60778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d37178d-e099-44f6-b6c2-c5dd50c72f38",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b427ea-2c46-4fcb-87a6-bce7a470c93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de817ea7-f820-4609-8af7-cf3a4aa9077f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9651f452-4020-4038-91c1-7cc14bceffe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff5e641-cdf2-478d-bc04-91bd0401a9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b761714d-4a44-4440-94e9-f8f2e701b1e2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0795e39-bff5-4a2b-aca0-a999598998dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2be2de-0366-4290-ba9a-c5d7b85e842f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "982fcfa0-f7bd-402a-8b03-038fc9e6b6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ccdbb4-f14b-4b8f-846f-5bae5f6c3025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3f9ffc-1419-4dfb-9ac2-838b388e415e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945be226-57d8-4291-8012-8a014c755163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7bc2ba-be58-41b9-841c-94e025e1e88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88860f96-9c3c-45d4-adf6-787102802e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af868d8c-6c41-47c4-a272-4a9b93c50c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b4ab80-7393-4083-9983-55015c13b712",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75488cc-6d5f-43c7-90e4-cf642cab9e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81a315a-6527-484b-ac33-d880aaebd9e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872ac8cf-6de0-4864-b2a7-06a6b6f46c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "16e6aaf3-a6d8-44ec-ba24-1aeba34bd56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc30ba7-f4cf-444f-85f9-e708806706cb",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc063c5b-504b-43de-9fd7-9e4091a543a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68345ab3-42e8-4025-a96e-1b0afb2301b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec897c6-9c7f-45b4-b601-a12af5ecee9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1e45381c-49f3-4095-8483-c523da37a1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca16a5d7-8267-493f-91af-658503725fc5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a4dfc2-7ae7-4483-adf4-07fe4091916b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f064c1e-7e97-4de0-a471-b74ca6136406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83821905-ca5c-4529-a5c8-81361432a432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7051886b-b85d-469a-8e9f-d9bcfb74d492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfcb802-7053-4d3e-b5b7-9126397474df",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "742bf72a-15bb-4a5c-bfc5-bc07a524d721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e1c564-aff4-4715-b0ee-519cf1a9b125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de0b29d-39e4-4442-b58d-7d811858dc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a6a793-0e60-43c6-ba5b-a35c4c860bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daaf854-a04f-4593-baa2-44389546e1fa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec123ce-df45-454a-aea9-a591709d9602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18d2c3e-712b-43e9-b2d5-1e2713ac3f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5db8dc-975a-45c7-b0e6-b6475145f852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26b5cb74-1351-4f92-971d-dc5d2e1ac1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb64a276-c386-4f09-9895-566af852daf3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ed2290-8476-4fd5-97bd-15322be1c44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdc559f-2e9e-4fef-9aac-48fa9c3e10ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba691f03-7828-4402-afc0-7d95dd071e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b52ff0c3-21df-4272-8f16-2cfb27fe1c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77d897f-4b65-4bec-9d75-42563121747c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1264f6-5fe0-43cd-b20f-ec961ea4efd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b512d5c6-db29-4da7-88bd-b9dac8d1c33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b788663c-e321-4293-bbe7-8de1d2c2d974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a1ecb6-e899-4f7d-8a69-255f08451b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f68c4b-2920-43ee-af09-29a648366707",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93168ec4-4f65-483b-836e-399a8665ab24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25732358-79d6-408c-9a48-b66c10f5e744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "082b50db-eea5-4033-8a31-34805cec71d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aa9bfaa-2643-4339-8157-f12323bc8e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977115cf-697d-4bfb-ab37-8519dc1aa7b7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ded14b-95f8-428d-a3ed-048f86dacf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb1541e-1ff0-48d7-bfdd-87b81ea4612e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a701807f-bb63-4715-868a-3ac4b998d5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85e950de-a19c-457b-9abe-21b3c5dc83fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2c906e-9e73-48e6-bc38-ff694802869a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cee96dd-1682-4501-8ca5-10661a599399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216a8ae3-693f-4759-8d1f-881c6099f8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f241ed7-0213-4cdf-8aaa-7d3147b61677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a78dc446-4353-4a5e-925b-a94e3bdcb4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa1d01-90b1-42a5-a66c-265cdc607b1f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e35ed02-9fa0-4480-9b29-bce8967e231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f74569-8be3-4b3a-81b0-7f3a37dba386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e447e2-85d8-4840-93c4-683877a4b0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "11cb37b3-1e19-40f0-a44e-16eed16542f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6dd1a78-57f2-4bc1-9f7d-e00b81e7e26d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cbce4f7-44db-4b9d-8369-631ff102d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48f1ae0-f6ee-4d8c-bf80-d37aaf537498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00e56eb-47d1-4a64-968f-3d33ad8b19ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3a5ef2-3029-49cc-96f2-2f828cbf894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86df5eeb-17d6-4344-9cb2-5025c8b3cca7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b93022-5f39-44b9-be60-db2cda30449b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f0823d-fb8b-4c45-9849-7301e4bf476d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abae3058-0151-4907-a55f-89eaac9e0021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64f908fa-4547-45ff-9dbb-0c7e209da1f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1502236b-6b6a-4b23-9cd1-0ada15b72c07",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6da43c-8105-4d14-9fc4-83f6bf70dcb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59554a03-3b1d-4162-b7e1-e8c04275b8e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532dab7c-c088-4fa6-825a-caf5c386f905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d52b7226-24ce-415f-8cc0-b1d49e803498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9abc8c6-2271-4d05-a495-f951479e6348",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd335dc3-3c0f-4ce7-9131-ad0b2ecebc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7b73b7-6a59-4f2d-8254-c6974a7174bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8657f3d8-d88d-4651-bec1-277c5ec95fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd5240a1-c1f3-4427-8d5d-c10e28e688f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71703903-7f62-4866-9d5e-a8f3e4073ca5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf0f0f2-7cb0-4fb4-8c79-39936d88cd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8872dd7-0504-4f9b-9ade-e4c21acb2aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8889ba-8530-41a9-a0dd-931526552f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a39b4ca5-c6e5-4d53-a8ec-d31e731bfb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b54bbd-98e4-4318-857a-bc50b1010a59",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c313d1d4-1358-40b0-80e4-05142931628e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef56118b-9de4-4e01-82a6-62546f2be59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f92e87-1f16-4509-a31c-9eafd783b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "46a6d769-15d0-47df-a3f7-9ea991ec14a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f3ed13-c92e-4f40-8df7-1bd03454164c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5835d6d5-c415-4b71-9f73-df00e8163ce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0a4ed8-9ab9-47a6-9dde-1ba7afc09d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75f17d-3bc4-4817-bba0-46fe5ba9f40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d98ca4b0-7469-44ea-b440-b25cb16e6faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6e4589-8c63-4b66-816a-44e767b84dfc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89c4d5-e6da-48ac-90e2-6342394c3ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05f966a-5139-47d3-9363-65c34021c9c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e3f0c0-0f25-42be-ad81-4d97d225a1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ead2905-8426-4d05-9ef3-6f38e6b48b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26819293-c5b3-41a3-a809-b40cce5762f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5da1d4-3051-45b8-9e79-2fc090549b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3a53fb-afcc-43c8-897b-81624beb1bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fb7b34-8d2c-4bd5-8a16-15326575f695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "611e17d3-bb47-48a9-9aa6-b497a05b4a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b680de99-17fc-488f-a9de-5f2b03586052",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c07468-aa0c-4a16-97c1-a4c0bbc4f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0280494e-8ad7-4884-affa-eb66ed9aa28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f2e885-3224-45ab-bc52-32c2629e5172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c89d74d2-fcad-40b5-95f7-47c1c3f280cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4566597a-b965-4e09-9b01-61d6721c3e44",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a822c9b7-a99f-4635-93bf-3595027cfcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c5e8c7-97fe-4ba0-bec1-eb701a3dac00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2723349-a52e-4294-969e-171570fbcecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b35ea0f-d9aa-4b58-9bbd-beff364a6c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8dea7d-4502-408c-9f4e-926f6fc4f50f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6afa042-a743-4d7e-82b1-bc7b2d439bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "552e8c07-a4cb-46f3-a45a-0a81ff6221f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58fc8fd-a4d0-419f-8eab-448dd711d7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ceaea5-f913-4308-96a9-214f0713bfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47454893-068f-4ee1-b9e7-72324aa1893d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf8a087-26e0-452b-82bc-b8fd6608ddc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5412e29-58c1-4cc6-a79d-32c79dceb52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31fd5a5-55ff-49ba-b46f-fc99185e2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dceefea1-6a3d-4a47-a35c-5f2f24c48b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69d1957-83fd-4078-93f2-1c05cf069a97",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18218c2e-cc74-44b6-9f9a-58c959006abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db6d984-0ed1-409c-8738-0cec6b43375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c57cb6-a41a-4b05-9e02-774b51e1dada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff77e9e6-a6a3-4681-98ea-853ca3beea95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bc1769-7e48-4970-8cc7-c0d3ee19df19",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c912c9ab-b972-409f-861c-bd1fe764b024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee3167ee-d797-460d-b911-6c67ac0e0286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c652c0-ad36-4b9e-b8b9-c1a39aa18b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "500a905e-f0a0-454e-aee4-d260f2f759fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9120a9d9-f493-4298-b8a1-85edb583836f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1dce91-2cb9-4083-a64d-16e67b651ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c8ae2c-31f9-4636-a39b-6fe26aea05e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6256336a-65e0-48e0-b04f-75cd37a06608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17bfd3b1-2536-429d-8ecb-e0d2d3c3d4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab87b7a-5704-4601-8095-6fcccfa58a9a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad27f792-1051-482b-8c4b-544545571a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75056b29-7ec5-49ce-9e4e-6f86ae626f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e1d0ca-a3aa-407f-8f94-2ad686a868fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14044ac-965f-43df-9a92-961ea3d017cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c8544c-6bb4-44e4-a482-ceea3ca7492a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ba4f55-101d-47ce-904a-80bff0322663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cccbea5-3359-4f71-bbb7-fb4dde24b583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea3f3c2-a127-4e6e-abb9-0848c6993e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7de7eb35-f68f-4344-b0db-7df400ee2b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075c14dc-9959-490b-a659-4a80a2b6ada8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905ef9ce-61e2-4080-9b70-34dfd2765ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a3338eb-0dfd-4b11-ac95-4a7ff0820541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceed6f81-258d-4d65-85c7-df61d1d86607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e4baeb-8e45-4242-bd17-e484d20a31d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d46e2e70-44d6-403f-beb6-c99794c9092d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19166dd0-2112-4098-9204-a9ba472654a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9d98f9-6505-4460-a2e4-4a20d6b847ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d9cb95-fbc4-44ae-b56b-3e25be57259a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1292912-d82c-4683-8147-6a82a782ac60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f5a192-4165-4002-8e07-4ace354eefe0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3134ce44-7a34-48eb-bffa-f1fd8357c66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c71367-38b6-4fcc-817c-723541c031d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9fb474-9a6f-4299-ac65-77bc7db57458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7fe025c-32b8-49b0-b120-a80ba0a32bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47be36b4-e15d-47ea-8e5b-8a9938e02dd1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad5bea8-3f08-4e6a-96ac-251cc338890e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77190faa-6bc1-465d-aba4-b4a5431ac8e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de05c053-548b-49bc-9771-e59dd8059fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a32faeb-63e0-4ac0-8386-37631870e94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e6d6532-e2f2-4952-b65e-0f9b21893a56",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7552f32-7256-48d6-8f9c-bcbf2e22553c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6de6aff2-137a-4bf3-9437-4ea409ef2cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b92043-4746-4717-97f4-645f1d1a57f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24ca83e1-7cbc-44e9-b328-a1a18793d03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cb26c6-39cb-4dc1-8a51-325d339c3b00",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8d7746-646a-4d8e-8770-b42e76717c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34fd5ac1-0055-4dd5-9ae5-bda7a0543874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f10779-2b96-4475-a9d1-4e370cc98e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "357e6ed8-eff0-42c1-ac88-1ca8155bd86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565366ea-b563-4fc5-b0f2-63e56ba33c2f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6a9af-97c0-4cc3-9cc0-95061f38c803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dee644-f7a4-4926-8b44-cc0602347cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f503fe5f-77ae-430a-94ee-3184828f5133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "281036da-855b-46a9-82ee-7152da2035a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8de51b-b9de-4e7b-8dd9-dafe50692f0b",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a7947e-7415-4b29-a56e-50346c5c4c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd1090b-564e-4f36-91d8-0254b543d5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca34aa6-0b4d-493d-94d4-134af5ac0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04634272-ed69-4b4e-ac1e-467bfbea1676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e51a8-b45a-4cc4-9382-c89c5d64d417",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548be2f6-126a-466d-9c85-39581bf7dd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ab7951-0f72-44ef-9730-76c0867013e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09102a6-da7a-400e-acb3-ff58024cc782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba09d9dc-0b0b-4f6f-bc88-06a681078c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6e7a6d-9635-4aa2-b05b-467166234ec3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d94da3a-7526-4f54-8d42-1fc9e0e2a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d396322b-77ee-47f2-94f1-186fc0a1106c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66daf816-85c5-4366-b352-01678efa05ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfd7328-60c9-4a5c-96e4-0fbb1eaf43b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e6bc4f9-7900-4867-844b-f0473c55ffba",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee30324b-370b-44be-8fbc-1f1011bd3a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab91089d-5502-4c00-b591-6c3a4df3cb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d8914c-5e2c-47f5-a8c6-b1e90915d1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99246c16-f135-49fd-a22c-6829b901d4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a68ed31-839b-4807-b6af-96dae307a698",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4aa8c89-be2a-4d84-b0d2-9f3c2514bce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb6a8ff-2cd7-4ea7-b78c-77d97fcfd354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c9e20f-eacf-4d36-a51f-06b099d2cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc94966-02d1-4600-9049-46b1864012d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfba2a1-58a1-4d13-a51e-21c13d1a00be",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16269c23-1171-4ed6-ab63-4cc83a07ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e4b1a9-e361-4d84-801c-f5f21d77d6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edab7c2-b77e-4bd5-a85a-5480bd3d3d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15bc81f8-6a68-40cb-bdab-2d4db58a54f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d3e47f1-1c0c-487b-bb5f-74eeeb36ec27",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb647b6-fbdf-4c0c-8d0c-6531c8b186f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3c7c2e-0d13-4d51-84da-9fa1b054c490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bad9531-c797-4da4-9dfd-a0dacf3b388e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a973ce57-68e3-477d-9639-f50c33f93c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd97902-5a13-4fb9-8a4b-f3424e7e4858",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ce2999-365b-4274-a6f3-f089009f6154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be263cf7-3e75-40fa-bfeb-d6552b92892d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1e2b76-108c-40bc-80ba-d63b8c81ebc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b919c38-5bae-4c0a-9094-fa941472594d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b26a0-1794-49dc-aadf-aa49118ca951",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf89f0e3-7157-462c-87c2-b5ed1a11c4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a8b16f-5143-49f5-a1f5-3c6f9bca8514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5254ad-c386-473b-aa82-a486d680602a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43cfaf68-267a-4cf1-80e3-1c818f6bafe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fecb271-5b53-4bd9-af18-cca4a1d39272",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5947ce91-1831-4952-8b2f-f7c28315fdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b61f54-233b-484f-86c2-d9110d474e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0adfe9-5a0d-4113-87f6-483330157701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6629803-d507-4286-abba-a146f6d8a3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308b13ec-384f-413b-b81b-897af0e993f5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1f75cc-54f2-4e6a-8b3e-e549c9986387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0979c6d-4e69-4d0a-8dc9-219ca11d7c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96994716-cad4-4130-942a-31ab19182d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5b337f-54d9-401d-a85a-aed4730d3d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb48584-4c1e-417a-bb2d-aa9cea455cd8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b96426-29ad-498e-b33c-a25ac0473377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67c0151-85bb-426f-95f4-8912131948d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b483e00-09df-4bbc-a5d4-b7ba60357c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e823833-e3c2-4e91-a1e1-cf355178f215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897241f6-126d-4341-b77e-9c7006b31ece",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81401e39-0946-4a78-8768-7513060ddf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efd9f68-e471-4378-b6d8-4cb163d382d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19b2fb1-9961-4b9f-aae9-014d8503bde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab29f2d3-f5f3-49d0-af44-a8660f5931fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c73e5c7-f108-4a51-bbef-21afccd98293",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83b2cf4-0722-4e77-a8e8-015dfaf438d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e7ecda-177b-4df0-86ae-389051d8044d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6b31d-d59c-4c4c-bd29-cca98890403e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7109a8f0-8fc1-4caa-818a-75f6782d4b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2acb74-706d-4b29-9cc2-b1f4ee8430f8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbffbefa-42b4-4238-822e-70f225e15388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667d6f32-fef1-446f-9541-acbbeb6d9e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c089f9f-ba45-4227-aafc-512c1024c101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8605ede7-b105-4f74-a81b-123c76cf68a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b314d7b4-5f95-4c8a-8263-a1b5bf8094dc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d183e1-81ab-4bdb-940e-eaca25372855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05383952-d98b-4767-a91e-e81d2c090b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b78c185-85ac-4ec0-b003-7faa2077ff49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "40103505-5db8-479c-89a8-cf4a07e41586"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d183f674-1d61-4f79-90db-bc92cedb3120",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3f67014-176f-4173-b5d3-8697e28bbecd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e176eb-9929-41a9-b586-8d9fdd35165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16ac75fe-a1f0-4d96-8e07-c0af0106b523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f788df96-8fd1-4066-97e0-474922d1a874",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecb4a6c1-4dfc-449f-bc53-d8f55318bee6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12608cf4-0cff-4e68-80ac-45995c9807e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72515dfe-6361-47bc-8cf7-5c75e0e1e460"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "897ed08f-6748-4c1d-9df0-1c81405a0966",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02a86bf6-d5d8-42a3-a6b8-67755394cd28"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89285495-8399-41be-a8dc-b88806f3fcee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "815cecec-a234-419d-983a-6872bbc860ee"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92503a5e-d383-4a0c-8900-88a83d066770",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca97dc80-7026-4082-93a5-cb71e11cb449"
                }
              }
            ]
          },
          {
            "id": "91bd2194-527d-4770-ab2c-a8e809eac6a4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28f915a3-faed-4462-953a-5cdf8ad1a830",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "afc14f32-62fa-427b-b9db-f001b1edaa2c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae7dd23-567a-4596-a469-8ae197a27021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "71d28405-06b0-4e09-a6d1-3966a951d781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bda0310-054e-45a7-964c-716330400688",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99528e9c-5e68-4965-9e65-55b5fbd9b97f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3565056-68a2-4ec0-94cb-e010c8cb046b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f25224d-c6ce-4b1f-9b2d-f7121cc94124",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cc3b0bd-805f-43f9-9be2-2de473ba3661"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7fb2ab2-245f-42cf-8031-9e90150807a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e793abdd-87c7-4b56-8492-8c91121c09e5"
                    }
                  }
                ]
              },
              {
                "id": "594f356f-15fd-41dd-a404-74a02bbcc564",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "779fc044-6b9a-4253-bcab-11564d7bb7f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a3dcc31-d293-420e-a1b7-d2d5cb4ca700"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "185a47b9-e096-49d6-a38a-30fed64d9a42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1918bf8-a6c7-4e52-bd32-6182c0c9c240"
                    }
                  }
                ]
              },
              {
                "id": "364f82af-2892-4387-b1d1-12bc1bfaa10c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe545a84-2bfb-419f-a9f1-aed1f15b83cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "674578fc-ba73-4bc4-95ac-76c00d71b2a3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a0ff5f0-c329-483c-a3e3-539be5f737ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb4dd981-fdf8-4870-b316-ab27db515f2d"
                    }
                  }
                ]
              },
              {
                "id": "6c91de02-cc1f-48df-95c3-b4b10920694b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "71c52231-9db9-489c-a11e-82e6abacd656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "91feaf93-c652-4662-906b-ae18e36603cf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6357bfcc-103e-42de-acde-98e4393caeda",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "012c6c40-5a17-4731-96fc-ad2610db1795"
                    }
                  }
                ]
              },
              {
                "id": "6e783a87-e155-49fd-9554-ae5ddb53186b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "714b725f-c754-4dec-afed-e14c0d1f7f6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ea1d215-9517-4f5d-8665-26b53a384ff6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f71ffea9-b754-47e0-9768-662593fa4c7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "69024f61-b67a-4be2-a2b8-f87c5f784452"
                    }
                  }
                ]
              },
              {
                "id": "3e351495-586c-469f-a20f-093316d88e7e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4039b57a-728a-447b-91fd-7fa1f4e91cc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbbab809-c533-4628-812a-9473b10285e3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1150ede-3597-49e5-9775-30f53b2a1e94",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c17c78a8-9e4d-432c-9502-98b51249d8a0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fbe0c002-03d9-4714-9825-fccf7382a5c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3745e420-5f2e-4cfe-b248-bba6d42b69f4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "15249b0d-66c9-43c3-b85e-bb6773339390",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a07a9ce4-7d84-413e-a2c2-d64ba43f19c9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2c3c779-b729-4e45-bf37-24fb92b10b55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8317be62-3e32-4cea-b1da-4b936e6ab8ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53bcff95-48e6-40ae-9a91-e254dfcdd775",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15d17c85-6b49-4796-9832-b47fce22ec2d"
            }
          }
        ]
      },
      {
        "id": "c7f6dab0-c231-4d6e-aa44-0e31c9ac84aa",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b3cf0c6a-8043-4035-800b-f9c3357df703",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81f568f5-7ea4-445f-8a46-20ac164743fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47c32867-cd1f-4eec-97b6-45a3a6319f1b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab2eb46-6ee0-49ec-bb6b-e8b5e040047b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0854d50-f717-4273-986c-3bd4cc8f1143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2b8754-bc92-40df-9170-e7e7da11670f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "118d07e4-b72b-456f-ae9a-65cfdbae2e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5fa2bc-580e-4c9c-85fa-15895bf2d14e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f2fc3c-3324-4659-83ea-0afa71725aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9525eb17-cf31-4423-a3bf-a4f0a9c5d2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9a1bf6-2291-4959-835d-bfb70b939d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6824791-7970-4f0b-9cf0-ef2735b944aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b6714-bc47-414b-83f5-670c998bef70",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705b61b5-528e-40e0-b704-54e345f0b661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806cfe64-6070-401c-b74f-35169d259f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cf3a65-214c-434e-95d1-20c6ec90e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b464b04-ac0a-4574-89a6-bc7158fc0656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41226212-9d72-4e4e-9b9c-1c1f53e97108",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f7c2c1-19b3-4a83-b15d-ae67e6a4a52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fb6795-4981-4dec-9ad9-e58640ba9ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73cb3b12-0275-4cda-a61c-67ea028f22b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55301739-d199-40be-ad25-ccb9df09550e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00d5484-fc9a-43b7-ae35-458139692b7e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c41ab6-3e8a-4b10-9a12-9cf2c8eb1f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28611065-c75b-478d-a9e4-0cf2018fa75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29208e7a-97bd-4918-a847-b0f86d93977d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "92f5d583-5365-473f-97ed-a4c7c031d3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e925273a-9422-4307-98c9-33a44199bb2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2ea74f-a2ee-48d4-ab04-5ed9593c71f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc6d91c-5733-48ab-b4be-4895e6207b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e1ff1e-7e10-44bc-a097-2e67103fe35e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10d28a5f-d89f-4e26-bda6-b6f17fc699e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e405f7-93ae-4991-ab2f-603ce6ebf9d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4540a4cf-ab5c-4a8f-bd41-8308a560e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915aab93-17c8-4f36-92e6-e8c9c562280a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583780e8-d250-4732-9433-94d6d84234e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f784da04-4d55-42fe-80b9-09f5ebe23de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ef83e3-f4be-4b9e-afc2-23ddea992cc2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c60b458a-5a99-4b2e-890d-d855648bea1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc302ffe-2662-44e3-8a9d-06155a77ab01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73a18dd-629b-4e08-8872-06ac6603bb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a290824c-6909-414e-81d0-1c83fcb8e4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ebc995-2e3b-40c3-a00b-9e50c7aa8c64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6165d05-66a1-4d40-871a-d8137ff293cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c31c39aa-8a38-4d7e-9bc9-8113ae73d8c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a572f9a-4d0e-4a20-b88b-41a0cbada185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e76487b-d0ba-4df8-a831-85d49f25ada5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364fad47-4b5b-4131-842d-13ded77734f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e43682-f80f-476b-9d10-2dd577204f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f262eea-da02-4f2d-ac25-d8fd1c2a348e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99be3c48-dc11-4119-ba92-231b8769b167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50156953-556d-4acb-8c2f-073edbb689d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c9825e-ecbf-4c37-82d9-b1f283ac575f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a25179-4900-4176-8b27-1cd632677913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc0af58-b9e6-4271-b9d3-b7292a0fddca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2307a39-04e0-44ec-92be-b369eb7ed929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f38c366b-f0e9-4207-bb02-543b09a6fd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b293b851-c37d-49b8-a9e0-413c76d97f60",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5de4a2d-bcb6-4898-8b24-cefacd6333cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050e6e31-df65-425a-bcc1-ac493382732b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7288646f-715a-4d98-ad48-583d1b1fe513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "138e76e8-f13c-4c73-840b-8c052ce6e142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f34fb7-d620-4dd2-988b-40c280f28c49",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45c09b1-c10a-4789-88f0-e0f437d4ee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667d5df5-c31b-41f3-9aca-e571f2914de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61e8734-1d30-451d-8571-3ccf15e9d81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bae20bf-498a-4009-b21e-f93c07a1b557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97fb82fc-37a1-4649-a3dd-e91c01470145",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9517975b-45ec-40eb-b907-7ba8508ea8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b128d9a7-eda5-48c2-9658-69380e420ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aae8fb-ecfe-4fef-b618-6ea50d2332b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e1ae4-8ef4-49dd-a494-3e1685f16cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a086ba-48f4-4e87-a3a7-f7a7a2e05181",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cbf1548-2d34-47af-8bb4-9d280226b4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55265d56-333f-464d-b29a-77138dde6725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49c1f70-764e-459d-8eb1-537edf5e862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "01930894-0923-4a29-85d2-cd36f3bd6d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726eea35-21ee-4c55-a992-79373af01276",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9dc806-6cd2-4025-81d0-45120d43abed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8776808e-0fff-4d95-b163-2058cb1af183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f042d18c-b8ee-4557-87ef-2c5b4eb21b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c4d5ca-88f6-40ef-87a7-b944da1ebeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95f250-9436-4adb-a4ee-5ede7a57a663",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e172a24-6907-47b2-905a-7fdce5942cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74484b6-27ee-4471-bfd9-364073a7de33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8f9f26-1f79-4651-9769-72b921b2a858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6dcd1c3-d2a1-41cb-a3df-27e2d794fd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b32b2-c218-4035-bc6b-6dc0b7a96895",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e0b9bb-666a-4a4c-8635-239308170a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b2a97d-c278-4c60-aca5-24637ac94ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7528cb6-5226-424f-a2c3-e14adcbfb503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f628f298-b574-408c-b1cc-727bf7ffd8c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08e9d1d-0212-4eb7-8236-3d284cc0a95e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54692827-8eb1-49d6-916c-6664e09605eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f02b48-0a96-42f5-86c5-db49f4c2091f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0881abdc-770d-480d-9022-81486c64a6af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e62bd164-22ce-4081-a9c5-da523079121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7c3303-2e9f-47fd-a1de-4a7c78cd788a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420bb38f-b616-41e6-b455-9416bb064fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bb4c64-dca0-4954-a137-fc99dc47137d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e256dd72-ef94-4f48-b194-1c4f6c73692b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4edad2e9-6440-4e64-a79b-6029d4baa0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b693b96-1ffe-4ac1-a1da-556d4de694f9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a0b81d-2db6-4cc4-aec6-af68caeadf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471b8b58-2351-46cb-b318-df1b9916745f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb86f12-b477-43f3-96f6-b5ac845057a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34eaf4c0-7535-42db-be93-ee2249e5e410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6d217-d9ac-455a-b73b-da47469112df",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63268d7-5020-49e9-8d2c-6acf818a9998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffc956f3-72ed-42e1-b278-4817779ef7c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a38232-58b0-4d5a-b5bd-ea24b9581ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee283b85-2106-449e-90e5-afd6c7b01f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c2e843-0f85-4006-b74c-aa0f8e42afc5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74336546-39f6-44f6-a6e9-a6d124dd89c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5f33fdc-b7d3-431f-a8af-7af717ae4cb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bede42b-b340-4054-b99a-218b2ae09cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2594fba3-798d-4464-aa16-9e90a033e1ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e66f4f-3c45-4a9e-a809-475a699dc833",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0de88a-af4e-4899-807e-8d3678b758d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b2581d-d7b0-41ec-bcc8-4af355671fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587d592a-271d-4cb4-8af0-edd02e05c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdff037-987a-47ed-afd7-c5952003c8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e17504a4-b3b2-45e3-a2f8-04d89f1aa245",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0fc388-980c-4c45-8e8d-b2ec08c4a777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d555287-fe98-4180-a639-02e17b7a6364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bd99cf-e31b-4366-aa7b-7cbd3e686a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83dc9f21-5852-4515-9ef6-a3bb40bdf6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63e1433-22b5-4b01-9a36-bb63cd1baed3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d14c37-a53a-4bad-af12-983b0a5202e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd3827e-1550-4823-aaed-3b0aacbdfcd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e800a8-fcb3-4fa5-a6f4-e744bc2cdce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc4c72a-b4e5-4811-9896-b8fde283e077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ff7df0-4d6d-4393-b778-2ce5fd4982b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c792dba2-ab43-4813-8b7b-4ec2f26dc275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af1c3ca-4012-4cd9-9fea-4f9fa4c12f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310815c8-1f07-418b-8adb-16de86b78423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cba82554-aa29-465f-86d0-159bb9a18bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c16b0f-0a11-46a2-bbdf-91ba2fd77125",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5d1699-3281-4a6f-9b0a-8220a537ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a80ad6e-eeab-48fe-adbd-d6ac19099a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe4f7895-3929-46f1-8b8a-68f38ba54e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdef43c-2ccb-4fc3-ad97-6fc37e3abba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c2ea4b-4954-43df-b9fc-5aee170dbd0c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46d90b8-ed79-485e-a135-1528da51f0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acc093b-897a-4e42-be08-78e68965bc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15d22dad-ff33-4f47-8147-89c1dafd0943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2257ba3-97c0-4d90-a3fa-339f21cef26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117e0d32-ed02-46b9-9c62-f9768212792e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c799f81-289c-4677-95ba-a36adfa99335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef512d1-617d-41a8-b2fe-0673a1e2f49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ca8afe-5637-4797-a54c-4cd598ee690a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c9c3b42-9dd1-4faf-9e7a-daaab81d0ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c0adde-aa83-4b9d-943c-0b3fd1dcb21d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5618e489-8bac-4c28-ba03-f57c7096e697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e671917-fdf2-4e27-b47a-f8f70c1c7a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca844a-43d7-45b4-af15-83bb9a24250b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7399f0b7-36eb-4c44-aeb6-014fc28f19c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e1b1d3f-41db-494e-bc49-691264cc9c1a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e998a7-2041-4f75-8d81-b19803d24610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d01254e-f01f-4292-a6c9-0789b5ce4b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc5b11-8559-4f02-989b-77c78f89ad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7ce15d-9ba3-4002-84b4-52cae2d18d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9522d690-7596-4338-9e39-d18cf38a082c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c15e1316-2a84-4162-afa6-05f1886942a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2030854-cd99-4795-9ce1-47c607e79332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdce8d8-0ec0-4bbd-a400-2c042703e7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a100ab5d-e4e9-4c6b-8e8a-cc9033d511ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0c2b25-8928-4bcf-a6b2-035d388b36b2",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5e2410-3947-4c57-a7cd-857a20861eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1022f23b-4787-409e-ac30-443b46379516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa6e120-a0a4-4ea1-92ed-ce98d0edec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afadb25d-3ae4-4630-af53-ab0e53594ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57ac4a0-25cc-4099-a875-2274d633ca8e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c774d27-dbe8-430a-8ef0-bb165d78641c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798a8946-1d59-4c63-8073-c32c6464a9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f759690a-828c-4bac-ae3a-dcdc0a3de7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e139e687-0d60-4462-9805-797e27993b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69155776-94c5-4c02-beec-50f54ef347dd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35895144-5f2e-448f-8f9f-ab4af9a856a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bc67ea-3d8f-4001-b999-fc1c704d2d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef2c24-b5fa-44ec-b07a-db12c205d122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3114a2b0-2ac6-4558-aca0-91d3afc0d061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f414b37-de84-4af0-9abd-6450f0419ba3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0223a7cd-8228-4268-99f6-8335f21a9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4372cae-ec20-4a00-a9b0-aa10dbf2e2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d433f523-31ff-482e-b907-08c0c067575f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac80efbe-baec-417f-9f0e-1fc5516d7b71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "87a34a12-33ab-4111-bdd1-6a3be5d13c41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1274d6f2-9928-4853-9a5b-f70f34ac34df",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d764984a-fd00-4045-9d57-7d28df69798d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1191758c-d0c7-4ddd-b9f3-bc96b845339a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad12b1f-5df1-4711-84c8-d01dfce14455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6fc97586-5d77-474a-bfe0-b9ff701f9c30"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b8a9c35-8414-4a68-983f-2f7375063a98",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "622a8705-b600-449d-8550-1b4b8d332b1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce2d8ea9-d59d-4788-b634-bb6d64605fb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b76f0456-14dc-4f9c-b618-d7294e9efd5d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c4980928-506a-4b2f-809f-36a1c93aebd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "451ba332-feda-4f07-8bf4-9d8348f018f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "237df6e2-005a-479a-974a-de006458b49f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "456ad0f8-2827-432d-81fd-7b75647ba61e"
            }
          }
        ]
      },
      {
        "id": "45b17510-fb4c-4bb1-a74e-b37c4dc4bb6f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "9b1afbc4-93b6-4ea8-9eb6-7336ba34c396",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b25ea20a-22cf-4954-b01d-6dd548967600",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1999c5ee-b038-4566-8a9c-272fbce6c7dc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fb84a3-5e0a-4aa7-bf57-c07139831b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661178c8-abe8-4bfc-bdc7-0d4c06548f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593381b8-9456-4049-881f-9ed1da7b9c23",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a14d38bc-c4d0-4cf8-b12e-b6ee8063fc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe0261a-7103-4797-a34e-e820b3054d6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afe3e42-3ce8-4c0c-bb3e-7028d4a4e113",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f6dba1-a5ec-4be0-9dbe-ca71edad80e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212949bd-071f-414d-b28f-36dccda59bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c799b1-7739-4327-aed8-49ec3426cd19",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b519de6-82fc-45b0-ae1a-6a9497e946c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7cf271e-1ceb-4a56-915b-b4cac7e3e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "394c78b1-816d-41d2-9aae-4f28f61cf43d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18ad4a4-2cee-484b-91f4-0591361dcd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e08837d-648f-483d-9ad3-7cf7aa154338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49359bf-e6cb-4769-86d9-d1cac670ea41",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd43e9-1d79-4cc3-88d6-5441ded27af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bb2bc0-e3dc-451a-a07e-877c725d802d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1e7e4d-ac15-42fa-9185-c219a5d403d9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9551472-8e5e-4609-9542-2cda5e108c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ddb5e7-608d-4d16-9de0-f5f82002c7ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1dda8b-123a-43a2-be16-2451fb6656d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9c25ad-d3ec-444d-92d0-faf5656de6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8f4a63-7316-46fd-b984-458047ce3862",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6a7471-aee8-488b-a03f-bcbb34c5b772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6c56161-b952-401c-ba9f-3fd248d694c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975ffcd6-a3af-49e4-b58d-78f901e973d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d8f950-5467-448d-b221-0bd28dafbe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28326b7-0912-455b-8f2a-4ffa6e3c9111",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ba9414-39e8-456c-905e-d8fc673c17bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6afb62a1-c2d0-4eec-b73b-53a56ec166e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6180104-fc3c-4306-bd39-b7e9d170d207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d8a538-52e6-4b65-82d5-9c86f3322d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a7b4c0-2785-489c-ab4a-2f6a6e313bfa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc0df94-58d1-44b5-9e6a-45ebe329e744",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22ef1d38-bbf8-4105-99f5-dd77ff1cbe3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425ec30f-5f77-4a74-9864-8224b0700303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9246df46-732c-4717-a5e7-7f21bc74b975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87af9b94-b553-4502-be75-d7cb52532878",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4261195-ca52-41ca-8124-365ebc21cec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bae830-e319-454a-b3f4-1d1bcc0ecbee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212d58a7-c413-403c-99e2-ae5cf235139f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996ee270-7711-45fc-9a20-d881fe263f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1600b952-af52-40d7-a87a-19660dee482f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b76795f-db5a-45ab-8ab7-6ace9c14310e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad8d8bd-4fb4-4bbc-a8b9-7f340426b881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503491c3-d6c8-4046-bdbb-00487eeebc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c975b64-93a5-4a73-94b4-da1fd6d4cafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96110d1-4661-4583-945b-e272dea71c4a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1a3fd8-2a4b-4216-bffc-56fa0c02407b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9396ca45-f343-47fb-ae28-1b20b6efa45b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50b5aef-b4bf-4c93-81dc-655713289072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b9fd21-a14e-4afe-a163-d23f48a9356a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee0531-d6c7-44b5-9938-0dc1bc445636",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808e39a2-ae3a-4033-9e6f-4ba167b58d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "868e95c8-2705-4a33-8dca-2df3c2e61933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd907992-da9d-42e8-b407-e910e96b8bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e03afd-90f2-44c4-b9d4-3b01c78f87e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cacd493-8240-48d4-b2c4-f69735155a17",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58f615f-0350-4229-a627-304287a9f72c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e105d6f0-489c-4ceb-82aa-ff09fd5679a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "797dfa03-4b19-4237-8105-2a46372d66aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51fc87d3-1ef7-4942-a152-6b0b0832a841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7b5f27-b1d9-409e-98ef-a9497d6e0b2e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67aa6375-058c-4302-af05-c2c0cac53794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "572dee8c-963c-4b20-9cfa-93a03b5cf003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88f40b0-d22b-46cc-bb29-6de346deb54a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aeef5eb-9980-4820-a85b-1ffc7e152758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123adad3-0490-45d8-967e-63a8ed7c2c89",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65be8174-eaa4-4a00-ab6d-4e4672514139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23662d3-1374-4010-9920-458c2bf4d3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "900129df-ab8a-4478-a961-e4272399ec80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca32038-668c-46c3-8150-3f603abb7f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c132eb-87e6-4a99-ae79-5399c4f6ceb0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89d6957-ed68-470a-91c5-7878b507f2ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5c73c0-338b-4392-989a-9fef4e739fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27791b7b-f481-462f-9f08-5324a347baf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d8424f-2a00-456e-a648-0364294a0b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096c55b8-62c9-41ab-845c-f6cd53e955a0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c13151a-ccc0-440c-9d71-5867d78c0201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15e1be9-7c29-4095-bd0c-aba19277174a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb57a19-8e2c-4847-8fc3-7b6d26aca974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc43814-f291-45e0-959d-18c706683e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51545e9-5eec-4737-8e00-9c47246f7edc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f3d09c-1b17-4cc7-b71e-8175b2be8a12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02721ef-f9a8-490b-b735-165952567b62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda67418-c67f-4856-8845-3775edf713ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b27f2ee-22e4-4c8a-bd66-4a47b408fa4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643d7339-8327-4341-9b2b-53facabf5a6c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f22ca7a-8a06-41df-85ee-7d5e5bb31c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f24069-9d15-4d70-a3eb-2e3a9942a03e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f6d7d-e29b-49b5-a802-0f2bbded58d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9412f3d0-7fae-4916-9852-a15ca28e3206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2f3b34-cf4a-4279-a5cb-50f006245cd3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336d8594-2270-4aed-9135-e60bc1533bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f889d430-b040-43f2-bc63-7641d4e009eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36251c9e-e2ed-4938-8068-5c7bc68e31e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12f4089-c346-41e3-823d-17b30e520ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e58eb21-30ac-494e-b7b5-f7562888d2e6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f6e1ea-2d6e-4c53-832e-479e83e5b55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd4df05-1499-4646-972d-ab29e018c966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a24ede-4ae1-4754-a43e-1e05d743b810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5345a755-59f3-4db7-b654-a97b8b2d9398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfc49c0-2cb9-4191-86d7-8225faa7ba2e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd31731b-9a1c-476b-a1f1-19703d47be62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb42bcd8-2f68-405b-be1c-6198bc80b5d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "071c1ec7-a800-4b6d-82b3-bfd76e0798de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "835b2e6f-cf3e-496d-bcca-250edfa763c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692835bf-4835-4bde-b25b-2a7d36164306",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d020c2d7-aaf4-43dd-b773-ad25dad60028",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab71e908-364e-42d3-b2c2-98e675b9d79d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf75bf1-4f24-4b05-b7f4-2bbaab970152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e7740-0a65-4798-9dd7-701299edbff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2909214-1149-405f-bf8c-45b118ea841e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287fedb1-956d-4155-ab81-d9ee9592f220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad66292d-6b70-4624-972a-8ef13c726afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5bc9e5-a6a6-429d-b0ef-beab97306ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911b583a-2d88-4569-9208-664798b625db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f28e2d-38d1-477b-ab60-953df20ce69c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ca205d-9f1e-4f45-a890-bae0f6f9e503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4154d4f7-bce6-4204-95d0-da093abb08bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a489b64-3576-4fd7-a9ca-49828e070c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978cd323-4304-4654-9aea-f478d087f2e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a2ad0b2-8cae-4599-aaf2-b74201394887",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ac4a62-0706-4f29-a512-446f8531d735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e29047c-ba96-4fdd-baa2-536b972ba0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b950f746-7c8e-4127-8beb-ec855ce3041f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205ba347-0239-4257-be37-216d7fb6425d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1f2e0d-bda1-428b-8df5-ae7a04b26633",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad3aefb6-4f56-4f37-ba6f-762a18722c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75f5779-d87a-4247-ae24-954dbb06b2cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836987a2-a4f6-4334-8e71-21d31d3f635b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37af4cd4-a625-42df-8df5-ebe8c4077bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1409074-e05f-4a58-b2f4-a046db59ff82",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12693c44-a4a1-4b41-92dc-47b6a7dea4bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ca89a17-01b3-472e-bd8d-0a01e02c8852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d9544b-9340-499b-99aa-29bfa04e762d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26107576-1c44-42a8-b7d6-fdad4012ef98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d98ca6-39e0-4dbe-89a0-f3f49da23204",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806712bf-160b-405c-ad39-d84f210033f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5076624a-bc85-4e73-9072-fe34f6373ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec34b34c-562f-49b7-af89-419e59941db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2d5e67-eece-46c0-b7d5-1526cc9c24a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fd4d0b-81a7-4f70-b574-50a4364c4d1a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a3002c7-1538-4de5-a6bf-ad66621a0e9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b52dec-d782-40fa-9879-2fd8b42e8e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76abd630-7287-4513-af91-e33d743b65e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccbbf4c-baf3-4e75-9dec-f1bec8862f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1213cbb-5056-4df4-a337-aeff7dea9b16",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb8dc49-06f0-4360-b474-2258a6db608a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1063c49e-d95a-498f-ab45-9932bc02f8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f7c6f4-df4a-46cb-aede-6da8df3b4930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f9a084-a350-43b5-b0c7-1b99a15c7c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35543779-63d2-4456-a3d2-913b1d864381",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c566c72d-81cb-414c-a64b-ca899081d2b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d47e1ad6-3bd9-4dcc-be29-94fb393ac0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7259f5f5-04b7-4c30-b817-da9528134ba1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b0385e-3da6-4256-9df8-42077c0de948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e22f16-901b-4d4c-9437-52a8db4d2b0e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77834fb4-019f-480a-a41b-2679e64ce0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c291e2ad-8d50-40e2-b325-a37a632e1251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c537e9-c713-4e17-a801-e1242f3cb502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa69a8d-4f8d-4b0e-ac0d-bfa6537a6dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569f7153-e6b6-4b5b-b8b7-f0951236b100",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43de27e6-9aa8-4b72-b1d4-713bbfabf9d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ea210-890d-4419-b7ea-de3994fcfda0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d24bc9f-8e0f-4a10-af24-0a04971ad061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a62996-5674-418c-9ad5-6902ff994b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e219fa2b-da14-4bfa-9b20-f0d6538a93f4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd7f5f5-7063-4d89-9ade-694ba3a6bb97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee4ddf7-98a3-4e23-9fbc-2da417a8d175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2551483-7ca4-486e-883b-264034ec3b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfb6ca4-c567-479b-9112-e2bf20f7ce0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99355c4c-7ab8-4f50-85c3-fa1a0ffde7a8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bff8918-5809-41e9-a5b5-3d9ca0cf84af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32365bb7-fa12-4957-ac70-7e97480f7647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b542234-83ec-4a29-ae2c-93ab6868b7c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b748034f-c301-439a-9b12-51c061e5e471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75f8df0-9b9c-4502-bdbf-b33c8ca00525",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188f2709-dff4-4891-8064-899d650a64b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ee6d2d8-bb2c-4452-be60-a560d3c207fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01f6ebf-0a7c-44e3-af49-fabcc8f61313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d71aefc-7591-486e-8808-c89a0d4b045e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ec4d4d-69a2-499a-b2a3-60f3ddae471c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31217719-7f11-4918-ba24-9cf49fb532e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af37a7a6-b64b-4fe6-9051-80b1fd245c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbd63df-d61b-4af8-9258-12efb3146808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01a8b0e-2684-4d08-9f0f-c7672e22458e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704cd373-7b44-46eb-adb6-94e728ea0f64",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefef2ee-572e-44b6-967a-c78dedf6bf3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66ee57b-13f9-403c-bd68-1a492c78022b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b182ee34-80f9-4abf-8d44-3d5da27f07ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4627aea4-2a9e-4ed2-9911-9ba95a6d7a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd85343-2f38-4868-aabe-9a97cbf4e1f3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd56269-8584-4acf-bfb3-22905744985f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345c8f1b-0f54-4073-8d7a-67ebaf8f58a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928cbdf5-3438-4ccf-a445-acc24301c98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283ca38d-6e5a-494a-a3c4-0e062796a6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e170daa0-ddd4-4f26-90ec-0b4af919fcf5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad0746e-6141-48bd-b8c0-37ca0aa9375c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52215298-fa65-46bb-9a0e-5efa498772ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b7fed9-9379-4aae-98d2-9df5d066902f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952e82f9-fe09-4142-83f6-916d98cd71d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d03fd1b-eb1c-4803-bd04-73f43efa7e16",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d23b2-0c7e-4247-b8a9-9f782d9e7631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe06c10c-01c2-4fbd-aea9-b455ee8e2dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b47caa-4844-4dd3-a914-e044da0e9b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54924cc2-c3ca-403c-adef-0b3456bc9b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc43fb6b-3a88-4737-bcde-b2b46e6b93a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1c3125-fff5-4673-a62b-99b5f74ff0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d964eb73-149a-47a7-ac52-06057b1bb0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84dc2f2-441b-4472-9dca-c8db4384d315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59c2344c-6423-42ba-93d4-5d9992bef6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d615e22c-acda-49d1-ad98-c8304395051f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc96638-ea9f-4ccf-a64c-ec8ca1a060e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45374c9-3f1a-4bb0-84be-a1c481a6d977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578c1b45-a982-41f3-926a-b187a5bb66c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41af46db-4b71-4f25-9eed-3acb7b2b8375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefb685d-e99b-49ca-b163-8d0bdf12c573",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9120c6f-e50a-4acf-81d3-e1046018c301",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0913f306-c431-4a91-9345-3fe03ecb7b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a4e581-3c1e-4bc1-b39f-1fb8ff04fba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44136f17-9416-4821-95ff-9545efd29523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9d0cde-fe16-49b7-b30c-50a97433c8f9",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db61d1f4-bbdb-4dde-8f93-10fae60f5c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0422a3-a779-41c3-a3be-9871a6f7e3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3ed172-6a91-413f-a121-8ad01814c207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ccf299-1fcb-4a6d-a2be-573fe3ee74d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e917f7-c835-424c-8ea5-970eaa8929a0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06e38d2-9acc-4b66-a744-742a436eb645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9787d2-fc49-4f9c-a132-8926025a0922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f19117-1d11-49fe-8355-c72d3d22895d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3a9018-5b5d-453b-bcd1-b0da6662ff18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60836918-269d-46ac-986e-eebe018715c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc7ccae-029d-4711-ae7b-b0dfcf00d663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26bb7d7a-846f-4f85-b749-a9e0a0834331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49198d83-4bf3-4e33-90c9-e465868afb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfdd47b2-08b1-47d8-87cf-8ec387f91b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c8eefe-5cbe-40f5-a902-d122ad923416",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f1d8f-7cc8-4e5c-a8cf-e1f923c2fccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cf3ce0-9ac2-4b61-9982-1e77323ce992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4380bb-334e-4e77-a875-6c6545598846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e463d5-54ce-465f-969b-19d7471a176e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdaca52-35ce-4622-921d-c6b3c43a61d3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d9ab0f-010d-41ec-85d9-ad5d434f3f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37074270-9b29-480c-96e9-0c27d451b04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e18ed9-0029-4532-844c-0f4140e12037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e76832c4-96a8-425e-9895-0f33ce7399b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539ad034-ebd0-4ffc-8c25-35a9e48602ad",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63640480-1e90-4a38-854c-180a2765ea07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674d515e-5fcb-4ccf-868d-3429f2dda602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6679b9-ea9a-4c4f-9f4b-aee220c6c9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1caf9dcf-650d-4e32-95c0-bf8d07fce391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc55dfe-0dc3-40e8-80db-7cc511ad6c49",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ea1c13-80f8-46d1-a53a-8e789c35598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8d7156-109b-490d-8d73-6d82195cc82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9004940-6885-4d1f-b814-9248d71b79c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4686c131-2316-48cb-9e52-03c048377f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018570c8-e5ba-4d7a-91cb-260ef27a9320",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70836552-a66b-44f3-a8f9-b53b59e69d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd871d2-10ed-4f15-8dcb-30c5de0b89c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce59db3-41cc-452a-8a65-a0b55833b8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97ac47e6-07be-494a-9908-4d52652e4157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e9a59a-67bb-46cf-99ea-af642b4f248f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd39c19-5273-4a31-9b01-39794faa3318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f89939-846a-455a-9bd7-70abb8c6aaae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9709b5-ac0d-45a0-8ec6-58bee63a0e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5e485f-3d16-4ee3-b679-9716469e987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4a91bd-1232-4407-b3c5-c7b94ed13573",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab87b20-9c56-407f-ba4d-12dc49ecb966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9276887-669a-4820-8545-14f2feeef7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989f83df-6049-446f-8398-11a8847496de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8a29e1-ae2c-4219-89b6-c3791396a166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f76752-b13b-4376-80a8-6e84fa3c96e1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585e7a4e-4155-4f1f-9cda-bb685472650a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cf4c82c-2030-4699-aa31-b1189118ea1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8592f21-f267-4cfc-b426-eaf3212dc0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bb5f6db-85be-47c3-a5f1-e8bbb27caea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ab6f82-c27a-4360-a7f0-f18fe8f7ec07",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086af872-9c82-4c2b-9dea-7ca15d0a94af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbf7651-146e-45b5-bc37-458f391839fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a62644a-1692-49dc-9d5b-cef1aaf1af74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae0e98b-a54e-4138-84d2-98532fcd243f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cf7ed1-0ef1-4d52-82b4-215852689e37",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62324feb-9e2f-4be9-b244-2b4ab3542181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216b9da6-92bc-4dfe-9819-d5f3aee01050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2f69e8-2481-4e83-b092-ca813e829902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786284e2-daf4-4259-9c2d-1adafffc9a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5114ff98-0f26-489f-9acd-7d4b1b4b0074",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab68f576-33ad-41da-a3d9-8cf1b224afbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bc7a3ff-5728-496d-88b5-8a508a565d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dc7d90-70b6-402e-b13b-6914fbeed463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbef1c47-93fe-4587-8e73-312b607eb46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ddddae-b763-467c-8388-193a4a88a4fb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7472ebe4-e70b-4b15-85ef-113f9055f8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be95673d-0e45-4804-98bf-8a62af2082c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22f9444-af0c-460e-aac7-bc9986cff2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94327bfa-4939-45bb-9f88-369b129d0170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f17164b-ee90-4413-a7b3-f11a27976012",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f5868a-8755-43fb-bbde-0666362a9c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd179910-48db-42cf-ac52-93d7ad16a770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739e3886-e2e8-452b-a620-63e1cc1c10e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba603e1a-3f53-4b42-8e7d-16baf3ebd58f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cacce0-a0dc-45b1-a938-96289c9020bd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d40e0c-1f4c-45f1-a903-e89630f33c5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584e30c7-fde7-47a6-965a-243bec8a2ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06eb0b19-70b8-473c-a84e-98f599a40007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0de83013-d687-4ca4-92b9-72cdf86e612d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a452309b-f1f3-40c4-add1-139ca5ad8b73",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b9ace8-aa95-401e-b0a0-572f082b64db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e14ec072-54d2-48e6-bae1-87c75151d129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ea462f-12ae-447c-a301-01d32b50c4f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b38f7e8-b1d0-4122-8976-3ad35bafc134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b734cf-586e-40e5-bc49-800608e404b8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030d74e2-2729-4789-988b-3ca94803fc0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04b655a9-0e8b-4bb8-9910-905c982613b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5306e7-998a-4e95-a6c8-bbcccf7aa302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ceeea6-5a08-4792-a353-64a38bd36ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802fbd19-3e32-47eb-a9c0-87c1c0252209",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17506d9a-f099-4ae9-8ae9-195c8b0783a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "427fe3f7-e6d8-4370-8ff7-8afa5b31df63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c8eab5-14bd-4a14-9dd5-9e58543e9d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195667f2-5939-4b1f-9279-84a93fe57e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff9710d-45d1-4164-9fa1-7fd68d998f80",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b90b167-d36d-464a-bbc6-ef0abd9a25f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d266f3f7-9c17-464e-8c79-63624c6d93d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19954fdd-0a48-4812-8066-006b00468a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ee647-acaf-4ac4-a489-9ace90d69670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8b181b-fc8e-4bc5-990a-d0d679cb96ae",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84025b1e-5283-4a2a-bc64-b45ba0fe7df7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb3ae0c3-d759-4223-889e-ba1ed6891104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0d6f7f-c49f-4870-8340-59a44f0c0915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c35cd5-57a8-4f2b-b404-94eb7d9fa44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f8afc8-42be-4416-9d03-3990b1a83770",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c20bf10-fd30-4cec-87c5-7f78311227c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a55db41-0e1b-4a27-acf0-d721ed277377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bd51b8-3ead-43a5-ba1c-b62be60f96f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5353768-6a73-42c6-b70e-37eae9d11533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e75324c-c299-454a-a6ac-8c5f4d2bfc69",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a8a060-5fee-440b-a463-2e3ce7d9d895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a8a2127-ac09-40d9-8e3d-439981fce3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d09804-63ff-46e1-8c03-be5b92e5a16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "796ef231-3af2-46e9-93cd-3d7f8c001924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6956ef-84a0-47ce-a3e5-d983224396dd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fe9f9d-0256-4940-bc47-59c9fa35cf06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a44e7d8-9e1a-4361-8475-dbfcf1af2e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185a98a6-2a8f-4754-a0ef-afa38ebf5470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af8e632-7776-4bff-8c36-0ff02c0cf2f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2792f9-b513-473b-b7c4-1804fd7430e3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb66bfa2-d7b2-46c7-be02-deda204ea985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d41997c-4050-49e0-8d04-608dba66d859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5f8f99-b63e-4eac-91ea-a86e8f9ad068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ad08e75-d835-406c-8456-f0fb4a2a6401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae231a-7e6d-45b7-9e7c-7e280ca5b4fa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43c262a-398a-494a-9277-4b119497368c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d02fcaa5-8e79-4dc0-bab9-ccd4a396c0b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "253af8a2-21c9-4e0f-ab20-cc0aee85fc69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "207d39ee-18c5-4a1c-8e1e-a7a1d9baaa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c7dcde-af8a-459c-a32b-ab82f27341f1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3563f27-4904-4d19-9dbd-c260564daf60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e8c10c4-7de1-402c-845a-c71c8620c49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cfea21-8df5-4cbf-9229-15d954153347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6424d57-52de-40d0-ab83-421015ff2ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6274a52e-4ee2-4abe-87f5-4fdda4d00cde",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb84a173-d6c8-4d8f-9662-5d342608e740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cae492-ed4d-4abe-abd9-8d5947ee2ffa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c8037a-2df5-4ab2-aab1-03f0e55aa2ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8bc817-67ae-46c5-80e5-4eba4df41b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3694c23-e56d-48ba-9734-8e30fde3ab8b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efdeb4c-a6d1-4ebf-95be-ab7b8a0692cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d996cc-a0ad-4a70-829f-2092dabea7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4750d23f-119e-4ac4-8fc0-e4d505fe9ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86769933-2514-4c5c-9b5c-092d853a3fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50043585-06b0-4d74-aab8-e696ceef62d2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f0a100-7470-43d6-9d2e-4a28fad716c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e0f8acc-a296-49a7-b344-2c311a8bceb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287d8e39-33c8-4c5a-9fb1-2f53c06ed2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26d0b4d0-5742-4691-a7c7-95f12afc3b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5d4702-1691-4eca-9446-92224726c9d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f458faab-1951-4b04-a637-1324b4f871f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9166a3e-ed28-412b-8cc9-fad259deff92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2878d9af-41cc-4290-9ef5-0e97612c0bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e0f95f-7ad8-46d9-ae5f-40af63f7fbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1de20b4-46bd-4fe1-a75e-b05406d2e3af",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e6955d-b5c2-4f2c-b9d1-1b60d7affaf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863d6a65-39df-4cdc-b4ba-1cfcf4557581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7063969-caf4-459f-948c-fda483f35ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc2ff44-b330-4eda-9b9a-a8b613eb6c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca19792-2e2a-4f62-80d8-0f2ffce88140",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ce46fa-646e-41f3-958d-95bb5864fe70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd0c8b63-f0ba-4240-89a3-500cb5621d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f135796a-61df-4ad5-bfcb-445d24855a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5f23c7-11d6-4a6c-ac37-052b6814b713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db3873b-fafa-470c-9ee1-f0b51ac2adb4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ecfd98-55c9-40d6-8405-5b5039ca33d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0955c99-e3c1-41cc-a0c7-0c593289f3fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b69f47-b493-4dc4-9022-fc053ae7a59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fe0269-e4d2-4777-b85f-2cb22dc14ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e6a1f-6580-4c92-9e64-1b790c5c6feb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2312c987-ea9a-43b8-b49c-5bcd78ef7625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c14fa0a-aaa3-4f7b-ae53-749fb51371a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3332cec3-ab62-4d38-a644-50b35800e991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fe84e6-d534-4e52-962e-98d0a74e713c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9257b88-10ad-477f-bce2-9cea5023f0b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78f0582-f605-4868-b834-c3606d6e7bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51415dd-7888-4939-91ff-a81355830a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28172c1-4bf7-4106-90cf-27096c9ee102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb421a68-4a55-4dd9-9981-fe2617a749d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246a6919-fd8d-445d-950c-1401e0b8af7d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a851b5-6325-43dc-9aab-ad379e174123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17340d1d-9093-43ff-886d-3388ccc2b13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa4922f-4259-4d84-bff4-a8cf4f2ef17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c9491c-d656-4951-a042-b7b06402767e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e172754-2fd9-4bb6-add5-3cf7b3d78cd9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82a7a9e-5216-440c-aa78-cb8b1c2106b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56dbcba-7464-4a23-9802-8d186531c3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04afbc5c-2702-455c-917d-fda3b1d7b83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a9af01-3717-4090-9891-6d9270a0d96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80bb7bb-85ed-4185-9bf6-7b2b1fa2cde0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec59dc43-eaf9-4676-ad87-02be1a691036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "617510d5-e318-4ac5-9f33-c385a6f0892a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1ab791-6de6-422e-b855-3f887aeffe5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe330f0f-7a15-4dac-9ee7-90b0eb251b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80fc09a-01e9-4b3b-a364-f860c34be49a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed2d306-dff7-45a7-9aa6-602341e5bd74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c188793-0da6-4e50-bdff-3f4198fc17be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ee83d8-75fd-428c-864b-0484cda23074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1790b6-30f1-4c90-89d1-7c4884cceadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3742646c-beef-4022-b1fb-8d745e43b654",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82ae7fb3-478a-452a-a555-0fa1f4695a46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd05dc72-3659-4896-8a99-a3825979a80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3de570-9674-4a4f-81da-31add9156cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfdc225-2e73-4c4e-83a1-7a84761e5318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92e5024-84b6-4edc-875c-245af49acc60",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3a26bc-ce54-4603-a25d-f0c6c0c589fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd4ae7d-7497-4f08-83b2-6f397be0637b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1929c9-a32c-4cfb-8867-800e6253957e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e349adf-5679-4452-a3ad-08e47f2e0d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba343ad2-937a-4c35-83a4-daa2eb7d75d2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80696236-7cb8-45ca-8356-097ea62cc78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da4a3d3-8750-4876-856c-49bd9a090970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e48946-2e93-4584-9fc4-97b73f18dd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f50e568-bdab-4e21-b2a7-baf709af2e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eba96e1-f9b9-4905-b71e-c234ad456d2d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e1a3ff-d724-4f87-bb89-76f1fee59404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5bea586-f3f5-47ff-833e-2c4c3f6bbb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed003601-a093-46f6-93bf-5ebbe214f97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aabd2ad-a54d-4f99-b40d-deb9d128d864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9575c200-4928-4cd0-ad06-a0e0dede1254",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03286977-da2f-4f87-905b-4312e1a7caa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc239a7-e72a-4195-a07d-33cf490123a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c26af8-bf8d-4dbf-90aa-e606818b15a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df1994f-3cd7-4dfc-b3ec-6c83897103b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e4cb5e-1acf-4e50-914a-2f05fa6e92af",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454a8e5c-97f9-40be-9d27-9dda6a922fd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56760c58-7615-4461-9352-378b0c81e2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf3e9da-f6a8-42b5-8a69-c6c47404124d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30095d01-290e-4f5e-9f8c-246c38bcb127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc1fe39-2ad7-4035-bd7d-1a95c604e0d4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39a3b22-d519-4d24-81a8-fcac80686db1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9964c49-0690-4092-b969-7ab4960cd511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "971487f4-3461-4a3f-becb-aef6340af69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d74cc85-d3dc-46e8-9531-39ccfdf46d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0453dd45-4207-4e3d-8520-b6f244c93ad3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e36d9c-1474-4077-a21b-0f5ec2299f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "564b9c39-cc2a-4cce-9a50-487356e3d7c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f3eff12-7474-41e9-9ad7-709016a97653",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719aeda2-107d-4d9f-8e83-38fa16d771e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f69f75-ebaf-496a-acfc-c35794307c5c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05f1f20-32ca-464d-8988-52c3ac5df556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8f8a77-dce9-4105-83f6-c5e039670a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b622113-e3a6-44bb-a663-fc06a7f9e30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e654ccb-0502-4f22-bf2d-edbe8a91b630"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57c8eba1-1ed3-41bc-9673-6c3debc8f188",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb6e60c-ed10-46c5-abda-4c1a912edeab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25623bbf-ebd3-48fd-87d0-0c39c18e141e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6678d644-76c9-4551-8c7b-3e5bba37b9ee"
                    }
                  }
                ]
              },
              {
                "id": "bc958897-6a06-4351-86eb-24cfae71211e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35c282bf-34d5-4a42-a68a-4ad69274cd77",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d231ffc9-a2d5-4f3c-9ef7-10f129bcc1be",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d74cb9bf-1bc0-42ca-9ede-e08a2b2b9e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da87707-f398-45c7-8357-875ed8e874be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6375cb1-0660-44f6-bb44-ed8c0ebb0f06"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7255524-44b9-492b-a9de-d310cc2f218b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8099c3ca-e52f-4d38-a67c-05c8970314ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c8b39d0-35c3-450f-a420-f02672326a18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78ae6911-3b78-477d-82ee-52c8f7851442"
                    }
                  }
                ]
              },
              {
                "id": "1d5597dc-6b8a-4daa-a32f-bd382c333c01",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2da7d9a5-056b-4637-8ce3-a2f562bbaa24",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1e0dd9-e511-4d1c-ac71-21fe3b680d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2ab6e71c-c2de-49b7-9022-a3fd7aec5362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a659ed0-f23f-490f-a15d-76d5fd06f5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366602de-25fc-44c9-b43a-07a37bd0bc1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dc0553a2-fa1e-48c0-bd04-20231ca93a5f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe45f8dd-c53e-4be9-87fe-b205264d5430",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10c31334-87ad-4bee-9075-680b6e049255",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bfd6a1cb-d1d9-4926-94d7-30a909833f3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0cbc43a-ab1a-4c64-9839-2b300853e28e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36e01e6d-4044-4d65-8a17-6ff6ba257b1a"
                    }
                  }
                ]
              },
              {
                "id": "68dc83b1-663e-450c-8aef-cfbf4cb5ed9c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "85aa0612-6e55-4875-85b8-7025eabc8d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e90014bb-aa9a-4cfd-81dc-191e530e470b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb5b6ab4-e9a6-49d6-abf6-326065495696",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73c7959a-30a8-484d-8a01-22542a5c3eab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0889659b-154b-44b8-a660-9b3cbfc4dbcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "180792a0-fffd-4643-b53e-a9b5ff0e38b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "083c9e7b-5415-4223-96cf-331d2c8be8a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38f685d6-06ef-4f28-8eef-83185b2fbcd2"
            }
          }
        ]
      },
      {
        "id": "acced826-7754-449e-a38c-8c2830073332",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f04a3ecb-daec-4841-b2e2-e8f85a3a09fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "60f297eb-0445-4680-a04d-a9d5fe148ee8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "54f19892-cbcc-4627-921f-12d9eb87a43f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58a94d6-4a62-42bf-85a1-e9d089086cf4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a91b9320-4bd7-4e8c-964b-0160fc1bfcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3f11ce-5c27-4aef-8df4-9ef03afb3c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce0faf62-e9d1-457f-8f14-408bf11d19b1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "036ead83-098a-4a4c-8840-1a03003fba3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f03d077-7515-4dd8-af55-768ab71a025a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "76218775-68fe-4155-baf9-162a52dec196",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1475ef9-c951-4000-af37-9132f8a726ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2b84156-ca93-498d-be5b-9ff202ed20be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e9b5df05-925b-4cc5-ad10-b61c20386de0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec89af53-3582-4d52-8f35-521361dfcbf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5cb65c3-1e05-420f-8221-0a77f17ac091"
            }
          }
        ]
      },
      {
        "id": "27520601-c689-4cc2-a8c5-50ed1d3e03eb",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a95884db-e2d0-4010-b525-ff8b0de3d43c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15dfd103-62f5-4f4a-afc3-2c38be79af44",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe15c129-09e5-4817-a1aa-d7be4e9a9dd2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85877e93-fddf-4068-8a8a-899f5d7e2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a3d351-c4e0-4c13-9967-2dda281ef2bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90abeebb-d060-4f04-a192-b649c4589c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "254fc926-024f-4647-b128-9bc528e4df96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "28189852-ac18-4d02-8119-e332ee938956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2ab584d-8647-4ff4-80d2-2301fb475aff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "000c13f6-82fe-4d6b-9eaf-5038b71b34c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e7f69dc-8dba-4b92-9399-0931c3c9a585"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe58629b-d14b-4c5d-b202-91e52b21217a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f1237daf-7db6-43cb-9d6f-4f342ebd1942"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e758dac-3cbb-4c4b-9d03-cddcdf9f2cdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "04704b07-3584-442b-ac4e-8cbe6cdcfe44"
            }
          }
        ]
      },
      {
        "id": "d33e9464-4cff-41d1-8d69-279e466856f3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "304c360e-597e-4e64-a446-5eaad8386f44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "350d3539-e61b-489f-bed8-aa52426a5b06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b5b8682-df83-4d0d-a775-ab5fa98f83cd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a674eac0-b579-43ff-8eb5-44b00a9b1298",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5f5b53-d47c-4638-bb16-0f396a9ed481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d4cda0-e86e-4f6d-a4ec-1d4f5748a555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf2c65f-07cd-49d1-b8c8-057042030e92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee86bd82-3ecc-470e-bfa9-c075ac521521",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96359a78-ec99-4a55-8272-2b6f3885195a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98bab6e0-c319-4e73-a87f-a4ca31f93ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "971eaf15-33bd-4a64-8980-79e5fa389e76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "277adf56-682d-4ce7-84fb-b91593c10d42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "178e6727-ce39-4783-9f09-5b8fc688543b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "463b6404-738d-4e68-955e-0461581c2375",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19cd683b-71b1-4c0c-8777-f9eee5a661e7"
            }
          }
        ]
      },
      {
        "id": "a1897416-a991-42ec-8b3a-48ecaa90f0dc",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0601c58-f93a-4030-9e3f-3439e7bf9bdb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d18f646-ed88-4faf-a971-4d264b1ff554",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c38e4327-1a11-47d9-a567-79a967b4024c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7eddc9bf-b12b-4794-9243-b4e251b432f5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3bafebb-653a-4b5f-804c-9728fc7b05c4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 450.26190476190476,
      "responseMin": 10,
      "responseMax": 13180,
      "responseSd": 1937.808804591393,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724978542992,
      "completed": 1724978664789
    },
    "executions": [
      {
        "id": "2aed3804-dadf-40df-8da0-72ad460c39cf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "aca38c51-504b-4f05-868c-0c39023ac79b",
          "httpRequestId": "70893872-d97f-4045-9d4f-0f71a8466337"
        },
        "item": {
          "id": "2aed3804-dadf-40df-8da0-72ad460c39cf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2c0c68f-3b61-427e-9b90-ef584e7cfb9d",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "b9b191eb-dead-4f94-91ac-b4074bc2fdf8",
        "cursor": {
          "ref": "35e8730e-d925-4eac-ae2d-0e445c77cf04",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d09a08a2-df31-4656-b025-7d1c59f43395"
        },
        "item": {
          "id": "b9b191eb-dead-4f94-91ac-b4074bc2fdf8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ad46c0c5-1071-4786-a17f-ef4d04b33c10",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "389507f1-2de2-4ef0-bf6c-cf1108f8107f",
        "cursor": {
          "ref": "674a4958-1ccc-4dab-9da2-5a9b61624588",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b0c21280-be17-47df-bbf8-c5b8d2ee6e21"
        },
        "item": {
          "id": "389507f1-2de2-4ef0-bf6c-cf1108f8107f",
          "name": "did_json"
        },
        "response": {
          "id": "2164a6de-7609-4108-88ed-97c5cee02b02",
          "status": "OK",
          "code": 200,
          "responseTime": 325,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b10319-9d35-4984-bea8-edcd5d0cea81",
        "cursor": {
          "ref": "28c1e1c3-eda9-41fd-a9a4-8a5a2e63d6b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ffba0f29-8e6a-4a36-a74a-ba838168fb61"
        },
        "item": {
          "id": "43b10319-9d35-4984-bea8-edcd5d0cea81",
          "name": "did:invalid"
        },
        "response": {
          "id": "82c7da83-f35b-414c-8b27-3167aeeeb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1995,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b10319-9d35-4984-bea8-edcd5d0cea81",
        "cursor": {
          "ref": "28c1e1c3-eda9-41fd-a9a4-8a5a2e63d6b8",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ffba0f29-8e6a-4a36-a74a-ba838168fb61"
        },
        "item": {
          "id": "43b10319-9d35-4984-bea8-edcd5d0cea81",
          "name": "did:invalid"
        },
        "response": {
          "id": "82c7da83-f35b-414c-8b27-3167aeeeb933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1995,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec803281-0eac-45ac-a43c-ed0940224974",
        "cursor": {
          "ref": "b90f764c-17a2-47dd-9a41-90040eccff73",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f07bf09f-8b55-4385-b9b5-115c9d4a6e0b"
        },
        "item": {
          "id": "ec803281-0eac-45ac-a43c-ed0940224974",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bc37bffb-d58e-45fe-a2c3-9c854fb3024b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2281,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dafe3d1-41aa-4364-82d3-69ea849da8c0",
        "cursor": {
          "ref": "a4ff0299-dffc-46b0-8580-1a818383e6a2",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c88f8de1-a68a-4e92-8db5-18ec5e8c3300"
        },
        "item": {
          "id": "5dafe3d1-41aa-4364-82d3-69ea849da8c0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "82d1cb9a-374d-435c-ac3d-720333b13e4b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1942,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80205fc6-2fe6-4217-8bb4-7c4ff5474fca",
        "cursor": {
          "ref": "d99661df-168b-49b5-92c9-7504429e6384",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1fc35858-362b-4e27-bd38-98dcf383626d"
        },
        "item": {
          "id": "80205fc6-2fe6-4217-8bb4-7c4ff5474fca",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ca2c0149-a38e-4f05-b678-2e8d18adbe6e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4f51c7-52ce-4f4d-9b4b-916410127f4e",
        "cursor": {
          "ref": "a4ed9000-97cc-4c68-a19c-4c06f6c708e2",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a28c6f69-6ba7-437a-9b86-3d61378e3ee2"
        },
        "item": {
          "id": "9e4f51c7-52ce-4f4d-9b4b-916410127f4e",
          "name": "identifiers"
        },
        "response": {
          "id": "6bf7541d-f6a4-43dd-9ab0-e971df87637e",
          "status": "OK",
          "code": 200,
          "responseTime": 2603,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b72124-34c8-4448-b043-2ac3cdcad8b1",
        "cursor": {
          "ref": "ec16c9a9-13e0-4b9f-b07d-e5190ec5feb1",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "75b36458-8681-487a-a1fe-91cf110749cb"
        },
        "item": {
          "id": "41b72124-34c8-4448-b043-2ac3cdcad8b1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3707878-aa13-4c2f-8ea3-a6593d867c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af0c363-ca06-48ab-9751-f04d6d28f2ca",
        "cursor": {
          "ref": "81beb94f-7f5f-4318-ac3c-ffeec8d78fe6",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "52dc8d18-5cd4-488d-bfea-d53436564075"
        },
        "item": {
          "id": "3af0c363-ca06-48ab-9751-f04d6d28f2ca",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6f6a1bc4-2e8f-412b-bd5d-4b6fc5e090f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd3c6a-b858-49e9-ab56-bd3505dba548",
        "cursor": {
          "ref": "d626976a-d464-46dc-9787-9354250b0a6c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e9a725e1-d96e-4a8d-a91b-8c184f146571"
        },
        "item": {
          "id": "abfd3c6a-b858-49e9-ab56-bd3505dba548",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "01ed156d-971b-45f2-8d32-793f2d7c9d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f989847a-3e62-4fb7-93cd-1df96b2de8e9",
        "cursor": {
          "ref": "a74907c4-f668-476f-bbdf-91f6e0a78956",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9da6892a-c60c-476b-97db-0eddf77d48f1"
        },
        "item": {
          "id": "f989847a-3e62-4fb7-93cd-1df96b2de8e9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5dd07327-3346-4cf6-982c-72a5c8cb20aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91721d1-1fe3-464c-8828-c72f6a39e14d",
        "cursor": {
          "ref": "17c10ac1-3408-4181-843c-32a232571037",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3779864b-355f-4a9e-90da-671bf6fdde4b"
        },
        "item": {
          "id": "b91721d1-1fe3-464c-8828-c72f6a39e14d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "dfb95b49-3995-4172-b26b-9492f6a13e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd048c-ae23-4efd-8319-089bf5bebe08",
        "cursor": {
          "ref": "c5878c1f-88d1-4ffc-9c0f-ffcb03d3d288",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a8f205fb-36cb-4051-89dd-ad4716fe33bf"
        },
        "item": {
          "id": "75fd048c-ae23-4efd-8319-089bf5bebe08",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "fbd1f166-8875-422e-a7cc-9fc1f1c066ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a86ac71-54a6-4a17-87ae-7b1c04b4fb4f",
        "cursor": {
          "ref": "d597b5bb-ea78-4341-91c9-0a5bbe1c98ed",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bb7b886c-0491-43ae-a03e-c255b3706ac2"
        },
        "item": {
          "id": "3a86ac71-54a6-4a17-87ae-7b1c04b4fb4f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8fa8f94-c84d-4828-8b4d-23f7123ae77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd59dfb8-d0a0-40d1-8afa-92ca483882f8",
        "cursor": {
          "ref": "4d6d3a8a-6949-4523-a91d-433c60fa6767",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2d3996ae-492d-414f-9b4e-0e211a77498a"
        },
        "item": {
          "id": "cd59dfb8-d0a0-40d1-8afa-92ca483882f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d3dabc3f-d2d0-4371-a118-b04740533574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd6b91c-dd03-4095-aa92-589eaada3fd1",
        "cursor": {
          "ref": "87f568a0-2a4c-4055-a0a8-825dd3d6ed03",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "48f0396f-a368-4b88-a663-85af5b77b304"
        },
        "item": {
          "id": "afd6b91c-dd03-4095-aa92-589eaada3fd1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "08faf263-9df9-468e-88d7-6ae45cf8204c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c12e89-17a2-4eff-86f6-52f5ee3f8ac8",
        "cursor": {
          "ref": "4d1f70ac-dd68-47cf-a742-96fa30c7bfe0",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "81e2cf08-2ea8-4909-87a9-e3a9233f3d11"
        },
        "item": {
          "id": "d7c12e89-17a2-4eff-86f6-52f5ee3f8ac8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "074619f8-3bc9-4c33-9643-69f2c791d287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881de3e7-c8d2-4f98-a568-3512a536f2ff",
        "cursor": {
          "ref": "e8e0b415-cfc4-45d7-9f3f-71e12c88af87",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "17d17e0f-29da-4e65-bdcd-3bfd09002f7b"
        },
        "item": {
          "id": "881de3e7-c8d2-4f98-a568-3512a536f2ff",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84004fbe-5da2-4949-91b0-d52b57a6e6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d666aa-4d30-4e35-876f-874ed897093e",
        "cursor": {
          "ref": "90c791c5-2c6c-45e3-bbab-4e12b60f77fe",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4796fd0c-864f-486e-becb-b7dd86ce77bf"
        },
        "item": {
          "id": "95d666aa-4d30-4e35-876f-874ed897093e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "523704f5-4617-4c8c-93d2-60bda9bf01df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00bdbce-d6af-4882-a62a-b83c208537c1",
        "cursor": {
          "ref": "98629061-83dc-40a4-a6d4-4a044da9f693",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "98a29719-3fae-48d6-a185-98039e6b1a15"
        },
        "item": {
          "id": "c00bdbce-d6af-4882-a62a-b83c208537c1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "319b7b92-427a-4673-a092-57cca3a7337a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc61431-fc22-4a79-8f02-0813acac8012",
        "cursor": {
          "ref": "a66d96c7-e993-4ac7-9857-dae566aa0e9a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0035687e-ca04-4a81-895f-baaa8e7d796a"
        },
        "item": {
          "id": "1fc61431-fc22-4a79-8f02-0813acac8012",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "418528a5-ffd9-435f-828f-7739fd76ae27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3675786b-e1c6-451f-a678-4707e2dd6b96",
        "cursor": {
          "ref": "29c9d329-087f-4915-a68e-2c95400fc772",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7f7ab9db-8c4c-46c8-8018-751a8ed25f14"
        },
        "item": {
          "id": "3675786b-e1c6-451f-a678-4707e2dd6b96",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "56229db6-337f-4bfd-adfa-7bed69a02e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb84490-58dd-4430-b76a-1d4384c05319",
        "cursor": {
          "ref": "2cb4c444-0c47-4e15-bf4b-35c4eaba0e8c",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5f6f9fa9-c3d9-4d31-8bca-f7a0925b0281"
        },
        "item": {
          "id": "dbb84490-58dd-4430-b76a-1d4384c05319",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "36103d87-c1ca-4079-805c-9665f156361f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33ca0c6-6869-4cbd-943e-ce781533abfa",
        "cursor": {
          "ref": "06509e8a-a6d4-4136-a955-c15a9e9b2a7d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "75848ab1-fb2f-435d-b77d-84b9b6c56de0"
        },
        "item": {
          "id": "e33ca0c6-6869-4cbd-943e-ce781533abfa",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "99c14112-4067-48e8-a523-8ee9272342dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e9931c-c2cd-46cf-ae55-28fd82914f64",
        "cursor": {
          "ref": "c1909138-d125-41ff-87aa-f7db033aa5a6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2da36cf8-8015-4536-8f49-bc0d2084f031"
        },
        "item": {
          "id": "86e9931c-c2cd-46cf-ae55-28fd82914f64",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "522b0b50-ceec-4078-b3ef-21bd282ce279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1ed9ea-e03d-46ed-8ba7-1d7dfb5d975d",
        "cursor": {
          "ref": "c6f00859-0fcd-4964-b871-dab6557952ea",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "94837ae8-53cc-4f93-a0c0-b385f882a21b"
        },
        "item": {
          "id": "0f1ed9ea-e03d-46ed-8ba7-1d7dfb5d975d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6bc23704-0b17-46a8-82c7-257c615c1583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4087933a-c9ce-4a9d-bf2a-9784fb6103af",
        "cursor": {
          "ref": "dfb0a186-8492-4245-8e10-9ea0490529e4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f2fb724c-7d7e-4128-9b72-2cc13d611e52"
        },
        "item": {
          "id": "4087933a-c9ce-4a9d-bf2a-9784fb6103af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a44af1ab-ea08-4b0d-bcab-4ad68464cef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ddaf47-a9bb-4fa4-a84e-173bf3707e1a",
        "cursor": {
          "ref": "3fc1e0b3-e39a-42f1-8e96-6f1adce33542",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d899f179-e090-436a-a1c4-dd8d33d0622d"
        },
        "item": {
          "id": "46ddaf47-a9bb-4fa4-a84e-173bf3707e1a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "68567d01-0976-45e7-a7e3-aee1929795ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad40c849-3c71-42af-955a-4200557b2aec",
        "cursor": {
          "ref": "36b88123-1125-4b3c-85b4-11dd68f2f8f9",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "68d9fe5a-4542-4da1-863e-1915527ee863"
        },
        "item": {
          "id": "ad40c849-3c71-42af-955a-4200557b2aec",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "31b0b94c-25ee-4279-a275-6e5a951f4fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ccb55f-30e2-45f9-b766-ffc934508459",
        "cursor": {
          "ref": "83b49e20-147c-481a-991f-397229156361",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d27923ff-0609-45cf-a139-a93d7fa42b5b"
        },
        "item": {
          "id": "96ccb55f-30e2-45f9-b766-ffc934508459",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0e4312d1-20ea-402e-8d93-573c86f93894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f1f25f-3072-4e3f-8a07-78488963a150",
        "cursor": {
          "ref": "4fcce64b-813a-474d-afcb-7e5464d01fd9",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9bf9dcd5-ffee-44b1-b371-392eb9b29b16"
        },
        "item": {
          "id": "d5f1f25f-3072-4e3f-8a07-78488963a150",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f349605-f796-474f-8bee-83e5d2e66fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d085f7d-947a-424b-ab0b-e7fa9f483993",
        "cursor": {
          "ref": "719e38b7-43cb-4197-a298-1e835365c0a0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7d5d6c06-363f-478f-9dec-c3af225535d0"
        },
        "item": {
          "id": "7d085f7d-947a-424b-ab0b-e7fa9f483993",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "78bb0c50-7081-4832-a021-65d07c1015be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc2199-57ad-4eaa-b463-d021f8212f58",
        "cursor": {
          "ref": "97197c35-f714-4811-b35e-9d7d2006bfde",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4ccd2126-ca9e-48fe-93c6-9b36b9934c7f"
        },
        "item": {
          "id": "57cc2199-57ad-4eaa-b463-d021f8212f58",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d5f96531-edd4-4eb8-9285-66223467582d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbc717f-d365-489a-9c2a-7c97e74f5274",
        "cursor": {
          "ref": "09e783c4-275b-4079-894d-5f57eb87b03b",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6377ca64-1ab5-4b51-ae76-d718946fcd3f"
        },
        "item": {
          "id": "0dbc717f-d365-489a-9c2a-7c97e74f5274",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0e7f2187-fbab-4d1f-8d86-0d3a4252aba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cf8ef1-cc87-49aa-ab03-2250ef3ee84c",
        "cursor": {
          "ref": "1eecef59-656e-4ddd-be0e-71dc980fb4ee",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8b1ed581-e886-4817-8186-da01cfc01d97"
        },
        "item": {
          "id": "14cf8ef1-cc87-49aa-ab03-2250ef3ee84c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34c4dc21-bf31-499b-a31f-dba3d54ed8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81655a66-5079-4dc6-8d3c-a83068d7cc73",
        "cursor": {
          "ref": "7953bb7c-ba00-47b0-b64b-66dcdc92aae6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "987405cc-afc2-486b-be2d-0ed28baa3725"
        },
        "item": {
          "id": "81655a66-5079-4dc6-8d3c-a83068d7cc73",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1c3927d1-23d1-40ca-ae41-7c3d92f3e975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2fab87-8436-4ca3-a4a8-6d9ddfb6df31",
        "cursor": {
          "ref": "adadf6db-74a7-4e1a-91e8-f7cfcf0e5afb",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "11b2c8ee-8390-42db-916d-c78ee706ca3e"
        },
        "item": {
          "id": "9a2fab87-8436-4ca3-a4a8-6d9ddfb6df31",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b52c6f05-651a-41e0-bb3e-289e35b984c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00f5c71-983e-4004-80cd-b91e7c4d5f0d",
        "cursor": {
          "ref": "17ec1035-f97b-4678-8134-b598e9822895",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4e0884b6-4230-41ea-a26e-846dea4c2362"
        },
        "item": {
          "id": "a00f5c71-983e-4004-80cd-b91e7c4d5f0d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "53f622ee-4c92-4dff-be80-635d20f43167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9476726e-0cc7-422e-a61e-ba7966c291b3",
        "cursor": {
          "ref": "5f2298ab-d091-4d6d-add4-49f48dfaf778",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d28eabad-773f-4263-8738-3e64dd90e861"
        },
        "item": {
          "id": "9476726e-0cc7-422e-a61e-ba7966c291b3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4806bd5b-9d8f-46c5-9ffd-cb8a51c1684d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2082cf-4aa8-4743-ad86-d29129bf2d56",
        "cursor": {
          "ref": "418ff685-7ae9-4092-a34d-a119593019aa",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8010ac51-a4d6-481c-b8b1-cad01b2af5fe"
        },
        "item": {
          "id": "2d2082cf-4aa8-4743-ad86-d29129bf2d56",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1db7b173-068c-4162-8e32-1f65af8c1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11e19a4-d700-495f-953f-3996ed344902",
        "cursor": {
          "ref": "2b6c6cfc-fecc-41a5-938f-691d87c138d2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "99c7f199-362d-419f-b9b7-46ac58a5f759"
        },
        "item": {
          "id": "f11e19a4-d700-495f-953f-3996ed344902",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "614c6a41-94dd-4609-9deb-e586d9f30363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40105c9-5ebd-45fa-9d9e-396ba41efcca",
        "cursor": {
          "ref": "e4ab0eac-24cc-464d-8a26-d113673efb8c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "de56f0a8-d94b-433b-9cf6-8e64a6a87363"
        },
        "item": {
          "id": "a40105c9-5ebd-45fa-9d9e-396ba41efcca",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "587c4c79-e82a-49b8-8777-d70ce7b962bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3f55ed-fa0b-4ba6-9333-f30716222736",
        "cursor": {
          "ref": "92adf683-bdea-4c9b-b10f-d5ae4905d8f9",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0cb3afe-63f4-4d1a-86a4-dd9ca01b8ee0"
        },
        "item": {
          "id": "fe3f55ed-fa0b-4ba6-9333-f30716222736",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d604c66e-03d7-4eda-ba92-71dada8ce2e0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95aebee4-0a62-4584-98c5-dbcd465b4940",
        "cursor": {
          "ref": "abb8f6e3-ff74-4a3a-b087-56b6099a3407",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "add49515-f17e-452e-acbc-32575458cf59"
        },
        "item": {
          "id": "95aebee4-0a62-4584-98c5-dbcd465b4940",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "33f8b986-149b-462e-b37e-f158a4bf5a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d37178d-e099-44f6-b6c2-c5dd50c72f38",
        "cursor": {
          "ref": "de281f3b-be2f-4e0c-8271-d06c598cfee0",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dd5b73e6-c8a8-451f-b15f-cacadfef74c9"
        },
        "item": {
          "id": "2d37178d-e099-44f6-b6c2-c5dd50c72f38",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cd81045a-0fe2-423f-88f3-ad4bbbfda6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b761714d-4a44-4440-94e9-f8f2e701b1e2",
        "cursor": {
          "ref": "94f935c1-5971-40ef-8cfa-fb4999c5331e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9ee9b9e6-d109-41d7-bc75-19446d4e5054"
        },
        "item": {
          "id": "b761714d-4a44-4440-94e9-f8f2e701b1e2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4e3712a1-d208-40f8-a7a9-743d9c9e395d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3f9ffc-1419-4dfb-9ac2-838b388e415e",
        "cursor": {
          "ref": "e0c5ae62-11d3-4605-bda4-55dcfa918e42",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "176dff38-ed70-4071-82f1-d671d625f13d"
        },
        "item": {
          "id": "0b3f9ffc-1419-4dfb-9ac2-838b388e415e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "385e5688-2cc7-4250-9261-f2f25bfb50df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b4ab80-7393-4083-9983-55015c13b712",
        "cursor": {
          "ref": "83e141f5-fb1a-4eef-8926-157bb05f3dd2",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5174adf5-7305-4c71-aee3-912e314ff0b8"
        },
        "item": {
          "id": "79b4ab80-7393-4083-9983-55015c13b712",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "47ec44a2-8fb3-47f0-8b30-1a77ee5864ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc30ba7-f4cf-444f-85f9-e708806706cb",
        "cursor": {
          "ref": "857dffe2-7204-492f-95da-dd575a37f0d6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b8b4c959-90df-458f-9996-dbd4ee02972e"
        },
        "item": {
          "id": "0dc30ba7-f4cf-444f-85f9-e708806706cb",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7e8c2cb4-92e0-4324-ac5e-d7d466b1edd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca16a5d7-8267-493f-91af-658503725fc5",
        "cursor": {
          "ref": "a0a5b77d-c1e6-44ab-ad02-98535e73c156",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3d6c76de-6912-4b6d-9378-1b848d20e2cc"
        },
        "item": {
          "id": "ca16a5d7-8267-493f-91af-658503725fc5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3678e432-95df-4ba3-8fae-0d6ad20f0e20",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 77,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfcb802-7053-4d3e-b5b7-9126397474df",
        "cursor": {
          "ref": "f487fc07-b46e-41cb-b711-8fa7ff3f1abd",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fbbcb8fc-034c-470a-9b5d-1a6e9f5947d2"
        },
        "item": {
          "id": "6bfcb802-7053-4d3e-b5b7-9126397474df",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1fceef5d-994d-46e0-b887-8d85a845f736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daaf854-a04f-4593-baa2-44389546e1fa",
        "cursor": {
          "ref": "c36d9df6-72ab-4025-b877-22983161b051",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5b8151a3-53bf-438d-a6e4-6ccc168c3d87"
        },
        "item": {
          "id": "4daaf854-a04f-4593-baa2-44389546e1fa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5656f972-ded2-4f96-80ce-dbecca0434cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb64a276-c386-4f09-9895-566af852daf3",
        "cursor": {
          "ref": "7f2b0019-2440-48f0-b5e3-9c3b5b167fea",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ef35f52b-b656-48a3-925a-aac37cbb4413"
        },
        "item": {
          "id": "cb64a276-c386-4f09-9895-566af852daf3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "947e79a6-d29c-4562-a1b4-d2e5714bfd13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77d897f-4b65-4bec-9d75-42563121747c",
        "cursor": {
          "ref": "a3477af3-1d1c-451f-ab05-e76f6ae087a7",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "39a46c05-8af9-4982-9f9c-25f86b66f946"
        },
        "item": {
          "id": "a77d897f-4b65-4bec-9d75-42563121747c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ded3fec7-5313-4c66-b8aa-0ead9fbab8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f68c4b-2920-43ee-af09-29a648366707",
        "cursor": {
          "ref": "0e92dd87-0faa-4720-abe4-5e970a33d417",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e65bea0c-9328-428b-aaf2-9586564a6426"
        },
        "item": {
          "id": "f5f68c4b-2920-43ee-af09-29a648366707",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "110ccfb1-678a-461d-b125-51e05ff41d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977115cf-697d-4bfb-ab37-8519dc1aa7b7",
        "cursor": {
          "ref": "37ee11e2-4941-4570-a5d6-ba9557508039",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "55366f0e-c3b9-42b9-b060-c3fccf5ce0b0"
        },
        "item": {
          "id": "977115cf-697d-4bfb-ab37-8519dc1aa7b7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "408cad3f-31ce-4ef3-9dd8-3257efdd5a0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2c906e-9e73-48e6-bc38-ff694802869a",
        "cursor": {
          "ref": "8a01b751-a374-4985-9bcc-470fd86e1149",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "282d4131-71cd-413d-b19d-70b3a2e4d799"
        },
        "item": {
          "id": "8d2c906e-9e73-48e6-bc38-ff694802869a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "85875126-1cbd-4317-8740-94410b35174a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa1d01-90b1-42a5-a66c-265cdc607b1f",
        "cursor": {
          "ref": "c00d93b9-5fbc-4cdd-a243-a6502fa2a4ef",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b237b273-3500-4051-acec-00a9169a10c4"
        },
        "item": {
          "id": "06fa1d01-90b1-42a5-a66c-265cdc607b1f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32e8fa2f-4b96-4756-b1c9-b7cb5124357e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6dd1a78-57f2-4bc1-9f7d-e00b81e7e26d",
        "cursor": {
          "ref": "a0376b84-a2b2-408a-a5d7-b2cdacc9d292",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a9c28210-6dc1-4906-a777-ee87a0c0869d"
        },
        "item": {
          "id": "f6dd1a78-57f2-4bc1-9f7d-e00b81e7e26d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "3dd96e1d-21fb-4167-b14d-69012e0194e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86df5eeb-17d6-4344-9cb2-5025c8b3cca7",
        "cursor": {
          "ref": "d497e35b-77a1-4a14-a3f7-3eb6f174088d",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8d328ee4-cf46-40e0-98d2-703795772efb"
        },
        "item": {
          "id": "86df5eeb-17d6-4344-9cb2-5025c8b3cca7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "605b6781-25a4-44af-acbd-6d1aedfa7818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1502236b-6b6a-4b23-9cd1-0ada15b72c07",
        "cursor": {
          "ref": "a5ff6272-8f21-4cf5-9233-a757ca970acb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "45c5566c-e8a2-45d3-b289-c834545730c7"
        },
        "item": {
          "id": "1502236b-6b6a-4b23-9cd1-0ada15b72c07",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4b6953d4-63ce-4060-a845-b7f5458e068d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9abc8c6-2271-4d05-a495-f951479e6348",
        "cursor": {
          "ref": "1a0aa3b9-2dbb-4379-94a7-5646d695c9c9",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5d367b66-38b8-4e39-92bc-8257fd4fbd64"
        },
        "item": {
          "id": "f9abc8c6-2271-4d05-a495-f951479e6348",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "8e9d3738-5c9e-480e-a0ed-9cf130b06381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71703903-7f62-4866-9d5e-a8f3e4073ca5",
        "cursor": {
          "ref": "74466574-6cfc-4260-8069-613bd8935a44",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "40fb4cb4-b233-41b7-839c-a2918224881c"
        },
        "item": {
          "id": "71703903-7f62-4866-9d5e-a8f3e4073ca5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "42bb1535-4bfb-4c14-a2b1-d44c450a8e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b54bbd-98e4-4318-857a-bc50b1010a59",
        "cursor": {
          "ref": "9d4f34d8-c30a-40ed-b362-7a732e64da7f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b9e64033-6f07-45ab-a270-3b68bf37d341"
        },
        "item": {
          "id": "48b54bbd-98e4-4318-857a-bc50b1010a59",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ccc2c4a0-b600-4053-b05e-6b003b4f4387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f3ed13-c92e-4f40-8df7-1bd03454164c",
        "cursor": {
          "ref": "c6ac11d7-f035-417d-8326-ffd39ffd1d38",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "31958e62-26d3-4c62-ae40-6db4e5547102"
        },
        "item": {
          "id": "b8f3ed13-c92e-4f40-8df7-1bd03454164c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b435ffe-0128-47b5-abb1-e5719cd2fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6e4589-8c63-4b66-816a-44e767b84dfc",
        "cursor": {
          "ref": "d74f8aba-36a2-40ca-a586-510b68210813",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c8e43165-a4bb-4f04-9cbb-99f8d98d3234"
        },
        "item": {
          "id": "bc6e4589-8c63-4b66-816a-44e767b84dfc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "421d25fa-e956-4438-9c57-3a7056aecacf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26819293-c5b3-41a3-a809-b40cce5762f3",
        "cursor": {
          "ref": "4af74e19-e3e0-4760-bc57-9b6832ddeabd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "523ca660-28aa-4aed-9959-642f121b2b1b"
        },
        "item": {
          "id": "26819293-c5b3-41a3-a809-b40cce5762f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d829443f-247f-4094-903a-4219f81747fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b680de99-17fc-488f-a9de-5f2b03586052",
        "cursor": {
          "ref": "17edf2eb-f91c-43e6-921a-88493da8a3d8",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "77d674cc-59a4-458e-9bc4-386a04fec935"
        },
        "item": {
          "id": "b680de99-17fc-488f-a9de-5f2b03586052",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "849576ff-8d80-4f12-b26a-799c7f6d2647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4566597a-b965-4e09-9b01-61d6721c3e44",
        "cursor": {
          "ref": "1d0dc0c2-7b5a-4089-8b7d-48811a0e0cf5",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bc17781c-4a32-491e-9ddf-ed63edb79222"
        },
        "item": {
          "id": "4566597a-b965-4e09-9b01-61d6721c3e44",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "11f8d29f-10b4-4f61-afd7-0f85918f0402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8dea7d-4502-408c-9f4e-926f6fc4f50f",
        "cursor": {
          "ref": "07404e3b-ef7e-4c27-8abb-609986fb8d87",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e2c5b31d-031b-4831-ae1d-3a6cdae34f3d"
        },
        "item": {
          "id": "bf8dea7d-4502-408c-9f4e-926f6fc4f50f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b9127f7b-c377-4fbd-a1cb-2959186350ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47454893-068f-4ee1-b9e7-72324aa1893d",
        "cursor": {
          "ref": "fe22a1ae-68a0-4fd3-b097-5b551bd96040",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fc0f9105-6b77-4922-a47f-d253f17b35b6"
        },
        "item": {
          "id": "47454893-068f-4ee1-b9e7-72324aa1893d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9a691186-864a-4ab1-974b-0aed1d096113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69d1957-83fd-4078-93f2-1c05cf069a97",
        "cursor": {
          "ref": "16296e68-2a86-459b-bdcb-e373f6919eee",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "948cd4f3-2edd-402e-8828-3cbadbfe0bf3"
        },
        "item": {
          "id": "d69d1957-83fd-4078-93f2-1c05cf069a97",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "007eba98-c7a1-471a-b20b-fd5455e092d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bc1769-7e48-4970-8cc7-c0d3ee19df19",
        "cursor": {
          "ref": "49813e0b-7340-4801-bb1d-355d55362a28",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "65700eb2-ca67-458e-9b4d-bfe7404e53f6"
        },
        "item": {
          "id": "72bc1769-7e48-4970-8cc7-c0d3ee19df19",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0fae7f30-34e9-44e1-a3b7-028ff69ff836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9120a9d9-f493-4298-b8a1-85edb583836f",
        "cursor": {
          "ref": "ede39dfa-4713-4c54-8994-31d00c3b98a0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bffff556-8772-45a3-8b29-2db65c51c25b"
        },
        "item": {
          "id": "9120a9d9-f493-4298-b8a1-85edb583836f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7ca856a1-9a24-44f2-ac0b-d3fa2db83462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab87b7a-5704-4601-8095-6fcccfa58a9a",
        "cursor": {
          "ref": "b6141821-0bd4-4038-84f5-dec39de00314",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "86d9112e-c804-4d02-9f1c-8f953281fa3a"
        },
        "item": {
          "id": "1ab87b7a-5704-4601-8095-6fcccfa58a9a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d59877ac-5a97-4ba7-a881-ff495a5b390a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c8544c-6bb4-44e4-a482-ceea3ca7492a",
        "cursor": {
          "ref": "32331788-7d5e-42f9-b478-725c94721aff",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "822c7514-abac-4ae5-b340-dc36200644fb"
        },
        "item": {
          "id": "12c8544c-6bb4-44e4-a482-ceea3ca7492a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3a424a99-b65f-404e-8a3c-fc73212823ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075c14dc-9959-490b-a659-4a80a2b6ada8",
        "cursor": {
          "ref": "73294b3f-97f5-4f16-924b-7a3bc1911fda",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "878f984d-e9ec-42ef-9c67-d3cd9ddb484a"
        },
        "item": {
          "id": "075c14dc-9959-490b-a659-4a80a2b6ada8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "58abd51b-2f96-472c-8af2-cbf42bc94607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d46e2e70-44d6-403f-beb6-c99794c9092d",
        "cursor": {
          "ref": "d955e81d-0083-4720-bdbe-2c66fe4f1b56",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9230f495-233e-4f82-b65b-347607dec84e"
        },
        "item": {
          "id": "d46e2e70-44d6-403f-beb6-c99794c9092d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e0595d40-75ac-49d4-a807-41d64962c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f5a192-4165-4002-8e07-4ace354eefe0",
        "cursor": {
          "ref": "0c368432-03b4-4e27-9d8b-183766713b2a",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2fcfc7a4-4f8c-42a4-8794-2639b3cb999d"
        },
        "item": {
          "id": "42f5a192-4165-4002-8e07-4ace354eefe0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "650040d8-0d87-4fec-a02f-4d51b53a8347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47be36b4-e15d-47ea-8e5b-8a9938e02dd1",
        "cursor": {
          "ref": "fdd4cfee-6d8e-4715-872b-58e4c1458170",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2000120a-eb6f-42d3-bc23-3018298bd93e"
        },
        "item": {
          "id": "47be36b4-e15d-47ea-8e5b-8a9938e02dd1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1d36930b-7add-4231-95d5-859eebb8a11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e6d6532-e2f2-4952-b65e-0f9b21893a56",
        "cursor": {
          "ref": "00a21c4b-fbe3-492b-a84e-7224a97a21b4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0aec996a-9f11-4e88-8be0-adaacb567809"
        },
        "item": {
          "id": "0e6d6532-e2f2-4952-b65e-0f9b21893a56",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a1484ef5-cabf-4b3f-9e16-e17d71c9a8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cb26c6-39cb-4dc1-8a51-325d339c3b00",
        "cursor": {
          "ref": "6afb962a-ac7c-42d4-bac7-78d6f114eabc",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ded244b9-d328-4560-98f7-990951580de4"
        },
        "item": {
          "id": "41cb26c6-39cb-4dc1-8a51-325d339c3b00",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b9e93573-cca1-4033-987e-88089f7c0c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565366ea-b563-4fc5-b0f2-63e56ba33c2f",
        "cursor": {
          "ref": "314ee091-f5ac-468a-823e-3194fbc3d1d9",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "46d2b515-852b-4b60-8445-e0c53ce68747"
        },
        "item": {
          "id": "565366ea-b563-4fc5-b0f2-63e56ba33c2f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d10a2b4a-c8f7-4664-aebd-0b9c6713919c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8de51b-b9de-4e7b-8dd9-dafe50692f0b",
        "cursor": {
          "ref": "a21e3175-18d0-437c-8639-39859aa48437",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4f7b85c0-2829-41d2-a38c-674f7ab9473b"
        },
        "item": {
          "id": "8e8de51b-b9de-4e7b-8dd9-dafe50692f0b",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7838097f-ab08-4ba4-a289-1d3b6a2df51c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e51a8-b45a-4cc4-9382-c89c5d64d417",
        "cursor": {
          "ref": "e854aea8-0d88-4e1a-8e58-53685b183e40",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9489e9d4-4202-4210-b965-ac510cddc676"
        },
        "item": {
          "id": "4d7e51a8-b45a-4cc4-9382-c89c5d64d417",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "20fd2f43-24f7-4341-87f6-9a6f5ea498f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6e7a6d-9635-4aa2-b05b-467166234ec3",
        "cursor": {
          "ref": "69e97e20-71ec-401d-ba64-bed049d5236d",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8c24e30d-ddec-4dee-828c-8231af64cea0"
        },
        "item": {
          "id": "cb6e7a6d-9635-4aa2-b05b-467166234ec3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "22d825ac-acad-4aba-b9ba-2f6a74730a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6bc4f9-7900-4867-844b-f0473c55ffba",
        "cursor": {
          "ref": "c5e01d86-e206-42a3-bf61-6e68f8738af6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ccfb35a-48a2-4eac-a150-63b28cc73b37"
        },
        "item": {
          "id": "6e6bc4f9-7900-4867-844b-f0473c55ffba",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "68989a5c-fabf-475b-9de4-3837349e51da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a68ed31-839b-4807-b6af-96dae307a698",
        "cursor": {
          "ref": "34aeb16c-e8ea-4faa-a9ca-f97a75ccae64",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd560196-d5f5-4adb-868e-9aa50f99aca2"
        },
        "item": {
          "id": "4a68ed31-839b-4807-b6af-96dae307a698",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "87a6c4ac-d94c-46d7-b3ef-68f392bd7342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfba2a1-58a1-4d13-a51e-21c13d1a00be",
        "cursor": {
          "ref": "adf5f954-19ea-408b-9ae5-8823364880cb",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f59a0f11-567b-415d-a3e5-bdb3ac39507b"
        },
        "item": {
          "id": "6bfba2a1-58a1-4d13-a51e-21c13d1a00be",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "412b5231-5856-4d54-b815-b545d0b0bfa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d3e47f1-1c0c-487b-bb5f-74eeeb36ec27",
        "cursor": {
          "ref": "2c93e9d3-617e-4c27-8112-31acec83deb2",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e83da807-0500-4c5e-922e-2a227624924a"
        },
        "item": {
          "id": "1d3e47f1-1c0c-487b-bb5f-74eeeb36ec27",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8fd4ab28-5a2a-49ff-a707-c0db125ae33f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd97902-5a13-4fb9-8a4b-f3424e7e4858",
        "cursor": {
          "ref": "0022d46f-6bd0-4713-8141-64d698e26c56",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "432273e0-6a7a-4cda-9dd8-640aa193404d"
        },
        "item": {
          "id": "bdd97902-5a13-4fb9-8a4b-f3424e7e4858",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "230b80b1-4d12-43cd-a362-c5f9fd06e3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b26a0-1794-49dc-aadf-aa49118ca951",
        "cursor": {
          "ref": "26aab87c-2e0c-4636-8dc5-3f45489a7cd4",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0aff0ace-5893-4b8c-a3b7-b86b5bf55d82"
        },
        "item": {
          "id": "369b26a0-1794-49dc-aadf-aa49118ca951",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "67a8677c-886c-4a19-a369-857c64d5e6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fecb271-5b53-4bd9-af18-cca4a1d39272",
        "cursor": {
          "ref": "ab8dd0a1-b0ab-47d1-b1b1-543c5fec0920",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "4270b9b6-9cf6-4912-bfdb-322def2aa881"
        },
        "item": {
          "id": "7fecb271-5b53-4bd9-af18-cca4a1d39272",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "56f22e4d-6e03-478f-af7e-7e50290cd036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308b13ec-384f-413b-b81b-897af0e993f5",
        "cursor": {
          "ref": "d70fcc0a-afe9-4d8e-9ad5-ff1459add4b6",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "09275930-bcb8-49ec-a4d2-d541b81c50f2"
        },
        "item": {
          "id": "308b13ec-384f-413b-b81b-897af0e993f5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b9fe580a-b0e2-4f4e-a316-ff953d8a95ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb48584-4c1e-417a-bb2d-aa9cea455cd8",
        "cursor": {
          "ref": "0adce572-06ff-4341-ab0e-49c22290f5ec",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4f99e385-c0b7-4cfe-9702-016d376c90cb"
        },
        "item": {
          "id": "6eb48584-4c1e-417a-bb2d-aa9cea455cd8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "290adcb1-d57b-4f5e-86e3-6b3a09f88a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897241f6-126d-4341-b77e-9c7006b31ece",
        "cursor": {
          "ref": "ec6786cc-8664-4236-8b3b-0458cf8f0913",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "330d9e87-5487-4d9d-a4f6-6ce3d66c0d05"
        },
        "item": {
          "id": "897241f6-126d-4341-b77e-9c7006b31ece",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "84372802-bc03-46da-84a3-c54b3d4ef6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c73e5c7-f108-4a51-bbef-21afccd98293",
        "cursor": {
          "ref": "f88f6b84-f11c-4e6d-857d-bbb38a230251",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "98325aca-33d1-41ee-b0ae-e029e34f8d8a"
        },
        "item": {
          "id": "4c73e5c7-f108-4a51-bbef-21afccd98293",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ad24b8e0-37f3-49de-8f57-9aa58479ba9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2acb74-706d-4b29-9cc2-b1f4ee8430f8",
        "cursor": {
          "ref": "28511281-2382-4e3b-98e4-bf284e0c6d92",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5a66d1f6-2053-49b0-b5ba-fb9e287ceb00"
        },
        "item": {
          "id": "1a2acb74-706d-4b29-9cc2-b1f4ee8430f8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9501eb49-5a12-4515-b91e-406cb337a8ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b314d7b4-5f95-4c8a-8263-a1b5bf8094dc",
        "cursor": {
          "ref": "72955410-f64e-4bfe-bfb6-a4d5954eae7a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2dc20e3a-fc5d-4450-8d11-8301e6acefc2"
        },
        "item": {
          "id": "b314d7b4-5f95-4c8a-8263-a1b5bf8094dc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9846b975-58bc-4dea-940c-cbd2623b8879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f67014-176f-4173-b5d3-8697e28bbecd",
        "cursor": {
          "ref": "1feaaf23-695a-408f-a871-377f62752468",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a98377d0-56ac-4417-93fd-e194960a1ac9"
        },
        "item": {
          "id": "f3f67014-176f-4173-b5d3-8697e28bbecd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2f73b2de-cb15-4a32-8d9f-611dfc3ec237",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc14f32-62fa-427b-b9db-f001b1edaa2c",
        "cursor": {
          "ref": "8131fd57-c86f-42cb-8447-a74c959a9206",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "59ca30c6-a8cc-4ece-8257-87871d2c9e88"
        },
        "item": {
          "id": "afc14f32-62fa-427b-b9db-f001b1edaa2c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5f968a0c-7458-4809-a6aa-9fbcb3446474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e3565056-68a2-4ec0-94cb-e010c8cb046b",
        "cursor": {
          "ref": "32d39813-af09-481b-885f-da9d21eb1eba",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "66cc2fbf-3ec8-43c6-a3dd-137c63e8a06d"
        },
        "item": {
          "id": "e3565056-68a2-4ec0-94cb-e010c8cb046b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5181d315-2e26-477c-b2cf-97832913e4a5",
          "status": "Created",
          "code": 201,
          "responseTime": 12893,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f356f-15fd-41dd-a404-74a02bbcc564",
        "cursor": {
          "ref": "ebc8a99c-b6cf-430d-93a3-428db32d03d2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "64b92d78-bf83-4516-8280-c4d8b4fc07ad"
        },
        "item": {
          "id": "594f356f-15fd-41dd-a404-74a02bbcc564",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e13fbc10-f9ee-4c58-a055-fc29ae3f154d",
          "status": "Created",
          "code": 201,
          "responseTime": 13180,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "364f82af-2892-4387-b1d1-12bc1bfaa10c",
        "cursor": {
          "ref": "51c6835d-7b7d-4666-b782-6c73e724ce1e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "036edb2e-f862-4a04-a815-64f65bc65bad"
        },
        "item": {
          "id": "364f82af-2892-4387-b1d1-12bc1bfaa10c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "07edf489-976a-4c84-a95c-8968b86761b4",
          "status": "Created",
          "code": 201,
          "responseTime": 12555,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c91de02-cc1f-48df-95c3-b4b10920694b",
        "cursor": {
          "ref": "ea8fa4c9-f237-4710-a2dc-dbeb578d1c10",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ae344bb1-1ab7-4e0c-97b2-2bbb99008556"
        },
        "item": {
          "id": "6c91de02-cc1f-48df-95c3-b4b10920694b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ccc6aed0-8f25-417d-b7fd-ed796c2f0e6e",
          "status": "Created",
          "code": 201,
          "responseTime": 11855,
          "responseSize": 1235
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e783a87-e155-49fd-9554-ae5ddb53186b",
        "cursor": {
          "ref": "565f4d7c-e03d-4de0-a79d-2bb6c552e2e5",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1c0b2f5f-2ff3-47c2-8a95-4c5104abee49"
        },
        "item": {
          "id": "6e783a87-e155-49fd-9554-ae5ddb53186b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "50e15cd9-cca2-415b-9dd5-afeed8c41374",
          "status": "Created",
          "code": 201,
          "responseTime": 12438,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-08-30T00:43:46Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-08-30T00:43:46Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3e351495-586c-469f-a20f-093316d88e7e",
        "cursor": {
          "ref": "84a58363-c3ef-42e0-b7fe-2ff17bda7399",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f1531a45-346b-407a-aa0e-cc08ac9526f8"
        },
        "item": {
          "id": "3e351495-586c-469f-a20f-093316d88e7e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1d5d341c-eff5-41f8-9b47-f0fec685f55a",
          "status": "Created",
          "code": 201,
          "responseTime": 12468,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c32867-cd1f-4eec-97b6-45a3a6319f1b",
        "cursor": {
          "ref": "24497910-f01d-451f-a249-79e67e9f5124",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "937bbf7e-8853-437b-ba14-0279fb3e4338"
        },
        "item": {
          "id": "47c32867-cd1f-4eec-97b6-45a3a6319f1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc9ac8a9-32ed-4c7e-ad0c-02a6da15001f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5fa2bc-580e-4c9c-85fa-15895bf2d14e",
        "cursor": {
          "ref": "7ce87b3a-479f-498d-ae00-d507d9e6c830",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8efd6550-649c-4c68-8683-5146c9c4bde2"
        },
        "item": {
          "id": "ad5fa2bc-580e-4c9c-85fa-15895bf2d14e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0a997e7e-632f-45e1-a9e8-91a9afbdf7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b6714-bc47-414b-83f5-670c998bef70",
        "cursor": {
          "ref": "15116b50-9e45-422f-b0f7-1e6908d9653c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2355a250-ef5b-41f5-b9af-2c04cfcb4192"
        },
        "item": {
          "id": "8a9b6714-bc47-414b-83f5-670c998bef70",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7afe2104-e083-46bf-a9ef-667c0f881048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41226212-9d72-4e4e-9b9c-1c1f53e97108",
        "cursor": {
          "ref": "581d3747-3b66-4853-a883-5ea6b2d28c06",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d70efc72-2ba1-4fd0-91c9-90f5c30aa92a"
        },
        "item": {
          "id": "41226212-9d72-4e4e-9b9c-1c1f53e97108",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "751912da-198d-41bf-a7e4-a191f3cb0e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00d5484-fc9a-43b7-ae35-458139692b7e",
        "cursor": {
          "ref": "fb736b9a-27a7-4b78-9862-b4d8d876820e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "946e8635-7dc8-4113-958b-e5c28cbe6776"
        },
        "item": {
          "id": "c00d5484-fc9a-43b7-ae35-458139692b7e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3df1d43b-e4e3-42aa-ab84-77d0757172af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e925273a-9422-4307-98c9-33a44199bb2f",
        "cursor": {
          "ref": "223fa56e-1a25-4e8f-bd39-4e3f9ab1415c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "52078dc6-9295-4acc-afe1-927dfd322702"
        },
        "item": {
          "id": "e925273a-9422-4307-98c9-33a44199bb2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d86ae22a-5a21-4133-8812-29c441495894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e405f7-93ae-4991-ab2f-603ce6ebf9d3",
        "cursor": {
          "ref": "092e09cf-2bd6-4776-bae7-7e0a8c362ab9",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5d91e93b-daed-4b9e-8dd1-f1cf7df95ecd"
        },
        "item": {
          "id": "00e405f7-93ae-4991-ab2f-603ce6ebf9d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "77efee40-4606-47e3-8bf1-7b7a92ca0ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ef83e3-f4be-4b9e-afc2-23ddea992cc2",
        "cursor": {
          "ref": "c839153d-40bc-4472-82ca-85f85018b51c",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "74fb6104-2eba-4563-b92d-2040fd4ec086"
        },
        "item": {
          "id": "e5ef83e3-f4be-4b9e-afc2-23ddea992cc2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e3c3b190-af6f-4210-a3b5-0da31587ef73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ebc995-2e3b-40c3-a00b-9e50c7aa8c64",
        "cursor": {
          "ref": "6a557615-fe65-4fc1-a856-2d0f184f1fdc",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2df61e6b-eeb7-4cd4-a5ba-d2376d5a6035"
        },
        "item": {
          "id": "d4ebc995-2e3b-40c3-a00b-9e50c7aa8c64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b769005a-d7c9-42c3-8b32-8f6ede6a23ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364fad47-4b5b-4131-842d-13ded77734f9",
        "cursor": {
          "ref": "1f9b45ff-97f4-4d9f-a486-17a4ac7ea350",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3d6a4e5a-7482-4244-9729-db0e09b77efc"
        },
        "item": {
          "id": "364fad47-4b5b-4131-842d-13ded77734f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0bb842f8-71ae-4658-ac03-746b80334e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c9825e-ecbf-4c37-82d9-b1f283ac575f",
        "cursor": {
          "ref": "ae373667-9d2c-4e6f-84bc-2f3fb4d076ad",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7cbeb42b-920a-4097-b15d-f17f7a66cb17"
        },
        "item": {
          "id": "44c9825e-ecbf-4c37-82d9-b1f283ac575f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e5ca2ec4-7319-454f-9775-e2fcdea01f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b293b851-c37d-49b8-a9e0-413c76d97f60",
        "cursor": {
          "ref": "eb68b1ad-2e8e-4369-848a-0176f1336b3a",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a1641cb1-9edf-4672-9ecd-096bc07971ca"
        },
        "item": {
          "id": "b293b851-c37d-49b8-a9e0-413c76d97f60",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3485bd4b-67f4-423e-aee3-87f905431159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f34fb7-d620-4dd2-988b-40c280f28c49",
        "cursor": {
          "ref": "4be446ff-c5f2-4582-9679-7eb9152dc834",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1c4001bf-3cf3-4239-9445-6a764ed85060"
        },
        "item": {
          "id": "e2f34fb7-d620-4dd2-988b-40c280f28c49",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b457a462-cf4f-4af5-94bc-ae51590d190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97fb82fc-37a1-4649-a3dd-e91c01470145",
        "cursor": {
          "ref": "d6927885-d38c-4388-a45b-d44d32e7ae0c",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e8f01979-2d2b-4813-8dcc-7520b1f6e7f8"
        },
        "item": {
          "id": "97fb82fc-37a1-4649-a3dd-e91c01470145",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c0db60f-ade5-460f-b108-30a35ec333f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a086ba-48f4-4e87-a3a7-f7a7a2e05181",
        "cursor": {
          "ref": "6d105a9f-0058-453a-a3ec-4036efae37fa",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9cd5f8de-8414-40a2-8927-7cff9216643e"
        },
        "item": {
          "id": "15a086ba-48f4-4e87-a3a7-f7a7a2e05181",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f8edb2ef-fe54-4180-a595-dfea4979d9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726eea35-21ee-4c55-a992-79373af01276",
        "cursor": {
          "ref": "d33cc288-37e1-435a-b61a-a76b9f792986",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e3dfdec8-cd1d-4030-b522-e69d030b3ff8"
        },
        "item": {
          "id": "726eea35-21ee-4c55-a992-79373af01276",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "426c33cc-bc77-4a5b-999b-df50acb7df94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95f250-9436-4adb-a4ee-5ede7a57a663",
        "cursor": {
          "ref": "5b4aa775-7194-44fc-bf27-d504ea5157ee",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "41cea3ad-0ede-402a-9e1e-f71296fd4c6e"
        },
        "item": {
          "id": "1a95f250-9436-4adb-a4ee-5ede7a57a663",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cf901070-e8ff-4362-aa4b-2ac38273de80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b32b2-c218-4035-bc6b-6dc0b7a96895",
        "cursor": {
          "ref": "10945297-4888-42f8-8c9f-c3840498f4d1",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "89182b2f-afc3-4832-abaa-4609164f5230"
        },
        "item": {
          "id": "fc5b32b2-c218-4035-bc6b-6dc0b7a96895",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6345a3b1-e46a-4506-a844-360f7b600987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08e9d1d-0212-4eb7-8236-3d284cc0a95e",
        "cursor": {
          "ref": "a88e18c4-30a9-465f-a351-601ee0dfec94",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "176d6b87-0cdb-4c25-a684-34fe41b1156e"
        },
        "item": {
          "id": "e08e9d1d-0212-4eb7-8236-3d284cc0a95e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9d2fad88-3171-4748-b291-acf55fa3698a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7c3303-2e9f-47fd-a1de-4a7c78cd788a",
        "cursor": {
          "ref": "8259a6b6-77f2-4895-bd8f-63eb26be2dc5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "27b6a1a7-fc2d-4698-92c8-051987237a7b"
        },
        "item": {
          "id": "eb7c3303-2e9f-47fd-a1de-4a7c78cd788a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "031c0d6f-bd3a-4936-a284-4418d8bb4fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b693b96-1ffe-4ac1-a1da-556d4de694f9",
        "cursor": {
          "ref": "369409d4-9865-4d51-b691-312a6941918c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3ed6da08-4b9d-4265-9a0f-60e7f5acbe29"
        },
        "item": {
          "id": "8b693b96-1ffe-4ac1-a1da-556d4de694f9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1f26403b-a4df-4df6-924c-713aff87c7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6d217-d9ac-455a-b73b-da47469112df",
        "cursor": {
          "ref": "f1b20a98-0bbb-42be-a4e0-af339ecafda3",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f388cf5-978f-4deb-811d-f369320e932c"
        },
        "item": {
          "id": "bcc6d217-d9ac-455a-b73b-da47469112df",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "31dbf5c5-5b4c-44ec-9e64-2566173cfdbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c2e843-0f85-4006-b74c-aa0f8e42afc5",
        "cursor": {
          "ref": "7ab23148-cda0-48e1-a800-841135cc4b3f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "eb1670da-c94a-4f21-a380-47d24bcff8c7"
        },
        "item": {
          "id": "98c2e843-0f85-4006-b74c-aa0f8e42afc5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d03f791-cc67-481a-8c3f-2e4081d20ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e66f4f-3c45-4a9e-a809-475a699dc833",
        "cursor": {
          "ref": "0ecb065a-ecf2-4adb-a7c6-3a1b1816072e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6a05bf7f-9e3a-4e68-91fa-045475398edc"
        },
        "item": {
          "id": "a2e66f4f-3c45-4a9e-a809-475a699dc833",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "efe4b1c7-627d-4323-8580-13d5b6c54703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e17504a4-b3b2-45e3-a2f8-04d89f1aa245",
        "cursor": {
          "ref": "d6d8c151-9aa9-4bce-9173-70c083e76975",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "71d83e8a-279d-4705-908a-095685405f50"
        },
        "item": {
          "id": "e17504a4-b3b2-45e3-a2f8-04d89f1aa245",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "55c0a1a8-9403-4851-8873-60be2b9ee659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63e1433-22b5-4b01-9a36-bb63cd1baed3",
        "cursor": {
          "ref": "e5e1956e-16f6-4f70-b5f4-cc8b3696646d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "cae5a67f-fe34-4641-bc73-77f8bc1db346"
        },
        "item": {
          "id": "f63e1433-22b5-4b01-9a36-bb63cd1baed3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db74d8ec-4e74-4392-84e4-d8fdf4a4203f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ff7df0-4d6d-4393-b778-2ce5fd4982b8",
        "cursor": {
          "ref": "c6232864-719c-42c3-911f-02c4eea80413",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a3a42e6-037f-4408-a195-2161a706cd4c"
        },
        "item": {
          "id": "84ff7df0-4d6d-4393-b778-2ce5fd4982b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9b48b0c6-3ae4-4cb6-9569-daa64abf08f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c16b0f-0a11-46a2-bbdf-91ba2fd77125",
        "cursor": {
          "ref": "7910213a-0745-41c3-8cb5-0f7683137434",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a5060d9d-f48f-45be-94aa-2a3cb650af32"
        },
        "item": {
          "id": "68c16b0f-0a11-46a2-bbdf-91ba2fd77125",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4d0188e5-ab77-4842-b8b6-80b094dc4b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c2ea4b-4954-43df-b9fc-5aee170dbd0c",
        "cursor": {
          "ref": "f98374d7-de30-42e1-adde-9d526b13bd8d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b26d2e65-d81d-4519-a021-cd142967bdca"
        },
        "item": {
          "id": "17c2ea4b-4954-43df-b9fc-5aee170dbd0c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "44fe171c-9663-4dc4-b953-cda4dd25f58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117e0d32-ed02-46b9-9c62-f9768212792e",
        "cursor": {
          "ref": "8e93c350-36ce-445f-a188-8f4dee48f2ed",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a861ca79-6d86-4ef2-8ecc-3da864f1486d"
        },
        "item": {
          "id": "117e0d32-ed02-46b9-9c62-f9768212792e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "947b6617-de5f-4e6e-99dc-606c421842a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c0adde-aa83-4b9d-943c-0b3fd1dcb21d",
        "cursor": {
          "ref": "28a6b8d2-a5f7-45ec-95e5-532e1212b852",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "15aa5984-97f7-41b1-815e-5edecfd08ada"
        },
        "item": {
          "id": "57c0adde-aa83-4b9d-943c-0b3fd1dcb21d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75dd0f21-e34e-450a-8716-b613d7a7c734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e1b1d3f-41db-494e-bc49-691264cc9c1a",
        "cursor": {
          "ref": "5e4b953a-2540-43b6-b621-6dc376dcf235",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7147a565-838f-4e25-a84f-3bee1259aa64"
        },
        "item": {
          "id": "1e1b1d3f-41db-494e-bc49-691264cc9c1a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2a02ce8e-5780-46b0-8b24-39147e503a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9522d690-7596-4338-9e39-d18cf38a082c",
        "cursor": {
          "ref": "54ff38dd-2252-448d-a2e4-48ed8192dfd6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "014e2be6-078d-4e98-acf3-4f03be33bdbd"
        },
        "item": {
          "id": "9522d690-7596-4338-9e39-d18cf38a082c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f5c786cc-e71c-4065-99a1-f3c2577f695a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0c2b25-8928-4bcf-a6b2-035d388b36b2",
        "cursor": {
          "ref": "0fb129f8-5a78-4009-8391-f6f33fc96633",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "91c2a6d6-1708-4568-938d-3d61eb255125"
        },
        "item": {
          "id": "ac0c2b25-8928-4bcf-a6b2-035d388b36b2",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "66b42eb5-da49-4992-9cae-db70a15f123f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57ac4a0-25cc-4099-a875-2274d633ca8e",
        "cursor": {
          "ref": "dfc6041e-8423-486f-8441-c2585364f565",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "811fba2b-3dfa-4618-aca3-fefba59eb06e"
        },
        "item": {
          "id": "f57ac4a0-25cc-4099-a875-2274d633ca8e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb171ed4-50e1-4182-8060-61cad055f0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69155776-94c5-4c02-beec-50f54ef347dd",
        "cursor": {
          "ref": "cfad5f80-608c-4b7f-9b1c-b3ac0d94f7c2",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4e0e54f0-10c3-4857-a8ba-e2cc6503b645"
        },
        "item": {
          "id": "69155776-94c5-4c02-beec-50f54ef347dd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c1d29bea-3ab5-475b-9889-5a6a4ccc7094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f414b37-de84-4af0-9abd-6450f0419ba3",
        "cursor": {
          "ref": "e0175912-4f35-4bfe-83cb-31a957d5855e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "20c5b63b-4203-46a6-852b-6faf459242ca"
        },
        "item": {
          "id": "1f414b37-de84-4af0-9abd-6450f0419ba3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d89500b3-58a0-455b-99dc-a7746f0ec7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1274d6f2-9928-4853-9a5b-f70f34ac34df",
        "cursor": {
          "ref": "d54df690-485e-43a4-bb34-e18fbb1bd6b6",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c7fb434e-e9a1-4686-801a-6a42a6239487"
        },
        "item": {
          "id": "1274d6f2-9928-4853-9a5b-f70f34ac34df",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5198395d-a407-4a7d-a062-192eecea2cef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 84,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1999c5ee-b038-4566-8a9c-272fbce6c7dc",
        "cursor": {
          "ref": "3683eb90-5c5f-48cd-a9d5-ad1913eaa399",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "af50c91e-8216-4a99-a360-578e043009db"
        },
        "item": {
          "id": "1999c5ee-b038-4566-8a9c-272fbce6c7dc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d6f3c340-c5a5-4314-b4f3-beb0ede87dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593381b8-9456-4049-881f-9ed1da7b9c23",
        "cursor": {
          "ref": "eb3821e5-5094-4cde-81cd-13d054021d33",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1df7ee5f-0d27-4bcf-a271-d8d04ff6d64c"
        },
        "item": {
          "id": "593381b8-9456-4049-881f-9ed1da7b9c23",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "095ecf5e-517e-4339-bb8b-c473b32220f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afe3e42-3ce8-4c0c-bb3e-7028d4a4e113",
        "cursor": {
          "ref": "3358b27f-634c-4d81-81ce-24ab1e2a24d4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3cfefa3d-5905-4b6b-b244-e972fd2ae20a"
        },
        "item": {
          "id": "6afe3e42-3ce8-4c0c-bb3e-7028d4a4e113",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d54c900c-1947-4dd5-b641-e4312f9956ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c799b1-7739-4327-aed8-49ec3426cd19",
        "cursor": {
          "ref": "568ea076-d9c2-4f4b-9f3c-40dbdd65eaa1",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1128b5b6-429d-4fe2-9d77-b3288169a21b"
        },
        "item": {
          "id": "f6c799b1-7739-4327-aed8-49ec3426cd19",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "42e2e467-5a58-4020-9b1b-df336052d498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "394c78b1-816d-41d2-9aae-4f28f61cf43d",
        "cursor": {
          "ref": "edb72ba5-ea2c-4217-9f06-a2fbdd1269e8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ae4c1376-9ad6-4b23-9724-070dde747362"
        },
        "item": {
          "id": "394c78b1-816d-41d2-9aae-4f28f61cf43d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "9e125f82-e32d-4017-b200-cdaca7a1e772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49359bf-e6cb-4769-86d9-d1cac670ea41",
        "cursor": {
          "ref": "807ed0b8-4c80-4178-985c-7145d0449a65",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1947a2a4-a431-453c-8655-0ec7a2b4c32f"
        },
        "item": {
          "id": "d49359bf-e6cb-4769-86d9-d1cac670ea41",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7faec4bb-dc59-4a83-a403-7890f53b28d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1e7e4d-ac15-42fa-9185-c219a5d403d9",
        "cursor": {
          "ref": "d671dabe-19b7-4cfd-9213-9ee8c1bcbe86",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8fe07a5f-aedc-4465-8b02-8a0ebaf566b8"
        },
        "item": {
          "id": "7b1e7e4d-ac15-42fa-9185-c219a5d403d9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc159662-5dbf-446e-a425-c6d10f64ecbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8f4a63-7316-46fd-b984-458047ce3862",
        "cursor": {
          "ref": "25f32ec1-ec35-4dc5-9f05-e4313009ff61",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "82f34f09-340a-4dad-84a0-4b196a188b60"
        },
        "item": {
          "id": "ab8f4a63-7316-46fd-b984-458047ce3862",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d701268d-a402-49a7-b9b6-b6f6229c00be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28326b7-0912-455b-8f2a-4ffa6e3c9111",
        "cursor": {
          "ref": "74bafe5e-31dd-4aed-9873-1d50cf651d2a",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c45993bd-e71a-4ad2-92c9-0e9961e08acc"
        },
        "item": {
          "id": "c28326b7-0912-455b-8f2a-4ffa6e3c9111",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6662991e-b43d-4ad7-b975-e7ecff77ce31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a7b4c0-2785-489c-ab4a-2f6a6e313bfa",
        "cursor": {
          "ref": "00dbdf59-93d4-4e39-9b02-8269d2a6bbda",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c3e34395-66d3-491d-b58d-71d500ad231f"
        },
        "item": {
          "id": "a7a7b4c0-2785-489c-ab4a-2f6a6e313bfa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e5c598ff-57ee-423e-bd02-4c97e3ff9e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87af9b94-b553-4502-be75-d7cb52532878",
        "cursor": {
          "ref": "d6c7c2e3-f3bc-4ed4-a415-ce161bf51069",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6046c3ef-fd6e-4563-9f67-1e8b3b6ce14a"
        },
        "item": {
          "id": "87af9b94-b553-4502-be75-d7cb52532878",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "060319b4-2588-47f8-bdf9-c5e5184c4dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1600b952-af52-40d7-a87a-19660dee482f",
        "cursor": {
          "ref": "5e181945-b786-4dea-a2b2-d8ac182ad226",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "1c036d1b-b023-41b8-af4a-f7d89a79a2b9"
        },
        "item": {
          "id": "1600b952-af52-40d7-a87a-19660dee482f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "887cfba0-bbd5-4f90-8a9c-40946d8abdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96110d1-4661-4583-945b-e272dea71c4a",
        "cursor": {
          "ref": "a37a9430-b65f-42b9-8e48-eb7d07743160",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c64bf887-36a1-4a2b-90bf-3f517d63268c"
        },
        "item": {
          "id": "b96110d1-4661-4583-945b-e272dea71c4a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c632ce5b-2da9-430f-b2dc-90453ee93084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee0531-d6c7-44b5-9938-0dc1bc445636",
        "cursor": {
          "ref": "7594d204-c521-49ad-b22a-4579b647ebe8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d31ef9c8-5354-480e-a455-9c37aae6ac0e"
        },
        "item": {
          "id": "53ee0531-d6c7-44b5-9938-0dc1bc445636",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b2f0540e-a4c5-4912-b8d3-66d3dc32001a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cacd493-8240-48d4-b2c4-f69735155a17",
        "cursor": {
          "ref": "a7a53d37-d874-4d49-a6a9-1dcd37866c0e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dd17aa5e-ecf7-4dce-a6af-701e0aa82744"
        },
        "item": {
          "id": "5cacd493-8240-48d4-b2c4-f69735155a17",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9d36bcb8-ad5f-4bb3-8326-89109a5463c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7b5f27-b1d9-409e-98ef-a9497d6e0b2e",
        "cursor": {
          "ref": "27694a61-b1bb-4f60-8901-9ce399639889",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "36268b13-be45-436c-b6fe-78ed6360d0e9"
        },
        "item": {
          "id": "0e7b5f27-b1d9-409e-98ef-a9497d6e0b2e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a370c010-b92c-453c-a1d9-89e78552e448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123adad3-0490-45d8-967e-63a8ed7c2c89",
        "cursor": {
          "ref": "341bfc30-edb2-4a5b-a045-74445a8abf84",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f1724a93-692a-4186-a751-15dbf60ed65e"
        },
        "item": {
          "id": "123adad3-0490-45d8-967e-63a8ed7c2c89",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "61e29070-c17e-4191-857e-ff1839095140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c132eb-87e6-4a99-ae79-5399c4f6ceb0",
        "cursor": {
          "ref": "88b18bf3-d841-4985-a553-f95ce23fa020",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6bc629a4-5c24-429e-854e-4a9716431366"
        },
        "item": {
          "id": "11c132eb-87e6-4a99-ae79-5399c4f6ceb0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ec4a9d6e-d0f5-4627-b3c8-bd430e84d892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096c55b8-62c9-41ab-845c-f6cd53e955a0",
        "cursor": {
          "ref": "d3d4ba83-42e9-457b-b636-dd505dc13694",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f6f534d4-060c-47d1-8473-288ffc81d82d"
        },
        "item": {
          "id": "096c55b8-62c9-41ab-845c-f6cd53e955a0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a4660d59-87c0-4f64-90df-822c890ae56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51545e9-5eec-4737-8e00-9c47246f7edc",
        "cursor": {
          "ref": "b57248fa-6537-4143-b91b-1987e786ef59",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bf154a55-71da-49cf-8f48-2bac57b2b6b3"
        },
        "item": {
          "id": "d51545e9-5eec-4737-8e00-9c47246f7edc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7021707e-2674-4e10-b052-61a83749998c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643d7339-8327-4341-9b2b-53facabf5a6c",
        "cursor": {
          "ref": "22377c49-7434-432d-a085-84ae7159c189",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bcb06eda-1167-4d84-a079-ff21d7cd21fa"
        },
        "item": {
          "id": "643d7339-8327-4341-9b2b-53facabf5a6c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "32912513-0d5f-4b39-a031-a1b5fbfe69c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2f3b34-cf4a-4279-a5cb-50f006245cd3",
        "cursor": {
          "ref": "264eb13e-b982-49e4-8ef8-1d0125b93f10",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "092ff209-8f0e-434b-8caa-55944a5524ab"
        },
        "item": {
          "id": "3b2f3b34-cf4a-4279-a5cb-50f006245cd3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ac806b74-1d41-49e4-bdad-00c9922b1e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e58eb21-30ac-494e-b7b5-f7562888d2e6",
        "cursor": {
          "ref": "ab2a67f2-edb3-403e-942e-a0b4f961180a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a4e6f7a-88ac-492e-bd11-647e1fe44fdc"
        },
        "item": {
          "id": "5e58eb21-30ac-494e-b7b5-f7562888d2e6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f26bef53-a8c8-4b3c-be0b-cd6de9c2d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfc49c0-2cb9-4191-86d7-8225faa7ba2e",
        "cursor": {
          "ref": "5f6fa0ea-e521-4e7f-8955-894c0de5fef5",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4b4edbba-100a-4bd0-9ab7-0c6ca554cc1a"
        },
        "item": {
          "id": "fbfc49c0-2cb9-4191-86d7-8225faa7ba2e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "afa932dc-ab9e-48f9-a4cb-7224a042c7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692835bf-4835-4bde-b25b-2a7d36164306",
        "cursor": {
          "ref": "c09cb76e-5cd5-452d-b342-196b14f531e9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "97c2d129-e759-4c54-87e3-09324f54bcf3"
        },
        "item": {
          "id": "692835bf-4835-4bde-b25b-2a7d36164306",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "52521bcf-856f-475b-9c0c-71f913b3033d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2909214-1149-405f-bf8c-45b118ea841e",
        "cursor": {
          "ref": "e2a33790-ba9a-4fda-a4f3-f16bd070cb43",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7a6c0a39-bca7-4bc0-921c-ca6758e4b44f"
        },
        "item": {
          "id": "b2909214-1149-405f-bf8c-45b118ea841e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "8dcbdf29-87c8-4276-9650-8d8ed3e9e600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f28e2d-38d1-477b-ab60-953df20ce69c",
        "cursor": {
          "ref": "e0eb0dce-a30d-4867-9b06-94f47ec14a54",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "449a81ca-2df5-489b-a37e-e6fdd2d65210"
        },
        "item": {
          "id": "e1f28e2d-38d1-477b-ab60-953df20ce69c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1d6cbb4c-eb3f-4e04-8640-fb32eea986b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a2ad0b2-8cae-4599-aaf2-b74201394887",
        "cursor": {
          "ref": "b6aad456-d7ee-4419-a842-b0ad7e3577d3",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd0f2db4-40e1-449c-b63c-f367a33b8a8a"
        },
        "item": {
          "id": "2a2ad0b2-8cae-4599-aaf2-b74201394887",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "264fed40-5688-4532-9dc0-d1c98fccfaa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1f2e0d-bda1-428b-8df5-ae7a04b26633",
        "cursor": {
          "ref": "e4395f42-b7d5-4de6-8660-173d4a5d3379",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "29c51bcd-fefe-4fc9-800c-71a66e4de206"
        },
        "item": {
          "id": "8c1f2e0d-bda1-428b-8df5-ae7a04b26633",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "16b1e3a2-bda6-48cd-8673-98637de28bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1409074-e05f-4a58-b2f4-a046db59ff82",
        "cursor": {
          "ref": "f8eb5fa7-20ad-485e-8c8c-e6600d4f73e7",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b9223570-4c23-486e-86ca-f653e287e1ce"
        },
        "item": {
          "id": "c1409074-e05f-4a58-b2f4-a046db59ff82",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8631c180-93b5-4008-b69c-33ebdbf7726e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d98ca6-39e0-4dbe-89a0-f3f49da23204",
        "cursor": {
          "ref": "8d2cb152-f254-4f70-bf82-a1408b6b6740",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d06e653a-70aa-4172-8b7a-aaf99946c079"
        },
        "item": {
          "id": "d4d98ca6-39e0-4dbe-89a0-f3f49da23204",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1cf877d3-0789-4bf1-95de-82b597ff0339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fd4d0b-81a7-4f70-b574-50a4364c4d1a",
        "cursor": {
          "ref": "f2ce380e-5b24-4940-8322-c43665013490",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "24ff1cfe-0461-43d9-8cbf-86a814f35e43"
        },
        "item": {
          "id": "e3fd4d0b-81a7-4f70-b574-50a4364c4d1a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "f6282f2c-0dd7-4d36-b822-95089bc87a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1213cbb-5056-4df4-a337-aeff7dea9b16",
        "cursor": {
          "ref": "fd05a066-956e-450f-a3bc-444bb938ed36",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "67872fa9-3936-4dc4-970c-7ebbc3197c38"
        },
        "item": {
          "id": "d1213cbb-5056-4df4-a337-aeff7dea9b16",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "98adcd27-6b42-4e9f-bb9b-a2fdebda7d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35543779-63d2-4456-a3d2-913b1d864381",
        "cursor": {
          "ref": "72c86b75-ea28-4860-92e1-5d1c566aefb3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f7bc8ed9-fed9-447e-ab72-5494f6abcda3"
        },
        "item": {
          "id": "35543779-63d2-4456-a3d2-913b1d864381",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "98848b46-40d3-4426-b301-6ab2576df355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e22f16-901b-4d4c-9437-52a8db4d2b0e",
        "cursor": {
          "ref": "bf552a7d-e076-485c-ba88-ad7fc6a03e3b",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d990eefc-daa3-4ab5-8f29-0e413f78106a"
        },
        "item": {
          "id": "92e22f16-901b-4d4c-9437-52a8db4d2b0e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dc759413-2ff9-4fc3-b250-a05194fa17bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569f7153-e6b6-4b5b-b8b7-f0951236b100",
        "cursor": {
          "ref": "db8d2179-906d-434d-bb1c-9428ef81cf79",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9a515728-ec4b-43ed-88e4-07c160c4e78b"
        },
        "item": {
          "id": "569f7153-e6b6-4b5b-b8b7-f0951236b100",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dbded9ff-5820-40cd-8e4c-2c8073b64326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e219fa2b-da14-4bfa-9b20-f0d6538a93f4",
        "cursor": {
          "ref": "1f1a22a1-82c7-48bc-9faa-7f757cf499df",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4fa70623-1a8e-41cd-847d-a9d7755d2d6d"
        },
        "item": {
          "id": "e219fa2b-da14-4bfa-9b20-f0d6538a93f4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c7f0fb52-2942-45b8-8c42-2b5b0b084d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99355c4c-7ab8-4f50-85c3-fa1a0ffde7a8",
        "cursor": {
          "ref": "2f378ad6-b456-49d5-a81c-105438fe6c1a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8fc89dbe-4687-4d59-97ee-1e8172d16294"
        },
        "item": {
          "id": "99355c4c-7ab8-4f50-85c3-fa1a0ffde7a8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "862b5c2c-ca55-4d79-bc55-6074b846763e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75f8df0-9b9c-4502-bdbf-b33c8ca00525",
        "cursor": {
          "ref": "f3117641-0c73-4337-92ac-255aa045e91d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4848341f-41da-4fc5-a47a-765cc7a59557"
        },
        "item": {
          "id": "c75f8df0-9b9c-4502-bdbf-b33c8ca00525",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7d54460-017d-48ee-a6e1-7978702ee997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ec4d4d-69a2-499a-b2a3-60f3ddae471c",
        "cursor": {
          "ref": "d061bf32-d03c-4633-ba4f-1332505e0783",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3f73a3f8-e33b-480a-a833-f64a5825eb18"
        },
        "item": {
          "id": "05ec4d4d-69a2-499a-b2a3-60f3ddae471c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "66bcdb1c-4b49-4fca-9687-e1747b7c5279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704cd373-7b44-46eb-adb6-94e728ea0f64",
        "cursor": {
          "ref": "de3182a9-b163-48a5-82bf-53308443eda8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "4498272b-d090-4f97-98df-c6b495cd4dec"
        },
        "item": {
          "id": "704cd373-7b44-46eb-adb6-94e728ea0f64",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "758e430a-d73e-41fd-a24a-08f127f87fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd85343-2f38-4868-aabe-9a97cbf4e1f3",
        "cursor": {
          "ref": "1be525cf-a183-49a6-a5ce-fbc65ec116f5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "accbcf5a-8b16-4bc0-bad2-43b9c67f9d94"
        },
        "item": {
          "id": "8bd85343-2f38-4868-aabe-9a97cbf4e1f3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "89452260-5c2e-4d78-b1c7-07dfd6a3972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e170daa0-ddd4-4f26-90ec-0b4af919fcf5",
        "cursor": {
          "ref": "10e27c66-33b2-4df8-a0ac-16bc91abe034",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "64e890ed-f0e8-4e57-917c-8f7c885a618e"
        },
        "item": {
          "id": "e170daa0-ddd4-4f26-90ec-0b4af919fcf5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "95d48cdc-8770-4053-aeda-7cc12f2d08a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d03fd1b-eb1c-4803-bd04-73f43efa7e16",
        "cursor": {
          "ref": "f2cc5ef9-1b03-49b9-a392-2adc4557308b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cafd4037-a693-4919-919d-6d7d319c4430"
        },
        "item": {
          "id": "5d03fd1b-eb1c-4803-bd04-73f43efa7e16",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0759c284-fbdd-4229-b52c-a6ae5c7a7aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc43fb6b-3a88-4737-bcde-b2b46e6b93a5",
        "cursor": {
          "ref": "290c659e-fb9a-48b1-b6b9-c64face33675",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05afc5c8-7195-4985-8bb4-2fdf157969f8"
        },
        "item": {
          "id": "dc43fb6b-3a88-4737-bcde-b2b46e6b93a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6d05331a-7d90-41aa-99f4-00496a08c506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d615e22c-acda-49d1-ad98-c8304395051f",
        "cursor": {
          "ref": "600a9f87-72a5-4ea6-86c0-1c101b618a32",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b1e06c49-1f33-4fbb-83ca-fe5a9682a00c"
        },
        "item": {
          "id": "d615e22c-acda-49d1-ad98-c8304395051f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "76837829-0496-43af-981a-35a2f7153b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefb685d-e99b-49ca-b163-8d0bdf12c573",
        "cursor": {
          "ref": "dd8b8208-e5aa-41c1-bf0a-3dbb48977b82",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e7c49658-04da-4e18-bdb5-38788adc7978"
        },
        "item": {
          "id": "cefb685d-e99b-49ca-b163-8d0bdf12c573",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "29197685-5f92-4b78-8505-1a4c0d78c678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9d0cde-fe16-49b7-b30c-50a97433c8f9",
        "cursor": {
          "ref": "b1b0bfb4-592a-4057-8ab1-9a88e728946e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1491e6ec-746d-4b7e-a0ac-d4aeaa5d2197"
        },
        "item": {
          "id": "5e9d0cde-fe16-49b7-b30c-50a97433c8f9",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "194977b2-4bf4-4c25-aec8-745c1ae8ffd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e917f7-c835-424c-8ea5-970eaa8929a0",
        "cursor": {
          "ref": "68a1de0e-972e-4f95-86fe-844a150071a4",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8ef019e1-3507-43a4-a6d8-acc646bab180"
        },
        "item": {
          "id": "b6e917f7-c835-424c-8ea5-970eaa8929a0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a5071793-9bdf-4563-ab89-7161ce302c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60836918-269d-46ac-986e-eebe018715c7",
        "cursor": {
          "ref": "29c7c4a0-809a-4a01-8a8b-9774a9878a81",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f835b60f-87f3-4074-98e4-21f2169562ee"
        },
        "item": {
          "id": "60836918-269d-46ac-986e-eebe018715c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d155433b-8206-4522-af62-013d106fd83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c8eefe-5cbe-40f5-a902-d122ad923416",
        "cursor": {
          "ref": "20a20034-bdab-4033-8d06-1eb93e976528",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0c3e5d88-080a-4dfd-9f20-d23419b70f8d"
        },
        "item": {
          "id": "c1c8eefe-5cbe-40f5-a902-d122ad923416",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "823f8e8c-cd80-4e34-a9ea-3d68a66acf19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdaca52-35ce-4622-921d-c6b3c43a61d3",
        "cursor": {
          "ref": "91dd7a94-4474-4c88-8371-bb7ca3974bb4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bbfb738a-a66f-4cf6-8dda-03534e77276f"
        },
        "item": {
          "id": "8bdaca52-35ce-4622-921d-c6b3c43a61d3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "bf83c2ff-d1b0-40d4-8da2-5797f49b5399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539ad034-ebd0-4ffc-8c25-35a9e48602ad",
        "cursor": {
          "ref": "90e039f4-c2f5-4d1c-8f67-65b2eec85b1f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7ffc704f-0826-496b-bfe7-736b8bbae88c"
        },
        "item": {
          "id": "539ad034-ebd0-4ffc-8c25-35a9e48602ad",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ae8d1595-d0b8-4ac1-b4af-fda011df5350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc55dfe-0dc3-40e8-80db-7cc511ad6c49",
        "cursor": {
          "ref": "5975fb38-1228-4787-8a4a-b9c1af3da749",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c0b902f2-28e1-4cda-9fb5-1188dde11135"
        },
        "item": {
          "id": "1fc55dfe-0dc3-40e8-80db-7cc511ad6c49",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7d2fafd1-da51-48b5-a098-9f739b4866b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018570c8-e5ba-4d7a-91cb-260ef27a9320",
        "cursor": {
          "ref": "1b97ddbc-e653-40f9-b6f4-3e058fcdb45b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8051b088-3446-4030-91de-51df72fae569"
        },
        "item": {
          "id": "018570c8-e5ba-4d7a-91cb-260ef27a9320",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7d4207cd-1aea-4a2f-9b46-d8aa471f5586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e9a59a-67bb-46cf-99ea-af642b4f248f",
        "cursor": {
          "ref": "794f706b-bbe3-499a-b892-5fd7b94a728c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f44e9974-1378-45bf-8d90-e7d93fc97a28"
        },
        "item": {
          "id": "15e9a59a-67bb-46cf-99ea-af642b4f248f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2d671b7a-351e-42fa-b3b1-785de1c359c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4a91bd-1232-4407-b3c5-c7b94ed13573",
        "cursor": {
          "ref": "cc980161-9590-485a-bbd6-fa33aa5a0165",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "976483d8-cc97-43f0-a109-43c525561248"
        },
        "item": {
          "id": "ea4a91bd-1232-4407-b3c5-c7b94ed13573",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c73ef45-c558-4055-87dc-4751e2ca9a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f76752-b13b-4376-80a8-6e84fa3c96e1",
        "cursor": {
          "ref": "43c534fe-bdbe-46e9-b5df-233ce14d3815",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "45111396-52c4-4413-8aec-6dcbb05606f7"
        },
        "item": {
          "id": "39f76752-b13b-4376-80a8-6e84fa3c96e1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "669ec2d2-0de7-4528-87df-f4e38de67cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab6f82-c27a-4360-a7f0-f18fe8f7ec07",
        "cursor": {
          "ref": "fe3deead-78fc-4e43-9d0f-6015e18085c1",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0606d323-34ab-4cfa-aa54-f428e65e0938"
        },
        "item": {
          "id": "21ab6f82-c27a-4360-a7f0-f18fe8f7ec07",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a0506ed4-32ea-47b5-963c-9c9be59feb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cf7ed1-0ef1-4d52-82b4-215852689e37",
        "cursor": {
          "ref": "f6369c81-f757-4bdd-bea6-7a5702a02481",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9e48f142-d5b8-4c5a-ba12-9f459b1376a4"
        },
        "item": {
          "id": "41cf7ed1-0ef1-4d52-82b4-215852689e37",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d6d62403-d517-46d5-92ea-7ff7897e1414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5114ff98-0f26-489f-9acd-7d4b1b4b0074",
        "cursor": {
          "ref": "7d652bc4-510e-4968-b7c6-2c1fd223fae8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "97eb9203-a382-4105-81af-759f209f0fe3"
        },
        "item": {
          "id": "5114ff98-0f26-489f-9acd-7d4b1b4b0074",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ea657d85-45c4-45ff-a787-6f7a05e635da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ddddae-b763-467c-8388-193a4a88a4fb",
        "cursor": {
          "ref": "510a2bf5-e432-4980-8cf5-01491c2789e9",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f6bc7229-3771-4411-9851-c09b78efe6b2"
        },
        "item": {
          "id": "a4ddddae-b763-467c-8388-193a4a88a4fb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9ab6725e-f158-4469-ab8d-c7ba930c7a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f17164b-ee90-4413-a7b3-f11a27976012",
        "cursor": {
          "ref": "f8bb54d4-1c99-4a0c-a779-00ac1e3dae95",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "935aabd3-466d-4ccd-b6cd-4aad5e32bf1f"
        },
        "item": {
          "id": "0f17164b-ee90-4413-a7b3-f11a27976012",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09aaccfb-0abd-49a6-aa71-7d21e14f54b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cacce0-a0dc-45b1-a938-96289c9020bd",
        "cursor": {
          "ref": "1f534807-1755-4321-b80e-88b6abdadf3f",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "73d7d3f6-aeb1-4090-9837-dbfa5ee9b3d2"
        },
        "item": {
          "id": "24cacce0-a0dc-45b1-a938-96289c9020bd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "22440cdb-44ab-4ca6-aef3-51ad6d7919d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a452309b-f1f3-40c4-add1-139ca5ad8b73",
        "cursor": {
          "ref": "476fd395-8403-4ec0-a27a-33a8be014e3b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "8c0d6125-27fd-4ded-9af3-41f6080c43ff"
        },
        "item": {
          "id": "a452309b-f1f3-40c4-add1-139ca5ad8b73",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f104e686-3c70-4bfa-8c14-56eec18f3850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b734cf-586e-40e5-bc49-800608e404b8",
        "cursor": {
          "ref": "1b6d7633-9532-424e-bb9d-ecd5e5df2940",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9adfb00f-02b5-4d28-8ef0-cc844d8abd85"
        },
        "item": {
          "id": "86b734cf-586e-40e5-bc49-800608e404b8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "10a16705-7781-4307-8524-880296438d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802fbd19-3e32-47eb-a9c0-87c1c0252209",
        "cursor": {
          "ref": "60d22292-562c-4729-b245-55c00d62f7b3",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5296a60c-47db-4541-83ac-3738a62ad03a"
        },
        "item": {
          "id": "802fbd19-3e32-47eb-a9c0-87c1c0252209",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0154acd2-d22d-4ebe-b471-f070b85699fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff9710d-45d1-4164-9fa1-7fd68d998f80",
        "cursor": {
          "ref": "9256f28e-1bc9-4ba0-b93d-d144aa9e7c1d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b30ac326-9248-4b55-bfe8-541c8838566d"
        },
        "item": {
          "id": "1ff9710d-45d1-4164-9fa1-7fd68d998f80",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8489d667-f219-446e-a77a-475634824459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8b181b-fc8e-4bc5-990a-d0d679cb96ae",
        "cursor": {
          "ref": "d67544d6-dd39-4ee1-bce0-1e2cc0d225de",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1c1eeb59-712e-41da-9e3c-39fc71aa7fe6"
        },
        "item": {
          "id": "5b8b181b-fc8e-4bc5-990a-d0d679cb96ae",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9aa9d1e2-9cea-4952-bd46-233ae2f90a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f8afc8-42be-4416-9d03-3990b1a83770",
        "cursor": {
          "ref": "3f348733-4bfe-4f68-9324-53e1ca4c4f39",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "63ed96c6-22b7-490c-82e9-d2c1e1deb766"
        },
        "item": {
          "id": "05f8afc8-42be-4416-9d03-3990b1a83770",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "50a1e049-ca5d-4a29-b8ef-dfe81e1dcbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e75324c-c299-454a-a6ac-8c5f4d2bfc69",
        "cursor": {
          "ref": "46e92d00-bc93-44ec-b284-74451d1636b4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b6fa018d-24c8-4909-a405-ba9b13aac898"
        },
        "item": {
          "id": "0e75324c-c299-454a-a6ac-8c5f4d2bfc69",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f8c8921d-3b2a-4e7c-9a80-c31699ce39f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6956ef-84a0-47ce-a3e5-d983224396dd",
        "cursor": {
          "ref": "b21b8cec-f9ac-41dc-9a21-3377881dedd9",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "86e61805-9702-4609-a710-dca5f54373c4"
        },
        "item": {
          "id": "aa6956ef-84a0-47ce-a3e5-d983224396dd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "92631236-3312-48a2-995d-c4e4081a67ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2792f9-b513-473b-b7c4-1804fd7430e3",
        "cursor": {
          "ref": "078c65f0-134b-4641-ba1c-4530b7946772",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5c2920bc-2b3b-4a6a-b9f6-75639a9ff891"
        },
        "item": {
          "id": "8e2792f9-b513-473b-b7c4-1804fd7430e3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1bcea8f4-5492-4c5c-93f5-431ade60e6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae231a-7e6d-45b7-9e7c-7e280ca5b4fa",
        "cursor": {
          "ref": "8d075f79-afeb-4d72-9e62-c77005138fe1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "990da66f-4b6d-424c-8045-38b948b5aa11"
        },
        "item": {
          "id": "15ae231a-7e6d-45b7-9e7c-7e280ca5b4fa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b0834e2f-a8fd-4a23-bbfd-52c0571ea82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c7dcde-af8a-459c-a32b-ab82f27341f1",
        "cursor": {
          "ref": "3f96692f-273f-4bc6-93a7-d18522a13731",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "eaf43a07-2549-41b3-92ff-d94b80866280"
        },
        "item": {
          "id": "57c7dcde-af8a-459c-a32b-ab82f27341f1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd834efd-234b-473b-8230-c0835a225772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6274a52e-4ee2-4abe-87f5-4fdda4d00cde",
        "cursor": {
          "ref": "cc8aa1e1-b5d8-4d21-b7b5-82b816296833",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "df08f627-faf1-4757-97b5-6055f51ae41c"
        },
        "item": {
          "id": "6274a52e-4ee2-4abe-87f5-4fdda4d00cde",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "706a2b88-9c2a-4a88-a569-08e709b336e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3694c23-e56d-48ba-9734-8e30fde3ab8b",
        "cursor": {
          "ref": "5434fc26-f25c-404d-a448-091f13c74ef4",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "79e08a39-54bb-474e-995d-5f65fa3bbbb7"
        },
        "item": {
          "id": "a3694c23-e56d-48ba-9734-8e30fde3ab8b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "056bf76d-97c6-496f-b1ec-61ae73696970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50043585-06b0-4d74-aab8-e696ceef62d2",
        "cursor": {
          "ref": "56c398bc-0744-447b-84c3-e1a8e6be9822",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1f753699-efed-4ee2-b411-22d86bde80d9"
        },
        "item": {
          "id": "50043585-06b0-4d74-aab8-e696ceef62d2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d17ef099-bb77-4070-aa6a-0724a2835c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5d4702-1691-4eca-9446-92224726c9d9",
        "cursor": {
          "ref": "059de573-0ee8-4778-a8da-15eb0b63727e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b0baefc1-6a03-433a-9da4-28f823aa455c"
        },
        "item": {
          "id": "fd5d4702-1691-4eca-9446-92224726c9d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "097f70e9-155d-4a31-b1fe-f4bd07f317e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1de20b4-46bd-4fe1-a75e-b05406d2e3af",
        "cursor": {
          "ref": "099444e8-60a0-4fcc-a9be-64a1bcc9eddc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1219213d-f86c-4e34-8338-97cfed2e0b79"
        },
        "item": {
          "id": "d1de20b4-46bd-4fe1-a75e-b05406d2e3af",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bcb47390-412a-4e45-972b-3ab98b459dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca19792-2e2a-4f62-80d8-0f2ffce88140",
        "cursor": {
          "ref": "bd32b70f-16b5-4936-8264-11269f77e183",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "43c5a0f3-b1f5-4a94-9879-026883701956"
        },
        "item": {
          "id": "7ca19792-2e2a-4f62-80d8-0f2ffce88140",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8a390d30-bdcc-45a6-b437-08fe6781979d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db3873b-fafa-470c-9ee1-f0b51ac2adb4",
        "cursor": {
          "ref": "24a7c9ee-ce26-487c-95eb-3abbb3c735bf",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8ea78c0a-25e6-432a-a4d5-2894bb1a468c"
        },
        "item": {
          "id": "2db3873b-fafa-470c-9ee1-f0b51ac2adb4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f53c02fb-658c-495a-912d-720e5592dba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e6a1f-6580-4c92-9e64-1b790c5c6feb",
        "cursor": {
          "ref": "dfa10c9c-ca47-41c5-962f-2e6c65825c58",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5c432050-2735-4204-aa8d-759139dffde7"
        },
        "item": {
          "id": "d71e6a1f-6580-4c92-9e64-1b790c5c6feb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d5f424aa-f467-4422-ae09-9a688073a2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9257b88-10ad-477f-bce2-9cea5023f0b1",
        "cursor": {
          "ref": "02a29410-76af-4828-a2cf-a912935e9919",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "12fb73fb-6914-44d1-8382-0c793df80db6"
        },
        "item": {
          "id": "f9257b88-10ad-477f-bce2-9cea5023f0b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f8d4b31b-317a-4219-b0c5-7fe63a42ca07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246a6919-fd8d-445d-950c-1401e0b8af7d",
        "cursor": {
          "ref": "23d6a9d1-73c9-49d1-a325-41ec9a3dc92e",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "373c1cda-d8ca-4bec-8578-a5a636163c4b"
        },
        "item": {
          "id": "246a6919-fd8d-445d-950c-1401e0b8af7d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b4efb883-12f4-4798-9ee8-0c39a01a34ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e172754-2fd9-4bb6-add5-3cf7b3d78cd9",
        "cursor": {
          "ref": "7b20b007-2e44-4cd7-a608-cfa63cc770ac",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e9f01fa2-3273-4c2f-adeb-e31514069c3a"
        },
        "item": {
          "id": "5e172754-2fd9-4bb6-add5-3cf7b3d78cd9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "60f7a74c-3aee-428d-9169-98b2e0480e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80bb7bb-85ed-4185-9bf6-7b2b1fa2cde0",
        "cursor": {
          "ref": "a3fa80b8-12e1-4db6-8c7e-0ac32e90b537",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d872aefa-a681-46e0-8e38-4ddc5cb2cb6d"
        },
        "item": {
          "id": "c80bb7bb-85ed-4185-9bf6-7b2b1fa2cde0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "eb358812-5293-4996-86b7-d4ab13238ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80fc09a-01e9-4b3b-a364-f860c34be49a",
        "cursor": {
          "ref": "8f4ad514-f10e-4a2f-b171-ac9f2fdf1f53",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "228f3136-65e8-45a4-b7dd-c6522f251a1b"
        },
        "item": {
          "id": "b80fc09a-01e9-4b3b-a364-f860c34be49a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "801591bf-c0fd-4b15-acbd-365e9ec2e891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742646c-beef-4022-b1fb-8d745e43b654",
        "cursor": {
          "ref": "f3b0c5a6-9d3d-4010-a69e-898f73edfeb5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "40aef11a-f402-4987-a207-3c4f49445653"
        },
        "item": {
          "id": "3742646c-beef-4022-b1fb-8d745e43b654",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a0800d1b-743a-4240-9211-55d735dc5b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92e5024-84b6-4edc-875c-245af49acc60",
        "cursor": {
          "ref": "05aa177c-b872-4443-b041-223151a977c2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "56917674-5e78-474e-982d-6fb8643af89f"
        },
        "item": {
          "id": "b92e5024-84b6-4edc-875c-245af49acc60",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "318aabd4-aa55-4754-a40f-c324db8025ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba343ad2-937a-4c35-83a4-daa2eb7d75d2",
        "cursor": {
          "ref": "ed36570c-f3db-4880-8dc4-8c3d4e06f988",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d00a5ee5-1c5f-4220-9bec-7313ce80fcff"
        },
        "item": {
          "id": "ba343ad2-937a-4c35-83a4-daa2eb7d75d2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "21cf7fd4-e622-48b0-9794-b0f300331dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eba96e1-f9b9-4905-b71e-c234ad456d2d",
        "cursor": {
          "ref": "c96e4022-06e0-413f-8f1a-28099ce00713",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "40cfba20-e218-4212-8333-d0d52638cb5b"
        },
        "item": {
          "id": "7eba96e1-f9b9-4905-b71e-c234ad456d2d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "6668463e-1424-41de-bc07-eb2c9212e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9575c200-4928-4cd0-ad06-a0e0dede1254",
        "cursor": {
          "ref": "f9e3c7db-f57f-4627-9582-ee8f9a161f5f",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a98604a7-3d9a-446e-91e2-153a35fd5204"
        },
        "item": {
          "id": "9575c200-4928-4cd0-ad06-a0e0dede1254",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4095880f-b787-4b3d-b111-f78081c61939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e4cb5e-1acf-4e50-914a-2f05fa6e92af",
        "cursor": {
          "ref": "3f716d28-c7fd-42a2-8843-306541b76a06",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "493f2c1e-58f6-4ec2-b5c4-d017e42c165a"
        },
        "item": {
          "id": "b5e4cb5e-1acf-4e50-914a-2f05fa6e92af",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "856e846c-41dc-4a4d-9c25-b04a6182f2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc1fe39-2ad7-4035-bd7d-1a95c604e0d4",
        "cursor": {
          "ref": "8834afca-41ef-4358-99dd-c146024339cb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f796040f-1863-43ad-b392-409900b32128"
        },
        "item": {
          "id": "6dc1fe39-2ad7-4035-bd7d-1a95c604e0d4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f9e75757-a431-4ffa-a5be-376a4484d6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0453dd45-4207-4e3d-8520-b6f244c93ad3",
        "cursor": {
          "ref": "feba1f1c-fd40-4f4e-9fbf-db944a3e6a75",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2dd51a6b-e33a-4b8b-8c15-e35475c9ccd4"
        },
        "item": {
          "id": "0453dd45-4207-4e3d-8520-b6f244c93ad3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "728bf981-339f-4259-8c55-918b1763dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f69f75-ebaf-496a-acfc-c35794307c5c",
        "cursor": {
          "ref": "42a76c49-4d26-422d-83b8-0141300334fb",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "fdd91f41-1759-42ff-955b-7a14f3acdeff"
        },
        "item": {
          "id": "17f69f75-ebaf-496a-acfc-c35794307c5c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "05c41d07-f990-4868-9e3c-2f1fdb34d7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c282bf-34d5-4a42-a68a-4ad69274cd77",
        "cursor": {
          "ref": "7215aaa9-0124-4633-aab5-dddb73f93537",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5bde4528-e262-4ef7-9602-01ee39c569e2"
        },
        "item": {
          "id": "35c282bf-34d5-4a42-a68a-4ad69274cd77",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "0a8f03f8-972c-4039-9acc-3e744b27eeed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da7d9a5-056b-4637-8ce3-a2f562bbaa24",
        "cursor": {
          "ref": "b8796b23-4731-4b47-8e84-6448f57d81a2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "67f813d7-5676-4d06-992e-cb162885c05b"
        },
        "item": {
          "id": "2da7d9a5-056b-4637-8ce3-a2f562bbaa24",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "245ab29f-81f2-4fbd-a96d-58b4c3ead02c",
          "status": "OK",
          "code": 200,
          "responseTime": 2411,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe45f8dd-c53e-4be9-87fe-b205264d5430",
        "cursor": {
          "ref": "8ae23b9b-90ce-4e3b-8865-a57dee0130b6",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "60af747b-9518-4802-a6ee-bc4a15113cc3"
        },
        "item": {
          "id": "fe45f8dd-c53e-4be9-87fe-b205264d5430",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bdb2c6b4-35f6-4d3d-8a5b-0c11bab6ed1f",
          "status": "OK",
          "code": 200,
          "responseTime": 3572,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "68dc83b1-663e-450c-8aef-cfbf4cb5ed9c",
        "cursor": {
          "ref": "fd11df1b-8734-415d-ae9a-cb6cfc4734e1",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1e1e0617-6731-4714-9cd1-2cf70a853c31"
        },
        "item": {
          "id": "68dc83b1-663e-450c-8aef-cfbf4cb5ed9c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "07875f5a-bd89-4fd5-bf11-4cbcf7125c14",
          "status": "OK",
          "code": 200,
          "responseTime": 2982,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f19892-cbcc-4627-921f-12d9eb87a43f",
        "cursor": {
          "ref": "d79ad974-0b4a-49da-b323-731d5e39ef28",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9750d6c9-2d98-4727-b5db-923fc0f7bd00"
        },
        "item": {
          "id": "54f19892-cbcc-4627-921f-12d9eb87a43f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3939cb9a-ad48-45ed-acf7-28df6e6bafa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f19892-cbcc-4627-921f-12d9eb87a43f",
        "cursor": {
          "ref": "d79ad974-0b4a-49da-b323-731d5e39ef28",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9750d6c9-2d98-4727-b5db-923fc0f7bd00"
        },
        "item": {
          "id": "54f19892-cbcc-4627-921f-12d9eb87a43f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3939cb9a-ad48-45ed-acf7-28df6e6bafa3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe15c129-09e5-4817-a1aa-d7be4e9a9dd2",
        "cursor": {
          "ref": "530aeff2-8674-432b-a520-8af4cad75178",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "67a28d56-6c85-4cd3-bdf9-c627da630d73"
        },
        "item": {
          "id": "fe15c129-09e5-4817-a1aa-d7be4e9a9dd2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2c9a2eab-6417-486b-a9f2-d5b3cfa62b2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5b8682-df83-4d0d-a775-ab5fa98f83cd",
        "cursor": {
          "ref": "77ee8c8e-4ab3-4ef8-9cbf-9a31a178f2a6",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ad7612ea-e36e-484c-921a-4877f9e6bcf3"
        },
        "item": {
          "id": "4b5b8682-df83-4d0d-a775-ab5fa98f83cd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e91a0587-2d8f-450f-b299-1c318738736e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}