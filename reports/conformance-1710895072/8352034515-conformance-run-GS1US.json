{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0b7af5e5-1d17-415c-b2b9-3f69a42c96ec",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2eb32387-9143-4ef9-95e6-eaa00ea812a3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb214456-ca6e-407e-b870-21f74c07f123",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "148d2b2e-4bd7-42a7-9cd6-480b2185ae25"
                }
              }
            ]
          },
          {
            "id": "6ee7bc43-b566-4a69-81eb-bc2e7a6aa45a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "405351b5-4e76-455e-bdda-cb6b013984c2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad19c428-86d6-4b42-a0d2-dd312f3c658d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "352ea155-e9c9-4d3d-ae4b-b0db0169cf4f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3425abba-4077-4c08-8aa2-ffac23117289",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4d8c1b67-0bc8-40f4-bf13-b86c8832d787",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05709528-f0db-4983-addb-08d8f2f9b250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6970c365-ce28-4982-a93c-a61d5d7b3fdc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1cab5d6-9fad-418c-a54d-047e0be8941a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d22da80-276f-4115-8933-1815743a4033"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a0e528b-c4d6-42fd-ab37-abe502f231db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a049a1e3-86b2-46d7-8ee1-edfeb038122f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc63206f-d275-4579-bddf-36d065d04108",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6bc1427d-9d3d-424d-851a-a0f2cbafd718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa59f53a-0c13-4e08-b7e4-0e7a0b48b65d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e63e6ea-ebca-4247-a82a-ef91f75399a2"
            }
          }
        ]
      },
      {
        "id": "d92ab32f-4470-4ca3-ac44-cacc7b2d15ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "18df17fb-785f-457e-a61b-4b467a68e38e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ba32237d-dc9d-4135-8c8c-1b3d2ded9f05",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "220842e3-17b4-47c6-b839-dc5e73125b8b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44be0d82-d533-458d-9072-9d9e56fb5366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c760753e-e0f7-4a83-9571-49163b20f388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67681801-16ab-4ab7-bfab-45e935c80603",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f545fc5-a5e1-4c03-9c28-8479569abfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cdb53776-1e41-49a3-9773-260065ec263d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d936c1e9-6bd2-452b-aeb3-819ae92a4323",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397b2c24-5fc1-487f-afb3-b4f9d2fcdf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "930b0074-bdbc-490a-8942-7c32de058789"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21031002-c69e-4d8a-a04b-1cb508eab3b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad7cc205-dd81-4931-9276-d4f4b2df8c69",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49953a23-e7d9-4e84-a880-d43635802fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96466c8d-0b86-4b50-bbd1-7b62a751d41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a27a853-612a-47cf-a443-aa1278cac4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873383dd-aa50-41e7-94a0-f55563caacdd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "edd8e9b4-150f-4d7b-b076-6ab14b7dc1ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ed9e6f7c-3461-4fd6-bb47-843e5c7aaedc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "557517cb-01af-4848-ad6e-e6afb8f67fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ae3dfb82-eda2-412d-a102-98a542ecb932"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7d0affc-c2af-438a-af87-147d7b88879b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7568917a-3011-42c3-abc8-b631a17c893a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ed02cf5-be12-458b-9e4d-3b00000f5805",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5bb00bba-a8d5-4114-9380-84f156d2fa1e"
            }
          }
        ]
      },
      {
        "id": "7c66c272-11ba-439d-b047-ba84a3e826d4",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d090eb06-2bc3-4efa-8c41-382ace21d82c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cca2d98-e821-4a06-9c57-207204a6420f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "05227d29-e8d3-4a80-8e3d-29e184782b27",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf77533-e7d9-42bd-a30c-8ae1877419cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cadacba8-5a9b-4a32-b3dd-6d97ea0c9edb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586d1621-176f-4311-b246-913fc091a1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d6088c8-dddb-4b8e-83a1-58b7559cf857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c16eed4-3cd5-40f8-b943-a418ee8f67c8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3f97c-1079-4d41-ae0f-3892be6f152c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0c5c8d3-b4b3-4fd8-8ec2-7972fb04ca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3402b46-9c69-4e3a-bf7e-b5775c31c60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd081c14-3633-4bda-93b3-a642daa34178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8bf6e73-01df-40ed-82ff-9db5a434a49b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02446004-411a-4092-9bb0-d213d1b79c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac60635-0433-4c70-bff5-77ca60204386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da42512d-f25e-4c23-bb3c-acf99267c0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1d83413-24f6-4908-8e23-d256f15062ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da101b90-50a4-4f79-b452-66e011ee6888",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf2cde1-fd07-4849-99e2-c5ef07b5df9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82dd45f-ac5e-4ca3-b14d-2ce8abe18a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923b3dab-ea6b-401c-868a-0ff1f133e05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27c00a39-06bd-47ec-8421-96ce8ca0ccb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e57d52-4346-4f3a-bb17-2c1134529b90",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9088a795-01f7-4fbb-b1d0-92ed24dfc788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fdfc28-970e-4253-9eed-5e129677c650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e0bd70-8154-489b-a685-2923e36dc82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "956d2280-b485-4797-87e9-26b69defa06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895c0c17-d2f7-4ff9-8759-381aca7c3a47",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ceb97f-e806-4ea7-928c-e7dde25b0bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da36476-f0d0-4719-a8fc-5430b79019b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93821de-022a-49de-a663-611e319aa322",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "086e66f5-5acd-49a0-8d6a-d7d2281682ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3aa898-91b1-4d63-badf-83cfea4a6966",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e05373-0151-463e-9abc-814fb6278c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5f3adf-3336-4f27-a6a3-9af0cfdf5e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "957413f2-991a-43d2-98b3-0c9f0fad59d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91f94159-e53f-4c67-ac0e-870fef0f4989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a475d114-4d01-4c08-9703-7cb3dae5d892",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f4bdb9-1d1f-4b1f-9fb4-64e3858b8866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026543d1-51e8-48ed-b484-b48e9d5f8827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efebc6e8-33c3-4719-8763-789ee527d30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19078903-90ad-42a1-b1d2-7a39c4b640cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f465cf-a6fb-489c-bc16-54fc4a7c94e8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522dd48b-d022-4579-ae7c-6b9b496b8b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857da012-483e-447c-86b2-16f5f09c9d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f60cd4-6b65-40b8-aac0-8fb2e52cd104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c157639-c347-46f7-8ffc-7f83dac6b148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b525362f-90e9-4fd6-8437-24f0af605dac",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8eb4b5-be3c-4553-877b-a58edd68ef34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e624d00-3d3b-473b-a26c-3bce278cb711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a733eb-1f00-4bb2-9950-bd49c89f853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "847218e5-f043-4ad9-b2cf-76cb831712da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90dde72-537c-4f90-9e73-1cdfe38775d0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d63575f-3084-486d-8d43-96af3644ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7a98b3-a9c9-4c4f-8b3b-950a103595b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd908e5e-4604-47ce-9f68-6ef76ecbad25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58d64afd-656a-4db5-9767-e2b24baeb289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edee3199-d198-4539-b64e-58f63c68187e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd836e2f-a6d6-42d8-9643-bd77016dd42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d731481-3e6e-49e5-858a-f3535406fb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0e6d4a-d07a-4473-9da7-732bbaeb2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "596cbed4-f712-40e9-9d24-1698b75e24e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6e3d39-10e3-44f8-b626-470cca4bc32b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd89403-33ab-4002-8d7d-50d650b47695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f1ea62-ee87-4637-bd2e-d17a3177199c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67445c9-77cb-488f-8f21-d69a4700a8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0688e6e-5e44-4589-a599-3e1249b94653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d56b3-955d-446f-b055-3461f0999644",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0e5d1d-66b3-4711-8477-f8f5893bf83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf7bc56-01d4-4cdb-8745-5275e3821e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecf2850-f2c8-4c59-97e8-0eac9e8448a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65dde2bf-0c63-4c7c-9eb0-78e766a5041b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dea788-26c0-41fc-9663-19b6d68be6b4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a3467-fa6a-499f-912b-87aba40403a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28c14b9-500e-4173-a9f2-f6b4f33ea838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5d29c2-9c89-4f86-ac5c-a55379e180bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30800059-9536-4c12-bad1-ef6e692592c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "732cb410-49af-4c60-a581-ac7fcf1d6bd4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f833fa-bfe6-4a5d-8c1e-6c66fcb5114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc08453-e787-49f2-85b6-115f77ef802a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaad216-cf15-4a5b-a866-7a3650e6201f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31e0f1dd-dc06-4df2-b387-ac62a5d61e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d423f69-c360-4e9f-87c5-37ae6fc572c5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d230ba0-9113-434b-ba2d-5edb0d3140df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78da25c-2946-4aff-9760-19aca546a68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe29f26-0e45-4b1e-ab64-9b954ffc5c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c029b48c-c6cb-4cf2-8e7b-cbcdc5b9ea5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547fb6b5-6317-4e0c-afa7-4c340b18f6be",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11b548-dbb9-4bc9-a416-9556d21473b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2908e8-b0a6-4494-a8da-f8e0b5fe9c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f78a08-13e1-4d69-a4cc-d1fc5a515c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1398b0a-cfe1-4a5f-808b-65bd922f8dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67194244-2925-489a-88e9-fab9b0aa6ed6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e2844f-6c72-46ff-bea2-6ffc8a77f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "291bac16-031b-4ba2-9bd7-ddafa5bde566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debabbe9-aa86-4e41-a43d-f5ee870a8e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d33c4c06-1c4e-44d3-83f2-35b6217db041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46385723-17e3-44d6-b879-ea8fbe570440",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c685a76-5afd-4266-848b-7e32dc9924e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0409f6-9131-4a85-9e07-fbcb6e3fded0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8798386a-d94b-455d-b553-ac1a49e06510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "373fe795-da6e-4104-864c-59833c1f8aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077dc06c-b396-4a16-8ec1-d01b95b9dbd2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe4e6b2-0da4-41cd-bbcf-f8b37ea1b084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b185eb-e2d3-4a65-9a6a-126cdc1e8f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727a0b9b-2200-4839-908a-15842870cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a622cd-2c9a-433f-a1d0-20c544dd2836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5e93f1-1d7c-4737-b2e4-e1a4790f9b2d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e745caef-1b8a-4994-9986-eb56ef9e98da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb687a4-7ca5-4884-aa38-ea9fb7476db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e9606f-d532-47f5-a058-db065b817249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3736e23-6948-4e24-82ea-e03871262490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af23c91e-b302-41cc-9a41-a33a9ca5fd87",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8be1f9-ea35-456d-ad7a-c0d5418c7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d70c54-377f-42f9-ad97-6c8e3f6119d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa130937-2d2f-44e6-ac4e-cb38058051ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb3bdd6-7cb5-42a5-95f2-7393fd130957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6266ba7e-08c9-4a51-8126-954adb0d3bfb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c717b0c-1d99-4c35-ac6c-eb0533b3b97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8aa3ac-13b0-41de-8f34-90a0b5fdd556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7655ee-0447-4fac-93ca-db8efd574e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb441f8-7afc-44e4-9d93-014aee4932f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f737cac3-4d36-46cc-889f-7d81a76f3e22",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be193412-3a07-449d-907e-4bbe52329ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a3d859-2ebf-49f5-a05d-58fc9997ba7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a47c40-22e1-4647-b980-53c984707756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8230c7be-3cf0-4089-8928-b435248926a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6bbcce-5786-4317-a87d-f86662803ce5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b294984a-5128-4f8d-85e0-20c3b0f8e430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a4a672-5456-41c8-9eeb-a2afa8329170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe908da8-ecfb-44f0-95b7-ebcf67d58d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8c05cf3-8d63-4088-8b45-0b8919648440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15354ba3-6609-4c46-9988-aacd576d993c",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2d8a51-23eb-4bcb-a3f1-73094f85408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69588255-cdb3-4a9a-bd02-c84430a5b4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44e4e2a-74ae-4e36-88b3-e369c603f79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f4d37c-e51c-4b20-b762-0de76e17a4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef249b2f-e4b9-4fe9-8f89-585032e105bb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8891615f-e265-4917-a403-1c0d810a12a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa86349-818c-4601-acdf-76db63fc8cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce38b88-a51d-4575-ad05-ec7099186c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8f7362-32b4-4f83-b0d7-36e84392f959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78630bae-4d12-4a55-b71a-92fe2c5cf612",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a10265b-7c24-41aa-8198-ea8b67379fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b640c5-7682-49b6-991c-e7bd5def347d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad8aad2-4acb-47f8-9cdf-75f10be45677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b76562b-30d4-49ee-898c-31a59cd27586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb06956-2675-408f-95f7-0e3fda8300a3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42eeed3-0ee4-4f1b-8e31-3d1610dd8556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d14ebb-43d6-4b3a-bbad-dead0d0b8b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ced53c-b8c8-4346-a73a-d56fd85e3c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a09e3297-08d3-48f1-b80b-73cd5853d891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5223001e-4f6e-4e20-8e49-95d368df10a8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b66a55e-66e6-41b6-8b54-eedd592da3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568fe8be-820d-4341-8184-be710500b86c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6834dfc5-9c62-4347-bb71-44f6ce3659b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "162c2fa2-b936-4ec8-a059-8b04eb05037d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef99c18-50e0-4d92-9d7e-06b83140be7d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d70dee-dea7-4eb8-a49b-9ae9d083a8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffd8d7e-0c76-4d86-b9b9-9429f6e98744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbcc4f1-96f6-439a-b11d-1aa799737b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9743b8-726d-4a0a-8400-54d40fce46f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd65d0e-7531-4b4c-979a-295180607f57",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "977b3028-fa83-4744-a0b0-76234a6c9d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b8a1aa-248e-4162-97b7-44d0a031387b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c27eea-e96a-4d38-aa55-210b908bdc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d851edbc-487d-4f0e-af68-9f9cfb81d9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6ceef9-7309-436d-9e6b-d913b5992378",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4916ad14-57e7-4712-8aa8-9d10bd743b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3679d0dc-a4c6-4e53-b54e-f831f88383ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940891ab-5f6e-4b97-a4cc-cf080b6bf0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c785f1cc-192f-4ea3-a5f6-df1a3be38542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249f5bf8-f12a-42e6-948c-5b1893f551a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec588289-b162-4d34-a9ef-4ca5eba26881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12c497a-5119-4afa-aca3-33a29e12ca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e2416d-1dc5-4946-a661-399db2252b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "193e3498-0cfd-49e2-8f25-12f0fe24a87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a68415-cd03-42a9-b9ef-e11344458aa7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b69d669-7a23-4273-acb4-7bcfc7221d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f851f05-9176-4a1a-836f-dd264fbe54b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afee333b-acb7-4dab-9c28-ad988e44f8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf996be-b253-4249-9e79-67c82b399b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114a2fe6-f675-4034-9b7f-7981a991a746",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f614f5ed-3514-4691-b546-97d92a2ef641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be6c77a-c190-41d1-a85f-2e35ef86bdbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a1ca2-ffe8-44f6-85e7-36b5164b3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a91206-ee40-4c2d-87ca-ef0a72c626b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959fd3b3-6f0b-490f-9b8d-564322e561a5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777717e6-6673-4ae6-be42-39ab83a7f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bc7ce1-7cb6-4659-8df5-5b770ad73ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bdaf8f-e9b0-407c-9125-3301439e765d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "505d8603-7c25-454e-b9e2-51b53dd7a4d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b39d22-8ae9-4eaa-ae5e-ffc323381e93",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80394cfb-457c-4ed9-9754-2d5d6512416b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8bfd98c-324d-4f8b-8618-62729bdb7481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcefa07-92cb-41a3-a991-30d4ac338ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f40b29d-5841-42bf-b4de-fa9583299a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362b0f11-9a5c-4c6e-90da-a2748915068f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e11d9f1b-676c-4d93-967d-463e3f70e6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1ae344-3571-47ba-af6a-442e10095203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94a4a94-db1f-4f92-87fc-12824a144898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f61d33-851b-4b80-b98e-2347943f851b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fca4195-7a5b-4146-91d1-ff2921ec69ac",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc5ea9e-5ed1-4999-833d-1d358a279496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943c0a57-b6d1-4277-b1c3-80520fe460bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f637f10d-4304-41ea-bd7f-c9c867ab651f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4486941-c8b3-4bd9-a39d-cb0cbc938f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e87cfae-9b7f-41bc-be87-214e77554ca9",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a528ed1a-34f5-4795-bc52-484dadc8e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15fab0f-d27f-4807-a062-578e69f2c99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744acb8b-1cc2-4a6e-a622-47c9001f37f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "716d14ad-f084-419e-9515-809ab8dbffe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca6688a-7c90-4ff2-b3a3-654072c97d74",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "245c19de-f86c-4d93-b140-33b641b7e053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145d5db8-4eac-4f98-9874-f4586cd8187d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c836b0b9-6b6e-4b95-bad2-f88e92adf447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "393a1719-0076-4be2-b5f7-730598670d63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1ce032-d193-409c-9cef-e5b06efd53d7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd78c36-2f64-4b2e-9119-8cefb38988c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c20a9f-9b1c-49cf-b98a-868f58ee2030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a68753-8bfa-4c9a-b6e7-b628e2c7853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ef7cea-5d9a-4672-8f79-47f6c38c4eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9895416e-11de-48d0-bb3f-2169d6fa1852",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a8e55a-fdd9-4a46-8515-6d44e00be672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "422b62a0-63e6-40e7-a23b-354c087eb5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e8c6b-e875-49ec-b7e8-3f20845afad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a524a93d-768e-41dc-a3b9-51188b41b418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6fa6fc-8036-4930-8b44-bd3114c5eb4d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553f0fc4-39e4-48c9-9905-50a8e7e2c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7222e6-d008-4919-a3c2-77dfe108e474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d9ebc4-b0f7-4806-9832-865e3e8b0907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aacf0c2e-0979-45af-a1e9-6150dc7ec2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e1536ba-6a84-44a1-bdf5-41fc6f10a8c5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf897ae-a5ae-4eb4-be0e-dafb3f5a7fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8852b6e4-bebe-4698-bf38-1fb6cf43125b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356c7005-33ca-4044-9ea3-6f7fe42c6f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "361d668f-32d4-43b0-bcc7-b3dbfe067427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1577afae-b50b-418e-b23b-09fd9e42809c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec94dbd-692e-4397-bc69-9cbef91852f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74e175cd-f61f-43a9-99b9-46696e55c13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e16a80-8161-4b40-8d7e-c48e1f943fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceebafe4-59c2-41a8-91b6-528b15bda219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9a160f-3b78-4aa1-a45a-b287cc68f6e3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b7c0f0-5573-4083-97d5-a1424cc2dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12fa8722-ff49-4671-9328-995b24e155fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2df0d7e-f44a-4cd4-a48e-8a507fcb5775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b6adf2-e5d9-4dd6-85f1-02dd53310ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83146518-b2de-4dbd-ba25-6e4c2b271f4f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4e2874-ae26-4284-bc16-ddc474a47f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7de3041-17d1-41a2-8929-385aa9ed212d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb33958-1768-4248-b2a5-4d872fd27077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe3b68a-bd8d-4a06-9556-9c3284ddbc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d281c2f-92a2-439c-9af4-03dd91b2f357",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f236eb05-16fd-4618-b56e-3d1b9ca96b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4f9b39-14f4-4141-a618-16a31397d595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c69dd5-5733-4036-929b-3ab71cd6dd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebab0ff-6393-429d-83a7-f3c99d65ea72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bdada1-e7cc-4e09-bbb8-78c390d50e83",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d06ed1-bf06-44f6-9f44-d96d509ece71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef11411-4b29-4c62-b693-0c63d78d5088"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff4d8c6-e83a-4d5d-93f7-bab869c19ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4546ddb0-3798-4d4a-8edd-7dfb6aa13390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe40f8a-dbec-436e-b627-c73f5ce86468",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95976438-99fc-48f6-af9a-84f696fa73f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d4b1aa-0b00-4b9e-b6b3-8d196eb980bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117bfde0-29b2-4e9b-853a-e7f5a009b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c145e396-1362-4acc-889b-1a577a99f543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3bdcd7-3a0a-4e7c-a7c8-a47b380095b2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc36f121-33de-4935-ac2e-03fac48dfc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc1745f-0a68-49de-a831-f8d2856585a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b1066e-db4b-4a1a-b043-ce46a3da3470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e81ade83-b30a-4589-be0b-f1659c23cd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283abef0-b519-4142-a872-c77275452c2d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684e2231-f3dc-4187-bf93-55122132254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258b184a-6372-4161-94af-9f5d23941036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2baaf72-ae99-41f4-b72a-71818199a508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca252d2-2714-4953-9339-504e3e9d7c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae216b8-fdd8-4696-afee-b87b07877263",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a40c19e-fd46-49d5-8bf8-9c0a14674ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5433cb-0c1a-4604-8d3c-86df3f2fcf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d52dc28-14cc-4189-bcfc-86cfd2f5221e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "77794f17-987d-4e4d-b3fe-b20022cf8fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1427b3d-65b7-40a3-ab15-6dd1dc0b7932",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37389458-ec3f-4c04-a18e-9381129f3844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c381c93d-00b1-411b-8532-6a3850cbaf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847079fa-2106-4670-a54f-bc78db32c7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2231dcf1-ae69-4f39-84c5-74402af02a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5bb8c7-03e8-4f3b-b91c-7ac18f8b4fec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3495b6-3d0d-4687-8561-f9ab7ee6c5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3d38f1-c810-4680-9081-33281a341e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205c2c1b-cc08-4724-b2a2-2548663cf626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "84bbf85c-4bc4-402d-a208-418067df438f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e28954-3b64-441a-965b-5816b9d87dc2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79082a4d-d650-4375-9170-b2b04a4b2239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44029aa3-a40a-4373-9705-dc13e1b4901d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc750a6-fc79-48d0-9ad1-0eb7d79db2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "96079506-2519-46a2-b604-69b2232f88c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a625b7-4403-43d4-8cab-b5fa4f184622",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4393c227-610b-4327-a1ed-ec73ca8aac5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc31432-2907-4fc8-8a4f-7c368c27ffcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefa00da-cf8b-486c-948c-b84712eeddb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "da2228dc-8789-491c-9592-d718524ce0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d397d6-5860-4e1e-9356-47143d26f61a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f99acf-21a5-429d-8763-1052bc799616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec48c5e-14b0-47f8-8554-398d3d213c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36698e9-43cb-4054-82a1-ddb64d9d58cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfee0147-dc70-40b9-b7ab-e06a2a6ec41b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7cede6-8d66-4e20-8213-da766ec60f0b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f5361a-ac44-45ef-8d5d-91bd7d2b6a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce395df-2ab4-440b-8517-e59ef05fa8da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14cfb9a-e32e-425e-bb0f-8216d48cffef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa1c3a8-9171-4fa7-9fc3-259ec7c19c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770d9295-5a5c-4133-9f32-a80e4e180683",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d839f9-23fb-47d1-b33f-28d06563718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97bafeaf-3f81-414d-b437-1a40638d1670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54455884-21b9-4787-8f21-c028cf84aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d16d76ce-02be-42a4-8e14-05a60443e5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8541a78c-54ba-4fbf-91c0-b93801fc4b02",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934709ae-873b-425f-92f9-69fc40088c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a019dad2-8dab-4116-8136-eb23caa3d044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814bea92-ad82-403e-8acf-ae1c3b157d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65ddb9e2-d3a6-4165-ab5f-a1e7aae8ad00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3915c926-6e6b-44bb-a015-7eb508b650c4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f8d9a1-b197-4446-a272-7b5f9335b359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f796f8e-9d88-4cd3-af58-e5fb2ae470ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f82c7b-d8ea-4f1a-a54a-c653e2d09fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16203d8b-5eec-498e-9562-c0eac7941ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0645ab88-b53a-4cb5-a279-8374aa1c7c9c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8eb54b-c272-493b-bf75-d612705ca92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c0eaa6-e5c4-42da-b447-c9ed8bc9350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcff220-d27a-442a-b90c-85bd5536be51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ebf1a-5e93-40a0-8ac5-7b4ad0aa4d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611ab72f-8fd8-4cf4-a987-a5167cfffd33",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648d698d-2be3-419b-a1f3-87c6cd8eb4cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615cff99-0b5e-43d4-af26-d075e5a0dcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17afd8f-f2dd-4a77-9a3b-0800b94451c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "975cac68-05b8-44d5-85e3-cbddaef646ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851c7dff-0c5a-4612-9310-4f8e0a6562d5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b4dcb8-1086-4481-809c-d9780222d76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c1ba82-11bf-4795-9f0e-8dd3fd8924dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7676c62f-e167-405b-858e-2704fd72a718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "91974974-25dd-427b-8eb7-7c281349026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f01049c-bf12-4ed0-8743-b1c2d955489c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268e3f06-dffe-4612-94d6-2bef4b0d5a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8f11ce-51d6-4fdf-844d-541ebf688c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf7badb-1656-4466-ba9c-d58f8be4ad81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9e450e-fb35-4914-a21f-2c55c05be25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3c62fe-d2ff-4e92-897d-c5c094e9fe75",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0396f726-a030-42bd-9dda-9c4a7326a774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444fc5cf-c39e-4651-9639-17ac56313ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2e429f-cb0b-4ed5-8764-1eb526c848ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6fd360-233f-4b82-bafb-5b70bb99d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca1e9cd-d74e-48a1-9f26-15fd257caa9c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e82b01e-9027-4870-bd31-882dbc950cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a290faa4-0e17-45f7-983a-e19f674fa38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0d3e3d-3492-4962-96bc-0e2f719967a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf33259f-d97d-4812-9d6f-e16f0b029637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5e512b-7824-4cc1-8e70-2f9957bee964",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3b332a-4b6c-47ed-9928-d31a79574b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34af10a9-66c0-423d-8a10-be72b978f8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd8e0ba-e2bf-4bd6-87c5-3db9177dfb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f3fdb7e-89ae-49a6-bff8-2028fd8bc283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d4e2b2-9a79-4836-adcb-e750bb7b7d0e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d503ebe8-ca06-4802-a600-f7c5e7d7ea64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff702138-3107-4bb2-a327-dc1f0fe88e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118e735a-cf9f-4704-9552-1d22434da3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0f4b87-022a-49f2-a3cf-6b76f945c9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107d3e94-bc27-4b6f-a6ac-2046d0af743e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c79947b-2e03-4cfa-95ed-1cca5ebb6d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741ca778-b59a-4f5c-977f-5b84f7e45400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d1fd7f-2edd-44ff-8975-da462fdfc31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b1eba8ca-84a0-4aea-8183-38ebdaea650c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84565767-82a1-4db5-8834-3c71b9576871",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3aee3-91c0-4fef-b62c-f6e3bbcbe967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c11dd97-8518-4f56-b30a-1b8bdd6f9677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d48cf12-e5bb-485e-b8b4-cec56d24e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75d0a245-4642-4f80-9c26-41e4d9e4f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a243e147-34d0-4eca-8669-fcc2f5163b9f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dc29a3-5908-4a72-b134-4ffaa82eea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5fed069-7c74-4f6d-a39b-b22950718364"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f645d7f-9f2d-48f6-9a50-99cad45da622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d789d33-3983-48a6-a59a-0badb60c7fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c45b5b4-7b6c-4e29-9605-c5bb0a622222",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e4e6e9-c8fa-4711-b6ab-fcbe7d4087aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0613d1-d60b-4b8a-ad5e-225d0c07d097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907140c1-0be5-436c-8957-a497c53665a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27869d78-3e68-40fe-9769-a0c988234139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4044c3e5-e395-4389-94a1-327025cdc2bd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf29155-07c3-4d63-bad2-b179099bd2bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a224dbd-7ff4-4acb-b138-450baeae1963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b708c6-8e8c-4a10-8805-191e86ad7e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c87db4d-b52b-467f-8530-d33fd4909484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024a51a-8066-4da4-8215-bf067b2a60c1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadc1c3e-89c0-4315-8d01-0fb1c44f7743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d30a6bc-776c-4835-8fe7-4fc2aa09f7b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d594129a-8c32-4bb4-9c88-42f1df30cf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f4fb506-3dcc-4544-bf06-fb6af355efb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a3a42f-db37-4460-a5a9-f28111aa774f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6578b4-e182-4b7c-b788-9ae6e69d916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27affbdb-489a-47fb-b008-5d91622734c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99e9d88-c76c-4f9f-89ca-c4de1ced97da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d3c4bb-6e3f-4431-b8d5-41cbab5ca504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b3a6e4-94af-449c-8360-478285d6ce64",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2856ed1b-16b0-41bc-adc8-e146913c503e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd11ca2e-5bd9-4b94-ac3d-3acc2189bb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a6781-76c2-4714-a515-131d769e6ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad1fab93-da38-4957-9c80-1db4c7f612d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741c4bbc-3552-4bb9-8ecb-b95c3371f6ff",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9990fee-f042-4c13-9c3e-21f5854ded49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90bc945-a0f8-4c58-8764-0f4b8b943946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e629e4e0-3e88-4be5-aab0-555231006399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9ce751-19ca-4bfa-b87a-35c4bb413e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "544c9d43-5158-4536-b6f7-cee7babef860",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf62f89-e244-4177-b9a7-51760328abde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4670177a-806b-4533-b5ce-319b24713a74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ac602f-24d9-456f-8d82-0fc6da550903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "745dc523-15eb-4024-a35d-c8e9d023828e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a72e2a-cc9b-443b-b2ac-223fcbc237cf",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8275ef4-be7a-4d84-8ecd-46707aed0c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216f40d8-b7bb-4e4a-aa73-65084e2d4a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f8e41a-c343-4e33-8acf-aa3f92233cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb405950-ce74-4bf6-8ad3-e199e765c3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5deafd-90b6-4368-96ba-f5ecba49ae55",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cef7fd2-a989-4c70-9cbe-179a005f0f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e214e4-b2f2-4285-b34b-6b78dda737b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033f6780-eb9f-44d6-ab74-c2642d7278c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77aa9bf5-2229-4d9d-9e35-c1bfa99ac307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e32ea6-1b28-4960-a351-e79b83562f1e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ebe661-6f59-47d1-91f2-a4781712253e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a754636b-ad74-4bd2-8819-1ec4ff0ad5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2321c1-16c1-47b0-b183-e2443e37abaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e40c65c-45f6-4bff-b81f-66147e514320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879bb725-b301-4b07-847f-5ce837d1343a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345987ae-16ff-4427-a657-5c55b2c7b0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ef4dfe-b8e9-4255-accb-f0faeb990b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f1df2d-ef69-432e-a07b-ca0e4bf50d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e021292-6496-4bd0-b074-cc919424de03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1645743-2026-458c-8299-834e1a0d63ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9524a12-fef8-4d15-8284-948930ca09dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b61f7f-3164-4415-b22b-f352eb9c47cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f09a47-be58-4038-ad5a-cfe18218b4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e912eae6-687d-4490-a57c-d3731be805f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94622f24-2d00-47a2-ad16-8104c63f9b32",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324e7d77-43b3-4c99-ae68-a7fc91e8be29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46ddeb1-aa8f-499b-9505-1d3938761c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21456cb1-4fe0-4047-8fd4-280531087738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99aed4b4-5634-48a9-8cbe-b75a95854ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3239e39c-083c-4c28-9512-12afe6ad3f6c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcfbf59-4567-48ec-94d9-073a96f149c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ea5afd-188f-4f30-99f0-758d70a34eec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a3d086-52cc-40fe-878c-f7ce50722aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a72af34b-dbdc-4de0-bf08-e8fedc82fd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e7922d-2cf4-42bf-85e8-2533468edd0f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0c421b-940f-4d84-a425-9604246f92d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eeb4209-1ff8-4154-abdb-8c1dace8aa81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137f6973-5f93-41fd-9a71-15369e03e530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01de9c45-67f3-4520-8edc-55da993c8bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e805f138-75ba-43c5-9f79-54b57b7ef22c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2187d6-f070-4225-93de-5cedf6c4c960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2e690617-a0c9-4745-bae4-5eba3d0d910c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6faf4c8-6cea-48fb-b30c-2e196e33a7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c682d3da-63c6-45c3-a470-d2d4c0be721a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19901ebe-eb12-46fd-8346-f7f124e50b31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c618115a-b22d-4abb-99f5-d8c42fc55ee1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59702674-9bff-45b3-bfec-8f47e156d144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6877e079-50a9-4f00-90a0-10ae0761dce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9929886-4c45-4647-a184-eb24c8cec27a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dbf9bca7-3ace-456e-8607-8b7a60f2919f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f97e3356-0ee9-4953-b7e5-5f77b7a8b94d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "485040ce-6e03-4214-b73f-2f202dced78b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3117d61-5a5c-46f6-aef2-5d50a00c92a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a9c1abf-22bc-43e7-824e-580019c763cd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4abff3f3-d6ff-44f5-aacc-110fb8feb0ed",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7ae24d1-b511-4ae7-8f9d-b3f91cb14ecd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ae637204-0133-469d-b23a-0dcde3265a7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3ea2b4a6-385c-454b-ae64-98133b355ad3"
                }
              }
            ]
          },
          {
            "id": "62aa2f4d-b5f9-404d-b590-25d748edfcfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "451f492d-20ff-4264-a0f7-f0b6d7d40ee1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c76e6237-d245-4388-9d97-10607b63b736",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183df4da-69a8-4767-8fea-2a0302b0e212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12740f85-a3bf-40b4-bde5-945bee5e8a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f067b-098a-4d43-894c-fbdd1d118c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "771ccda3-0ac9-4513-9c6f-aaf576eabbd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ce4c0165-e76f-41a8-952e-17968fd0b749",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dfa7b1c0-1846-4628-8cb2-d65bbad09dae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2b83f74-20e8-401e-833b-8d1ada1aae1c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754e6beb-3092-4e11-b8b0-987de996b772",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77f34e87-b4b0-40da-a52f-f8003ae69a76"
                    }
                  }
                ]
              },
              {
                "id": "eff95cdc-5705-4319-b1a4-d9bdf34355ce",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9ffe275-745a-4fd4-8785-dfa470d61271",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8e818c4b-c0ff-4422-af37-cee604a9b875"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2eee93c1-93e5-4cad-aaec-edfc38cecca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ac747d1-bb9b-430f-aff8-2d703d581be3"
                    }
                  }
                ]
              },
              {
                "id": "0ff8446b-8a84-48e9-a279-3d044dc7a036",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a846528d-115a-42f2-aa36-9e18e94b9fc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaf54dc3-5209-46af-bea5-0076b2b8cdaf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ed0a8bc-1af3-4600-8070-990041d22920",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "50cab018-0a8a-4f5d-8ef9-0c016cbcb859"
                    }
                  }
                ]
              },
              {
                "id": "3b1ed106-b050-44ff-a77a-55915bcc25eb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3ec0ded-ae4b-4ceb-9591-b6654239e75b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "927961de-1605-4086-adbc-bc2fde87cefc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b884b505-a8f2-4cb1-982f-8e8d54fb08e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8b4f074e-ee7a-451b-9df0-8bb7e968352d"
                    }
                  }
                ]
              },
              {
                "id": "bdb252d2-4c61-43e0-b6f9-934243bb1d1b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26ab15b3-c763-4533-9655-d680314359f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "655870c6-ed21-44d1-ad1f-a2f914ccc7fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c3306b2-abdb-4e56-85ba-c9bb15e679a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "322c95ec-9c44-4fb6-9b70-94f6b7211c79"
                    }
                  }
                ]
              },
              {
                "id": "49bde8e2-3c00-43e0-9b7f-f4c89e943b5a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bebf2e60-d067-46e6-bad0-8a87b63b32a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7f6540ea-5084-4e2a-a4fc-834c7ab063e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "213fc435-f6a2-49ee-a8ca-f9e2b1e383b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de1e5f7e-b399-405a-9d47-54fbce2a2df1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0c4f0f1-b193-4710-9576-2ee4af9e7f17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01c0ff54-39a3-49c5-8cb7-d5e84ca997d2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e549e7c-0027-480a-8764-b2105176b7f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f221d5fe-1b4f-4e5b-8d0d-87686c89d030"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b1123cd8-7433-48cd-871d-4f1b2a1160b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "80e5542d-e643-47fb-aec4-1c81cf107785"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7cc7dff-8983-4d8b-ae0d-55285c5b504c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59f75f85-73b7-4d8c-8c79-cdb2af5e7e09"
            }
          }
        ]
      },
      {
        "id": "4ec85475-6e5b-48db-9df8-2df312ca0e0c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7fbbaf10-9203-41ad-b34a-398a8811c827",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31795c51-4b63-4d0c-87ac-cc50acf7dedd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a4056223-39ef-4f12-8471-7f29f20a3c89",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd50e404-f693-44ea-b9ca-2be549c645d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8720ee-d0f4-4a78-99f3-fcccc471f451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd872a-6092-4345-add4-6887b2781970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f88f9a-f94e-481b-82c9-a5b2761d8247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7add6393-a81d-42af-ad98-a85bd7b179e8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1866452e-5888-4303-b1ae-d1332d05756c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f7a629-ee3c-4b2b-af9d-b38b1ab21068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a94775f-f70b-4b21-a178-8fd69ab54c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d41f12-2111-410f-a466-3f8153c7db57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd207a1-dcbe-42ef-87bf-b9538b7490c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942ba350-6d13-42e5-8c0b-f93d0eddb790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3ffb01f-0c23-422f-98dc-f9e9458ad631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5258df43-7638-4fbc-b947-fcdc15dc3606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5248284-81ec-4f80-b6d9-18d0a2e871f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049515c1-b97f-4e72-b52f-fc46277f996a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290cd08c-459a-4dd1-b2bc-52bd079f29ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b49d710-663f-44d6-a584-f627c1c58b99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3b9345-21ab-4ec8-9e65-88b9dded0f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "008e1d41-f308-4b3e-92f2-60133111c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec77b876-2dc8-4f3c-a4f8-35259668f29d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26d1afc-e15e-4583-b587-323a1d078e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03bc3e0e-dd31-4826-b320-9ff4d3c46756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd6e747-53de-43e6-9f50-0ed40f96eab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b25fa659-06a1-4988-97ae-17491ed28004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7492d2e6-43e6-47a4-8e55-1f51aa7ba49c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa05d9f7-b649-428c-af03-07d952927760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7c59e8-bd8e-4c5d-a18c-7877259c49c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bf9e8e-8e31-449a-9dc0-9a7ba2e92463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cbefbdb-277d-4cf7-9dc4-53e541c79acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59359139-ef7c-46b5-860e-bab24172bae8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d07db7-0c70-49f5-8148-e46f82645360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde9f8a-4a6e-445d-8598-270defd8f503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a739cd5-e545-4305-9bca-6800d1658315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b982710-dc63-4a61-bfd1-e906ec738ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e81814e-1dbf-410e-bb16-559932d76623",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577f8cca-d74c-49c0-9b35-343e7ff9d23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e132475e-4660-48d4-9244-57be22c3e930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0712dc26-5b02-4d46-8528-63b813e0f8c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81735783-b265-4f7d-9522-7e2af300ed1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5fdfa5-4853-45ca-8290-a9272c4cf65c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d6d413-e8e3-4a20-9f38-e6f4f76b9248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658002d5-6ae1-41f5-b066-973d912021ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dd4e09-3e41-479e-9784-1b15c9e9bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ac068-2602-45ed-ac6a-0d785322b220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37803ca-5956-4569-8fea-83dabe66717e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7228c0ce-9823-44a6-8abc-721c7a0272fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eada8bd9-d61f-4af2-9909-5e3fd279726e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3908f05b-910c-4324-9a9b-513c90012636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d820302e-3ee7-4718-87bc-9f299bb1bf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a258e331-54a7-4048-b7b3-34137ee1a53c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c06a33-9e7a-476a-ac3c-b86da3ddd638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa9e2a3-defa-44b5-9bae-1ad6542a86bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e62bce-eeeb-498b-8573-58a900d1b8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6dee6823-b7ff-4c55-9c99-af83fdb1bf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b8372b-7683-4266-b6dc-10f3fed48114",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54fe97c-0fef-471a-8d7b-6f0c1de3b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcb9b5f-fb96-4f1f-aba4-d0caef240817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9c4ab4-bc24-494f-8b49-dddfbad7a687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44676d1c-2e67-4a98-ad36-b7dcf10dd7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb92fd7-ca7b-42ee-a781-5f280aa7e2ba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3676f76-1116-4638-9e74-01c3bff0da60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5711eeb0-149b-497d-93db-3ea399a8bed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606a89fa-164d-428f-987b-562770027d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4c3cb7-e3a9-4ae7-8a3c-f3272b49367a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83343b75-6449-4165-85c5-8881d8c43e12",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfe9925-114f-47f8-a789-d22947e8001e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e82de0-847b-4c85-b57b-1f6c977866b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "688e0d57-a23f-4b2e-8769-13ed99fcd43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ede464-8ec3-4d4d-9460-0f5ba4aca11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1d46af-3c86-4144-832a-fe61db12180d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c9f9bc-a29a-437f-9f4a-76a4eac3b324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31dedd7-d55e-4499-be38-8427fe4cebe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9cf616-9ad6-4e28-9316-822fa09720fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "276a8f50-fe1f-490e-96cf-c91f67ab860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac419070-71a3-4087-92d9-e981cc248576",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f7a8c7-90ae-4b78-80c0-112f09b5bf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ef9f23-ed83-4284-b530-2ecddaecabef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c52661a-04e9-4031-8cd4-db72f2acacec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "65917350-0d3d-464a-a11e-dbe723ed782e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9868797f-e581-4482-9c97-37fb1b460900",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386a026b-f2c6-4159-b4db-eca04b4b9363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6e0d24-cdc9-42fe-97dd-0abd99d22be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e23ca5-e96c-4d88-9e75-d63a7626e862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f85ca9e-a1d5-4fef-87ab-58860c2fbc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de00213d-4006-4d3b-a898-7fffff2269ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53037307-a73d-4fb6-b5d0-2465b23ae0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3b8c52-19b4-473f-8d27-a70b81f77769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbe1b19-d43d-49fd-abc7-85b2179e1ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba278694-ed57-4375-ab20-01434ef482c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "834ad1a3-884d-46cd-b5e0-6eb53fc6afac",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28385619-384d-420d-9253-07b23a9f0ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335d2c3c-83c8-44cb-998a-dddd60a25b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8b2ced-7ab3-45cd-8956-5c480d5f4cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98843213-2dd8-4583-bb96-b2ff46ac5bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a956f9-209f-4916-9c7d-4d006b2ac48c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ff28a0-7325-49a8-9ce7-c3e47b80be2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33336780-e0eb-4c05-a6be-3ce13d96d8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945926c-6c04-4813-a5b6-31f5282da48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b6fe09-a8e2-4299-a030-ef3050b66677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf9c586-7fb1-46e5-bd7a-cec64918e4a4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d476f0a-e5ee-48b4-93b3-f5d64735653c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d66e4a-ead9-4712-b5e6-f2082f6b32cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a940aba7-4fd2-4e76-9a9a-9b5e42dbeec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "885f6ced-8bc4-4467-a920-74047d1e0a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed54fdcb-9eeb-45c4-a24f-04c50b770421",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f810f629-7a31-4665-b90d-9cba89dd74a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d5747e-9f34-4027-aa0a-289526a5e784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ba4231-e470-4209-b6c1-67d0b739448d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de4065c0-40c5-474c-83a4-c3a896e5093b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452b2622-0694-4cf0-be02-4661566bc4f6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07502ca6-aa86-4ecb-bd00-f3d710c39772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de882f9c-e2fb-43eb-8e06-d22a50cf381e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9b3148-27ef-44ec-9813-c8478c4c0429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "876cfd19-99fb-40a9-abb7-a7efcaa5f20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "291b9bfd-5d00-4373-9535-841f9addc1a3",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e079c6a-e5cc-445f-ada7-48bd02902156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0521f4e7-e560-44d6-8441-e23fb20f64a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452d9399-dd96-4c5d-ac9f-dad4743a7820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f06e028-4623-478a-90d7-db485b855798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab11f49-349a-4c42-8fd2-cbca532917d3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1c461e-a8f8-4ab1-8ce2-c1e49f548a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2599ae74-0784-45aa-89ef-de841cfde5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1a3ee6b-9cf7-4c03-958d-57b75d137335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99dcf07b-8afa-4ff4-b190-d4b99e74ea8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf74956f-ccf9-43c6-bcd5-481fdd11a4ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73857dbb-9610-497e-9e97-96e2dafa79f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a9f68d-875f-4d74-91bb-91308f2e1dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1df0c8-f3cc-46df-8123-67a1508da177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5e08d6-6f55-4871-b594-9a00575c4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c53b6-80f0-4c82-96d9-13ab2d91d2c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e398ae2e-591e-445a-aa73-ea7f3c84d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9856b76-a391-4b52-9bc2-da72c9578914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad64825b-4a17-464e-91dc-27cc542ae8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c50c5122-29b8-4cc4-a710-6b3ccc537ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e367060a-7360-489f-9949-9bce18937c79",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22fab0d7-28c4-4fe7-8b01-eb2941003923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45e02ba-f930-468b-8c12-b8f3b24dd67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cce714-12f4-4347-9893-57ee26383151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5c4734-198d-4ede-b5de-eae68f546b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45a4f636-5299-4283-8e0d-85c58fed4509",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fff9f36-0f5a-42ef-a871-c5ee05b62310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79360b24-9c69-4e25-9454-020d8bc1ec1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c9dc30-4e93-4797-ade3-7026f0042478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ef99f5-6d86-45ca-be3c-a04ec61c91ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c01787f-c561-4c1e-b5fa-71b1a0dc84c3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc92912-ecb4-40b7-aec1-6f95c37ce067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeb7397-8b94-419c-bdcf-67fcd3c1cae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca5dce0-c3f9-4e90-879e-a14cfffa70e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "048f3aaf-7596-4634-a20a-ebab87571963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e561cb-cda5-49cf-82d9-0d83fc71b00c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1aa3d1c-67cd-4578-802c-794ac9f7e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f982d5f7-3c60-4b7e-8eda-d949b26734b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c02e84a-27bc-40f2-bd6f-0c3adc92da42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "157b33a2-9cc3-4a25-84e0-cd720deecc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df4f656-6dcf-4b47-ad53-3babd7ca2afb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c29492d5-7853-453b-85fd-bdcac6091c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4d4e66-f4b0-4570-af0b-2f486074af12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515c968f-777c-4cca-b336-d11d0a2621a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f16afb-4dca-4273-b3dd-68eb4f8d0eaa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a749311-5add-46bf-9d38-f7c2b99bf70d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74e8f78e-9230-480f-a8e9-b1c5ce9d8a6a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b6d97c-dabb-4c34-a5ca-65f1286d2d23",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8f1c33-e380-445b-b4bc-a6a1530a01b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5213927e-03b5-4b57-8b5c-6a44f4e45c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "989e8127-e7c5-4aa5-8c84-c3b679686452"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "656f94ba-a1ee-467d-b516-0225d18c36c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf5770f-de26-4817-ad57-de0f335576f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "588ed9da-2b9d-4e86-b3c2-412be8fe345b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d3fd8bb-b9c1-4217-8fa0-0f1d3409bb7c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e38a365e-ef00-457f-a125-a1efee8b7051",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb595df2-2d14-47cb-b26d-15fef5be8955"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7dcbe289-f551-4f04-99f0-c75c2949b79e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b8d0bc5-c3a8-48d2-91cd-beb00e343995"
            }
          }
        ]
      },
      {
        "id": "29b61a5a-1d0c-4ca8-9ac2-988e36302922",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d0dda086-03ea-4286-8fdb-59c3204bde02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b96d94f-9426-4657-b10d-ad2c60e95536",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cb3392ef-d334-4e7d-a4b5-38eb5b3a574c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f7cad5-c4dd-465f-95a8-1a2ac32062af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5f6abc-d3f2-4c11-9400-34f94e6ee4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0018ba85-e072-4173-9f0c-bb581331e8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "301894d5-bd25-4899-ac7b-23c8fb3eb8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7e877f-0bf6-4b22-9bf4-505e0e1cdccf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5f923d-437f-464e-b79f-fddc8a3cb257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655baf66-cb0a-4716-8f4b-cb50d09d1eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d2747f-3bb9-46fe-8c8c-093f37c88cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01dba2d-7b6f-44c5-82c6-ec6272dad4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691952b3-b66a-4a37-ae10-8c87433103d6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c62c5b-f0be-4816-8ec5-dc623a5414d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9174f234-1fb8-41d2-8219-cc3f2a349bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ea5df2-6ef0-4fb1-a239-1b4da69c931a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8d5453-6d0f-406c-94ea-1a8db3bda71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8ed21d-2e84-48c9-b4fd-401a577840be",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143eb2fe-5006-4ee8-87d7-b895c7409f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4fd887-24b3-4c9f-b5d7-d2d909013c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf57a95-306f-4a4c-82da-13dc0d1d0c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "136d0de3-c3ae-4088-9bd7-88c1cddb3bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f47cbe-10e1-4e9d-af34-b2b0978b9372",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bcdee1-37bb-4920-9452-3b903ff832e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6febb4-a2c5-44f5-b1d6-2ba43f82a73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2690bf3a-a1e2-459c-9294-98f04a25e3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08db803-85a2-4982-8aa3-f7a5c243c219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacd9805-5877-43ab-99d4-9e5012c18ab5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5348b0-f4e5-41bd-976b-55050fbe5fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f11e6e3-3d50-4412-af95-01bcb4aa15d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8dc58e7-1eb1-498e-948a-edcb003ccbf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f425b9d3-a0bd-4fef-9d23-c9e1fb875503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69850ad1-7398-4a9c-99ec-dfa70ee2f822",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ee8e1a-1af0-4f30-8877-cfc8cd4af21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaccd1b-9843-4c59-b6ad-bdb40aa166dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c3ea50-fcf5-4778-bab6-d9532a5ee30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bccae562-ad65-4645-ac9e-40ae13f965a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24bd1374-0811-4bda-8092-cc3350110d7a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371a94a5-8e0e-4799-a3e0-555f114dddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c3b749-2b6a-4b9b-8ddc-78f1024569ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e97af6-dd2a-4ae4-9b19-5f77484c9560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa258f4d-219c-41fe-9b81-7298b64f16ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62198e65-c0e2-4d46-ba26-2c1ebdb89408",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09897452-72a7-4507-9a08-4a90d617c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e439c2f7-2feb-45dc-b236-e458221bf0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42206d5a-f122-49ec-8fc6-9c181716d911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75ccfe82-c89b-4c69-803e-2561302a488f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "764b48b7-0761-46f9-bbd7-429186cf5a16",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e5ca47-8c2a-48c2-9637-b5b8e12e4a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1990587-5626-4f78-a8a7-2e400315bebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0ded6d-ee5e-45d8-952f-e16b33e8274b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd50677-73dd-492a-aaa0-150a4f18a9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a59cc8-d33d-4589-ac1d-3f4a55d04e26",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdce6822-00b9-42f0-9edc-d5dfa4db0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b072dc65-dc86-4c19-ae1a-429fbc9b0241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c73d78b-08a1-42db-8ebd-abaa5a23c398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "37306535-c616-4378-bec1-28a50981454f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560c01b4-b438-4e85-83e6-60fb80a7d089",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df8c79af-b94d-4f52-b03c-4b8056f71db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0233688a-a5e7-48f1-89ce-da711b7f23b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a8062-a623-4e69-a500-73c426814854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7fe850-9876-4ad7-9544-cde86413929d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec6df5f-e17a-4750-be01-ce5932a8224a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f43af1-f184-40bc-922a-adfba3f3af16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d6f154-4668-42e2-a6a9-6aa17f954f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6c7416-23d0-4f36-a12d-e264395bf052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0655ce04-50c6-4150-88c7-0e61a40d9c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb4e88b-a3b0-4862-a600-4e59dbd2604b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab45bb85-7b35-4fc4-a2b8-0a5b05436bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4900d46-0d2d-4353-9e38-b52f30b6643b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7356ea26-1f68-4492-a745-cef445393bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3802867-0014-4d91-b018-784a5d1e46bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8466c6c3-61bc-4ff5-85ea-46cc60654b2c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66eed378-79fb-498f-b48a-f0284d8a5db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127883a8-6b2b-476a-a955-b4b93843f72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c77d3cc1-bf44-463f-bfb5-bbfad60cd41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56da77c-d070-4de7-aaee-6784bf9d3646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09842a25-9d4a-4f84-b868-09b1c7c80186",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc233e23-353f-4ffa-aa75-d7b45f3c2786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0f1360-096e-4b44-b952-837ac6f48763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044658e1-10b5-4c6b-a48d-77ce016de914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da31aa95-a673-4579-a24b-781244091f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821ac023-d499-43f6-8bbe-eac7ffc973d2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b658d69a-4481-4a10-b11f-7ba46d2c1e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e326d2df-3bc1-49da-8676-3c7b0cd26aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a32dbd4-97ed-4d1a-9b82-dcdd9a264416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "006c413e-d112-4465-9e10-e822ef561642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ad0547-a7dc-4805-a214-8ac40bbe5dd7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f3714d-397b-4f30-a539-97d9af47feae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c132ea5c-1e88-4e78-9573-0128e0de1951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b17cd87-aea4-494a-9a85-ed7995a5d86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1212ffce-3a78-4f27-9526-1264962429f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59a3007-8e51-4bab-a22d-b2b202e7c688",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "431bfbfc-445b-46d3-af64-161c102f1218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cde8828-e02c-45a8-8b6c-8239badcc5d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b643a535-8f81-4af9-a2e0-5abfb4eeaeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e136921-8e62-4037-8f60-dbd96ea29b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfd8b19-42a6-4e84-891b-9257cf95d9f6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e71ae87-59e7-4817-abfd-284d617eeb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba08523d-b1d9-4f18-a075-2ad59e3b89cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d450822c-161f-4e3f-b015-b247544c7485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8c0858-c2f6-4c59-8630-f3d6b7dee70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974adf33-1c63-4903-9019-7d9de0c7fe52",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef7a8cf-d4a0-41ba-a102-d2ccaa083922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aad0e72-c544-4656-b59b-b0708f9c0954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4acab5-2193-42b0-8609-2361eedd0cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a910d43-09ad-4ebe-ad73-4fea7736da3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ccd27e-28c3-4574-9b64-a09367d7de9f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ce2b2d-a94b-4fa6-8dd9-523d0c220613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827f5805-0585-4e57-81de-94b6d07f6ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f23cbc-e20d-46cd-894f-53fa23d69a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c21e49d4-0626-404e-bdb8-2f981294fa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede95c3f-bc94-4ace-b3a8-c9ee626412bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7101a022-f6b0-4bcc-adea-ec745d03c09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cd40794-e93c-49c1-9cd5-57a12eb04d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af02aba2-3a67-4b54-9ea1-1c26dca6d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e0dabe-92f3-47c6-817d-d1c9866c39ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bffaa7-36c9-42f5-b926-f2b439e6b044",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725d7aeb-c230-4278-8978-046639261d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1a19d2-15ff-4051-ba4d-3ba2d4675d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9cebf8-1c75-445d-8190-86809d5bf82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "371e1f64-efa9-484a-98d3-b8c706d4ec4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223b5ee3-8c93-4011-b856-bb8209bdf29e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c9880-735d-4aa1-8023-df2d43015af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d91695a1-877e-43f5-8a5e-8e066932c630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29793c4e-e5e9-47dd-95c3-b64dd073a538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc687669-b0f5-45cf-9ab9-fb03b281928a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa2010ae-831d-45f5-8000-0a9d701ed884",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4353735f-811d-47ad-b204-8263e7ca2e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb07503c-3625-45b1-921e-fa3f6f1f6cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf1ee71-7111-44ac-a0b9-60560325d15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace8df34-dda9-4918-962b-6400fd44aeeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f53ca-7526-47bd-a866-49418b5e7c9b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeea359f-90ad-43aa-a569-355567258c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2306da-54b1-4b4f-a600-b3bfa49f6cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde6f5d-71b9-4c51-902d-0ed4bad3572d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f772e8e-3141-48f2-bec8-3b1febb91d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64c15cc-4e71-486f-903a-96c9ac180ab4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2b5258-608e-4128-b70e-d26914f96635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18630bb3-4ef2-4cc6-8ab0-63378fc50a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f39d9aa-da27-4484-a253-5eb684feb9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77f93f19-5b3d-4300-afec-8fc22ba98e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3423583-90a4-42a5-b9d2-41ebec94fc09",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c80aa0-6388-4a51-9982-19c1e502e791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a2fcc7-852f-4149-b977-1b706dde9463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7567a4da-4ed7-4a0b-ac58-cec6633c11be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b8beee9-4714-4255-9d14-e80df4d822a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d41fc0-6c95-4d9e-94e3-6becad53138b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f937feef-2556-4c3c-a5a7-418d52f12a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c4e57e-3536-42d7-bee8-798f4d25124c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f927d4-a1e7-4d90-8dab-f0a1dd6012f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b51162-5f1e-4242-8f05-ccd4ee035d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da3193c-e1a2-4046-9d46-4707687795b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a16181-8ab6-44b2-bdc3-2d4412fb0539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3562e030-24b0-441f-adba-e328b53e3497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fba673-ad8d-4dc1-8e13-155c572fdb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c06934-6b41-4419-862c-eea3b3841c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0029fdaf-b544-47a2-aed3-565307ea3434",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96a66c4-5665-4ecd-bdfc-a958afca69a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fed8d46-2131-4ff1-9f98-616a608339b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c0deeb-e4ca-477a-9405-ea46d5fea31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b7d62e-6ff7-4e47-820d-8d1d797c40f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6296478d-cfb8-4a80-8a1c-3c62c353825d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594ee112-2609-4d4d-859b-35314f2897df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504fa5f9-0ce1-4fa2-9229-b446bca307ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6052134c-02ac-4110-a8ca-02d09cd7e47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71e78066-d447-42d9-91ec-32408bffe579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94eec27f-b119-45f7-8824-3b4df07238ae",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f4d22-688c-47e2-99b1-876ee6addf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9132807-e514-46ae-8a25-96f9d87b1abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4918b6-e4b3-43b7-9bbf-cb85091addb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f42959-fedd-42a4-bc08-434d05c4befa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e778d2-c6cf-4f18-a7d1-3abdf227c372",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59fb9e6-119a-4a1c-bc44-1e453968b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25020d41-d109-4adb-8e49-95c0fd7473d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e2a879-59e5-4dec-8708-20b7813847b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e8c757d-3c32-4389-8d99-438d8f7a25a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79dcc578-778b-48d6-a5fe-eb4e96b28543",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d73746-ccb4-48da-b79a-64cc1407341a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe61ce9-5e93-4b8a-930f-1ca3b832625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dad6be9-e0dc-4c70-b4ae-f5615b8e3d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecb3aa7-e279-4e5d-a003-3b0ef0e455ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476309ea-4ecf-4fab-886d-3dcd5e37c0fa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190e1592-0101-41c2-a86f-1aaae394aac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715ce727-6901-46b2-a974-eb77db93155d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e50aec9-d224-451e-8a1a-727335229365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f91e863-1ceb-41e8-b913-5840899b0ff3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7582dc06-2ed8-44ac-ab4f-c1a072019fd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed39d3ae-576a-49a8-ba74-05d67d026b5a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8e4ffa-0293-44e7-9829-134c71f8453a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdeab798-c66d-4068-bba6-67aa4b19e917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "785dcc06-0579-409f-8fc5-c20fa72d0a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcd35ddf-a1ac-4220-a574-e96850b69ddf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27aed2b7-7dd4-4e7e-9ac0-57e1da2152d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e49ae89-44d6-43b1-89b4-155fa600fb98"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97cc9294-a05f-4bb9-8839-866bad71a001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2c795ab-d9d7-4228-a7d4-16ca28309e49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25bee57d-279d-4256-be94-e9ec0e054b75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "692ea2c0-2fd3-413e-af43-ae48aa2c5589"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fe6c847-e3fb-4d77-a9cb-3b5389dda99c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c19fe613-cff4-472a-b48b-f0c8c4c6146b"
            }
          }
        ]
      },
      {
        "id": "8bc26835-7891-4d93-941f-d85fd45be7fa",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e82ff22f-2373-49c5-87b8-0f9d698a9393",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a103934-63b9-4c02-b614-5a2a2bf5dfde",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ef1ad89-7399-4f67-8836-c787d0bf75b4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f568ce-b13f-4c8d-96a2-7b53fa4fdd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0235536b-3a2d-4fd4-8c8d-132b54c6b001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60060ec7-f81d-4b76-9cfd-ae7a27ee22b1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f419b-0bbf-4c9b-ab7f-0ec295374d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065b6eb0-5ebf-4983-949d-3918d213fa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778f96c4-790a-48fd-bfff-7b35255ce022",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bd76ad-df07-4e4b-9fd3-c45eba6981d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9333daca-7feb-4c2a-8f3e-0f6e0f396104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642dfd17-41df-4a5c-bcd6-2d2795d6032d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab91ff6b-5c09-42f9-8fea-24a49f579457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0a3d6c-7c3f-4f54-93f6-c97300baf9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e882f156-fdf7-451f-b29a-c38688aca0a3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb48f7df-4b91-4410-8087-9e7cfcf4f55f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cea06c7-270f-4653-961a-eab6e5b5d738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e046c9b-03da-4150-bc2d-f83efd178152",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cc3ad4-d30c-4a8f-9ee0-06677b99549d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c29573-40c2-4bba-908d-0166d792f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101f7225-5c4c-40e8-b785-9bbb4f0be9af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120e97c8-f041-41e2-a5e6-218affa30ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be624a65-65d5-4a85-9dd4-602e255605af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bca60d7-d992-40aa-beeb-1e3e602e3c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5982c54b-3103-4281-96ba-af8f92e2d3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db33f88-5205-431b-b21a-b4ee5cd0ee14",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ebba39-8fe8-4337-824a-a386bc391f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac1f0581-7219-4290-9ca4-2685c22198a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "231929ed-04dd-492e-bd64-35c4a666d415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63bf2f7d-2e30-44f8-b643-6520639ecbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ebf54-2330-4df5-b380-4b01c4499bbb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29538a6-c958-4931-b7d9-56fe25aeff4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282e0267-c6f9-4cde-98a8-7d2c8afb1d35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea734518-a3f4-43d8-aaef-d32fa2dab80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d83101eb-1244-47ba-8e5e-c3f89b82707b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaaff4f-289c-47f1-a829-839acb3243f3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d815f37-7f89-42e0-b5f3-b9c8a00118cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d8711ff-d037-4a66-a380-3d2a3e3e0122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e2292a-e146-4c37-a244-f4b2482e58df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27bde36a-3ea0-4764-a3e0-730f8eaf29b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc6628f-f3cd-4528-9840-a608d8a9d843",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942087b0-719f-4b70-ba62-996e9169c832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02c126e9-03ab-4832-8571-10df362ef6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbfb700-6704-4942-8112-289e62789ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acb4653-15e0-4cdf-b1a8-28e79a40395a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10915155-c10e-4530-88b5-629f0f69a32d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5934e01-f06d-4478-8304-51b960846a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7525d52-d4c2-457f-852a-c7d66155d034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0822e0-8f01-425b-bd83-dc72c69d8a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98adf06f-c866-477a-9b15-75a3940ffffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491da6f2-1a9e-48ea-8bb3-2cd2d57d96f9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7171121b-c0b3-4aa1-afaf-785641a4cd02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc7e8b37-4d6e-4db2-a2a3-64c7d18125df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277a0d90-dcab-45c4-8088-3b60691415c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f7a29b-67c2-46bd-a0db-772cd70b33c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec8bdd0-e337-448d-92bd-629acb3a18a6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209da7c-c8dd-4355-8cdd-4560d7e597e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13273e74-6da0-417f-b1eb-edb78708d5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefb3de6-9ba6-4204-9698-5ca68cba959e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6279c974-1fd1-4dd7-854a-19ae894bec70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08b6a03-8fe2-4b0e-ac05-af430ff00433",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffccb7a1-eeb0-479b-8375-3556a82c1542",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "118b0fb2-2695-437a-ae53-2782eaa9916b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb663eaf-0461-45e9-a521-248ddc9f20a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e2add94-12a2-4cc9-bfd0-8d4d2a52f1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3cb978-5fc3-40cb-a27c-999e6eb959a1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9690de-3e41-4c35-a1be-b28e97a3261d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8980c178-a24a-4b70-b38b-48589ad90ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931592d-f871-436c-9611-90d8aaff315e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394e36b1-0b10-46c9-b135-fd7e693096bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad58c990-837a-43c4-aec2-9339f7229e28",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f921c48-7d89-4364-bbcc-fbd67082f79c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0c1cf1-7f9e-40ab-bde9-4c3c94f472a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7eca634-740c-4a0b-830d-b0bbe7d36c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "065604a2-e4e2-429b-b613-c1b85381c8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2dec08-acea-4ec4-b4d1-e76bb9548283",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee97055-5ab7-4cec-a735-818d14ac2836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98228c95-2436-4625-84b2-5b1d5de3b5e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8b90eb-9c97-4b1d-9393-1cddfa4fde52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c56907-b677-4a8b-aadb-f2e3648515ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92ba281-8c85-46d7-badf-8a1a2707ff93",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e45ad9f-54e7-4663-a978-3cc0b95d4a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10654fb1-348b-4ac6-bded-6a994d746eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551ef385-2849-4cb7-9536-3e79e973ac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7007d0-28ac-4263-b899-10a1b1e3faf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc6edbd-f059-46ab-a247-9bb96421cf92",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676492d5-7186-4b81-a227-2a9276387544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d35898-e096-4a41-a598-fb233f59de6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90cc826a-0201-4ea6-97c6-a0631c67d8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62a40b1-b047-4ce2-9c1d-bf98f16d3725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7804602d-d678-408e-b486-8301d0861bed",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "148f001d-2c72-4758-a11c-44dfbe9acccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464c0eec-8c42-4278-8c5a-197e7d68396c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdb60dc-5758-4448-b83a-6de48d874d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3374087-61f1-4af2-bac0-2de51c273267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2b8d57-ecaa-436c-a006-3a35cb03b636",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ead6ed7-5e12-4be2-849a-39630d6b5cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf65c53-268d-44d3-80e6-9b3a5a29b496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0370ff83-7092-4519-ad6a-72735c9a38f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0315d20-2c6f-4a43-acb8-bea8d885501c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b55122-3d59-4e79-9e4f-82214ee3c3db",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ebe5c-e01d-450d-be7b-8b295627007f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e21f9150-286d-47ce-9914-95a58dd7a9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a7abe6-e436-48d4-b7e0-742a2876c21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb24b9f-088f-4922-bb73-55b9706c4b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55108b89-2778-46b6-990e-1e6a4b0078f8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55ab51d-75b1-480c-a653-9303769dee33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d8ae27-9f52-4249-af07-ae79ab520a01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8a763f-9c0e-443d-bec3-ed9ae0fa138e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2d9f9f-e073-4922-92da-7cd5c74545cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adabb604-7d55-4d7f-9c9d-8eae11afbd1e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45d3ffa-be2d-48c8-86a4-a3381f046673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6c4861d-1066-4192-a23e-e9253ca40152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871cc60c-97bc-4df7-a8d8-cc297ec84b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d03593e-2575-4640-8cac-541fff99ff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c816a45-ea0f-4a1d-bd5a-45726566fc9a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78d644e-332b-4951-95f4-924b1b6df224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90950f47-e344-471d-b7b8-b0b2ed5d9aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb3c53c-5123-41c7-bfdf-8783986d78bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aad8bd0-4bf9-4582-a465-616988eb8092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8df2cc5-7180-4cf8-a9a2-16ac721683ee",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb74d701-3e20-4b71-9d15-c6760124e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc5e3b92-e782-4c0b-8f50-c617f72debb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b244f-3124-46aa-af76-bcea30ac29f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d9c8596-e306-4ab3-9e33-13fb2b6c9e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf7e7e4-04a3-4ac3-8a5f-dfad9c9700e9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04664cb2-603c-45c9-bef3-b8a5e1a74fd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d184057-d1d6-4955-88c0-13b28ffb57c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45be4ff2-5619-4e9d-b7b9-8e3a940bb1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31442322-5bad-4b4e-ba48-011f3f900cdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f239bc-09cc-40f6-ae76-cfdc638dd64e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caeb511-a896-4c90-80db-48cdedb6af3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cdcf5db-5f19-4cf5-a92b-01ed7d4a90c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f9fc0f-adb0-4d2a-8167-b16a36a9c367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa45506-1414-49ed-9726-7704763589d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52ad467-39b5-44a7-a6ce-0559c2d0c10e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f9980d-2790-49ba-b613-b72714cf9bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110c02b8-4c10-4fd7-8603-dc97e9f05749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "619d1713-5d9f-436b-96da-395a3c71f9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad9be61-e862-4c0f-88bc-be54cd8059ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb095a-1366-497a-b9fa-3fb31ac758dc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e10e143-3f9b-47e9-b48d-29c817cb15bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ca72941-17be-454c-9397-1cb54cb6aaaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c6b471-b6cb-423a-b955-a128e9f33bfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb173df9-ac6f-4f26-8b73-6345caeba669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc578c08-670d-4e15-b057-6b32f01fa9ac",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2c5628-6ec1-406e-9f1d-5f1bff4040b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5df06039-5756-4685-a99b-c2027690b8b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2631fc-bc57-4b76-b3f7-522d402f61f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9e8f74-3104-4a6e-ae9a-c1e436f2451d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e32d188-1e1a-4265-98f6-fb9d754aed69",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64128106-cb27-403d-b455-98386e88219a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79acfa0-4dab-4c76-b084-82ab4d825b2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70b4dc5-1a3a-483f-8e76-073584140241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e711443-b4f4-4206-bda2-2510ff1a2e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94bbd637-f913-4331-bf95-43a23b13e803",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37ab6c0-c80e-48d1-9c0d-d99e502f7be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45bb5446-cb8c-4fb4-ae21-c9d2f7dbb512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c463e-a48e-4f90-a672-52c4cf97abe5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57d95ea-5f06-415c-8cb4-2dd820733270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cada7fbf-f2dd-4d14-a19d-fbf200d35fd0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd5404c-5728-4b00-90ed-c6b1870266a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa51e8a-f31b-4a02-af5f-541d324befbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01609242-a580-4d06-882e-0000558bb4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b0fee-32cc-458c-b7cb-64ed22cbb122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2104b9-351b-4f36-a821-20c91e0abb4f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da215e2-da17-409a-9da6-ecf7ab7b4036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66311618-9446-4616-9492-e3336dd86ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0775e6-791e-47ec-aa63-091f95226819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963b9499-1b17-4c1f-b932-8a680b8e4470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0235b4-fd6f-450f-a6d6-cd48b4ef1757",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9c0cde-bb68-47bf-a9c7-56560ec0fde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781c1a82-027c-496a-9513-fafe672a0e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6ef53b-99bb-4d8d-b813-acee44ee1137",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4861f89f-a1c9-4d67-8897-ca27539c0b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09e0947-7c1c-4543-a4ce-08831583651f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7add36e5-1bed-4951-9553-577806998e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ab6144-282a-417e-bb31-15d8f7afd25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d070b415-a736-41a0-bbf1-95319ca772b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ffa256-cdea-4882-8f76-3892fde6e39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06bd10d9-7144-4670-8a09-2c638d38917d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2449b3f9-55fc-496c-aa9d-fb7feba1fbf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ece067-a0d0-440b-90ae-55143f716cbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63edbb5c-e8af-443b-98ac-e1adcfa6e676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b78108f-1137-4b03-840f-6d7a9245d409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616d3800-7b7e-4583-9e81-1cf2c90c9b86",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf29d53-b0ee-4628-9465-7504c246b4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fcbcfb-e37a-44cd-a451-495dbd444921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102bacb2-6acf-4310-8272-a88b317a147f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec8aecd-46a3-461d-9122-9732f20f35a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88bcc78-ed6d-4726-9518-8d0645997876",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e2cf9-5b44-4bc9-96db-610b5f2f480f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50046a00-02a0-4fd7-92f9-2c39b5554680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d8b5d1-17bc-4b6e-ba6e-5ba28b198191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215a4c33-5b98-416e-8593-200eec512c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e69466-75dc-4ff6-86c9-9b984b8ce975",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f77b287-1bbd-40eb-a047-4ade4ada3570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e566ad1-15a4-4186-b44f-9af73a516876"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc7ed9c-8df5-4caf-aac9-1769fa389e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3951454a-ef06-49af-b3d3-f98bef140891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac3e938-5ad9-4722-839a-9d4ce2c54bc8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ddaf69-2530-421a-98db-386f8bb869f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c8be458-d17f-4c1e-964b-cbfd9f4d0d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4575da4-0665-4932-a75d-fc2d27b4d1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dad1716-c93e-4428-8d99-9f52b4b2d56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f406f2f-32d2-4d0a-a486-cb773374fbb2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d35e41-46e9-4b9d-86bd-0958420cc782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1b503ac-5d08-4abf-9f16-f681fb9fd1a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e12497-3e9c-47a8-ab7f-f3c793aedbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c158ab-8d55-4a4b-a7a5-f3eb52b93483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa551e96-1788-4971-9e86-9aa330e90045",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0818674d-0d87-4c07-9f79-932641b709db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2acd18-e705-490f-a497-20db16555c15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2bb40e-e648-4c92-8bff-5dba25ddbd99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4712e10-1479-4148-8734-c124e4550cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403fc683-143e-43d1-a9a4-049360f67d74",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d73808d-ac45-45b3-9d41-fb88d896f132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bddb3155-6ae0-48a3-a9a1-e2d44f4eb2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252cb376-a5c6-406a-ac84-c661240a1c01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ddb122-80de-4ff5-a551-8f4d9447fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce5f71-6649-410d-ba16-6a4bd3c5312f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3607d257-34ca-4e9d-b57b-799c598fac53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810eb635-acd6-4fbb-87a9-f1e3f4958e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f6c449-4df0-4712-b070-39f103b6c94e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb7da33-45f4-499d-baa0-fdd6add0abed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7631b0-7ad2-491e-ac6b-ea0693def616",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4689b1d-66ce-46e3-a404-92d094fa3c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05bacea5-15a6-45c9-9360-000df709cfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd5c01f2-4986-4f83-b5e3-a202ab92d630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0dcad1-f708-48a0-9bc5-00155cc7ef54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9620a9b2-a604-49f3-95cc-6ab104143e28",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6585f8c4-d764-479d-8718-0cd70f9486c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea6d699f-7279-4813-bbb9-f60d22f17af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56443354-5f2e-42f3-b20f-7b7ab9eb6a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b6dc30-2b1b-44f9-84a2-41d6c81230d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a69b0c7-f3fc-439f-9430-9b8e56dd7dc2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6432c10-f3c5-4c83-b90f-88735f745579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1988ccf8-d382-4c95-9b88-ecde014bb077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d92181f-6a98-4144-8d4d-8fcdb5670d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b38a0b-afb3-4750-baa4-bd9fc486a8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220d40a1-e2d3-46ee-98f6-07a1ae7bd5b0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb7b3b2-1bc4-4283-ae9e-18790d1e130e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f4bc88-feff-4d3b-b86c-d55dfcfe00dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053d7838-baa3-495f-a241-62b829030d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "528afb7f-9428-4b04-94c8-ffb0d8fa7141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38092143-d75a-4087-b5c7-0124b991eab4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d119f97-0a5b-4aa2-a9d3-70f473db5ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52163656-0526-428c-98a6-8ccfc985c47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f268a340-f848-454f-a365-9aa8f756f99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024a90e2-bb8f-4491-8b1f-473ea624be4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651f9668-7132-43d2-bbac-3f818e79b169",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a6f06e-616f-429f-91d7-b5fcb0656f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fed7681f-eb0c-4a4e-89c1-5e4ffc8de871"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca252c72-1cd0-4316-87c2-cfa41a08b709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c13aad-e88a-45bd-951c-2a84dc9d5381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16bd6ae6-96ca-4b7d-9348-f7468d55386f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddea90fb-7e84-4805-b836-1576d8e6e88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b34f6c36-8ee9-477b-a257-c81ecc9cc91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f56551-0652-4a77-8dfd-17a5967f3a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "578e601f-0b02-4f25-a441-5402ab7cdf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3f8c2b-d012-483f-ad1e-f0d990f8d7e6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b1201d-09df-4647-b5d6-62145de2eb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69dd3726-8b30-4c1c-b9cf-11bca62b071c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f5f14d-acc0-4f07-94ba-b6023d8499d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "456f3f55-7541-4617-95ed-3e6734982d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e96fc8-bf88-435d-9080-e89b778303aa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed7f127-8c79-440b-bc06-7215a3cae9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb2e76b-7372-4db5-9ebd-fd43b62917f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37cf5220-79dd-48e3-a949-3081486426d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980c1882-3142-41a6-b971-14597c097954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaafd35-5c8c-4aad-bec5-93fdfd4eae44",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb98e168-cdcd-40ab-8ed5-8b2d8318e8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0102b2c-a558-4795-9bfe-d8d5bf3a5499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56afd313-36ea-4fa0-a0a2-206225b83dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac83b67-511c-4a49-a703-b051ff179f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae281e5-fcbd-4556-a115-ef9723fafa9a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a6fe2-ba58-4886-b6d6-bfccb1c70a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93bca349-d095-4f51-ac7d-565fd048e50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037eba7b-435e-47bf-88db-7d4c841c4178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe48fe6-9506-4ee3-a2c6-c973666eb567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41720ecb-45a6-4c7f-ab14-9ab0398505be",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2086b166-75e3-4a24-9005-9c4f119fa0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512bfe46-6ce7-4b0b-8d1b-ae6b84077176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c70cd0-c01c-4296-bacc-d8c2fd569d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7aaab64-af02-45d9-a788-53843355a894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be9969d-a345-4665-9de5-22f0d592e8b3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90e3f5a-9584-413d-a738-1331c0becd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7f79968-1d4e-4446-a38d-43c5f24da5b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c839f31-2597-4434-99fe-14cde68742a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9556e0d-a446-47c1-ae5c-3eb8a003dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb2b4a6-482a-4806-bac8-f53d59dff0e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c06a981-fa49-4d08-b5cf-70f00d4f7995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6ad698-723d-4652-9406-aaf200496c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417161b-5c5f-4f45-a86a-5f43c32f365c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdfd789-8044-478b-b1e5-83d2e1313348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2bfa29-fa3a-4807-a327-a272deaee8e9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe364e6-1533-4949-a8fa-e976bf75951c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f51442-23f2-43ba-926b-ded5053f9cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac129812-ce05-45d7-bdb9-034b7f966a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee6dd2b-d698-410b-bd3e-c5f8aca58423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fefc1a-0b09-462a-9ec7-276ac10357c0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f208dbd-b616-47b7-ac28-e11707965e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da349cac-cda9-416e-a974-40f06664114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc63fc0-dcbf-44df-bb01-659a7ad77adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15708aaa-0cb3-4d0b-8abe-67fd1d3300a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1649ed39-8123-45b2-8a7c-059258e0e465",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e424cf-4f96-40aa-9ea3-f2ed0a9351db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d37ed19-a962-4f69-ab26-db68471bf3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "421647ea-f502-4c44-8bfa-c7e709b55b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb0311e-b530-4a14-8fe8-dfcc12ef58c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81472d29-ff32-4320-92ce-2385d227e863",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39329387-32d4-4c5a-a545-10de1182e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df0a2a73-90ae-44f2-8429-aa031edebd5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb5a15c-aa04-4a12-afce-2fac87edcbbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff186b4a-7782-4f2c-87f8-23d413b7d6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d248becd-a3c7-4b17-98c5-4a234b6e18e7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29453fc4-9d35-4e08-b22b-74b1252df0d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd1c0d1-8f1c-4278-af60-952247a152e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28aea12e-5b0f-487f-8242-8fe5c8f1a4f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4937118e-3b87-4879-92d7-2d282764e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f05124b-9bd7-400b-b5e9-88633b1f8e36",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6714642-7b43-4935-98ce-1a3c6f88ae49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b2c649-3683-4428-94c0-c965548bb659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4a7ed1-93fa-4daf-83a0-3d2097eb478c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f07c328-eccd-4ba4-89c8-36ba457e018b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e05bb48-1f3e-4244-898f-eb867c68b596",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8123d3dc-9d9f-48b1-820d-cbeb0fcc38e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbf36c1-53fa-4817-b020-5f63ed51c020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d701f7e3-ba3c-4e3b-ab2a-c221f46cdef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b43eb4-84dc-4566-8fe0-8b2c5168621e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65d0323-4207-4964-955e-5b9c2428b75a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edf7ac7-a682-44d8-86ac-536da6331a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e7eed17-707e-48d9-9460-feb4ef665554"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a728fbc-17e1-4b23-8802-599596560f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c667eff8-4328-4dc6-b8a9-741da6d538d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeae597-6eeb-4f03-b7f7-3d76167f13eb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d2e806-c96d-4b6f-a0a6-7a78aa303eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34817417-405c-4a2d-a3e1-ff5801ef7772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ae95d0-a563-4a8d-ac97-c119ab8e3ff8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "354e27b7-2ca0-46a2-bdf2-b439bed96730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4f4c63-4e7e-441c-b515-8568de71f796",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3cd094-69d0-4487-9ca3-23deb6ea3b90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520e8f16-cc6a-47c0-84c9-da79f918a0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edea26e-fd06-4d34-b90f-f293e8ead56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f3b24a-66b4-4165-81e9-8bb8663cec0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c60d802a-41fc-4b02-98e2-4caa0fe9b247",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b44a5-c53c-46af-95f8-359c44a48f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a362c105-222d-41dd-ace7-a907704b89f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc25e2e-4285-496d-862e-8358947cf5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7f5c303-c6a1-4144-abd7-7a392f7bc0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d744fb1b-3aee-44e9-8161-53a164e44fbe",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600ccf08-64f8-4ec7-bcff-cb43e37f7bb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0912320-466a-4560-b5a2-1ce5c33b238b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a097a9-5096-42dc-aa92-5a4425d65f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fb8528-91e6-4132-90ae-3dd4bd2c4ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac029a72-75e9-4fe7-8be3-2c5e8bf2c41c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfac7eb-7604-4d67-afe0-0f26b0b0c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe134e5-3397-4705-a69d-16054a185577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6669066-2097-4563-ab66-50e4e0f982e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273f077d-898b-438e-a697-11207384b5a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff5f361-ce5d-44ee-b4b9-925170a181b8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bbb065-969c-4b06-8882-0f11755f72aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7163ac86-9d69-41ad-a5cb-514a387034aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224b9273-d2cd-4251-b553-f67e14f17bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682c523d-b0f1-4f56-936f-2b4a1d0ec5bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b39d7c-6655-43fc-a629-43672ff4af36",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e98105-d71a-4dc3-b9ba-b8eb3015503a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f6b2365-4a99-48a2-9873-ed2e95e6aa30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194ee5f5-a79a-4691-98a5-3d93fa4280d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202a54fe-8956-40af-a759-a5343857076a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2279dc-54b6-4f97-854e-5f300efff084",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119c3f47-4e70-4a02-b526-ad9c82fe64f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26da9a15-2974-49e1-aaf8-0d72eff7ccbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "768abea3-b15d-4c16-b79d-00dbc1ed8f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63b31f5-dba7-4a92-8fb9-8d8a37365be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b8cc49-bc9e-47fb-a445-01c54dafada7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f710075-ac34-428a-b58a-4f3e204c2ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62685099-3521-4612-8bf8-236e9307df0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd1167-fc00-4a61-8bd3-5f51ebee81c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc7c9a82-759d-4ab2-9ab9-242d07d64c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f551cfcb-dcc2-4eeb-b6ae-56c1e573c90d",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c743cf-0734-4c73-afae-16fb93493306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8bdb9ff-5fe5-4ccd-8291-c41384816d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ec99a2-1c1a-4a29-9295-ffcfc55b2507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f45b9b-f02c-490a-a3a5-7900d573c9a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a94116-ea2b-44d0-a3ee-033a3adec0ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a991ee1-d907-4da5-ad88-1a9160070c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11df918d-5134-4194-a7e0-66dbba5649b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5917625c-c5a3-400c-9a79-72b32b8ab5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1f6d54-d2d7-4594-b46f-16d403c80401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a24812-b862-4c03-b9e6-dfbb4a230826",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b564a668-ba22-4474-a9be-fe4636fec20b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55f4e386-fa5b-4f0b-ab7d-23e62af1c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8717621a-31cb-4f5d-a164-1cb713fab48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ac1723-1c43-4ae9-9e03-a400d956abb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a537b94-08a0-455e-93b5-3991b62868d7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6101d2c5-d582-4a58-aa57-06d6cd27ee78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e38487-26d9-43d2-9487-941de8a02f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f1ed8-8b24-4931-b7f0-65af9b2e1b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f640cf-9b34-4ffd-9d94-878b66d1feb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03e0d0b-51cc-4d38-b332-064f91c671f3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf4cce6-229d-4a1e-ba30-b7e2c10b1d78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df94a90d-9341-4fbd-86a3-1de707f375b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e7ab20b-6ef7-4cf6-8200-1352fe6ea4ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06357b03-7b05-4057-b070-db377d3e420c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a34cf4-4247-4550-9ea4-cdf21900e5f1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c121d087-142c-4ea7-9086-4fb8162eb70f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809e788b-3cdb-4105-8085-2b0c5224c8e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d5c827-2169-441d-a227-b42e9972ccd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39281b1e-cf0b-4597-a416-7e13014ff5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef8be3d-1574-4b19-a745-4a2639627eb6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce9ac83-5d47-4901-a1f9-a507283a55f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d585f619-345e-41b7-836b-981c17a268fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e50a1d-de45-4391-8823-bf0f1a7e63ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d394eb7-0b76-4354-823d-5e6f256ba904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec10c11-26e9-42be-9b23-2a34f266cb42",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf1fd51-6548-4652-8f6d-72c80f8c7844",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50b95795-9f64-4e5d-8a70-ce7b6be58b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06169ad5-4cd1-425b-b7df-2598a15f020a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2905b9df-7d44-4a8b-a649-1f7d5b76aaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb88fb2-44f2-41bd-84b0-499c4e801fa7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c790d76-71e5-4df7-9975-46d865cf70b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312c0c5c-23b4-413b-b2ff-c0c6bf04ac61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7dcb2a6-ec4e-4662-84d9-1273c404a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bff2dc3-f116-4f0e-b861-2fc02ddc7978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3ffdce-0687-49a2-bf2e-79f58e524e43",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab19348f-17ad-4945-a597-fc22e2f24332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb02004-254f-463b-9221-92dbb0b6d0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d121fa8-e2d0-43e4-aa37-b8d0eb3f9681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50665fc0-7486-4454-ace8-0484a907fc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8597a1b9-d495-4d83-9d90-310e8a771da7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f05d7aa-39dd-4d5e-bddb-2e621ef7ff5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192f5ba7-ece3-4289-a9b4-c921050d7cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7d5a0a-c7e9-4aa0-8733-9cd89b01fbe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b19692-ee22-4e00-aa62-fdf5de651d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be4580-ff1b-415b-84e6-2583e25113ca",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73eeba3-2067-4707-87de-40f1e712d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b827cd-3f0e-4a8c-a164-ab2efee061ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2272eb-82f6-4df2-9261-214df2f32e01",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad297949-18f3-472d-bf43-5788baf6995e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8baafafc-8354-4675-a5d3-c5b95491be8b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d7fddd-715b-4184-82d1-3b0a5e2fa563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf539dcc-0628-41d2-9665-08c04054d808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27e5a75-3aef-44f0-aef6-8d7a9af0b11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005ba17d-d785-4a43-b095-897d64d1f482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36559b11-a8c4-4689-a645-70e87df51821",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec19b8f4-04f4-43b4-a2f2-79ad34abd9fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a53397-2932-4fb5-80ba-cd4c28c47166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ca854b-299a-41b4-87b0-a89a151205eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99367f4c-06ad-4297-9c4d-dd45d206e3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f2f3c6-5c8a-4a6e-97ee-06849eabafcf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8d132a-7872-4a1c-a3d0-e7293ecde76e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de44175d-8bf7-4a0f-ae05-aba29b292c69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4367ac72-ffdf-4dfb-ac5d-0bf24f2f8bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2889a5a2-ab62-40c3-ac4f-356c4c79fed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a22b06-b134-4586-98eb-566825753517",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1f7421-27ab-4996-90ee-d768352e3891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "825c31ea-9380-4153-ac37-59b1aa7f0c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d763766a-bbff-4ba3-9cd6-cbac4d4199ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e34d74-09d0-4b42-baee-507f87206ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1522ead5-51d0-4f12-8423-367cd592ad3c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c063f6-b68f-44e8-b911-ff80edec8590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "182d4983-39c6-4209-ada7-2ab3d99497c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c416d4cc-0019-47a8-a0be-e71a987c61f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61488de-1991-4225-b9c3-5bbe644e3d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad86ad4-e186-4b35-beb1-89a5d0c127a7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bd4e26-656e-45bb-80c4-9b2757d1ccc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e696b3-2bac-4e36-af72-35f9bde57b45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432442e0-af80-4ef8-baee-6a7c5e6e7c2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3320c7c7-d0cc-42ea-83c7-58aa019f2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a1cdd2-c2f6-499b-87e0-a6a79e1feda3",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c1c300-1669-42b6-8c7e-93d6fb9cf25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8733423d-50dc-45e6-aeab-7107f849d1b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f852f60-52f6-475d-b636-769863997aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241de67b-8b78-44e3-a685-410769370e79"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4fa0aed5-3520-4f40-9987-277d64317491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eb7e950-d56b-4668-a42a-9079dbb413f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "387b1b65-b7fe-4776-bf98-7f1b4567993d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e00b5331-9bf7-4e74-90dc-4f3cc72efdfe"
                    }
                  }
                ]
              },
              {
                "id": "031907ea-9eab-40c6-96d4-eac4e31d097d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df5176a5-8929-4030-93e5-985e9cb2555e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f071f86-d7db-4cd6-bcde-060aa9d0b312",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68f876d9-b421-4d40-8563-eb1002b59f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8dc0e79-0a29-4be9-b577-fb7d7dedc8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "873639a8-1d59-473c-b1e7-fc957b661322"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07a17e05-f9ab-4383-8317-14bcf6f8d9a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c9b631f-15ce-48ab-ae3b-f8888cae14a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72025900-5170-4e00-826b-755422aa3cdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f47fae19-65f1-432e-82dd-5918c5091458"
                    }
                  }
                ]
              },
              {
                "id": "e42453aa-510e-493e-a949-b818ab76ce28",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e8e5326b-73bd-4a44-9bd7-9c02a735cec3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d43846-c87b-45de-b131-7b671ed326e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ca52e815-7c28-4e46-8ff2-04a747b35e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9d953a-7f0c-488e-bdb4-926d7a881861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927cb01e-09f6-48e7-9558-4af2cf121802"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3f30d264-8b93-4e59-b9c4-90b3a8df3c1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8ad231c5-dceb-496e-9415-f66cde828cc8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d5c421e-2000-4e8b-be8a-cdeeb36e1137",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "862e8d7b-2b02-4c81-93dd-4dd7b3413d83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d1a8ba9-a869-4c7e-91db-1d02469b92ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc68d4dc-979e-414d-a033-b42b080b39cf"
                    }
                  }
                ]
              },
              {
                "id": "ab2c3a20-2093-4093-a915-cfc679d88198",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d03fe7f-7793-4198-8599-16833e938b41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "635782fd-2a85-4bc7-966f-b04564302689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76cbe409-af27-47a7-87a9-6d610888d169",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0262632-aac0-4461-8790-9ace318e105e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebc8053e-38f5-4bc2-a409-9fc2b45c0e06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8a9b94d4-76c6-4156-8d2e-d6563aa8b975"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ffa3433-f2b9-47eb-b1db-4142e2f21899",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c7a99f38-edc9-4750-b006-e4b56ac22b62"
            }
          }
        ]
      },
      {
        "id": "02938669-bba6-4bfa-b911-298a2b3d99c2",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3ddbf916-a119-4730-99ed-c5ffd1ee6896",
            "name": "Negative Testing",
            "item": [
              {
                "id": "222616a9-15fa-476b-910e-b002bc2f5aff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fe32f77c-5925-491b-8b44-3291fb42bea9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd2931f-5265-4d8e-a7af-2d6cbd0dab8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "54cdc2bc-7819-4e0a-8777-b92981e39409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0406e66-e949-4a82-aaa9-38f709e33b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e847347-d4a0-4e53-9be3-46f929fc0b1e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39db8297-ffb8-4f00-bb9a-f92575120b13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "919173dd-006e-401c-a95c-1f8f6256810d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71ee951b-1f8d-4511-a03a-e845f41d3216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ec80f6e-3b3b-4649-8f9f-2494f1a0770b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da559683-2a29-4778-a560-0785014ceddd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f45023f6-8b82-4efa-b71a-15b3e0c7ae1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93f8afb6-50d0-4767-ad4e-c98cee099eb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dcc42ff9-9626-4726-98c0-54a82740ae39"
            }
          }
        ]
      },
      {
        "id": "236d0195-587c-4d71-b29e-f64039ee91f1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f7a99dec-6d70-4848-ae70-87d951b96a89",
            "name": "Negative Testing",
            "item": [
              {
                "id": "118498ed-64eb-46d4-bfb5-49d4fdc3ac11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e589d358-de73-4a56-9a25-8a6d794065ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dea6025-152b-459c-a0a4-20a2c7dd7e3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6cc7c226-1502-41f1-91d3-4326424b4f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a460c7-8fd5-463f-8bf1-7d47d96eca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e48fca7-0aca-48e9-8f5d-75cce621be61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb8a531a-6bf5-4376-b3b0-a2c1021131dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9df6ea55-f0a5-48d8-94b5-a52868ab9b8c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac9bab98-f451-47ee-8a66-e067c95d5d76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0173666-703f-4d1f-a9f2-91a54fd11ad8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aaccf453-f9e1-4a0e-aaac-f2cca74b8ed8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d92c01c0-eb39-41d8-8c0b-85c3149d8e4d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f19b704-35a4-4378-84ec-23b0946b6b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fa40d52-f400-4ada-9d2b-4dd86c0a1e9c"
            }
          }
        ]
      },
      {
        "id": "4ec94129-8dff-45af-8492-fb65fb611b4e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8cc6c043-d64e-48c4-beff-da8b8c447c23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a2afb9e3-a7cf-4fe2-8b6c-74da8039e00d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddfa7a9a-2620-40c5-b866-3a6bc4edb846",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bcafb7-1f13-41ab-a165-cafa55c9df16",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b4c91c1-f621-4dd5-91e7-c920ce1d707e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3ee2b7-3a2c-4022-9d47-426f16b0e823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4486012-1a45-4b3e-8678-9a499baf11d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1675dc4b-1111-479c-b044-7959cbc325ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36bd05ce-c6a9-4b72-83c6-a153d95e0950"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67a81d1b-61d6-4004-89c1-9c3a396b08f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6a1541c-df74-413f-ae7f-c074796f6680"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "960a4662-870b-4ad3-8410-04f57b7dcc6f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e366283d-172e-4f17-b4c8-c3c1f5e756bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a8f60b37-9884-49ec-93c3-85b0494776f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "244842ad-cb6c-44eb-8663-126cdaad0374"
            }
          }
        ]
      },
      {
        "id": "a5d10cf6-6a22-498d-9958-6c2118e332f6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5e403a0-b18e-46bb-9e8e-a7c3ff5967a0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1b9feb04-21f2-4240-b89e-3ead24cd7b87",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2f80693a-9e1c-4e0a-99d9-308d5013ca3d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7124250b-9fb2-4a18-9e4a-9ae28ccab519",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14cf9bfb-529b-434f-bf8c-edb1802c50bb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 130.9859649122807,
      "responseMin": 5,
      "responseMax": 5743,
      "responseSd": 445.4444102354793,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1710894845539,
      "completed": 1710894892120
    },
    "executions": [
      {
        "id": "2eb32387-9143-4ef9-95e6-eaa00ea812a3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "79ce90b7-e32c-414d-a4bf-0829d8e11cd1",
          "httpRequestId": "7eb013d8-6175-4906-8e79-736ad4fea0c1"
        },
        "item": {
          "id": "2eb32387-9143-4ef9-95e6-eaa00ea812a3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2f2a58d-4c14-481b-b0fc-531c144b3f5f",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "6ee7bc43-b566-4a69-81eb-bc2e7a6aa45a",
        "cursor": {
          "ref": "d085ad41-1ca1-4fa2-889c-53e1e6047c84",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1e5bb686-1d04-4984-aed5-a6cb3418af0a"
        },
        "item": {
          "id": "6ee7bc43-b566-4a69-81eb-bc2e7a6aa45a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9c2ecea1-4a83-4ab4-8980-5c78815b6750",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "4d8c1b67-0bc8-40f4-bf13-b86c8832d787",
        "cursor": {
          "ref": "735f7432-f38b-49d0-bc6f-c286b62c801c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e9aed6db-c390-4926-9d4a-39835579c271"
        },
        "item": {
          "id": "4d8c1b67-0bc8-40f4-bf13-b86c8832d787",
          "name": "did_json"
        },
        "response": {
          "id": "82866272-9340-4fbf-8b56-fb47fd12a8b2",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220842e3-17b4-47c6-b839-dc5e73125b8b",
        "cursor": {
          "ref": "efa28211-c7a2-40c9-98fc-d4e3cbccc309",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b91797b-a856-4e9f-b355-c596915ebce1"
        },
        "item": {
          "id": "220842e3-17b4-47c6-b839-dc5e73125b8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3652187e-b127-498e-aec3-bf1bc860fc93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 544,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220842e3-17b4-47c6-b839-dc5e73125b8b",
        "cursor": {
          "ref": "efa28211-c7a2-40c9-98fc-d4e3cbccc309",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4b91797b-a856-4e9f-b355-c596915ebce1"
        },
        "item": {
          "id": "220842e3-17b4-47c6-b839-dc5e73125b8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "3652187e-b127-498e-aec3-bf1bc860fc93",
          "status": "Not Found",
          "code": 404,
          "responseTime": 544,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67681801-16ab-4ab7-bfab-45e935c80603",
        "cursor": {
          "ref": "cb3bb28e-de80-4e38-9460-89160064f513",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "68d7871f-1176-4dd3-a5ca-d622456b184c"
        },
        "item": {
          "id": "67681801-16ab-4ab7-bfab-45e935c80603",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5ad9dfa7-5ac1-4cae-9951-ec3fd82b1407",
          "status": "Not Found",
          "code": 404,
          "responseTime": 78,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d936c1e9-6bd2-452b-aeb3-819ae92a4323",
        "cursor": {
          "ref": "43f5b8a1-231b-4a4c-9459-52f688eaded1",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d7dcc396-a672-4071-8a2a-73bfa1d54d0b"
        },
        "item": {
          "id": "d936c1e9-6bd2-452b-aeb3-819ae92a4323",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4b83f176-d3a4-44dd-a964-14a0d5a437b0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7cc205-dd81-4931-9276-d4f4b2df8c69",
        "cursor": {
          "ref": "6c77a30e-a456-4b32-929b-34ef639865e7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "71dbc3dc-dbf8-45a2-bc27-0e73892ae7fb"
        },
        "item": {
          "id": "ad7cc205-dd81-4931-9276-d4f4b2df8c69",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4a0fff41-563b-4766-909a-bc413766835a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9e6f7c-3461-4fd6-bb47-843e5c7aaedc",
        "cursor": {
          "ref": "62818494-0338-4191-87de-b6dc5b8142c2",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b2ae7e27-283d-4095-b0ee-600f1f6d4d9c"
        },
        "item": {
          "id": "ed9e6f7c-3461-4fd6-bb47-843e5c7aaedc",
          "name": "identifiers"
        },
        "response": {
          "id": "bb532e39-49d2-4a21-aadb-10ab154bc365",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05227d29-e8d3-4a80-8e3d-29e184782b27",
        "cursor": {
          "ref": "f90f3649-f48b-4fe7-bdcb-000bf86096ba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "51256406-7f4d-4349-968c-861ff744887f"
        },
        "item": {
          "id": "05227d29-e8d3-4a80-8e3d-29e184782b27",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dd6e209f-8d24-46ae-9baf-384ec030976f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c16eed4-3cd5-40f8-b943-a418ee8f67c8",
        "cursor": {
          "ref": "883abc85-b584-43c7-b87e-4466797d4df7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8eda24d2-1e26-428e-8ca4-d3abf8f11104"
        },
        "item": {
          "id": "5c16eed4-3cd5-40f8-b943-a418ee8f67c8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae7dc32a-8fac-4e01-b3b1-2613c539df67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8bf6e73-01df-40ed-82ff-9db5a434a49b",
        "cursor": {
          "ref": "cfe00bfa-e68a-4ad9-b424-cdf05d627595",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7ab14288-4be4-47ce-bc8e-3cfdce289576"
        },
        "item": {
          "id": "f8bf6e73-01df-40ed-82ff-9db5a434a49b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "67335af5-a1b4-4a10-b1bd-6a25481ecb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da101b90-50a4-4f79-b452-66e011ee6888",
        "cursor": {
          "ref": "615b4e51-63d5-4968-bee4-7a00b2310b78",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "539c7731-301b-4a15-8813-368a814edeeb"
        },
        "item": {
          "id": "da101b90-50a4-4f79-b452-66e011ee6888",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4fb6f1be-5ccd-41bc-8493-88d3df2cd5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e57d52-4346-4f3a-bb17-2c1134529b90",
        "cursor": {
          "ref": "97e853d8-2ba6-4137-b99d-1fc2dc921d4d",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "032f6962-d956-42ba-a1c2-9f809d075bd7"
        },
        "item": {
          "id": "05e57d52-4346-4f3a-bb17-2c1134529b90",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "36d8ddc6-1c8e-4f1e-a498-5698b814fd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895c0c17-d2f7-4ff9-8759-381aca7c3a47",
        "cursor": {
          "ref": "0a02739f-40a1-452c-979e-a65f833ca934",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e4fe0d26-3610-434e-b79a-4d1b7be86d70"
        },
        "item": {
          "id": "895c0c17-d2f7-4ff9-8759-381aca7c3a47",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a60cde31-4d06-4f51-bad7-e3bff8fe0ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3aa898-91b1-4d63-badf-83cfea4a6966",
        "cursor": {
          "ref": "3b2e52b2-65c9-4026-be6d-bed42a59298f",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bf18d75-a1ec-480f-a9bf-5d4277cedf31"
        },
        "item": {
          "id": "2a3aa898-91b1-4d63-badf-83cfea4a6966",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "76b805a2-a530-44c8-8efc-1b1a39383fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a475d114-4d01-4c08-9703-7cb3dae5d892",
        "cursor": {
          "ref": "1b6a3f40-dd27-426e-8ca5-c65828419b9c",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a83fe5fc-8309-4ac3-b005-658770741ef8"
        },
        "item": {
          "id": "a475d114-4d01-4c08-9703-7cb3dae5d892",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bd23d4f5-d4a6-4f2a-b9f5-6ae8da29b7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f465cf-a6fb-489c-bc16-54fc4a7c94e8",
        "cursor": {
          "ref": "0853ebe7-893e-4ed1-b7cd-ac4c434f85d8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "00c37562-5d94-4b34-a711-bbb123a4f116"
        },
        "item": {
          "id": "f3f465cf-a6fb-489c-bc16-54fc4a7c94e8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "60ee89be-4d64-41fb-8a9b-91264116d63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b525362f-90e9-4fd6-8437-24f0af605dac",
        "cursor": {
          "ref": "ee4a0c0d-1404-4363-83f8-673a45dcb358",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "39393e31-651f-4deb-aa60-fc4dd61313f6"
        },
        "item": {
          "id": "b525362f-90e9-4fd6-8437-24f0af605dac",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c1c746ed-914b-4c31-924b-21dc099cef51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90dde72-537c-4f90-9e73-1cdfe38775d0",
        "cursor": {
          "ref": "dba1281b-3c69-475a-b838-1f8ca7043280",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7984037-2ecd-47eb-b875-da0d857c8149"
        },
        "item": {
          "id": "d90dde72-537c-4f90-9e73-1cdfe38775d0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "584481f7-d516-43af-8734-c3322c2e1f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edee3199-d198-4539-b64e-58f63c68187e",
        "cursor": {
          "ref": "dc813a25-b423-439d-9c7d-a887baa146c0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "bd2a3a2a-c0b1-461c-8a1d-7708e1add10b"
        },
        "item": {
          "id": "edee3199-d198-4539-b64e-58f63c68187e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d8b81670-3b45-4278-bb2a-32907bda631d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6e3d39-10e3-44f8-b626-470cca4bc32b",
        "cursor": {
          "ref": "d9388457-5aa8-483b-94ce-ce623bf27eb7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6e34e184-c347-40a6-ba05-80c666a07d0d"
        },
        "item": {
          "id": "9a6e3d39-10e3-44f8-b626-470cca4bc32b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "dee779c2-7f6a-4324-b806-0343bc53418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d56b3-955d-446f-b055-3461f0999644",
        "cursor": {
          "ref": "f3f1c5d3-7706-43bb-a1fb-59a6e472781c",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9ad7d0b7-a6f3-423b-815e-06576869d151"
        },
        "item": {
          "id": "619d56b3-955d-446f-b055-3461f0999644",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4413590a-2c77-4d65-b244-1943454cfecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dea788-26c0-41fc-9663-19b6d68be6b4",
        "cursor": {
          "ref": "d641e28a-1c3d-4f46-b903-114ce17f0c01",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e28aeaf8-b7cb-46c2-af03-a6529e74b4a5"
        },
        "item": {
          "id": "99dea788-26c0-41fc-9663-19b6d68be6b4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "81651e7d-ec8f-4c68-9d67-873dea82994f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "732cb410-49af-4c60-a581-ac7fcf1d6bd4",
        "cursor": {
          "ref": "51bb2ff5-e528-40d7-bb22-d2c91753bda2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3c4cc265-d99c-492b-9d94-003261f8fc4e"
        },
        "item": {
          "id": "732cb410-49af-4c60-a581-ac7fcf1d6bd4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "44ac99db-c878-484e-817b-24ddad567dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d423f69-c360-4e9f-87c5-37ae6fc572c5",
        "cursor": {
          "ref": "c7620955-ac30-4baf-a2b8-54baf3d169da",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8c69ad2d-4185-4c62-ab42-49de264bafe8"
        },
        "item": {
          "id": "3d423f69-c360-4e9f-87c5-37ae6fc572c5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a9e169cc-e55c-487a-8c62-13bbc154b7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547fb6b5-6317-4e0c-afa7-4c340b18f6be",
        "cursor": {
          "ref": "68a1699a-aa01-44df-ba0a-95b35c9c2d11",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6b6a7111-c0b6-4b77-90b2-77b3dfad09b1"
        },
        "item": {
          "id": "547fb6b5-6317-4e0c-afa7-4c340b18f6be",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b8c22373-794c-43e6-a679-e6f96a437b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67194244-2925-489a-88e9-fab9b0aa6ed6",
        "cursor": {
          "ref": "2ed8f808-ae44-4aa9-b085-2b2a98e2cba7",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "58a0146a-2997-4122-9a92-f0daec7cd43c"
        },
        "item": {
          "id": "67194244-2925-489a-88e9-fab9b0aa6ed6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "43c9673a-2b3c-4df1-8b10-37c87c153f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46385723-17e3-44d6-b879-ea8fbe570440",
        "cursor": {
          "ref": "0795fc6f-0083-48e2-8fe1-456891b711c4",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d2f7edd4-9668-43d5-96be-0fecf4515c2f"
        },
        "item": {
          "id": "46385723-17e3-44d6-b879-ea8fbe570440",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "315340a5-aa40-4fa1-a5af-c0ec83c037a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077dc06c-b396-4a16-8ec1-d01b95b9dbd2",
        "cursor": {
          "ref": "88a036a7-a94d-4029-b4de-f535e19e7548",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1119ca20-1635-4493-a509-82f77a6dc235"
        },
        "item": {
          "id": "077dc06c-b396-4a16-8ec1-d01b95b9dbd2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "545bb301-d0bf-41cb-b8bd-9ed64716c0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5e93f1-1d7c-4737-b2e4-e1a4790f9b2d",
        "cursor": {
          "ref": "bbb8992e-5b81-4c98-a9cc-55d19c728165",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9f91387c-9c24-4de9-961b-d320521e0489"
        },
        "item": {
          "id": "5e5e93f1-1d7c-4737-b2e4-e1a4790f9b2d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d07579fb-efea-4c29-95d0-7f0267df3d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af23c91e-b302-41cc-9a41-a33a9ca5fd87",
        "cursor": {
          "ref": "5e232629-48d0-4ce8-9cac-2a61f25f35ce",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f9636a42-4fc0-4629-8e2b-3d1ac259ba1b"
        },
        "item": {
          "id": "af23c91e-b302-41cc-9a41-a33a9ca5fd87",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fe63fb9-48cb-4f45-b2fa-078f5e5988b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6266ba7e-08c9-4a51-8126-954adb0d3bfb",
        "cursor": {
          "ref": "a8812fd7-6d77-4666-b69a-63e055019a8f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f17b2703-a478-4dcd-b487-12ef2067f5ff"
        },
        "item": {
          "id": "6266ba7e-08c9-4a51-8126-954adb0d3bfb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0c10cb51-d3fd-445c-9791-cbeea2df357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f737cac3-4d36-46cc-889f-7d81a76f3e22",
        "cursor": {
          "ref": "257a4886-2e06-47ea-be9b-7320fb3d1e16",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7be0d63e-6eef-466f-b685-651945cf41c1"
        },
        "item": {
          "id": "f737cac3-4d36-46cc-889f-7d81a76f3e22",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f34f24ee-daf1-492e-a993-b3d59a8bd774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6bbcce-5786-4317-a87d-f86662803ce5",
        "cursor": {
          "ref": "34b040f4-1dc5-4d30-b39a-6305f25e3b27",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "813958ce-2744-41cf-8c13-c7e78d23bd8d"
        },
        "item": {
          "id": "1e6bbcce-5786-4317-a87d-f86662803ce5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c5e53bd3-b1ac-4b0b-b0ac-1b080891c888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15354ba3-6609-4c46-9988-aacd576d993c",
        "cursor": {
          "ref": "0827687e-2335-4510-a2d1-4a918d9e6fae",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c19a6a77-286f-4264-adf2-b70d3b611040"
        },
        "item": {
          "id": "15354ba3-6609-4c46-9988-aacd576d993c",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8266cdf7-1aa2-4f18-adf2-68e06bc58e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef249b2f-e4b9-4fe9-8f89-585032e105bb",
        "cursor": {
          "ref": "4bba4b88-21be-4a08-9cff-0b4d41d87d96",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "25d75d7d-250d-42d4-9a9d-d0cc34b8b2d9"
        },
        "item": {
          "id": "ef249b2f-e4b9-4fe9-8f89-585032e105bb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "62c1d49a-3507-4360-ae86-4538521cfda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78630bae-4d12-4a55-b71a-92fe2c5cf612",
        "cursor": {
          "ref": "7adc6b76-bb10-4e36-bfcc-6d5a16135dd5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7f1f4271-5f31-4000-a6f4-7814b10471c9"
        },
        "item": {
          "id": "78630bae-4d12-4a55-b71a-92fe2c5cf612",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "df707ab1-0469-4e0f-8727-0fc9d0c1c7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb06956-2675-408f-95f7-0e3fda8300a3",
        "cursor": {
          "ref": "a8d82270-4237-4d90-b979-130f600ce740",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f5065462-1ac0-49c1-9fb9-092919c3fd9f"
        },
        "item": {
          "id": "ddb06956-2675-408f-95f7-0e3fda8300a3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "73dc741e-ee54-4572-b230-198f4cd5a272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1157,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5223001e-4f6e-4e20-8e49-95d368df10a8",
        "cursor": {
          "ref": "a87f1743-6fbd-4948-9622-20fab4b4b1bf",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4103d2d1-d31d-4de5-93c5-5ee2003e87b1"
        },
        "item": {
          "id": "5223001e-4f6e-4e20-8e49-95d368df10a8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4776e40c-8442-43fc-9235-22a73e8f0f4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef99c18-50e0-4d92-9d7e-06b83140be7d",
        "cursor": {
          "ref": "664714a4-9355-4c5f-bcbc-093d0e6c2704",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1ca75162-be89-42d7-9493-5660b5e38834"
        },
        "item": {
          "id": "cef99c18-50e0-4d92-9d7e-06b83140be7d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8f323d0d-476c-4005-8d49-291945cb7231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd65d0e-7531-4b4c-979a-295180607f57",
        "cursor": {
          "ref": "137f7387-cbed-4a49-ade6-0240db8c5d59",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1fe9674c-61b1-4957-b12e-caabb8965ab3"
        },
        "item": {
          "id": "cbd65d0e-7531-4b4c-979a-295180607f57",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8373c4de-763d-435e-960f-d91dc81eec86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6ceef9-7309-436d-9e6b-d913b5992378",
        "cursor": {
          "ref": "84d0b5d9-da0f-4f0a-8607-7d97e702bfe5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dd062c28-32c0-4130-ae1d-1959122eb60c"
        },
        "item": {
          "id": "1b6ceef9-7309-436d-9e6b-d913b5992378",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7fbf55ee-2152-4d9c-b2f1-2ba1aa9e4c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249f5bf8-f12a-42e6-948c-5b1893f551a2",
        "cursor": {
          "ref": "be471de7-bfdd-4c47-a4d3-5023c7699388",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6aca3814-92fd-4b85-a86b-d1d792b45241"
        },
        "item": {
          "id": "249f5bf8-f12a-42e6-948c-5b1893f551a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d867fb5-61bf-4667-82b0-1a91f37b19db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a68415-cd03-42a9-b9ef-e11344458aa7",
        "cursor": {
          "ref": "c8c2c85f-3b0c-484f-9143-ad54d4041936",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "73fe2954-1586-4669-a6c1-1d2cecba7f73"
        },
        "item": {
          "id": "00a68415-cd03-42a9-b9ef-e11344458aa7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7903653a-e47a-4974-a2a5-12f1d79bce1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114a2fe6-f675-4034-9b7f-7981a991a746",
        "cursor": {
          "ref": "0c433e0e-8d9a-4595-807e-3c7f1a84f567",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1af58f70-a71f-4edc-ac9d-ff06abcff43a"
        },
        "item": {
          "id": "114a2fe6-f675-4034-9b7f-7981a991a746",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "52327ce4-52ce-4d96-994c-bde00872b43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959fd3b3-6f0b-490f-9b8d-564322e561a5",
        "cursor": {
          "ref": "5289d9ce-f826-4d30-8e69-c8c34909745f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3082bd25-e4f6-47e4-9b17-12463f6fcffc"
        },
        "item": {
          "id": "959fd3b3-6f0b-490f-9b8d-564322e561a5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c5337ff6-dc78-46ba-a9b6-dc6eb5d159a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b39d22-8ae9-4eaa-ae5e-ffc323381e93",
        "cursor": {
          "ref": "62ca0444-b216-48b3-a6ad-8c187f14ad20",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1b0094cf-4aca-4e7d-bc0b-daaa7755400a"
        },
        "item": {
          "id": "83b39d22-8ae9-4eaa-ae5e-ffc323381e93",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "26f8a84f-440c-4b58-b93e-4afcac855776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362b0f11-9a5c-4c6e-90da-a2748915068f",
        "cursor": {
          "ref": "6af07eed-bc45-4cd7-b6eb-eaab3676593d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e7b5978a-0fb9-4984-961d-3bce5666f05d"
        },
        "item": {
          "id": "362b0f11-9a5c-4c6e-90da-a2748915068f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4cee24e4-2dce-420d-a626-795b3506738b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fca4195-7a5b-4146-91d1-ff2921ec69ac",
        "cursor": {
          "ref": "d1703caf-7582-4bb3-b826-4a2bcf994f97",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f36dfef6-d2f4-4af0-a5a3-d14dd3f042ee"
        },
        "item": {
          "id": "3fca4195-7a5b-4146-91d1-ff2921ec69ac",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d37ebf43-d2b6-49be-9750-4433b204efe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e87cfae-9b7f-41bc-be87-214e77554ca9",
        "cursor": {
          "ref": "ef962b0d-8159-411d-869a-476b8ff91bc1",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8448092d-63f5-4819-abec-8f26d6dbcf33"
        },
        "item": {
          "id": "6e87cfae-9b7f-41bc-be87-214e77554ca9",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8c5fe77b-8802-4e48-9f88-55b8a9e18a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca6688a-7c90-4ff2-b3a3-654072c97d74",
        "cursor": {
          "ref": "1d337cfb-9209-4908-a63f-cfc8c13ec204",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8f3132bc-036c-46b2-89a3-f95ea81a2a26"
        },
        "item": {
          "id": "8ca6688a-7c90-4ff2-b3a3-654072c97d74",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d4d1372f-85cb-4bc3-aa2d-3829e51a073a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1ce032-d193-409c-9cef-e5b06efd53d7",
        "cursor": {
          "ref": "d557f2aa-6e3b-48db-9887-3862b6b4c3fd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b6b92281-a002-473b-8ddc-6acef1d9e5b0"
        },
        "item": {
          "id": "4d1ce032-d193-409c-9cef-e5b06efd53d7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2db5c5e0-2c12-4f84-8018-7e5e540d8326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9895416e-11de-48d0-bb3f-2169d6fa1852",
        "cursor": {
          "ref": "6d00ed59-8442-4599-ad51-3476764ca0e3",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e2eb1eea-181a-4350-ab77-c8ccc4c4280a"
        },
        "item": {
          "id": "9895416e-11de-48d0-bb3f-2169d6fa1852",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0416db5c-f673-4cb3-bab3-3fb89713d01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6fa6fc-8036-4930-8b44-bd3114c5eb4d",
        "cursor": {
          "ref": "fcbbbcd7-82bc-400b-8b41-365658d2ef06",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bc745b4e-7290-449f-a2e5-47880bf839c5"
        },
        "item": {
          "id": "4d6fa6fc-8036-4930-8b44-bd3114c5eb4d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "efcb83f4-3a46-4f1b-9de5-4a8d64950809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e1536ba-6a84-44a1-bdf5-41fc6f10a8c5",
        "cursor": {
          "ref": "505ed890-66e6-4297-b09d-b8998de1e6a0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e6f5574b-bed1-4301-aa48-7a5d41a1c4b3"
        },
        "item": {
          "id": "7e1536ba-6a84-44a1-bdf5-41fc6f10a8c5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0068e871-20ce-415d-8479-f8c4d1e851b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1577afae-b50b-418e-b23b-09fd9e42809c",
        "cursor": {
          "ref": "60da60b1-2d6a-4a68-b2f5-1ce529cbe87c",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bdd5ee16-1634-4597-a6de-96fd30ed59c5"
        },
        "item": {
          "id": "1577afae-b50b-418e-b23b-09fd9e42809c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "930a8d68-1abd-4e2b-b79c-2c394aad1ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9a160f-3b78-4aa1-a45a-b287cc68f6e3",
        "cursor": {
          "ref": "01db225b-5913-4532-bc38-475944fcf3aa",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "40c258ce-cd90-4245-9647-6011496abf03"
        },
        "item": {
          "id": "cb9a160f-3b78-4aa1-a45a-b287cc68f6e3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c44058f8-b5b6-4208-9995-d6438971f244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83146518-b2de-4dbd-ba25-6e4c2b271f4f",
        "cursor": {
          "ref": "1c669611-23ac-4675-9b0a-5ec5ca3c9a12",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "82f41d46-21c8-44ed-9901-8e05aba8cfab"
        },
        "item": {
          "id": "83146518-b2de-4dbd-ba25-6e4c2b271f4f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f0a2c4fa-3d9a-4a3f-b4e5-e1c403441595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d281c2f-92a2-439c-9af4-03dd91b2f357",
        "cursor": {
          "ref": "881f25a9-5633-4dff-9a91-d61e0caf7f42",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3c2cde11-d431-493c-8ff4-5dea5a6720e4"
        },
        "item": {
          "id": "8d281c2f-92a2-439c-9af4-03dd91b2f357",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c44b9cbd-4f95-4ad1-a4d7-1066aed068fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bdada1-e7cc-4e09-bbb8-78c390d50e83",
        "cursor": {
          "ref": "96e7b0b7-15e0-425a-accf-882584c49240",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "18fe8486-078c-4e4e-a12d-b3efa00048a1"
        },
        "item": {
          "id": "33bdada1-e7cc-4e09-bbb8-78c390d50e83",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d38a0ea2-655e-4ebf-a1b3-14ab0045a153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe40f8a-dbec-436e-b627-c73f5ce86468",
        "cursor": {
          "ref": "c7b65f43-ce12-4831-b8c5-75cde1c1d781",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "adbb676b-a376-4bfe-99d9-5aca344eac6e"
        },
        "item": {
          "id": "ebe40f8a-dbec-436e-b627-c73f5ce86468",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1f5cda1f-9376-4f92-a191-e8b914420a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3bdcd7-3a0a-4e7c-a7c8-a47b380095b2",
        "cursor": {
          "ref": "5432f991-a566-4f19-95e3-e6ef8b27e577",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e3594251-a94c-4666-a211-cb183141f4ab"
        },
        "item": {
          "id": "8f3bdcd7-3a0a-4e7c-a7c8-a47b380095b2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da449ae5-db8f-4df5-b193-b05029ce4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283abef0-b519-4142-a872-c77275452c2d",
        "cursor": {
          "ref": "b008592a-d982-4559-86af-f51eba1ac025",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4bf758c9-cfdf-45ff-9ae5-01d4c4d536b5"
        },
        "item": {
          "id": "283abef0-b519-4142-a872-c77275452c2d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "93db79c0-26f6-41d6-ad9a-3acc0dd76919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae216b8-fdd8-4696-afee-b87b07877263",
        "cursor": {
          "ref": "d969f04a-f105-4efd-bd53-359de69a68e5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "82db4703-54fc-400c-9d31-5161bf671c2a"
        },
        "item": {
          "id": "8ae216b8-fdd8-4696-afee-b87b07877263",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d573bbdb-5188-4e6f-bde1-edd211356c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1427b3d-65b7-40a3-ab15-6dd1dc0b7932",
        "cursor": {
          "ref": "43b63809-a9f4-4dbe-abd5-586574a19301",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7dc637a6-d9db-4589-b0c6-05df22fcd1b7"
        },
        "item": {
          "id": "f1427b3d-65b7-40a3-ab15-6dd1dc0b7932",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1c8fc128-a429-4701-b5c9-2692d2ee337e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5bb8c7-03e8-4f3b-b91c-7ac18f8b4fec",
        "cursor": {
          "ref": "fe91e326-3bae-4868-bafd-ac7ef3403857",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b9c2897d-e1ea-4938-bb98-e1dca1ff791f"
        },
        "item": {
          "id": "8e5bb8c7-03e8-4f3b-b91c-7ac18f8b4fec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9110fa7f-19b0-47c2-9eaf-9824e2d7030c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e28954-3b64-441a-965b-5816b9d87dc2",
        "cursor": {
          "ref": "cc7ae23a-4ccd-4c99-8677-dc309b636c77",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "77fcbeb6-e7e6-449d-b498-f4e406cb3e3e"
        },
        "item": {
          "id": "d4e28954-3b64-441a-965b-5816b9d87dc2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3da4431c-6ec6-445e-a16f-d5f3cd35d560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 172,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a625b7-4403-43d4-8cab-b5fa4f184622",
        "cursor": {
          "ref": "5a55d7d1-7926-4cbc-a073-14cb917f1141",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8b4dc469-07d7-4976-abfe-b7880b6bd518"
        },
        "item": {
          "id": "20a625b7-4403-43d4-8cab-b5fa4f184622",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e17ffd0e-5667-4eb1-b79a-2e307bc53c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d397d6-5860-4e1e-9356-47143d26f61a",
        "cursor": {
          "ref": "8ead7a36-9f49-4c56-8143-4cfabd74febd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6662c494-7310-4d38-a46e-5f33b3cbeba5"
        },
        "item": {
          "id": "f3d397d6-5860-4e1e-9356-47143d26f61a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "96d31586-1973-44fd-a6fb-6423a07a21bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7cede6-8d66-4e20-8213-da766ec60f0b",
        "cursor": {
          "ref": "7f732493-58de-47f8-a651-5fd62b42a0f4",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c71076ef-26e1-44a0-81da-03f00344919c"
        },
        "item": {
          "id": "ef7cede6-8d66-4e20-8213-da766ec60f0b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a8cac201-6867-4ca9-be38-329608a51af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770d9295-5a5c-4133-9f32-a80e4e180683",
        "cursor": {
          "ref": "175e830c-1d74-4a32-909d-23f8b2c77c9a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "61eb557b-b798-4cc8-b8ba-2fa7d5050eaa"
        },
        "item": {
          "id": "770d9295-5a5c-4133-9f32-a80e4e180683",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ad64a022-f56c-427d-aafe-fdc7092875e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8541a78c-54ba-4fbf-91c0-b93801fc4b02",
        "cursor": {
          "ref": "a2710248-51c5-452e-9bc9-6b5629858f33",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "aaa56b36-1a04-43fc-991a-bf75ccff3a33"
        },
        "item": {
          "id": "8541a78c-54ba-4fbf-91c0-b93801fc4b02",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "822c625f-bc83-4223-8b31-177e8c259795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3915c926-6e6b-44bb-a015-7eb508b650c4",
        "cursor": {
          "ref": "6693b464-5b8d-4403-9d6f-2b434edd8518",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "86fef0ba-3d76-45f9-b4de-f038460350df"
        },
        "item": {
          "id": "3915c926-6e6b-44bb-a015-7eb508b650c4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "99698d14-5130-4d5a-8446-b96222685c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0645ab88-b53a-4cb5-a279-8374aa1c7c9c",
        "cursor": {
          "ref": "3d1f7353-4c74-4d24-8031-b52ba68e8fc7",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db0d4924-7fa1-451f-a04b-9cdd67eb2b85"
        },
        "item": {
          "id": "0645ab88-b53a-4cb5-a279-8374aa1c7c9c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3fbb7017-5cfe-46c1-a5ab-ec1207d82242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611ab72f-8fd8-4cf4-a987-a5167cfffd33",
        "cursor": {
          "ref": "86e806e6-6abd-4a6d-8335-2d83d7ed8e50",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9780c464-b8d1-4e77-8153-d3130a36962a"
        },
        "item": {
          "id": "611ab72f-8fd8-4cf4-a987-a5167cfffd33",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cc7f9132-bcef-4220-8bcf-f372e1e8f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851c7dff-0c5a-4612-9310-4f8e0a6562d5",
        "cursor": {
          "ref": "75dca5f7-4f15-4d3d-b834-2532b07c60ce",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "685e56f2-7b42-4b1b-aec4-931fdee427d6"
        },
        "item": {
          "id": "851c7dff-0c5a-4612-9310-4f8e0a6562d5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0fb86378-6db9-40c9-9b90-33dcedeeeac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f01049c-bf12-4ed0-8743-b1c2d955489c",
        "cursor": {
          "ref": "0a9b1cd6-eda8-4e25-9b8f-f7606db838af",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bc33c746-bc3f-43a4-b522-796fbf61d19d"
        },
        "item": {
          "id": "0f01049c-bf12-4ed0-8743-b1c2d955489c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bb6c9a9f-e880-4947-844a-85854e6fc6b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3c62fe-d2ff-4e92-897d-c5c094e9fe75",
        "cursor": {
          "ref": "e0c416e7-1532-4405-8ba5-818d94217a25",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "68a90375-7d69-4e3c-b63f-c0e3e6141870"
        },
        "item": {
          "id": "8c3c62fe-d2ff-4e92-897d-c5c094e9fe75",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1fc28328-2abc-44b4-a65e-f97d210f3bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca1e9cd-d74e-48a1-9f26-15fd257caa9c",
        "cursor": {
          "ref": "e4a60cb7-c95b-4f7a-937f-4c1692df099a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d8bb9563-f546-4903-bc34-e675558875b1"
        },
        "item": {
          "id": "0ca1e9cd-d74e-48a1-9f26-15fd257caa9c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ce94852c-117b-4868-bfcb-141eb70c8e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5e512b-7824-4cc1-8e70-2f9957bee964",
        "cursor": {
          "ref": "e804a4a2-7430-4ea8-a27c-7fec4a019c6a",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1e4492da-b4d7-4e56-ab08-39177f56da98"
        },
        "item": {
          "id": "2d5e512b-7824-4cc1-8e70-2f9957bee964",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b57714cf-7ed3-43bd-bf5f-c861c53d3e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d4e2b2-9a79-4836-adcb-e750bb7b7d0e",
        "cursor": {
          "ref": "0ccbc08d-9f01-496e-a0b3-6a753741ce33",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "804ad11a-1b19-4745-b280-a4db85e40024"
        },
        "item": {
          "id": "83d4e2b2-9a79-4836-adcb-e750bb7b7d0e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "82dd8b60-90b1-46f0-b2ef-5e4d6c88b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107d3e94-bc27-4b6f-a6ac-2046d0af743e",
        "cursor": {
          "ref": "5080810b-c5e9-4efc-9e4b-4a3a744af891",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "624748ae-6fc5-44e8-aecd-60a99971122f"
        },
        "item": {
          "id": "107d3e94-bc27-4b6f-a6ac-2046d0af743e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9cb49f0c-17bb-46f5-a73b-ca4af1db1494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84565767-82a1-4db5-8834-3c71b9576871",
        "cursor": {
          "ref": "356de2c9-9b21-45ea-a15a-a610fc74ba73",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3d8429f5-ab26-43c0-b05b-35f66047f674"
        },
        "item": {
          "id": "84565767-82a1-4db5-8834-3c71b9576871",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2b15a2e8-d61e-417b-baa7-ec7cf868c9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a243e147-34d0-4eca-8669-fcc2f5163b9f",
        "cursor": {
          "ref": "e64dd7f4-aa08-4b6a-a45e-d20f54ccdc7d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d4458059-f732-4e98-8903-c4a45396be14"
        },
        "item": {
          "id": "a243e147-34d0-4eca-8669-fcc2f5163b9f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "148df6e1-edee-46fd-a230-b10de08e4ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c45b5b4-7b6c-4e29-9605-c5bb0a622222",
        "cursor": {
          "ref": "e6243b76-128f-4e5e-900c-c85737274046",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "99a249ae-26e2-4010-8852-ce2668ae0915"
        },
        "item": {
          "id": "0c45b5b4-7b6c-4e29-9605-c5bb0a622222",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "28138bda-05cd-4666-b777-463f7dc7d8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4044c3e5-e395-4389-94a1-327025cdc2bd",
        "cursor": {
          "ref": "bc37c5cb-1746-4e16-9383-a61d30e93e8b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d58af470-fa4c-4f64-ba5b-5384b386e3ee"
        },
        "item": {
          "id": "4044c3e5-e395-4389-94a1-327025cdc2bd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9e8479c8-6f1f-46ff-83a6-920e61b2e7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024a51a-8066-4da4-8215-bf067b2a60c1",
        "cursor": {
          "ref": "07a3fe21-fe84-482f-8125-deabb58bc9d7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ed3a5252-2c14-45d7-a3df-c984737fa429"
        },
        "item": {
          "id": "f024a51a-8066-4da4-8215-bf067b2a60c1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5be2ff6f-bc94-43f0-9e88-753a471c76cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a3a42f-db37-4460-a5a9-f28111aa774f",
        "cursor": {
          "ref": "63182a6e-3699-4bbc-b13e-a474dc6d29f1",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7d56aee9-48a1-46a1-93e1-308d23c14b60"
        },
        "item": {
          "id": "67a3a42f-db37-4460-a5a9-f28111aa774f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e56d054a-5c72-4f37-aeda-c71916fda874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b3a6e4-94af-449c-8360-478285d6ce64",
        "cursor": {
          "ref": "557bf5d7-3be2-4e08-8396-571bcc8a7bfc",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "65cb1617-f98a-48c8-9192-9894df91c0be"
        },
        "item": {
          "id": "f3b3a6e4-94af-449c-8360-478285d6ce64",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b644126b-a55f-4746-a45f-421e175b04a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741c4bbc-3552-4bb9-8ecb-b95c3371f6ff",
        "cursor": {
          "ref": "5a185240-0a5a-41f7-9dbe-21fbbaafcac0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "93481a5c-4ac8-490d-82e6-63334f50d3b4"
        },
        "item": {
          "id": "741c4bbc-3552-4bb9-8ecb-b95c3371f6ff",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a494a385-7c38-4dfa-b895-af6f10237081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "544c9d43-5158-4536-b6f7-cee7babef860",
        "cursor": {
          "ref": "7f19e938-c636-4d04-9024-8c97b3022c40",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f7d0da62-9281-473f-af21-28b228e97c4b"
        },
        "item": {
          "id": "544c9d43-5158-4536-b6f7-cee7babef860",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7e778aa5-dcfa-4901-a575-24010c20ddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a72e2a-cc9b-443b-b2ac-223fcbc237cf",
        "cursor": {
          "ref": "a5a8c8f7-45d0-4d50-bdb0-51888db538aa",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "2a723317-4993-48a2-84aa-bf88ce5ed655"
        },
        "item": {
          "id": "24a72e2a-cc9b-443b-b2ac-223fcbc237cf",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0f7c33c2-18d3-4629-88c1-59afd047fabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5deafd-90b6-4368-96ba-f5ecba49ae55",
        "cursor": {
          "ref": "d037ce0c-14c8-456f-9762-dc35dcef378d",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "8e0f0d5c-1b1e-4f6e-89bc-a49a30fd5569"
        },
        "item": {
          "id": "0a5deafd-90b6-4368-96ba-f5ecba49ae55",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4709c7f-d6f7-43c7-9cc4-426ab0159bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e32ea6-1b28-4960-a351-e79b83562f1e",
        "cursor": {
          "ref": "91bb36f7-48b8-48d5-99ad-1ad1a1a85d29",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a0c099b2-3d4d-4d72-a15a-7cb5e00bc20e"
        },
        "item": {
          "id": "a5e32ea6-1b28-4960-a351-e79b83562f1e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1d304071-ea70-4b48-b36f-a7411beed36e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879bb725-b301-4b07-847f-5ce837d1343a",
        "cursor": {
          "ref": "6cd1ba27-bb8c-4038-8033-76deeb4f8ab4",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd6e4b5b-9fba-47f7-a999-08fb5ce77f81"
        },
        "item": {
          "id": "879bb725-b301-4b07-847f-5ce837d1343a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7e559580-08fb-420f-baf7-0667307be6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1645743-2026-458c-8299-834e1a0d63ff",
        "cursor": {
          "ref": "8ddb298e-f1aa-4073-98c1-7ae59840f675",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "05493a8b-5c1b-40af-899b-1a2c86f0078e"
        },
        "item": {
          "id": "b1645743-2026-458c-8299-834e1a0d63ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e462a898-5cc6-45f8-824b-303c240abf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94622f24-2d00-47a2-ad16-8104c63f9b32",
        "cursor": {
          "ref": "6bf16544-11c0-4a04-9e48-6f880fa31f25",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "79617ebf-745f-4284-a912-a88b7c07db37"
        },
        "item": {
          "id": "94622f24-2d00-47a2-ad16-8104c63f9b32",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12ad6ce6-9dc4-48c4-848e-a2eda0a223c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239e39c-083c-4c28-9512-12afe6ad3f6c",
        "cursor": {
          "ref": "81edf7e5-505b-4aed-ae54-5f945b45e682",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ecc60980-8522-4032-9ebf-e9a9a7ede7c9"
        },
        "item": {
          "id": "3239e39c-083c-4c28-9512-12afe6ad3f6c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "41d73e98-586e-4dad-bfe2-5c4f084918dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e7922d-2cf4-42bf-85e8-2533468edd0f",
        "cursor": {
          "ref": "33d386a5-57d8-489a-9069-70732f86d1f5",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "41c6e8dc-5b43-486a-84c2-ba20b5fdebab"
        },
        "item": {
          "id": "a4e7922d-2cf4-42bf-85e8-2533468edd0f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee51473d-8295-4b94-8270-82e496dfac11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e805f138-75ba-43c5-9f79-54b57b7ef22c",
        "cursor": {
          "ref": "c94d3d5e-f2a5-4a94-b8ac-6fd0eea87859",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b0156306-605a-41aa-a9b8-69c2c2edd108"
        },
        "item": {
          "id": "e805f138-75ba-43c5-9f79-54b57b7ef22c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "db3bce18-43e2-4f5e-945c-2a0c82e9f4d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c618115a-b22d-4abb-99f5-d8c42fc55ee1",
        "cursor": {
          "ref": "c2fd023b-faa6-497e-a63b-e5d91216260f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b8bb9265-ab53-4605-8900-819218614156"
        },
        "item": {
          "id": "c618115a-b22d-4abb-99f5-d8c42fc55ee1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "271fad02-74c9-4e75-a4b9-b352b6538f9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76e6237-d245-4388-9d97-10607b63b736",
        "cursor": {
          "ref": "040955b7-1712-4537-b35a-8ff1393dac7d",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e4966e44-4ad4-4a4d-b0f7-b578159cff15"
        },
        "item": {
          "id": "c76e6237-d245-4388-9d97-10607b63b736",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "43e8f201-bb67-472b-aa4c-d9b1d1a85101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ce4c0165-e76f-41a8-952e-17968fd0b749",
        "cursor": {
          "ref": "e2bba0df-70f6-4db3-9d7e-ba8fdde910c0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "51f93b90-5bae-4e37-b980-de234a4042c3"
        },
        "item": {
          "id": "ce4c0165-e76f-41a8-952e-17968fd0b749",
          "name": "credentials_issue"
        },
        "response": {
          "id": "86ce606d-f838-4b26-98ab-4c3b2ba9c0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "eff95cdc-5705-4319-b1a4-d9bdf34355ce",
        "cursor": {
          "ref": "d8d75a5b-26a8-4aca-8463-2a1aa02a4e95",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fc1aa059-cca9-49fb-8669-affc4ebadf19"
        },
        "item": {
          "id": "eff95cdc-5705-4319-b1a4-d9bdf34355ce",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b16e53b3-3dc1-4c16-9df4-4b4cc9767349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0ff8446b-8a84-48e9-a279-3d044dc7a036",
        "cursor": {
          "ref": "939b1495-e5f3-4b10-a2aa-5e11b94d6ef0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4f7671c3-58f4-4e6b-8817-a88195afada1"
        },
        "item": {
          "id": "0ff8446b-8a84-48e9-a279-3d044dc7a036",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0e586fb2-4c8b-4bee-a4e5-9c5769ab8aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3b1ed106-b050-44ff-a77a-55915bcc25eb",
        "cursor": {
          "ref": "db37818a-1bc3-43fb-b96f-8f55b5ae3e9e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "478cf5ef-4450-4bb5-ba2a-d977684b8dd4"
        },
        "item": {
          "id": "3b1ed106-b050-44ff-a77a-55915bcc25eb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7799cec3-07ff-44ea-9b3a-2ad01ab41938",
          "status": "Created",
          "code": 201,
          "responseTime": 5743,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb252d2-4c61-43e0-b6f9-934243bb1d1b",
        "cursor": {
          "ref": "935e90fa-40d3-4b9e-ade1-62fe0467486f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7ae124a3-d8f0-4a1b-9f5b-14cf56641908"
        },
        "item": {
          "id": "bdb252d2-4c61-43e0-b6f9-934243bb1d1b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0cca51e0-4aa6-4476-897d-337d9f2541bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "49bde8e2-3c00-43e0-9b7f-f4c89e943b5a",
        "cursor": {
          "ref": "ddebe000-5d53-4066-a7c9-61d13d77ebf3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "92f85185-433e-46c5-961f-6c899ff2ceb3"
        },
        "item": {
          "id": "49bde8e2-3c00-43e0-9b7f-f4c89e943b5a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7d5b7140-8b9d-4a27-83e2-246a7f0af5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a4056223-39ef-4f12-8471-7f29f20a3c89",
        "cursor": {
          "ref": "1b346f37-acef-4e1b-bcb9-c2b48f592ddb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b628acff-3ac2-48af-af13-df0ae9debd7c"
        },
        "item": {
          "id": "a4056223-39ef-4f12-8471-7f29f20a3c89",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8ccf801f-980f-48ce-9cdb-23930383bca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7add6393-a81d-42af-ad98-a85bd7b179e8",
        "cursor": {
          "ref": "f2d54270-b18b-4fa5-83b9-84e15ce23fac",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c3917679-068b-401c-bf8f-78bfd5e6df3d"
        },
        "item": {
          "id": "7add6393-a81d-42af-ad98-a85bd7b179e8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d495d7d0-de46-41e5-8b8f-a6606194e450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd207a1-dcbe-42ef-87bf-b9538b7490c4",
        "cursor": {
          "ref": "287b8a5a-8ed5-4a1a-9e59-0f34dcec9726",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "116f1c57-0b59-4109-9325-039704c52de2"
        },
        "item": {
          "id": "8cd207a1-dcbe-42ef-87bf-b9538b7490c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cdcdf1c7-5ec7-4f2f-9462-8bb4f8085c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049515c1-b97f-4e72-b52f-fc46277f996a",
        "cursor": {
          "ref": "c88e97e3-019a-4f69-8df9-bf4a9fd26b5d",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7442980a-fd43-449a-b69a-763f90a87e5b"
        },
        "item": {
          "id": "049515c1-b97f-4e72-b52f-fc46277f996a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eb4868af-3772-44d8-944b-7a3db2cbdef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec77b876-2dc8-4f3c-a4f8-35259668f29d",
        "cursor": {
          "ref": "986334f8-00e0-4a3e-8124-d35d88a5eff0",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "94f62836-197e-42f6-b97f-797d4b57545b"
        },
        "item": {
          "id": "ec77b876-2dc8-4f3c-a4f8-35259668f29d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7205aca8-7bc7-408d-aa76-4c7eff95f9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7492d2e6-43e6-47a4-8e55-1f51aa7ba49c",
        "cursor": {
          "ref": "ba35ba19-d4c4-4000-90b3-d8c0b8972be7",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6b2cba5a-e433-4ba4-adf8-c7d8d84732eb"
        },
        "item": {
          "id": "7492d2e6-43e6-47a4-8e55-1f51aa7ba49c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "917377c9-dd66-4937-858b-5d98d6a3db99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59359139-ef7c-46b5-860e-bab24172bae8",
        "cursor": {
          "ref": "7efbcb23-8650-4bab-b6d7-dae8442b39d1",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "165f9c29-cbe2-4f8b-9794-a7b1f38625a6"
        },
        "item": {
          "id": "59359139-ef7c-46b5-860e-bab24172bae8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0b75ebb8-b2c5-4fff-a7b8-bf57f4bacdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e81814e-1dbf-410e-bb16-559932d76623",
        "cursor": {
          "ref": "6f634487-889c-4bd3-aa8d-ef368a67d2b2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f971ad40-d7c3-4c45-a7a2-baf3685ce8eb"
        },
        "item": {
          "id": "8e81814e-1dbf-410e-bb16-559932d76623",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e48f787c-9521-488f-b9f2-82bae20756b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5fdfa5-4853-45ca-8290-a9272c4cf65c",
        "cursor": {
          "ref": "00cf32f2-b098-48de-96a7-d877c52e8242",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "25d8af70-1403-436b-973e-ef9498e77460"
        },
        "item": {
          "id": "6b5fdfa5-4853-45ca-8290-a9272c4cf65c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "010031de-7b0d-4013-9836-d9b8d064670c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37803ca-5956-4569-8fea-83dabe66717e",
        "cursor": {
          "ref": "b02d3fb2-74e5-497a-9b3d-fb3583ec6f46",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "6157c536-c5d9-421f-a086-f39458bb2905"
        },
        "item": {
          "id": "a37803ca-5956-4569-8fea-83dabe66717e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "63161079-9ea1-460f-acef-3db8d11a9504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a258e331-54a7-4048-b7b3-34137ee1a53c",
        "cursor": {
          "ref": "6c9de431-ccc3-449a-ab7b-18a579e9ea3e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "27857523-f359-4514-8197-b9a0307409d5"
        },
        "item": {
          "id": "a258e331-54a7-4048-b7b3-34137ee1a53c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b687b3fc-2f8b-41e0-8359-0d9e30ec4b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b8372b-7683-4266-b6dc-10f3fed48114",
        "cursor": {
          "ref": "80fda551-4be2-4118-b30f-ebb7494f15a7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "98e527f5-06af-4bcf-b2a6-f281810f9267"
        },
        "item": {
          "id": "e4b8372b-7683-4266-b6dc-10f3fed48114",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bb95306e-fcce-4533-8731-18725331ec34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb92fd7-ca7b-42ee-a781-5f280aa7e2ba",
        "cursor": {
          "ref": "bb8e2340-9944-468f-8aa8-7c10d7742762",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4ce86d7d-c5a8-4321-8d81-5d77f80c24f7"
        },
        "item": {
          "id": "9fb92fd7-ca7b-42ee-a781-5f280aa7e2ba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a9ddba1a-9bec-486d-acca-3b438765c5fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83343b75-6449-4165-85c5-8881d8c43e12",
        "cursor": {
          "ref": "0eb2ad25-8b52-4224-905b-4ce38bfe5cf3",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3b410b4c-2d9e-48ab-aaf1-1aeac74b08df"
        },
        "item": {
          "id": "83343b75-6449-4165-85c5-8881d8c43e12",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3e86af97-2204-42c4-ac71-c0f1c976bdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1d46af-3c86-4144-832a-fe61db12180d",
        "cursor": {
          "ref": "23aabe7a-24fb-4fab-8a65-10e37d4d1564",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "34d9f444-ec0f-4071-a016-d2ebceb21e48"
        },
        "item": {
          "id": "1d1d46af-3c86-4144-832a-fe61db12180d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2bc3c257-79f6-4b01-861f-9878e6a707b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac419070-71a3-4087-92d9-e981cc248576",
        "cursor": {
          "ref": "efd30f7e-2327-454d-841a-b2ee6d5387f9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "82112075-43ee-4a46-8ec8-a1afa0cfe24e"
        },
        "item": {
          "id": "ac419070-71a3-4087-92d9-e981cc248576",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "15861c3b-6027-40a1-b969-a120b8f3f078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9868797f-e581-4482-9c97-37fb1b460900",
        "cursor": {
          "ref": "c9c37349-de2e-4698-a0a7-6a4736dc5136",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d690ef68-7553-4a54-b41c-d3d33fe1c1e8"
        },
        "item": {
          "id": "9868797f-e581-4482-9c97-37fb1b460900",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d5bbfeaf-754e-4189-b013-aefb159cf28c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 532,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "de00213d-4006-4d3b-a898-7fffff2269ab",
        "cursor": {
          "ref": "736e797d-d9da-4bc0-8aa2-472c05b3f4b1",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9bc5dde1-c87f-4842-bc65-e96b0e5a70e9"
        },
        "item": {
          "id": "de00213d-4006-4d3b-a898-7fffff2269ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "96de8fe7-1c76-4e06-854e-da14414fd4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "834ad1a3-884d-46cd-b5e0-6eb53fc6afac",
        "cursor": {
          "ref": "e7250bd4-07e7-440a-91de-2308400cce5c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "912821b5-2bf5-4cb0-b690-74e07fafa339"
        },
        "item": {
          "id": "834ad1a3-884d-46cd-b5e0-6eb53fc6afac",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d30e94f1-df64-401f-bf6f-e579bb3a2dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a956f9-209f-4916-9c7d-4d006b2ac48c",
        "cursor": {
          "ref": "6cef2d0a-4e66-4673-9675-5f3bacf4a0c2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "423c4e33-cea4-4e89-bc90-112f2a73e870"
        },
        "item": {
          "id": "a1a956f9-209f-4916-9c7d-4d006b2ac48c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "53aa2680-5a31-4d24-b472-c0c392100460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf9c586-7fb1-46e5-bd7a-cec64918e4a4",
        "cursor": {
          "ref": "9e3f8350-2270-456b-817d-33f363f7cee5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1fde923f-e99b-4c32-ba62-5ab76a4b5b1a"
        },
        "item": {
          "id": "aaf9c586-7fb1-46e5-bd7a-cec64918e4a4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4e7f771e-117e-4a5f-b718-31cb3f63a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed54fdcb-9eeb-45c4-a24f-04c50b770421",
        "cursor": {
          "ref": "f2343590-0af2-4dcf-adea-7dfef25b8044",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6b4b588-12c6-4cf3-96dc-102978205c55"
        },
        "item": {
          "id": "ed54fdcb-9eeb-45c4-a24f-04c50b770421",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "97f1f378-34d2-404a-b351-492688da42bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452b2622-0694-4cf0-be02-4661566bc4f6",
        "cursor": {
          "ref": "8d2df6b1-0691-44d2-9df2-a26ae3451643",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "93ffffce-a48d-41a3-98b0-c2aafcf93c3d"
        },
        "item": {
          "id": "452b2622-0694-4cf0-be02-4661566bc4f6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3cef02df-4da7-42ae-a9b2-e52436fafce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "291b9bfd-5d00-4373-9535-841f9addc1a3",
        "cursor": {
          "ref": "71c13b84-2a72-4142-913d-795348cc08e1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "93de436f-af56-4f43-a44d-1c69a5e1370b"
        },
        "item": {
          "id": "291b9bfd-5d00-4373-9535-841f9addc1a3",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ee0c35c-6966-43ab-84c4-320950fc26d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab11f49-349a-4c42-8fd2-cbca532917d3",
        "cursor": {
          "ref": "f05c7843-6f89-40d3-9830-9c2f9b5f7b7e",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d43a3cd8-caf6-4de3-b7e2-537b4540b2c3"
        },
        "item": {
          "id": "aab11f49-349a-4c42-8fd2-cbca532917d3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fb6fd5c8-bcd4-4242-b0db-6a660ec8ade7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "cf74956f-ccf9-43c6-bcd5-481fdd11a4ca",
        "cursor": {
          "ref": "a08dbbee-0bed-47af-8c34-4a55ec5a2575",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ce6e5fcf-6514-4392-8046-ac40e6b185e5"
        },
        "item": {
          "id": "cf74956f-ccf9-43c6-bcd5-481fdd11a4ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9e36d9d1-e900-4042-b4a5-79289d2d53b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c53b6-80f0-4c82-96d9-13ab2d91d2c2",
        "cursor": {
          "ref": "3b78e906-9498-4bbe-b124-55ea8d0b19d5",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "df31bcfd-5bab-451e-9657-efabbea8dc1a"
        },
        "item": {
          "id": "625c53b6-80f0-4c82-96d9-13ab2d91d2c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b49d1f0-157b-4871-9270-00228cfe51c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e367060a-7360-489f-9949-9bce18937c79",
        "cursor": {
          "ref": "ae8cb1f6-5722-4e1a-affb-ac83386bd1ca",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "046f67a0-f3f3-46eb-b3fc-125d66c40826"
        },
        "item": {
          "id": "e367060a-7360-489f-9949-9bce18937c79",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d18dd067-ea7c-463b-9d96-6071eb6b1b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a4f636-5299-4283-8e0d-85c58fed4509",
        "cursor": {
          "ref": "a7f33f9d-643c-4fce-b34c-60b8715dd9a3",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3d1e3a1a-4779-4033-9acd-5c67cddec12b"
        },
        "item": {
          "id": "45a4f636-5299-4283-8e0d-85c58fed4509",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2d5cf1b6-7ae1-41a9-aff8-397173cd1780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c01787f-c561-4c1e-b5fa-71b1a0dc84c3",
        "cursor": {
          "ref": "394c7330-1882-4807-9216-9688996bae17",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "df19c046-f38a-4f29-b1a8-f6a8aa310691"
        },
        "item": {
          "id": "4c01787f-c561-4c1e-b5fa-71b1a0dc84c3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "829f573e-8a45-47c0-8228-b73124e03841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e561cb-cda5-49cf-82d9-0d83fc71b00c",
        "cursor": {
          "ref": "8d18f8ee-7d75-4b5e-9aac-d5e0abea35cf",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "94bbf04b-769e-4b18-9a73-d39a5e8654c4"
        },
        "item": {
          "id": "95e561cb-cda5-49cf-82d9-0d83fc71b00c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dfb0cdbf-3d46-4e99-a4c7-587a63c042d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df4f656-6dcf-4b47-ad53-3babd7ca2afb",
        "cursor": {
          "ref": "3a4f99e6-7776-4c55-9872-98491557ce04",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "18f28d51-c437-4595-9d50-f7eed0ca8cb1"
        },
        "item": {
          "id": "8df4f656-6dcf-4b47-ad53-3babd7ca2afb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4ea53322-de2c-493a-a13c-cb7f0d4cff5d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 154,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "74e8f78e-9230-480f-a8e9-b1c5ce9d8a6a",
        "cursor": {
          "ref": "975da154-4181-4120-a68c-595f912af1fe",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ab0df4a0-d438-43b1-9f55-a90c624ccd12"
        },
        "item": {
          "id": "74e8f78e-9230-480f-a8e9-b1c5ce9d8a6a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fda56a42-e046-4475-a1cc-1f266acc5d3d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3392ef-d334-4e7d-a4b5-38eb5b3a574c",
        "cursor": {
          "ref": "18694d47-45c6-4c67-8b3d-3dc9d34df00a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "18171f32-34fd-482e-9b7d-3afeb3a3fed5"
        },
        "item": {
          "id": "cb3392ef-d334-4e7d-a4b5-38eb5b3a574c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6837fed7-17c3-45f1-a3b0-4afd455adcf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7e877f-0bf6-4b22-9bf4-505e0e1cdccf",
        "cursor": {
          "ref": "ac76f2ce-5acf-40f1-9223-40a05bb38458",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c07a1799-e8ef-4295-b0da-fb656f098801"
        },
        "item": {
          "id": "9a7e877f-0bf6-4b22-9bf4-505e0e1cdccf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0fbc51b7-2ef4-4e74-985e-dd3fe0666618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691952b3-b66a-4a37-ae10-8c87433103d6",
        "cursor": {
          "ref": "fd80a623-065d-4e44-9952-76af656b7949",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "aa5f8aaa-77ab-4aeb-b896-7b8e36c23d94"
        },
        "item": {
          "id": "691952b3-b66a-4a37-ae10-8c87433103d6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f3ae3380-b675-4eea-87a4-f5174a231816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8ed21d-2e84-48c9-b4fd-401a577840be",
        "cursor": {
          "ref": "b0fb772e-2a18-4a06-afcc-637959795a9b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "86a2373a-58e8-4a0e-90ac-bd2bde52ee49"
        },
        "item": {
          "id": "1b8ed21d-2e84-48c9-b4fd-401a577840be",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "54273b2b-ff5d-47a0-8206-8f857ba9d237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f47cbe-10e1-4e9d-af34-b2b0978b9372",
        "cursor": {
          "ref": "42b317d7-aee8-4356-9385-38621f58b91f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7b0129b3-95cf-4f59-a16b-2dfa41d5fb6b"
        },
        "item": {
          "id": "d8f47cbe-10e1-4e9d-af34-b2b0978b9372",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2ec8a3f1-00e1-4dde-b290-3b792e90bd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacd9805-5877-43ab-99d4-9e5012c18ab5",
        "cursor": {
          "ref": "e54c5ca3-99cd-4b55-8628-7ac62843079f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c93d6bfa-6db9-47de-bd5d-767da207ebf1"
        },
        "item": {
          "id": "cacd9805-5877-43ab-99d4-9e5012c18ab5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c6ea63f4-481f-408d-bfec-32219d069d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69850ad1-7398-4a9c-99ec-dfa70ee2f822",
        "cursor": {
          "ref": "6dc660d7-c77e-459d-a69e-fa33bde505cb",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b6d6895a-74d2-4e19-897b-baf8743b7e42"
        },
        "item": {
          "id": "69850ad1-7398-4a9c-99ec-dfa70ee2f822",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ce44f43-7d88-4a01-8272-e7bd66ee6cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24bd1374-0811-4bda-8092-cc3350110d7a",
        "cursor": {
          "ref": "70e93aaa-41c7-45c5-b7c6-93be77efeac8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b12186af-19ed-4ef0-a1d2-1487a6072230"
        },
        "item": {
          "id": "24bd1374-0811-4bda-8092-cc3350110d7a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bace8393-d40c-4957-ba03-e8dadbaab609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62198e65-c0e2-4d46-ba26-2c1ebdb89408",
        "cursor": {
          "ref": "3d5012a7-0684-465f-8294-063b8edd42c5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf897cd2-82d0-4c55-9f9c-77da5477f1d6"
        },
        "item": {
          "id": "62198e65-c0e2-4d46-ba26-2c1ebdb89408",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "22a82ebe-ad3a-4caa-a8e0-f2a05e20d44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "764b48b7-0761-46f9-bbd7-429186cf5a16",
        "cursor": {
          "ref": "5ea7b3e4-3cf7-44c3-b9e2-4a8cc0307d9c",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4bb9d742-1a17-40b7-8c8f-b0abe698a485"
        },
        "item": {
          "id": "764b48b7-0761-46f9-bbd7-429186cf5a16",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "07831e0e-3733-49dc-9cb2-7873c5274017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a59cc8-d33d-4589-ac1d-3f4a55d04e26",
        "cursor": {
          "ref": "0c8cb63b-a439-4ff5-b6a2-756a6afa8561",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "69bcb52a-f08a-4d61-b16c-a92989db7e1e"
        },
        "item": {
          "id": "a3a59cc8-d33d-4589-ac1d-3f4a55d04e26",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "375b5029-67c6-4d45-b6f1-70164dc1b491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560c01b4-b438-4e85-83e6-60fb80a7d089",
        "cursor": {
          "ref": "cc308896-22d8-495d-9af8-30b0f248f376",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a463fd8e-439c-44c3-95c0-a515bde83d14"
        },
        "item": {
          "id": "560c01b4-b438-4e85-83e6-60fb80a7d089",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1cc97b1a-0312-4e38-9bc6-cfec7583b9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec6df5f-e17a-4750-be01-ce5932a8224a",
        "cursor": {
          "ref": "e01a808a-aeea-44b6-bcf3-0fd3eb1b959d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6c31b08c-a1ee-4786-a303-526ef12464f9"
        },
        "item": {
          "id": "0ec6df5f-e17a-4750-be01-ce5932a8224a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "154a0d5e-a5cc-4e07-a23c-aa8ad3d3ed97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb4e88b-a3b0-4862-a600-4e59dbd2604b",
        "cursor": {
          "ref": "5d02821e-095a-4e86-95fd-506becc5ade7",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a2f50d82-38c8-441a-a0d9-bc5329533a92"
        },
        "item": {
          "id": "edb4e88b-a3b0-4862-a600-4e59dbd2604b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "add45eee-043f-410b-bda8-b177e671799a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8466c6c3-61bc-4ff5-85ea-46cc60654b2c",
        "cursor": {
          "ref": "11fa3c12-039f-4757-b8c8-ff9e95e6a448",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "502f8a66-2f63-414b-bd13-aa6ed74c64d8"
        },
        "item": {
          "id": "8466c6c3-61bc-4ff5-85ea-46cc60654b2c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d8ef2e17-1110-4e6e-bfbe-910d225e94e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09842a25-9d4a-4f84-b868-09b1c7c80186",
        "cursor": {
          "ref": "a3bcdfc1-067a-44a6-b956-32ec8e6096d6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cb80c635-b2a3-470d-ac1e-8068da8c3384"
        },
        "item": {
          "id": "09842a25-9d4a-4f84-b868-09b1c7c80186",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1d0c4e87-2b5b-452d-a723-7e6f0d6d6951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821ac023-d499-43f6-8bbe-eac7ffc973d2",
        "cursor": {
          "ref": "681647ad-26bc-4100-a51d-289d5e122c2d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b2639769-5f2a-450b-a696-5a2d26e04fe1"
        },
        "item": {
          "id": "821ac023-d499-43f6-8bbe-eac7ffc973d2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "000eb6cf-3dbd-42c4-a0c5-d3e96b5e8a93",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "93ad0547-a7dc-4805-a214-8ac40bbe5dd7",
        "cursor": {
          "ref": "6ebe345c-b754-498f-aa72-d77f5cdb6f19",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "05cfabae-be8a-4e81-b4f5-1a86cb9307a9"
        },
        "item": {
          "id": "93ad0547-a7dc-4805-a214-8ac40bbe5dd7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f20e25c1-864e-4690-b6ef-f769a23ff471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59a3007-8e51-4bab-a22d-b2b202e7c688",
        "cursor": {
          "ref": "ec9b2d02-a700-47e2-8976-2b51c34cf81c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "febbb473-fdef-42f6-ae65-6d680d49797b"
        },
        "item": {
          "id": "f59a3007-8e51-4bab-a22d-b2b202e7c688",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0d8af03f-3447-4bc0-be64-a5a2112cf798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfd8b19-42a6-4e84-891b-9257cf95d9f6",
        "cursor": {
          "ref": "4337f695-864e-4090-96de-cb5e7ae949bc",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8219de67-b398-47a1-a082-7fbd25703d42"
        },
        "item": {
          "id": "5bfd8b19-42a6-4e84-891b-9257cf95d9f6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "184bdcb4-a729-4cce-a508-490a4f5b7685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974adf33-1c63-4903-9019-7d9de0c7fe52",
        "cursor": {
          "ref": "9e2ab35e-e97e-4d7d-8319-b0391a981ef8",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "070cde87-835c-4f4a-95e0-d9301af2412c"
        },
        "item": {
          "id": "974adf33-1c63-4903-9019-7d9de0c7fe52",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fa23e58e-2a77-4af0-a170-b286fad52c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ccd27e-28c3-4574-9b64-a09367d7de9f",
        "cursor": {
          "ref": "b7d1fc76-8f7a-48b0-962f-e6080abc64fd",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e02fc57f-9f7d-4b6a-9108-215639a5464e"
        },
        "item": {
          "id": "c3ccd27e-28c3-4574-9b64-a09367d7de9f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d5d174c-a7e4-4d89-ac06-540a2060d1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede95c3f-bc94-4ace-b3a8-c9ee626412bf",
        "cursor": {
          "ref": "575e1ec6-49b7-4f63-89b8-478ff86a2730",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4678aaf4-6cc6-400d-b72a-3ec1b8827073"
        },
        "item": {
          "id": "ede95c3f-bc94-4ace-b3a8-c9ee626412bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0f2e47cc-1939-44c7-8e7e-2c6e0913560a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bffaa7-36c9-42f5-b926-f2b439e6b044",
        "cursor": {
          "ref": "a947a2d0-10fb-4e81-abb0-ae694c3f28a8",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "800b67da-5b82-4a27-a9b9-1709f55cf729"
        },
        "item": {
          "id": "87bffaa7-36c9-42f5-b926-f2b439e6b044",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a5020d7-52d9-48e0-8619-8164fda05748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223b5ee3-8c93-4011-b856-bb8209bdf29e",
        "cursor": {
          "ref": "0aa87798-77bb-4a1e-a5cd-8effbd361b51",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bdff5f29-b8d6-4b17-bc59-81a3aedb933b"
        },
        "item": {
          "id": "223b5ee3-8c93-4011-b856-bb8209bdf29e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d084678f-fa7d-48b5-8258-a2d2101e0681",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "fa2010ae-831d-45f5-8000-0a9d701ed884",
        "cursor": {
          "ref": "52b01c22-6ba8-4c7d-ac52-9c6393efd500",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a074d942-e870-4506-9173-aa99b3062c83"
        },
        "item": {
          "id": "fa2010ae-831d-45f5-8000-0a9d701ed884",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8803d0d0-5c54-4d04-aa9a-6c291407cb13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f53ca-7526-47bd-a866-49418b5e7c9b",
        "cursor": {
          "ref": "629decba-ad71-4846-a1e7-3c35b88de52a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "40650ca7-372d-4a29-8730-eeadd872234b"
        },
        "item": {
          "id": "572f53ca-7526-47bd-a866-49418b5e7c9b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ef62c088-d448-4a42-800f-eb602be11c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64c15cc-4e71-486f-903a-96c9ac180ab4",
        "cursor": {
          "ref": "40e50a04-dfdd-4af8-ba45-d697492b1e62",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6fb09103-d6f7-4485-851d-325afeed0310"
        },
        "item": {
          "id": "e64c15cc-4e71-486f-903a-96c9ac180ab4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb03fc2f-3b81-401c-b329-e6bccbf7b7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3423583-90a4-42a5-b9d2-41ebec94fc09",
        "cursor": {
          "ref": "1c773847-a66f-4712-99e8-1890aad754b4",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "beee72b8-38e9-4084-a078-6a6062151e4b"
        },
        "item": {
          "id": "b3423583-90a4-42a5-b9d2-41ebec94fc09",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "395aadc5-d278-4b2d-ac86-94937232a635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d41fc0-6c95-4d9e-94e3-6becad53138b",
        "cursor": {
          "ref": "223e79a2-08b3-4d14-b07c-88e7d8b3da29",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "cda691b1-446f-478e-86a8-f2a23eb176e0"
        },
        "item": {
          "id": "75d41fc0-6c95-4d9e-94e3-6becad53138b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b6c2162c-4a96-4fb4-8f01-b2f16212056d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da3193c-e1a2-4046-9d46-4707687795b2",
        "cursor": {
          "ref": "5bdb23b4-335c-4448-ab62-da463cb16658",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "cae441b8-4975-4c41-9721-5898f6ece823"
        },
        "item": {
          "id": "9da3193c-e1a2-4046-9d46-4707687795b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2b4c0f88-84cc-4809-aea0-e1ec874648cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0029fdaf-b544-47a2-aed3-565307ea3434",
        "cursor": {
          "ref": "83104fba-b2d0-483c-909d-45c6d8211444",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "35045ca1-0eb7-48c3-9522-70b31231690b"
        },
        "item": {
          "id": "0029fdaf-b544-47a2-aed3-565307ea3434",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "68980221-bcb9-4138-8040-13dfe5bf8fc6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 961,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "6296478d-cfb8-4a80-8a1c-3c62c353825d",
        "cursor": {
          "ref": "85aad487-1f37-46a5-b050-d6c3b024bcf1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "62b4154f-8b72-48bc-9da4-3cad82ea3292"
        },
        "item": {
          "id": "6296478d-cfb8-4a80-8a1c-3c62c353825d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1ad45f47-dfaf-4992-a7c6-c4b88fcb4c3f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 82,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "94eec27f-b119-45f7-8824-3b4df07238ae",
        "cursor": {
          "ref": "13881975-7dda-4eff-99c4-3a7d53eb35c1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "64d5235e-9c33-41e8-9ad6-572163355ed0"
        },
        "item": {
          "id": "94eec27f-b119-45f7-8824-3b4df07238ae",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9cc05628-3862-450a-8b36-665bc0e03df6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 84,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "e2e778d2-c6cf-4f18-a7d1-3abdf227c372",
        "cursor": {
          "ref": "06460b4b-58b5-4376-a5af-b054a5e6cf39",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d9d07977-6a7a-4379-8997-9f6e8cbdc63e"
        },
        "item": {
          "id": "e2e778d2-c6cf-4f18-a7d1-3abdf227c372",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fb92c42f-6999-4112-abf2-ba5a5b894555",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "79dcc578-778b-48d6-a5fe-eb4e96b28543",
        "cursor": {
          "ref": "3a74dca7-e8b3-4bab-8a15-a4ad16a828a3",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "08acf930-4bfb-4239-bc5b-fd1f3dd897da"
        },
        "item": {
          "id": "79dcc578-778b-48d6-a5fe-eb4e96b28543",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "328aa462-d8e9-4718-9b1d-27fc82c2f8cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "476309ea-4ecf-4fab-886d-3dcd5e37c0fa",
        "cursor": {
          "ref": "17c8156f-8e05-407d-9178-4312fc18b401",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0589149c-de69-4a1b-9133-976af276a832"
        },
        "item": {
          "id": "476309ea-4ecf-4fab-886d-3dcd5e37c0fa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f9848bd1-8151-40d8-9a84-41d19e0fd791",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 78,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ed39d3ae-576a-49a8-ba74-05d67d026b5a",
        "cursor": {
          "ref": "f49667b5-aafe-469f-9594-d35c46e45eee",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e058547d-68ac-4af0-b757-c3143158ce31"
        },
        "item": {
          "id": "ed39d3ae-576a-49a8-ba74-05d67d026b5a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e9814c76-8541-46e0-821f-173e0e572f10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef1ad89-7399-4f67-8836-c787d0bf75b4",
        "cursor": {
          "ref": "68343f4c-35eb-4998-a324-fc1267034589",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f84a21f-566d-4ef2-b644-21962b58f1f2"
        },
        "item": {
          "id": "1ef1ad89-7399-4f67-8836-c787d0bf75b4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff5017b3-1203-4557-96cc-2cacdd3f66a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60060ec7-f81d-4b76-9cfd-ae7a27ee22b1",
        "cursor": {
          "ref": "9fe91242-b8ed-4088-8659-40668baac180",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f866f17f-0b64-4169-9b21-e98884f23a88"
        },
        "item": {
          "id": "60060ec7-f81d-4b76-9cfd-ae7a27ee22b1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9812ed65-aef7-416d-a685-3a02e08430ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778f96c4-790a-48fd-bfff-7b35255ce022",
        "cursor": {
          "ref": "a29f38c0-811b-4fb0-a034-b34c3dd9c8fc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bd741c73-1ea7-4375-b079-8ae67dcb8415"
        },
        "item": {
          "id": "778f96c4-790a-48fd-bfff-7b35255ce022",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7928b840-035a-4c29-9229-e65f732a1808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642dfd17-41df-4a5c-bcd6-2d2795d6032d",
        "cursor": {
          "ref": "113ddbf5-dba8-404a-92f7-65275095dc14",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8658945b-534c-40a5-a21e-d62d507c8788"
        },
        "item": {
          "id": "642dfd17-41df-4a5c-bcd6-2d2795d6032d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "027f4755-f65d-404b-bfe0-98e20ee4cde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e882f156-fdf7-451f-b29a-c38688aca0a3",
        "cursor": {
          "ref": "bcc95bf8-5130-4f71-ab5c-73ea10e0cfb6",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "7cf84540-7752-403a-ba39-334a5c47dbbf"
        },
        "item": {
          "id": "e882f156-fdf7-451f-b29a-c38688aca0a3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d1913635-7d68-433f-a8de-e50d104a5915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e046c9b-03da-4150-bc2d-f83efd178152",
        "cursor": {
          "ref": "e90edbcf-74e0-4b47-a637-9a67ae607a17",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4fc9fe8e-6fa3-4dd4-bb25-6bbbac1090aa"
        },
        "item": {
          "id": "9e046c9b-03da-4150-bc2d-f83efd178152",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "6d4d3c0b-50ec-455e-9f29-087ee1518f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101f7225-5c4c-40e8-b785-9bbb4f0be9af",
        "cursor": {
          "ref": "24985d1a-d19e-4fb9-bc05-eca66ca81c98",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e26ca0b0-4461-452b-8da0-8b5bc7f1479c"
        },
        "item": {
          "id": "101f7225-5c4c-40e8-b785-9bbb4f0be9af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce800ca6-253a-44ea-84ce-19274bee198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db33f88-5205-431b-b21a-b4ee5cd0ee14",
        "cursor": {
          "ref": "a29238c2-ea80-4979-9c9f-3a8c96e35310",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "239bdb70-c698-4575-8fbb-374845431c74"
        },
        "item": {
          "id": "2db33f88-5205-431b-b21a-b4ee5cd0ee14",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ff5085c6-ed18-4eb1-ac06-89d4901795b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ebf54-2330-4df5-b380-4b01c4499bbb",
        "cursor": {
          "ref": "239b441a-661a-43d0-906d-bc7c1b9a38f3",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "fe8a21ee-c940-48c9-99fe-6939bf6e62ba"
        },
        "item": {
          "id": "835ebf54-2330-4df5-b380-4b01c4499bbb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "99bdf8fe-7c03-4235-af8c-3823b159c78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaaff4f-289c-47f1-a829-839acb3243f3",
        "cursor": {
          "ref": "c4f4816b-aeb6-4c80-b315-f4f57d0a8fa6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9811d3d9-ff9b-4189-8471-aa1351d72228"
        },
        "item": {
          "id": "bdaaff4f-289c-47f1-a829-839acb3243f3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e151074f-dc53-4eb7-b462-e11c4617d5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc6628f-f3cd-4528-9840-a608d8a9d843",
        "cursor": {
          "ref": "9787c6eb-83e2-44c0-be9e-60929b11a050",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "257ded24-2e11-4951-82e7-c2c37ae92225"
        },
        "item": {
          "id": "6bc6628f-f3cd-4528-9840-a608d8a9d843",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4e011c06-34b9-4ade-8c30-582ccfd5e3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10915155-c10e-4530-88b5-629f0f69a32d",
        "cursor": {
          "ref": "6819fde4-678f-4583-a1b5-756435457e52",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "17974a6c-a02b-408b-abbe-ce6961a43e89"
        },
        "item": {
          "id": "10915155-c10e-4530-88b5-629f0f69a32d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2512fd91-2d41-4d7c-a15c-1a83a766971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491da6f2-1a9e-48ea-8bb3-2cd2d57d96f9",
        "cursor": {
          "ref": "15462f55-9930-4ca2-accb-c3d7de60c0fb",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2649e16a-740d-442c-b6e8-a1c6ad81cd5b"
        },
        "item": {
          "id": "491da6f2-1a9e-48ea-8bb3-2cd2d57d96f9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e2746454-69e5-47d7-a866-41557c74b33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec8bdd0-e337-448d-92bd-629acb3a18a6",
        "cursor": {
          "ref": "02fad15c-8bda-417e-bc40-aa381201b857",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "020b9238-7c83-449a-9cb6-2385384d350d"
        },
        "item": {
          "id": "cec8bdd0-e337-448d-92bd-629acb3a18a6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1486de1a-1757-47f0-9cd6-e6695a520cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08b6a03-8fe2-4b0e-ac05-af430ff00433",
        "cursor": {
          "ref": "750bdc72-48ff-4f3c-abef-912d2f0e74be",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "18f8cf8d-70bf-4171-bbb7-804e32b116fc"
        },
        "item": {
          "id": "d08b6a03-8fe2-4b0e-ac05-af430ff00433",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0eb4cbea-aa41-42e5-aed2-e248619eda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3cb978-5fc3-40cb-a27c-999e6eb959a1",
        "cursor": {
          "ref": "60d14fc8-4a19-4701-be63-ee87ebf44348",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d799fb7a-ac99-4a34-9649-c29ff0a5ab16"
        },
        "item": {
          "id": "8f3cb978-5fc3-40cb-a27c-999e6eb959a1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7869b23d-09ea-4319-b7dd-a6ba657ebea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad58c990-837a-43c4-aec2-9339f7229e28",
        "cursor": {
          "ref": "375811f5-4d28-4459-a86e-d6fc554b8939",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "02f7c30f-7f2e-408a-a194-c0119046b95a"
        },
        "item": {
          "id": "ad58c990-837a-43c4-aec2-9339f7229e28",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3bc16da4-95ed-412f-a953-507ca5ef8cc6",
          "status": "OK",
          "code": 200,
          "responseTime": 119,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6b2dec08-acea-4ec4-b4d1-e76bb9548283",
        "cursor": {
          "ref": "44274b70-be5b-4135-a8b5-1b2350d083a3",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0b6e04a8-b554-4ecc-beea-9b26b780f595"
        },
        "item": {
          "id": "6b2dec08-acea-4ec4-b4d1-e76bb9548283",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4e96fc70-f916-4b11-98ee-079227565295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92ba281-8c85-46d7-badf-8a1a2707ff93",
        "cursor": {
          "ref": "e0ddfd68-dfbf-4c82-8ad0-4a48d6637dc1",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "95906842-2488-4040-acbc-bb6686460c19"
        },
        "item": {
          "id": "b92ba281-8c85-46d7-badf-8a1a2707ff93",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "32020660-1f7e-421c-a994-19620be9c2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 675,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc6edbd-f059-46ab-a247-9bb96421cf92",
        "cursor": {
          "ref": "5564c9d8-ba0d-491b-975a-b7fb6a50647f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "73ada812-4fe7-45eb-ae6b-ee34379149fd"
        },
        "item": {
          "id": "9fc6edbd-f059-46ab-a247-9bb96421cf92",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3fe6ac23-c43c-4c96-af96-738173673a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7804602d-d678-408e-b486-8301d0861bed",
        "cursor": {
          "ref": "83ecc502-2995-4da9-9e86-b331cbcb9381",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d69069d6-2975-4278-ae57-a406790304f0"
        },
        "item": {
          "id": "7804602d-d678-408e-b486-8301d0861bed",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6aea8b3e-6ae4-4942-8ccb-229fbdcb5a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2b8d57-ecaa-436c-a006-3a35cb03b636",
        "cursor": {
          "ref": "067290c5-5c98-42ad-8db7-8de6cce20aeb",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b0b99641-de99-440e-9d1e-5c4f6bd5a527"
        },
        "item": {
          "id": "7a2b8d57-ecaa-436c-a006-3a35cb03b636",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "64e0a318-f459-45cc-a29a-6f6555328ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b55122-3d59-4e79-9e4f-82214ee3c3db",
        "cursor": {
          "ref": "11ade6a4-3244-4fb9-b989-f12af8ad9bf4",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "21a989fa-b574-49e7-9df5-28187f6bb392"
        },
        "item": {
          "id": "94b55122-3d59-4e79-9e4f-82214ee3c3db",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26349b84-3d26-4787-bac9-fb0c9b003e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55108b89-2778-46b6-990e-1e6a4b0078f8",
        "cursor": {
          "ref": "4ee524f1-ae69-465f-b73e-843ef47c10d8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a83b543b-bf15-4fc2-a628-15dfc71b05a3"
        },
        "item": {
          "id": "55108b89-2778-46b6-990e-1e6a4b0078f8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f0c23b77-ada0-46fa-b81d-b1945bfa851b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adabb604-7d55-4d7f-9c9d-8eae11afbd1e",
        "cursor": {
          "ref": "f17d9920-ccc6-41fd-81f6-6edbbbb3adde",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9706394f-6854-4642-a566-415ed537f3b6"
        },
        "item": {
          "id": "adabb604-7d55-4d7f-9c9d-8eae11afbd1e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "09a51c46-7287-4c03-8e31-4fbfd7ad0524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c816a45-ea0f-4a1d-bd5a-45726566fc9a",
        "cursor": {
          "ref": "563df6a4-339f-470b-bed1-becab0f890ab",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "94c3acb8-b353-4164-98d5-b8f8729569de"
        },
        "item": {
          "id": "1c816a45-ea0f-4a1d-bd5a-45726566fc9a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "570e2201-d43c-40a3-981b-66161f90390e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8df2cc5-7180-4cf8-a9a2-16ac721683ee",
        "cursor": {
          "ref": "67cdc395-c800-48bd-9dcc-fbf45c175511",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6156a233-7a4f-466d-b8e0-e4da0295cc69"
        },
        "item": {
          "id": "f8df2cc5-7180-4cf8-a9a2-16ac721683ee",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "98cd9f66-93ff-43dd-9758-db2bebf36d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf7e7e4-04a3-4ac3-8a5f-dfad9c9700e9",
        "cursor": {
          "ref": "9e07b38c-547b-48ae-9400-8e64ea2e3adb",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b35e01cb-0324-4509-a40f-98f9c58e6feb"
        },
        "item": {
          "id": "eaf7e7e4-04a3-4ac3-8a5f-dfad9c9700e9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9e8e3788-31b7-4c8f-bbc4-e72725340220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f239bc-09cc-40f6-ae76-cfdc638dd64e",
        "cursor": {
          "ref": "3733b103-498e-4217-9a64-ff7925ab66ca",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "12582853-bb31-4ea7-8b10-6fb201972e76"
        },
        "item": {
          "id": "02f239bc-09cc-40f6-ae76-cfdc638dd64e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8ce12b07-98d9-4689-91d3-9b8afeff69c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52ad467-39b5-44a7-a6ce-0559c2d0c10e",
        "cursor": {
          "ref": "c58ca1b1-9ae9-4552-8b71-679cc912fbd2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce0affee-05ee-4cf9-bbbb-4925fc8bd5c5"
        },
        "item": {
          "id": "a52ad467-39b5-44a7-a6ce-0559c2d0c10e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "205043dc-73e9-42d8-bf10-5627e1d6d2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb095a-1366-497a-b9fa-3fb31ac758dc",
        "cursor": {
          "ref": "443c62fd-a54b-48ba-bd28-d3c6bb234592",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b1c1c264-d6ad-48e1-afa5-dde410876f2f"
        },
        "item": {
          "id": "62eb095a-1366-497a-b9fa-3fb31ac758dc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "be21b3cc-cd6e-4891-9ba2-d8eeaf01cd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc578c08-670d-4e15-b057-6b32f01fa9ac",
        "cursor": {
          "ref": "2380b207-f830-4475-99dd-af291805eafe",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3aae1963-6725-4637-acc7-65d8dfada817"
        },
        "item": {
          "id": "cc578c08-670d-4e15-b057-6b32f01fa9ac",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "189e4997-d97f-457e-a57f-8fab7f3e505e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e32d188-1e1a-4265-98f6-fb9d754aed69",
        "cursor": {
          "ref": "34b821a8-c120-4f7a-8731-71e4cc299dcd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "409268d2-66f6-4b95-b1fe-bc1a5211413b"
        },
        "item": {
          "id": "6e32d188-1e1a-4265-98f6-fb9d754aed69",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8d6400bb-a1ba-4b4a-8cbf-582f8dadc8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94bbd637-f913-4331-bf95-43a23b13e803",
        "cursor": {
          "ref": "acacc35f-d87f-4d3f-996f-807d6e1937a1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "89d9a5ae-8028-45f5-856b-783119c781c0"
        },
        "item": {
          "id": "94bbd637-f913-4331-bf95-43a23b13e803",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "57eaf0f4-04cb-4d99-9d6e-78aa894c53d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cada7fbf-f2dd-4d14-a19d-fbf200d35fd0",
        "cursor": {
          "ref": "4069337b-9c49-4577-b7cd-180c7ed721a0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6ca5bd27-d4a1-4ec1-bad9-d165da2a76f2"
        },
        "item": {
          "id": "cada7fbf-f2dd-4d14-a19d-fbf200d35fd0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ddf85895-a79d-4f81-a08d-ff4853316833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2104b9-351b-4f36-a821-20c91e0abb4f",
        "cursor": {
          "ref": "b2448f12-4832-4aa0-8b0b-c17733a2fb5f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1ba9df37-f7a0-4e86-8d1c-fb32c825c3d0"
        },
        "item": {
          "id": "ee2104b9-351b-4f36-a821-20c91e0abb4f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d1d52c97-7ff3-447d-98b7-318d0515a7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0235b4-fd6f-450f-a6d6-cd48b4ef1757",
        "cursor": {
          "ref": "d0213918-d3d2-4122-8314-24045f9d804e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "752d92ab-4196-4622-b9d3-4a90afe1185e"
        },
        "item": {
          "id": "8c0235b4-fd6f-450f-a6d6-cd48b4ef1757",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9f4e2a5c-c804-4772-944c-1f2fff9c3546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09e0947-7c1c-4543-a4ce-08831583651f",
        "cursor": {
          "ref": "67fffaa2-f62b-43b4-85bd-89f962efdc15",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "287bf096-4a10-40c6-8a40-c8b571735024"
        },
        "item": {
          "id": "c09e0947-7c1c-4543-a4ce-08831583651f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c5f65fc0-4400-46ee-bbe1-233471adfdc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06bd10d9-7144-4670-8a09-2c638d38917d",
        "cursor": {
          "ref": "1fdef41c-abb6-4ae8-8670-9f1972fca021",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53ed1ffa-c4f0-4e44-8b61-6bf29ce6a00a"
        },
        "item": {
          "id": "06bd10d9-7144-4670-8a09-2c638d38917d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3a85c787-af46-4dfd-973c-d686de7b8bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616d3800-7b7e-4583-9e81-1cf2c90c9b86",
        "cursor": {
          "ref": "09126dd9-fb70-4e0e-860d-196d74d2c5c1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6e8009d4-b333-4cd3-ac88-80a761768b79"
        },
        "item": {
          "id": "616d3800-7b7e-4583-9e81-1cf2c90c9b86",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "48b025ea-dbcd-49c9-a22e-d493ac8e7642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88bcc78-ed6d-4726-9518-8d0645997876",
        "cursor": {
          "ref": "2e5454eb-387a-49a7-a6b2-123a99ad1b82",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1cba5c9d-ca46-42cf-90b5-394fc4d7f22c"
        },
        "item": {
          "id": "f88bcc78-ed6d-4726-9518-8d0645997876",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "baf9ed38-2fd7-44e5-a275-a263da028cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e69466-75dc-4ff6-86c9-9b984b8ce975",
        "cursor": {
          "ref": "644a3fec-8c69-4718-ab8d-99da9dcadb88",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c232d7c4-a891-4433-b311-8609661dde38"
        },
        "item": {
          "id": "f9e69466-75dc-4ff6-86c9-9b984b8ce975",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4d87fe52-34a9-4495-811a-50cd4ba663e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac3e938-5ad9-4722-839a-9d4ce2c54bc8",
        "cursor": {
          "ref": "03b29433-6a9c-491f-8648-5c374aab7a53",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f88749b4-ba20-4dce-ac33-2a9ca071b4f1"
        },
        "item": {
          "id": "eac3e938-5ad9-4722-839a-9d4ce2c54bc8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9104fb50-58f9-4a9a-a84b-3ef0317a724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f406f2f-32d2-4d0a-a486-cb773374fbb2",
        "cursor": {
          "ref": "9cd068db-7a0e-4443-a967-94098b32d4f3",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1c396e5c-833f-4ea8-82ec-b41133712537"
        },
        "item": {
          "id": "8f406f2f-32d2-4d0a-a486-cb773374fbb2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6056ed20-eadd-4b89-8f50-a7f8337bd1f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa551e96-1788-4971-9e86-9aa330e90045",
        "cursor": {
          "ref": "2ba41b33-d27d-429e-b503-fe5d46c02bcd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "01a7c36c-cddd-4463-b05f-48836a3be2f9"
        },
        "item": {
          "id": "fa551e96-1788-4971-9e86-9aa330e90045",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "175d5dbb-a496-491c-9b75-09e0533a2a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403fc683-143e-43d1-a9a4-049360f67d74",
        "cursor": {
          "ref": "e14bed8a-2985-4073-81b3-ea248ac9c8e0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cdb664ac-5a16-420e-b6d9-4cc45e9871ec"
        },
        "item": {
          "id": "403fc683-143e-43d1-a9a4-049360f67d74",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "33174fea-1b96-4b3a-87e3-9d5c3da45b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce5f71-6649-410d-ba16-6a4bd3c5312f",
        "cursor": {
          "ref": "e88d2cc8-7a87-4562-81fd-d7b1af40b6b7",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8d516d87-d786-45ba-a724-54a5132e2a1a"
        },
        "item": {
          "id": "94ce5f71-6649-410d-ba16-6a4bd3c5312f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a8859745-b62b-4e93-8b07-4f3dab5ad5c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7631b0-7ad2-491e-ac6b-ea0693def616",
        "cursor": {
          "ref": "76bbcb02-0284-413e-a2ac-61ad6dab1f40",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "482bedfe-a8f6-4520-b1d3-131e3f13edda"
        },
        "item": {
          "id": "4b7631b0-7ad2-491e-ac6b-ea0693def616",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6fb79c0b-84d0-4651-baf7-4226436f6407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9620a9b2-a604-49f3-95cc-6ab104143e28",
        "cursor": {
          "ref": "c9a40443-635a-4f97-ac68-0adfd3ba7f31",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "5c90a82a-6b2c-4475-a56c-8d1a986236a0"
        },
        "item": {
          "id": "9620a9b2-a604-49f3-95cc-6ab104143e28",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "38cc0de2-26fb-4990-af2f-e8c1f0bc202c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69b0c7-f3fc-439f-9430-9b8e56dd7dc2",
        "cursor": {
          "ref": "a1a5a378-b84b-45b6-ac98-e081244f3c69",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8887c9b9-412c-471f-b1f3-2a5f1e5f705a"
        },
        "item": {
          "id": "3a69b0c7-f3fc-439f-9430-9b8e56dd7dc2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "22f3da7c-2571-4bf6-ada0-03aa2a482462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220d40a1-e2d3-46ee-98f6-07a1ae7bd5b0",
        "cursor": {
          "ref": "08280975-1670-416c-81a8-3049e8facd84",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7ec88906-93d0-4c31-b9ab-e40483e834e1"
        },
        "item": {
          "id": "220d40a1-e2d3-46ee-98f6-07a1ae7bd5b0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2b13f9dc-341d-439e-af34-8d7acdf38f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38092143-d75a-4087-b5c7-0124b991eab4",
        "cursor": {
          "ref": "df3f4ac1-7f48-4825-9241-5a0d3b720f88",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7cb495c5-6612-4beb-a7c2-607132b76173"
        },
        "item": {
          "id": "38092143-d75a-4087-b5c7-0124b991eab4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5e15c9bf-55e6-44b1-b441-6f258c32dd77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651f9668-7132-43d2-bbac-3f818e79b169",
        "cursor": {
          "ref": "8c58c325-9135-45f4-aa3b-25d904d4b147",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5b44c222-d332-4601-b44a-174e3c5458d3"
        },
        "item": {
          "id": "651f9668-7132-43d2-bbac-3f818e79b169",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c698940a-c71b-4282-8dbc-ddb1cf28a161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16bd6ae6-96ca-4b7d-9348-f7468d55386f",
        "cursor": {
          "ref": "cf8eb23c-772b-4fd5-ad93-d1ceec1c1d90",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fafb8a21-48cc-49f3-95f3-62cdee5af049"
        },
        "item": {
          "id": "16bd6ae6-96ca-4b7d-9348-f7468d55386f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a6056e2a-8f37-4048-9989-5ad03afb0e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3f8c2b-d012-483f-ad1e-f0d990f8d7e6",
        "cursor": {
          "ref": "98866beb-6526-4fde-aa6e-ef01c058e0ab",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b85fcc16-24a3-4c5a-9733-72d551076d53"
        },
        "item": {
          "id": "5f3f8c2b-d012-483f-ad1e-f0d990f8d7e6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c4d4d1a0-fede-404f-a726-1871cf1f2d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e96fc8-bf88-435d-9080-e89b778303aa",
        "cursor": {
          "ref": "4f9d4f63-c0b0-4c0e-a8a8-089e682ccb2f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "962fff21-d8f3-4100-8bae-2d0354a9a98c"
        },
        "item": {
          "id": "75e96fc8-bf88-435d-9080-e89b778303aa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d221a9e-ca51-4c5e-8e5e-431599ae1531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaafd35-5c8c-4aad-bec5-93fdfd4eae44",
        "cursor": {
          "ref": "31029a31-28fb-4369-9730-c99de660b9dd",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "211cd16d-81ca-45ea-81ea-7932f0010868"
        },
        "item": {
          "id": "eaaafd35-5c8c-4aad-bec5-93fdfd4eae44",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "08ad672a-5657-42e8-b6c8-b2094e8f3971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae281e5-fcbd-4556-a115-ef9723fafa9a",
        "cursor": {
          "ref": "0eeb6a1b-f9f2-4c4c-a905-bea3ea1c6563",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "00359549-276f-4669-a8dd-4fdb1b5a4c8f"
        },
        "item": {
          "id": "dae281e5-fcbd-4556-a115-ef9723fafa9a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "700244b6-99b7-41b8-ae52-416ef9f7d2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41720ecb-45a6-4c7f-ab14-9ab0398505be",
        "cursor": {
          "ref": "71acc6ba-741a-45e6-8044-634e87343ef8",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "fe45915b-3953-49d7-88d8-82d95ebcdece"
        },
        "item": {
          "id": "41720ecb-45a6-4c7f-ab14-9ab0398505be",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f1b486fd-e326-447d-a028-892b203552ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be9969d-a345-4665-9de5-22f0d592e8b3",
        "cursor": {
          "ref": "0dadf3eb-54c8-48fd-b8bf-2794f2e07c9c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3e3b499f-077e-4e23-a6f0-b38cca8840f3"
        },
        "item": {
          "id": "4be9969d-a345-4665-9de5-22f0d592e8b3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e07e2df4-de5e-490e-96c1-eb9a035f643a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb2b4a6-482a-4806-bac8-f53d59dff0e1",
        "cursor": {
          "ref": "7470a830-28c3-465f-afe3-36c3d378138f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6984b8fd-5082-4521-9279-667b5dbb6cc6"
        },
        "item": {
          "id": "5eb2b4a6-482a-4806-bac8-f53d59dff0e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c2729215-0825-4a96-82ea-de2239f5badc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2bfa29-fa3a-4807-a327-a272deaee8e9",
        "cursor": {
          "ref": "205947ae-bd5e-4ad9-a412-1b0e16ff806e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7e3f8513-fc02-49fd-a7b2-e78dd47aaf4f"
        },
        "item": {
          "id": "eb2bfa29-fa3a-4807-a327-a272deaee8e9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6e673baa-2a4d-48fb-b141-41886ab149fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fefc1a-0b09-462a-9ec7-276ac10357c0",
        "cursor": {
          "ref": "a2477847-dfb3-46a1-9775-4043f65ee9f5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a8f1d91f-00b5-4d7a-a566-53cdf5cbe65b"
        },
        "item": {
          "id": "47fefc1a-0b09-462a-9ec7-276ac10357c0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a80440da-f129-44d9-b1ad-bcfe194a981a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1649ed39-8123-45b2-8a7c-059258e0e465",
        "cursor": {
          "ref": "6fc1a9c5-896a-4696-b6b7-86ee6f150ce2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d624fdd1-8f0d-4594-96a4-86db4ff806a2"
        },
        "item": {
          "id": "1649ed39-8123-45b2-8a7c-059258e0e465",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e324fa03-6214-4179-a703-be3a644d156a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81472d29-ff32-4320-92ce-2385d227e863",
        "cursor": {
          "ref": "f4fe8899-7320-41e3-8d77-9ea717815081",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9fdc72e1-84bb-461a-a196-3f7629744b4a"
        },
        "item": {
          "id": "81472d29-ff32-4320-92ce-2385d227e863",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1614c9f4-2213-4c72-a014-05a80d4e5d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d248becd-a3c7-4b17-98c5-4a234b6e18e7",
        "cursor": {
          "ref": "84ab7057-2a3d-4738-a943-6c9e31f103b3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4e6cd872-796b-4d01-95a8-17b167e67121"
        },
        "item": {
          "id": "d248becd-a3c7-4b17-98c5-4a234b6e18e7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7b68d7ff-e733-4251-993b-2528dec6d867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f05124b-9bd7-400b-b5e9-88633b1f8e36",
        "cursor": {
          "ref": "50249ca1-7af1-44e8-85f9-1db0ac3b8395",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cde27e27-c27f-4b7d-813b-559dceb73235"
        },
        "item": {
          "id": "9f05124b-9bd7-400b-b5e9-88633b1f8e36",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d7caaee5-d697-453c-9ec1-9d4c35cc9791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e05bb48-1f3e-4244-898f-eb867c68b596",
        "cursor": {
          "ref": "5c506137-0a19-423d-b74e-3c41fac49beb",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8c34c357-f79f-4dd7-bc31-f8f5f89265e8"
        },
        "item": {
          "id": "8e05bb48-1f3e-4244-898f-eb867c68b596",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "e3f5395e-420b-48d8-8069-bf9010a9ab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65d0323-4207-4964-955e-5b9c2428b75a",
        "cursor": {
          "ref": "a3aa11e5-f097-435b-991b-5b75ca9ec853",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb57b42c-53c4-4bd7-816c-614cfafeaf71"
        },
        "item": {
          "id": "a65d0323-4207-4964-955e-5b9c2428b75a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "96aa9f5b-3df3-43c9-8f07-88189818da8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeae597-6eeb-4f03-b7f7-3d76167f13eb",
        "cursor": {
          "ref": "6bc92673-71e0-42f9-bbf8-2c8b539a6948",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a66d7068-3859-49e6-8620-7cbf56aa2837"
        },
        "item": {
          "id": "8eeae597-6eeb-4f03-b7f7-3d76167f13eb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a643f9af-e68b-4bfa-8261-6fba533e5545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4f4c63-4e7e-441c-b515-8568de71f796",
        "cursor": {
          "ref": "1538097a-64b1-4546-8701-ca7bf1af382f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "166e4a6b-a93f-459d-be23-f1c799b1d9ed"
        },
        "item": {
          "id": "8f4f4c63-4e7e-441c-b515-8568de71f796",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "00c234e7-5f89-4a39-b80f-6a081c173918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c60d802a-41fc-4b02-98e2-4caa0fe9b247",
        "cursor": {
          "ref": "af9bba18-e817-4c5d-99fd-a48387b0574a",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "96c99ef6-eb5e-43bb-8be4-7d6498c30112"
        },
        "item": {
          "id": "c60d802a-41fc-4b02-98e2-4caa0fe9b247",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eb61bd73-c100-407f-b7cb-e1f25ed50410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d744fb1b-3aee-44e9-8161-53a164e44fbe",
        "cursor": {
          "ref": "4a27ec0e-2c55-4bc2-9583-aaf310089cab",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "281af374-1c1c-49e7-96cb-bdbd54f5bac0"
        },
        "item": {
          "id": "d744fb1b-3aee-44e9-8161-53a164e44fbe",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "761406cc-d1de-42ba-b1d5-91ee5de89031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac029a72-75e9-4fe7-8be3-2c5e8bf2c41c",
        "cursor": {
          "ref": "c4514364-b6bd-4f0c-a9d4-21344aa62145",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4845699f-29a8-4892-8fcb-d64521fe9df2"
        },
        "item": {
          "id": "ac029a72-75e9-4fe7-8be3-2c5e8bf2c41c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b10e541d-b9d3-4813-a689-1266a713b068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff5f361-ce5d-44ee-b4b9-925170a181b8",
        "cursor": {
          "ref": "d42faaed-1b64-4628-9665-03eba49a93f3",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "b0bea041-322a-4844-8aac-b2ccc3f36b29"
        },
        "item": {
          "id": "fff5f361-ce5d-44ee-b4b9-925170a181b8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "24d68540-8a9f-4f2c-91de-1e30acb2ff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b39d7c-6655-43fc-a629-43672ff4af36",
        "cursor": {
          "ref": "4f87999c-26ef-4aab-b3a9-6c42c8059749",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2c351da3-1f53-4605-b91b-43f77bcbe9a8"
        },
        "item": {
          "id": "98b39d7c-6655-43fc-a629-43672ff4af36",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "395a252f-0613-47dc-87e2-6d4c87595805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2279dc-54b6-4f97-854e-5f300efff084",
        "cursor": {
          "ref": "286042b1-3c7e-42f3-b2c0-65181ae8c45e",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "56464d32-9648-45e1-86fe-031d948d2d95"
        },
        "item": {
          "id": "5c2279dc-54b6-4f97-854e-5f300efff084",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d2beeee4-c46a-41af-95c8-3438402012aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b8cc49-bc9e-47fb-a445-01c54dafada7",
        "cursor": {
          "ref": "4f45d410-dfa1-4045-8ae2-b2a86665c9a7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cc24952f-6914-4a20-876d-54e030ffbc71"
        },
        "item": {
          "id": "02b8cc49-bc9e-47fb-a445-01c54dafada7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "f7c7fa66-3152-4d20-8a9b-17c663f618fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f551cfcb-dcc2-4eeb-b6ae-56c1e573c90d",
        "cursor": {
          "ref": "e1d5e403-aaf5-4240-9e2b-6130b796c6b0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b222fa04-e960-4d59-9ac1-e8b10cbc6d6c"
        },
        "item": {
          "id": "f551cfcb-dcc2-4eeb-b6ae-56c1e573c90d",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e3a649e-168c-40ee-ac74-0b23365d6314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a94116-ea2b-44d0-a3ee-033a3adec0ab",
        "cursor": {
          "ref": "63e3a096-32fd-459b-9eb9-c3251735b2ce",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5b68da54-4c08-44ba-9b15-81066117a432"
        },
        "item": {
          "id": "b1a94116-ea2b-44d0-a3ee-033a3adec0ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b8fa97ee-fcf1-45b0-88aa-a501955ab744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a24812-b862-4c03-b9e6-dfbb4a230826",
        "cursor": {
          "ref": "d8793278-dfe9-4747-a34a-8f0409d633a4",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "638973c7-246e-440b-bf75-925a4d9b86e1"
        },
        "item": {
          "id": "a3a24812-b862-4c03-b9e6-dfbb4a230826",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ddea63f6-e1a6-4e4f-b616-fbf401e2a687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a537b94-08a0-455e-93b5-3991b62868d7",
        "cursor": {
          "ref": "dde8ccf1-3ba2-46de-85af-b2626ea24046",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f3f8b394-592d-4468-ab25-cb363a50eafc"
        },
        "item": {
          "id": "4a537b94-08a0-455e-93b5-3991b62868d7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "88b528ca-4318-4445-81ba-2c5f22b6a758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03e0d0b-51cc-4d38-b332-064f91c671f3",
        "cursor": {
          "ref": "8fadd6f0-ff99-40ee-a893-dac78d8d8962",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "3eca1b0b-a05a-4f39-921c-5abecec0276b"
        },
        "item": {
          "id": "c03e0d0b-51cc-4d38-b332-064f91c671f3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9a808812-6f31-459c-b036-87400c4e3864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a34cf4-4247-4550-9ea4-cdf21900e5f1",
        "cursor": {
          "ref": "1edd2def-62fe-4da0-bbb7-ece542ec5f40",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f201c64f-e0a5-4a5a-94c2-8eaca5f3b9d4"
        },
        "item": {
          "id": "97a34cf4-4247-4550-9ea4-cdf21900e5f1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cb8952d0-8c7c-45a9-8245-6c3cd6bdfff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef8be3d-1574-4b19-a745-4a2639627eb6",
        "cursor": {
          "ref": "75257dd3-17d4-459b-88f8-d2b5b9c3cad5",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "fa50b49a-2e24-42ef-bc5c-a76068df2dbf"
        },
        "item": {
          "id": "9ef8be3d-1574-4b19-a745-4a2639627eb6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b86ddc92-64a9-474c-8a61-788b10a35090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec10c11-26e9-42be-9b23-2a34f266cb42",
        "cursor": {
          "ref": "8727164b-96e8-4521-8256-1a01e95b216b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "380485f3-2235-4ed4-884a-e54d6e6ed70b"
        },
        "item": {
          "id": "eec10c11-26e9-42be-9b23-2a34f266cb42",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f2d79508-f7d1-4819-9d5d-21c2500dea71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb88fb2-44f2-41bd-84b0-499c4e801fa7",
        "cursor": {
          "ref": "4bf38410-8372-48d9-a35a-23168637cf49",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0584c942-4ceb-4fca-bb55-c7c2f494afbd"
        },
        "item": {
          "id": "edb88fb2-44f2-41bd-84b0-499c4e801fa7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7f22ddf5-4ab6-4374-b245-b9b3e1144d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3ffdce-0687-49a2-bf2e-79f58e524e43",
        "cursor": {
          "ref": "a5bba856-59c0-4657-b06f-3127b6a2138c",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "de23db0e-5d87-47f4-80f5-1889e890f7f9"
        },
        "item": {
          "id": "6f3ffdce-0687-49a2-bf2e-79f58e524e43",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0c792a28-a6af-4e21-a5c8-c7faf651a99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8597a1b9-d495-4d83-9d90-310e8a771da7",
        "cursor": {
          "ref": "b5983c78-fe87-49f0-8348-c64fe4b0fc46",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "b89f4e9e-cd34-499d-89a9-fc8e3c84a287"
        },
        "item": {
          "id": "8597a1b9-d495-4d83-9d90-310e8a771da7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "22e47fc2-9025-412c-8de8-13a967e2350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be4580-ff1b-415b-84e6-2583e25113ca",
        "cursor": {
          "ref": "54d88303-e3a7-4011-ae9c-6ebdd055ce2d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7c7b9ad1-8bf6-4730-8437-903b3bfe5d3f"
        },
        "item": {
          "id": "c5be4580-ff1b-415b-84e6-2583e25113ca",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9f3d21d5-714f-4cce-ba10-5ae6c2a2d73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8baafafc-8354-4675-a5d3-c5b95491be8b",
        "cursor": {
          "ref": "594032f4-62ed-40f7-b051-a99ac8b54c54",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "07b892e9-d9c9-4bf6-88f8-3602c528d388"
        },
        "item": {
          "id": "8baafafc-8354-4675-a5d3-c5b95491be8b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b062f4fc-feda-4a63-9440-11a7c4234b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36559b11-a8c4-4689-a645-70e87df51821",
        "cursor": {
          "ref": "7c6ef2c1-e22d-4615-b515-7bde4b5ef61a",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f6114fb0-c0f8-4383-b467-91077cc3ce35"
        },
        "item": {
          "id": "36559b11-a8c4-4689-a645-70e87df51821",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f9d07df0-5215-49c9-8290-e2528d5b1740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f2f3c6-5c8a-4a6e-97ee-06849eabafcf",
        "cursor": {
          "ref": "79ae73e4-853e-42db-b637-cce883f676e5",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0270fbb4-127b-465e-9be3-0e0d84fb0c75"
        },
        "item": {
          "id": "00f2f3c6-5c8a-4a6e-97ee-06849eabafcf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6cd12ff9-98ab-4506-8eaa-7a145dcf4575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a22b06-b134-4586-98eb-566825753517",
        "cursor": {
          "ref": "cbda5ff6-95c8-447d-924c-0396e8c906ef",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "00b97d27-a28d-474c-8630-81c804fdb462"
        },
        "item": {
          "id": "59a22b06-b134-4586-98eb-566825753517",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6ec85c7b-ebde-4435-a64b-d1a88d0e8b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1522ead5-51d0-4f12-8423-367cd592ad3c",
        "cursor": {
          "ref": "12dffde2-3b0f-494e-8752-429df55be65c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b33ebdda-1f14-4d4f-8d9c-d9aadb2599fa"
        },
        "item": {
          "id": "1522ead5-51d0-4f12-8423-367cd592ad3c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "44101c15-9240-47e5-8f29-e2dd7e319714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad86ad4-e186-4b35-beb1-89a5d0c127a7",
        "cursor": {
          "ref": "e4b8ea72-7b0e-4eff-a834-7e8d3648dcf8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ddd52874-fda0-4017-96f0-65cad6916f86"
        },
        "item": {
          "id": "aad86ad4-e186-4b35-beb1-89a5d0c127a7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fa537def-8405-4c92-9fed-4c69963f93ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a1cdd2-c2f6-499b-87e0-a6a79e1feda3",
        "cursor": {
          "ref": "2df65913-8766-424e-824a-b2402691b2ea",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9b0a2090-c831-452c-878b-45568026c616"
        },
        "item": {
          "id": "14a1cdd2-c2f6-499b-87e0-a6a79e1feda3",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2a292642-5f17-480d-a1a7-65dcce4c183d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5176a5-8929-4030-93e5-985e9cb2555e",
        "cursor": {
          "ref": "457cef67-937b-4b3d-940c-45436150f63a",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a115db2c-3f4d-4914-bc03-149077fadfdf"
        },
        "item": {
          "id": "df5176a5-8929-4030-93e5-985e9cb2555e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "57125dff-9494-4e9a-804b-511a65d2bc42",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e5326b-73bd-4a44-9bd7-9c02a735cec3",
        "cursor": {
          "ref": "d5c8b556-74be-40c7-9497-77d67e956a75",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "665967d0-906f-411e-883e-08c5b911dc3b"
        },
        "item": {
          "id": "e8e5326b-73bd-4a44-9bd7-9c02a735cec3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "086ebe17-e1cf-4044-bf7d-2e350a52e045",
          "status": "OK",
          "code": 200,
          "responseTime": 112,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad231c5-dceb-496e-9415-f66cde828cc8",
        "cursor": {
          "ref": "5ecd7134-2e52-47d6-8047-ca399e60a5ac",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "76437bff-ff94-4a9e-aba4-a415925e6b29"
        },
        "item": {
          "id": "8ad231c5-dceb-496e-9415-f66cde828cc8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2de729dd-7641-4daa-9996-55a49adf66a4",
          "status": "OK",
          "code": 200,
          "responseTime": 3435,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c3a20-2093-4093-a915-cfc679d88198",
        "cursor": {
          "ref": "ce049094-37ba-4969-b856-d7e2a73e71a2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f84e9980-ef23-4605-8887-127de45e4866"
        },
        "item": {
          "id": "ab2c3a20-2093-4093-a915-cfc679d88198",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c52604b7-8412-4345-b2a5-884a243a0ce8",
          "status": "OK",
          "code": 200,
          "responseTime": 2564,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe32f77c-5925-491b-8b44-3291fb42bea9",
        "cursor": {
          "ref": "6b8f7e1b-1c71-415f-8920-9a9a08bde921",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "410dbafb-4010-4b0a-b7f3-c2600b5ea107"
        },
        "item": {
          "id": "fe32f77c-5925-491b-8b44-3291fb42bea9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e739b37-61f6-45aa-b46e-e6f73e9762e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe32f77c-5925-491b-8b44-3291fb42bea9",
        "cursor": {
          "ref": "6b8f7e1b-1c71-415f-8920-9a9a08bde921",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "410dbafb-4010-4b0a-b7f3-c2600b5ea107"
        },
        "item": {
          "id": "fe32f77c-5925-491b-8b44-3291fb42bea9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e739b37-61f6-45aa-b46e-e6f73e9762e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e589d358-de73-4a56-9a25-8a6d794065ef",
        "cursor": {
          "ref": "08ae5a7c-c496-43b4-bd6e-cfdd27c903b7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b82b7ad5-e041-4135-a8be-2e581fb994d0"
        },
        "item": {
          "id": "e589d358-de73-4a56-9a25-8a6d794065ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "80022709-344c-4eec-a278-803ff5e7a9cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfa7a9a-2620-40c5-b866-3a6bc4edb846",
        "cursor": {
          "ref": "270dd084-7e10-46f3-b781-37c5d3028556",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bb2cf1fd-0e80-467d-b203-a9db466bfc22"
        },
        "item": {
          "id": "ddfa7a9a-2620-40c5-b866-3a6bc4edb846",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "db5c88ff-9d61-426c-9294-bed289a437d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}