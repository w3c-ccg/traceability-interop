{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5da4a396-015a-45d5-a1e9-24bd1db8fa57",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a38a240b-8d2a-4248-b140-ce76ef3ee184",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "123ff85b-7e54-445d-b77c-49490d91c062",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "187ca56f-9e98-44a5-87b4-609088cf6956"
                }
              }
            ]
          },
          {
            "id": "fde720c9-a436-4a0b-831e-863f83a49ba1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d79b939d-7239-4f89-b642-8615a6779481",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc96ecd8-23f8-40ed-aecb-9f9df2bac57e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bb718924-c6a6-43d9-8301-5fa21bea070f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "84ec83a7-3b41-44fd-aaf9-535ac37f49a7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24d071a3-4337-473f-bae8-373077d694a6",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22c96134-b3de-49d5-980c-692cdcc54e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "40f943dd-55d8-469e-9f7e-d44b7f6a1545"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "149dd4d2-8d6e-41e0-96f0-1e439f5cb50a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "199637ef-9291-4f9e-b4f5-8e98a42c2474"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2900fcf5-d918-4c78-b81a-61fe77dfefd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1710e3b0-e92e-4b6e-ad4f-b432768364ee"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78427c9d-ec7f-409f-8a0c-ec8242100b0f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "10830392-ca86-4fdb-8bc8-af7b3fda264a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd6fc9f0-2956-4031-b75f-a359d135562b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cefe037-e0c9-4bdd-8737-c482a430e6d9"
            }
          }
        ]
      },
      {
        "id": "580499cc-fb7a-4f5c-b536-a668b031a36d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3092dfcc-ed57-41f5-a28a-07c888f89d9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d5f650e-0a29-4121-87c9-c2af5e1c2b26",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f8c5c4f-c457-4166-94ab-a917b529ca99",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdc110b-a5dc-4c42-8c56-1011a0a98c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e505ff-031f-40e4-8a4e-6492500350fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d6ad36-33ea-46e3-9b6d-b8dba5ac09c7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b6328-c1cd-43fb-8e04-e711569d68c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88296187-8b40-4895-a7d2-78c0df29b050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561bd172-0c9b-459f-ada9-4dfef455d26c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22ed2e0-39d8-4ed0-87d3-b6be8909125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cf4ba3b-ddc5-4ff1-9161-407514a8039a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6034b1b1-f055-439f-bb5f-0ef0beb2f4cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64b22c55-cb11-463d-960b-26f9e6783efb",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4787f7-054d-494c-8f05-de6754b496f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e4de664-6acc-4a25-861b-de563ba23724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f064597c-4d1c-4688-9064-5a4cc2bf59be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91abd7e-9fbb-4102-a34a-3aa655e879f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "59ff4442-0d74-4779-88aa-b4d0ea267a50",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c6fcf92f-2472-410b-b692-e7f0087e4db6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99a29318-2865-41be-bb23-f11634e4ce83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2672df8c-1830-4da4-a84d-247b0c62d913"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f402767-1d13-4e7e-a441-c9cdab337370",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6decdfb9-a0a5-433a-9e86-a99ea3bfa7ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a796914-4b7b-411c-93a0-1f9f5dfac105",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aeaee641-bc87-4465-b197-813820c6a007"
            }
          }
        ]
      },
      {
        "id": "d047c5be-1f38-4857-905d-3ff7126e07f5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "3ebb33f5-3114-4782-9c71-8b01a7112ef5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da248bc2-74df-431a-bc87-a09b2eaae859",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "501f75be-7d7c-451f-aaac-1de17cc82c88",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21023744-6fb2-4146-ba49-5c9a4b79358a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b3b8b1d-95d5-4230-a265-0b3dfb116926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fd207a-2281-4f58-a509-68bf7a56afdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d9261bc-c2ba-4a56-b2ae-ace195b3b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e27ffb1-6910-443a-9e7d-e108702aa060",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11baa441-33cd-44a9-8a05-adb4544ee6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd08b768-ab3b-4c35-9f3c-a6441ab51685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ada051b7-efce-4e27-a05d-35530ecd866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe0f1e8a-5e77-4aae-b0c8-300f2d97989a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6497cf-8029-42f3-ad69-a5f3c473acd8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff93c74-c305-490d-8fe8-1fdd017bb64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa131b6f-3ec2-4efc-9be1-cdd4a29a2942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce30c01-fe89-4a6b-81c5-619c5be3d7ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b6ae0b6-1ea3-48ea-a60b-f9e1e827eaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88e2857-37b7-4bd5-b8cd-ba5f17473c60",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18093125-5ce8-4701-9296-435cbf25c431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e9945c-24b1-4efd-b9a4-a4da72d9a0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a8ab90-2cc9-4863-9315-c71c24a56219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "662894c8-0ffa-403b-ba03-e1a9f8af6b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afc4ad2-5bd5-4923-9f96-deb35cdbfc1f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e7ced4-755e-466b-b330-fe129542cb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff233b-feb9-4e60-8e48-13d4aafa7f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671fe373-7e9a-4b2f-9140-fefd0559bb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50315a01-8ed1-48fa-ab75-aed4c5d51107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2bd78d-d230-46ae-8939-4aa91a16ba32",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb1fa9c-1fa4-4449-991a-4b96106d71b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149d09d5-b26a-40a1-bf9a-748ad40402dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44b92c6-acbe-48b1-b4f3-78e5ff6431e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "040fb7cd-821c-45d3-b63e-5dbe46711b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124a0928-3d2d-4d84-993d-e070d51a4b02",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361d7a0b-015a-4942-9500-4c212311c704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ba63dd-7212-4fdd-ab26-b968a23a764b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff51ac6e-f2c9-4b9b-86c5-6b3bfbbf43bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3499049-c8b3-4f1e-a533-4d57cc9fb05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd25d707-d17f-4801-a43f-2ec482737a49",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8caabf22-88d1-4397-842e-02dbfad6c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db425d3e-8e4f-4b10-ae75-5d8ad3135d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0e4d25-185b-48e3-8392-f65eb7901059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e39c8c08-fb23-4da2-962b-5babe5a54ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13edd9cf-0230-4738-aa42-45fc97ba905b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe030a4-1282-4238-a997-6b5c8ae9040a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86e6c0f-6e23-45f3-b8c1-4de4b8b49022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb892e2b-d5c3-49d7-9f65-3443f428207f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d20d923-5c6a-4a3d-b202-e33e9e49e216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad02dee7-21dc-4cbd-a810-7d0de7399a33",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee75221-7fa6-4ee9-98f7-f6a1fd892626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a37745-12a9-4f35-b9b7-cd7989d5a275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d98d6e5-7c8d-40a4-91a6-0c87fb272d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5778aad0-c53b-426b-80a4-e868aabdc0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6af6c5d-35c1-4d1f-b5f3-84f88aa00509",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51adcb1b-a4ff-4e23-9dca-dbde36440a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d03fb23-fc72-4a0d-aecc-2c142b52b156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b365d5-20d2-4a88-9dd2-d90ba98f621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf27a21a-ea7c-4096-a3cf-82ad34e63d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d51ec9-5aba-4c57-8971-f2ba011e8e71",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925cc987-bc9a-4eed-a347-ef1fd1eca2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013e726a-614b-4d92-9b40-8419c4c0b2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d68c95b-300a-405b-ab98-af918450bf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed068360-281f-4ea6-9dc7-f748af044ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f4bfe-67ec-445c-af3b-dc9ae9f41c01",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab080af-9562-4659-a8e5-1158a623465b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5f3760-202c-47d7-96b7-ea84bbd1949e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59f9702-54be-418b-8f1f-98abffc4add7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c23237fd-84d7-4c6e-a041-8784fa1ec6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a066e0e6-6a6b-4071-aea0-7d5172aa143d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f45777e-be80-49ee-9d41-e109241d71fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0d6c3d-f2b4-4042-8d03-cc616ee4b1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb5dce2-92cf-41a5-a355-89f94b29e8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "324cc915-41f8-4d7b-ad5c-5af2a1dc30be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6414a46-1642-470c-9073-d4bbe4b4464f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6516aeca-d315-4000-951d-07091841024a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8507b0c-8699-476f-a287-5364f4e300aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b1f4ee-ea21-4659-a3c3-5c00d6bcf716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69c4a5e5-d3c5-4b9c-b17b-19a4d2d1da94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac29f38-6883-41fe-9703-73a7ddd8d49d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1ff873-6f92-4b2e-ba46-471b61d86029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad1b1df-c654-4255-b96f-c5b3dfe013db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5708ec-7c61-4a7c-b8fe-2bbb7975bfbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f2b6549-39b8-4651-be92-77b1791ad03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668c8319-3ec2-4a94-8e58-84f65bec1518",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495ad791-2086-4c38-aef7-8288afe8a265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c08e31ef-e9f6-45b7-9953-710715a28f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86860b47-7eaa-48e6-ac30-ea260ee5c8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe112383-ec40-4bed-b768-47924c8fffd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b8ff1a-5b7c-4153-9b2a-3cb75da58f30",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f7cdf8-2556-4e77-8243-baaf3c65d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f438b955-c774-43c6-817d-ebadb46136db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e241138-34b3-438e-aa8b-611d2742c8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92d667d-b47f-4590-abb1-b8705300fc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b370d0c-2c4e-4976-a318-b3c4b826dfd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334c8f6c-1bfa-409b-84de-f72093e5211a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd3e4d6-b3f1-4949-9ed1-df332c10410a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f2d01a-1a8f-48fd-b818-d6cba5d40747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7627b29-7ea8-45d0-aaa5-af561d50c883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8af9e6-0384-4294-beae-18c2c4da53dc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2691ad1-5530-40bf-aa1c-01462d1baeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a9d2e70-6be4-4838-8fb2-79db1adbd909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fa83cb-34b3-49d0-890a-ea59cee60faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98e69ea0-1f9f-4f79-93f9-4635309190ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f08a9-4007-499d-be39-725256b70547",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9521dbb7-9596-43fa-9bdd-f13cc4e540b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dda2ea6-a3f5-4719-a33b-6e6da7214140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da66233c-fbbf-47ce-8722-1964b4113257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71849b61-4c06-4ac4-b9eb-abda9c1c2987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68838bae-aa16-45cc-952c-70a993c6c7ce",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5becd3f2-8ada-4680-8597-4f1bb3d470ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32394cdc-6801-4277-9ec1-1295f00f15e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07a6751-fcc2-4d98-a35f-1650eb618cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdb3afa-9828-4150-a7e4-cc68cd42385f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9debab4-1d0b-4885-8cfe-ff4b749eca5e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3791906a-6141-48d5-a32a-2dec798d03b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e99a98-181e-4ccc-bad1-cb3e3d941031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fced785-f6cb-4da9-acb9-1140130bad72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc7950eb-a5d8-420c-b1ce-d950bf93aa6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1ba7905-d212-4eb5-aa0a-547d33768ae1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69b7623a-372c-4412-bd27-ae7335d7f057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213e60ec-d565-4253-9938-31920e6929b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b38e14f-e389-4833-9f32-4f9cea26e8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4596439c-fbf0-43a1-9fef-a9032ed783dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a804bede-f55e-4cba-a3e4-54825ea6a7f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56888c3c-c58a-4552-8344-ad92b5011e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60da790a-360d-46fb-baaa-10af76f1854c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf67284-4260-41de-b83b-012ec3677f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16606eb-a0ae-4eba-8307-2425b05189f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5688f29-7bec-4a36-b06b-e6e0950226b2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c740fe-d6ca-4838-add3-4fdc10ba3824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f242976-6d35-4b50-80a6-3345e9095e6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69881dd-d610-496f-b6bb-fb8af47d806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79b361f1-b1a3-4df9-981c-5a7fa4a0ffb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53355fcd-e35b-46f9-8c99-4213bf95c54d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13d07f4-7606-4284-b34e-6bb2e11328bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c23ea31-94ed-4d54-8e3d-d183b25d21d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f6d15fd-8f45-4bb2-8248-8d69df0b4370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8370f6a-109f-400c-8f09-134cb3153c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db3fb442-287c-4a75-8740-d453832e41b2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c087f9-7495-4da5-a552-bab8165bfbfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf0c6e6-a0fa-4578-b6ad-4aed40e3232d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e260d9-dc25-4515-9d72-5abca40617d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1cdcd0-fa5f-4977-9114-7bed5cd66f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9727a9-5f31-40e6-b4dc-3b1fc89a328b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf1426b-e7b8-4601-8e6a-cedce29c2433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def406ab-2177-429d-aa9f-ddb763f56985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7789d2ff-f0d4-4e5c-a672-5d7e0ce73470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d87c18-ac05-4882-baae-8d4651dc0dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45522806-3310-41ca-926d-f6a1a8e0fc0c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0fbd95-6f35-433a-8151-8559a249e15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c310b4-e74c-4b9d-9c56-f930081f83b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98838f47-fa02-438f-a8f5-2f13f313f0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c4cd17-82f1-46f3-9177-592002ae5099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d954a13-46a6-447a-bbb9-05f1686fbea4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40618792-fe0e-4abe-a097-7a51d592b010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340c01e9-1143-44ba-8d38-87cc1cf0decf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c9d6de-8a93-4690-8fa5-3d5929286063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1ee80d-1568-4bd1-b755-45ff004c1435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faba6df5-dc7f-4d1f-8a09-e500d827a92f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcbe537-5c10-450a-9ffc-6223dcdb6d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83ffcc8-0b5b-4943-a1e4-c003787bdd09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c80db6-f9ae-4ef5-b3c7-0332b13362f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac10a26-5a19-40fc-969f-f96888fe108f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e5b578e-7d8f-4280-b626-da806859d857",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ddf7d33-addb-47f8-a6bd-979b1526e361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b47432-1843-4e3b-af04-59eddb81a36c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56246204-7d9f-4ade-9d3a-f5f1411e0eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeaf4eda-e8b2-45a1-b320-9a6dd6dfa282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf0c843-3fd6-4812-a2ac-788c5d6c88df",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595777f5-d303-494f-9b86-f30bc25e6ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f5ab0c0-7fc4-4dce-a366-ad6c61df8522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c3ef2-a416-4d4d-8015-d3a9067735aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3e6683-5303-42ce-98ef-6701a838bc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a343b5-164c-4386-9027-0baf6f5a12cf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e9be73-a6c3-4413-8072-2dc8c377e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf3ef126-963d-4a47-b4ec-cfd6c18b8d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f289a7b-1f05-4062-bf8d-a5b9e364eb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b975e627-41d8-4aad-9d68-82897f93aba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b265481-0d81-46e8-b7a5-fca41ce79bd8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc256c2-bb25-4f4f-a203-8a82faa00e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90ad4620-9894-4c52-aeef-cc147f1bd66c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91770b7-5082-4657-83fe-d53ce3803663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c16a5f51-86aa-4307-b1f4-2e0c19f88946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2941dc63-09ca-4d85-b8ed-5d084f1e67dc",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad53f140-9071-4867-aacc-d25142a96fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beee049f-5de7-4b9a-be22-b794376885aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f800614-568f-412f-aff1-40e41a3122d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d35d5766-3a66-4f3e-b888-e69081a7ea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bbef29-7218-4e3e-ab14-f26fd15e2c13",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14fa1eaf-c2ec-4e18-83d6-9347848ff2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6812d9c0-67ae-41b4-ba23-513e651c458b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911fe416-c2a8-479c-8748-e168661c4231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "30c0851e-0162-4f4f-94d9-0ccf48f8b464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d20bc93-9982-46dc-b92d-12d2aff704a1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc187ed-5717-4cd9-ba21-d62a36b42586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef3cbea-bc74-463f-bbd5-4ebf3f29b274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4442856-26e5-4659-965a-1f79784282a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae43ca07-f964-489e-843f-12bfadaecec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2903162b-843c-4ccc-a544-b6080a5d953e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab5f52-2c74-4363-93b8-3f896ef8b0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3603c73-f724-405a-a67b-993128296345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8aa65-d615-4319-b354-ddcc083857b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa3f114-2610-4ec0-8a71-0edad60af486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a72735-b531-4854-9d94-c4873b819e51",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0098872-ed37-4837-8c94-cb11957e30b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b334d3-f260-4a31-93ce-5fd0a9c0ea9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272f72ae-eb14-454d-9d61-8a3b7d7658e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c959f894-776c-437d-b63f-734f3e986f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74be0309-53f7-4a3b-b328-25223de619ec",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08d7c214-101c-46c3-9712-a2057eb3a6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a64fa5-a43b-4124-a003-92f49cc665c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc14394f-a44e-4361-9093-1eb982f69245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87850262-5e4d-4365-bcc4-10ff4a5900ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fa9c46-6f42-4ac2-95ad-55cf96ceeb1c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7370dea6-8c90-4d48-af91-a5b9bd780cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244e985a-d992-4d79-bf2d-932187bc822b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f54e7-a59a-4d1b-bffe-18a3b900eba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae20e327-8990-4dbe-b552-78d64f629bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fbc6e3-1618-4f05-9f9c-ea23f06e01d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1216630c-ccc1-4dc1-b7ff-16cac2b523f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d939f295-2022-431a-b868-fd8196f052e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e105180-754b-48ae-b95e-5ace55634c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f00630-1d11-4ff3-a89a-34df6c95e5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a095b964-7404-4e25-bc56-52e5cb7ddda8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb425a3f-6ff5-43ed-a21f-5a6dbbdc16e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ab65967-c726-4d5d-ac8b-0ce0d055f83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6643bc0-f7d6-4c7b-85a1-d1ebd929d528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8010cae-c99d-485f-b513-f9377fdc4c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f44d788-9eb3-477d-8947-6c61edcec813",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284156e8-b564-4844-a4fb-61d14fbd4fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29f4ff6-6db5-4f9d-a70c-6697674c9a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae1290-b159-4eb2-95f7-b77e0d9e66d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51f1ce7-ae94-4637-818c-2538c404f26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75409ab7-ffea-4793-9376-d7f22ca19295",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a522ce2-8a84-48ee-9120-4701d1ee8ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327e8dc6-c1f0-4b0f-ab3b-0ba9874b44c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25aed35-73e5-48df-8eaa-b0f8d8ad532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a9218f-22ce-4ed2-ab57-04fee295118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33792fe-60a3-437f-a6b8-39339e65996d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57abc6a7-1866-4076-aa27-58b729666ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a59c6ed-2dbe-4a75-8335-4dba64c86d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506fc8d1-9b6b-4c67-a3d7-dca06f6bc0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e60abccb-fe6a-491b-9450-b1e499051629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4932e4e5-7ccf-4c22-b78e-0eee36658158",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8875f223-d0b5-4880-a118-ba4dd56a811f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f236ca8-0bd5-4cda-b669-70932623f480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec97ff2-d03d-419c-b019-a5cdb81b88d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c08e0290-5276-45b5-adce-3a23263f27e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41382b32-27f6-4427-9c92-66675d0ed9f1",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41a6989-349e-4a96-b14a-1faf77839591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f344d5-6788-472a-b41a-5c45165ce7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9e2c4c-e75e-411f-9908-edda11dc5d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b58a2384-ea09-4b9f-8242-b4fa6d258520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b68985-88ad-4333-a082-7e7810b45d9a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6575efce-7815-4263-b13f-b752aaf46b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "274e9658-b760-45f7-b7b0-b415323d21f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746db84e-43e0-4178-b711-56a5b99c3e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee649f44-760c-455f-bba0-833ad5204653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a650d62-9cd8-4f27-9aa9-16b3f9443e57",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "528ff982-1bc4-4090-a873-9d3b0d880eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d79422-f4bd-422a-98d9-e1c6ed043776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc0a170-fe39-4140-97b7-5ac890f9bc9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24b1b3c2-e71c-4f98-87d9-a1875eb9e13a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac3119-a43d-43ea-b585-f0d003285c55",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69bdbd-3296-4876-8153-4a2f8a8b3929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120857d1-732e-4bbe-85cb-bbab953c559c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4121a4c-484b-4543-9312-c2ce889d5626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "559bcad9-e26a-4c85-858c-493676d6ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697346d8-60d1-48e1-9cd8-323e23b241d7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c45de0-5126-4326-999d-0aefd910812d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e807c859-04d6-40d7-b7c8-ad5672a9986f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c592e0-c6b7-448b-9729-855c8d718a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b92bbee5-f8ac-4e83-b222-347323b41fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e952e9cd-6802-4034-bc42-40e89809cd24",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fc4b37-e3cf-417b-ae0c-18865ded1667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41234508-5f7f-48fc-80f5-274101a0c663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db507b3c-63c1-4c36-b1d6-796f0ca47983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "029e4bb2-7692-49ed-9b3b-72a15e5b39bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87449c9a-eca5-4db9-82e8-85fdf78fc039",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413af7e2-23de-4469-995a-7a6efc6311cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a6cf939-8f24-4b97-a54f-877098056a1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8b781-c4d7-444b-b116-7a1762d3ebc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "67e28cec-f100-470d-8f6b-5a21eb7fd9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bb0f7c-4a01-4ad4-a984-05a69685a284",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e63d794-89a4-4795-aa21-9310c98a439a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027d032a-058c-4317-b0b7-b3781bed25c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeec0721-7de4-44b6-9b5c-2ff4084a6eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d3e744-c430-4377-8b7e-e34f942e059a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d03d0b8-308e-4e1e-928b-0593fc0e1022",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f7adce-126a-4ab9-8e94-81ac9f2ff5b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d99de365-e96c-409a-8b5f-cd2590198ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5773d117-3d74-4fc3-b468-6502f8a52de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "550c649f-ebd6-41ca-a5bc-7199e6424a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14bc98b-ed3f-4db8-aeee-bb673e288226",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587aa5f6-e092-4d65-a368-b66d38b3324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442f4bb8-050e-482d-b59b-0a78ad3f909c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5b2063-900e-42e1-bcd2-bac02ef19f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea992209-b86d-4d8a-bfe0-3fab984f05e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7cee614-91d4-4e72-9b4c-4e835b1c0edf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5806b96-d9a3-4650-897d-69f3cd5e138d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8648f7f-b97b-473d-ab49-cdd01e49ed97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05379712-d13e-4675-b199-efb9ef06510a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc0b1ef-bf2b-4f47-9548-09217241a1e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e936ce-2e07-4939-b67a-54c17665edba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ea2473-a35e-404f-8efb-d09acc1af6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006fd8a3-5d32-45cb-b2a2-143a957410b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02899276-70c1-4261-8803-d92cad1ec36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab38b293-2a65-4c13-80b7-6a8e5770cd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb639e2d-cb7b-4567-847b-78ec731d2f6d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fca1775-58cd-4b79-9df2-0970c001caed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd294e2e-d1ac-4aa5-82cb-26858f80caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742d6d82-526d-4cfc-afbc-2bffcdfcc21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2646ae-a76b-4c75-8147-f2d4c5c81a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530ee612-8a51-4a8c-8d41-628a452adffa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc3f5fe-48f0-4880-8e5e-a3b3679d8f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4aca3f9-3498-4439-8528-401e6e9b10ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d6b82e-10c4-4a22-a172-a6370273ab92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb687cc6-5bc3-4ed1-8501-d50b658d8e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c2d846-2651-4281-9301-1b0e308440b5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2213bf9-7dcb-4866-a12e-4e30b2c52aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe0bccc-865f-4d5d-b54d-1401fef0696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0162f99-0666-4c46-9ede-169c629d2748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa72dd0b-46ef-4cad-a354-23ff821e546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4522c81a-1888-489a-81f3-a43a75f4c939",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ddccd5-a6f5-49a0-b2dd-a5a9fc04d938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edee250-e61b-42af-9db4-7703a8fec647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e525d573-124d-478c-9860-c2c581929d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c31a4d63-9566-4920-9069-9dfba5b39e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce06179-fbf9-4414-b4c1-b2702b05b058",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2b2232-d4be-476c-a19a-8191687fab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c3d660-68b8-4eb0-9015-a446e439d036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7187e6e8-0a7c-47a3-b821-88fe0f99ab1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20f0dd38-157b-48d4-92b5-15f401de6502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f401e17c-93b5-4890-9398-aac9ae94c6c3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ea041-030b-46ad-8dad-8bc7425d2fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c595eb3-e6b6-4cce-9e32-4ce10c2c6248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a454bef-7924-4c47-bd1f-882777b0c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de7b1ab9-7090-4903-9a1c-f1dc29db8b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de53a1f-5a5b-40d4-918c-75145042c365",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a9dea4-c1ce-4918-bad9-22ada5ede11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf19895-b7bb-4e75-84b7-b6584fb9c020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95164c10-fbb2-4cca-a677-39b4bbeb8dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2171a701-1069-46e6-8403-925e21e759cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db09953-bfcb-4066-aeb6-fe3c3dc87e00",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63070afd-1448-4fe6-9b11-48f3c7073c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f3e17d-8b29-4daf-8538-66b653941db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7631343-1296-487d-83d3-48f4e043fe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f19e18-df3c-4099-aa76-c700fdcedbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe3e565-46c3-4118-8430-d97629d8a094",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f796ab-deb0-4f55-931c-1ef01f3ab686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976606c4-6cc4-49b1-9cd5-b62676b47642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3247921-c823-47ed-a287-739ee7eaef3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6118f117-9943-40b0-9d59-68e1ba2910d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37033cd7-cd4a-4d24-bf88-4d70e85f49a0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efe16fc-6444-4ba6-bc5e-3b78fa11278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a78913b8-62f3-45e4-97c2-a3b90354b6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a415dd94-f374-4c49-847c-9766415649eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa485713-85e2-41d4-adb5-ce066fb42e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c82003-6bec-4675-9c2a-9261a5aeebb0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb7f1a13-c006-4151-82c8-7feb28c5a7de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296b5e89-29e3-48d2-9ece-1f75e91a3c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d7fd29-cafc-44e5-a4c5-e5f927b428b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c00bc4-5800-48eb-8dfb-761c52afeef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed63bff3-2402-49f5-884b-71a71d3459fa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c6a061-44ee-4843-b5cc-f19b00cbba15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dc1d1c-1b7b-4e5b-9d88-123c4fc6bf0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd2ae0-0970-4211-b23c-3457eeb1429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7220e6b-4a61-40d3-ae3a-bd8a35b0a1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5530e94e-5696-4396-bb39-a0798a0caf2e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d4df4-e70a-4847-ad75-9b235894f532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda42fc2-ee18-4be0-a77b-e2330bba4d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd771f3-a704-453b-bb18-926215250e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00e6307c-75f4-49ff-9fe5-619ad955e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e09a91f-6bb5-496f-ab58-cbcc7bde4f82",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d6a732-0899-4b3d-8c57-14c3cf18d1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd998359-4c4e-43fc-af15-e54df4a46902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d244b120-fecf-4875-9b76-cafda79d803c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "391f417f-710c-4b1d-8c22-c2009082b446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254974fd-3dfc-448b-8f12-71e4a64c0b8b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bdc3504-fed8-41f3-95da-ec8aa810f399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c66a806c-ef98-4a1e-a9cf-a2c06b69c6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fdf025-7188-4d7f-9680-4133e64dae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f044c8-1455-4978-a88c-f924c6d4c14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719f9ab2-f9b0-4f71-87f5-e0baab9c7b36",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2547fc41-a13c-4d92-bf94-8a2f3796e18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91d2ecb-d987-4a87-a48c-8867020376bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770114d9-8fed-4c7c-95bf-1844fdd85bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4b3fbf-9fdd-45e0-9d93-9521d4cdb5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93b90c9-db8b-4ae6-b3a6-b354457d17ec",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31111ba2-51cc-4dfd-b33d-132597b734f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59341877-3793-4e98-808c-43810e49ae3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c86a480-a5c9-4209-adbc-ca27450767ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "220377bc-38df-497a-ae7e-884c9c84dfd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f06f7d-bc54-4927-8811-9722f3ea67c1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1ba5f4-cced-4774-8898-e1fcf7b27208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abdedb2-0071-40a2-89dc-8cad7da9f0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135227c0-125c-452b-9eeb-7146ab1bec80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e801642-6304-412a-a26c-0716f8358a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005fa48b-b5a9-449a-8743-8664a4acbed9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0bddb69-7f97-4b30-bd86-e2c6f1135a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "055674aa-c5ff-4155-9bb4-c5a85f7c9d97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41dbcdec-1b6e-45d9-a42d-163100d4d93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f30cad09-001d-4025-a2d8-ba7151d8ca8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d441f7d5-1794-4ac6-8d05-46582a4c62c7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4549dab4-b8dd-48a1-b0ac-16212a06675b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c545b70-7124-4346-a28c-2a7bd0f139a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3ec90e-3e82-4569-921c-d08b0f7e2aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b122fb76-3370-49d5-8cb3-1d4cd514b09e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e4ae371-c7ff-4b2c-81f3-19137940f2e0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce1dd7a-d314-4766-be46-e36e066f9077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15eaf546-0b64-4f80-ae13-fd1ea6136098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7ff030-e0a2-4bb7-9336-b68a50515211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab5d31f-6133-4f22-b8fe-f3d1c9bbfef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d8686d-a3d4-443e-b1fe-fce8da63ce63",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4634753-2a04-43d4-bb14-780506c99cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109bee7a-cc8d-4c6d-b904-f9f724624dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dcb662e-74e0-4a41-8d70-b53a888c222a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "378dfa5f-5606-412b-97aa-e404c3e20550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec330c-ef9e-406d-9c68-72421c857a76",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7fb0c1c-f3b0-4f3f-b6f3-03de957b11c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7253aa7e-6d98-4eb9-804d-7433f9baddef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf0970b-deec-4fff-8f4a-b0ec3d488bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac83c9b-3614-4cc4-b8ea-c72940482f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c58799-c267-4bfc-8951-f5df1af3f4f2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e610022-b82c-4d15-a523-e6b787665365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f437efe5-5001-4a8b-93d3-8ec1b5309661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853921b8-d0d7-4a3e-b67c-1013ab47d574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96ff0d7e-23a8-488a-9c78-4e8e19d9a4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ee573d-e511-4161-a4b3-4b327db2809b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5145dbd4-4683-44c6-9750-d01d0f0bfb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff69b4de-cd4e-42b1-a1cf-62997249dfa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de5b0fc-e6e7-4ada-aca9-8dad7af237d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "baff5fc0-021f-465b-a462-3649eadb6db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46abd4ea-1cdd-4428-b35c-0a74ff13e1b6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109b9fdd-1314-4200-aedf-15891eb91147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e2f4b4-2ee4-46ff-80d5-e258d0589e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f089310-c17c-42df-a86b-d0d949e0cbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b86c5a08-006e-485d-9ffc-7e2eda90c7df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fbb835-22b0-4535-8013-4b48985148cd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a32a6bf-9020-4a7d-8aad-a488a2370fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee052c95-30a1-420a-9cc0-545574fed67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0bd79e9-2cf8-4e29-9a14-3c8a7cc7f6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e842360d-b7a8-4b95-a3c5-4fe7cff243d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef2917a-d2e8-4fe7-a6a1-c0450507d1fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85388fbb-1aa2-43b8-83de-cfa2323b5d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1142452-bd67-4258-ab7a-444eb0452f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde6a8b4-77fa-46f3-befe-8d764ce98e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a614d8b3-97b4-43b1-b8b4-376518e65045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1a07c-9650-4015-9ff7-5bc52cad0922",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f62a0f1-907a-4a54-b980-f03ee8f1b5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1faffbc-4792-4648-b513-44f5a4a46929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d60a784-dd18-48ec-af8f-3ad45d46304a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6b0bbc-faa4-4cdf-860a-8384e077da5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91408f90-71de-4d56-b0ee-e19cfc6359fb",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb5035d-ed61-43fa-a39a-573d46915b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bccbb4-b0c8-4117-911e-afd70541f441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafa69ed-4e55-42b6-9b0f-2b96f4a0d77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "633ad3cb-b7b0-415a-8371-9d46c5ad756d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f18905-0568-470c-a79d-7de9c8b53f35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0ffea4-64ce-4da7-b14a-55b491f82e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7afa32cb-6eee-4d0c-93fd-87f5560ecbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67005f4f-3a3d-45bf-b467-cbd3747f6fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0ea5ee3-ec11-4b33-80fe-b9f2d6e4aa58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d535f4c-b6c2-42f7-b41c-5ece1a71ee46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85acfc0c-43d2-4f45-a105-6960f3924873",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519a098a-e2f5-4114-9976-b0ca20c2bd74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b6d6083-e36f-441a-a9fc-ce546e3af5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e272dc-e0f6-4093-ae79-473011842986",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0c938b09-30b1-4da8-97b8-12213ca1fdbf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dbf62c6-c07c-43df-a802-a8f675f4318c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6e1c9a5-eab5-4988-bc5e-65796d60998b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b18f5846-6d75-4cf9-83a0-cf8fc4f1d185",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b4e013a5-47ff-492e-a87c-0f218d60a42a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f09713bc-72d3-430d-be5f-5c49d5cba947",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da646514-cf8a-4fd5-82bb-cbc8abe70ea4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7eb5f752-20aa-4ebe-9c01-835eec0e26bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8886ddc8-a9cc-444e-a0e4-e19cc0c8a898"
                }
              }
            ]
          },
          {
            "id": "64ca0c5d-7903-4234-96bb-fd70aa653af9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d75c5fce-ad5c-42ae-872c-8c2910c35c83",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e2658d-4905-46bd-87e1-3e44234b585b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9db93af5-2ada-46e5-8470-0a8414bbe977"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2029b9bc-d3f8-437f-a886-0166ce524386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "feb36e6c-2912-4299-9147-2a01d8d83115"
                    }
                  }
                ]
              },
              {
                "id": "070e95c6-296a-49d2-90df-cdf515df6601",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f17ad60-75d0-4075-8811-16d91b879024",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f5560dc9-afda-4501-9a0d-b76047481640"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7b058e6-c166-4eea-a3ff-e9925766f623",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "672ba63e-26c3-499f-88d5-01136623a480"
                    }
                  }
                ]
              },
              {
                "id": "250d1f71-ee77-42f2-8b4f-f046508c43ac",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a830d2cd-0c9b-4698-ac19-2ddde6cab274",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8140d55c-4d07-43b6-93c8-8907386c9381"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1369ca02-a611-4d93-bfec-66bfa354d706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cfe59e23-8c8a-4f8a-9bee-81b9d459764f"
                    }
                  }
                ]
              },
              {
                "id": "329102b1-52ab-4816-96e9-94d328fe87f5",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "391939f3-f10c-4afc-b71d-c82aedaed8ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8399cca6-3979-4e03-82e5-880de893d46c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f7f9654-56aa-4863-9f1c-931359d60b01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7c40bca8-b400-4c59-8718-c442824013db"
                    }
                  }
                ]
              },
              {
                "id": "63a4af9c-e3f2-4eb2-86df-462657bba298",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6840cf5-6734-4928-a009-9b4b39375bbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f636f517-98f9-4060-9bfa-b0bdc2ea954c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f40dad61-2635-42cc-83d1-b7578c0eea8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cffbaca0-0d4c-4212-87bf-e269560c9eef"
                    }
                  }
                ]
              },
              {
                "id": "d397d9b9-3397-44c8-a71d-31781ece2701",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56a662b1-7982-4ba4-a96c-f0f065f6be01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4680eaf6-909b-45fc-a346-effa0d1df520"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da42d5ef-5319-4fbf-866e-c3c48c4ae49d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f18cc545-cc60-411b-b1f3-6697667ee48f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e368dc0e-32ad-4a19-8fd8-930924a84871",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cab38366-4844-46f2-9d68-46d2afafbcaf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "590fe5f4-19fb-4c27-9979-35de1f96f744",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a91bbf81-70bd-47df-87fb-5f25285bb990"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565768d1-b42d-4273-9861-b2eb05d4df75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "18675d3e-9aca-44c0-a921-3479c8da2a5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b2dcf8e-d514-4b8c-a5c6-585d00219a26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fb78cb5-ed55-43c3-a791-0fb084b31691"
            }
          }
        ]
      },
      {
        "id": "32cce0de-1d98-4fc5-9c28-ecc575d72a83",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5329a8bb-afc0-42b6-8f34-486216e261a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad4342fb-e18b-4b42-8011-9ceadb3dff12",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "640975cf-427e-4c2a-903a-6d7670656b26",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16e6762-cd83-49d7-898f-25b9ce54dd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f50ab6-388b-48f1-a83c-5c14f53cec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dce1cdd-abe1-43bb-916e-0c355733b976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "978e6fc8-dc9d-4201-9fe3-d2e9c1b7919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1012cc4-cfb5-40bf-b90b-66a8f90fa024",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3100e9-097c-43d6-b42a-2f549e7c6ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24807a3a-1462-40af-b536-95f8f9e97476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2d16ed-b190-4922-9342-1dc89c61fb97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40364bbb-a7ff-466c-9387-c378eee4dfe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1001f4-f82f-4a0f-80f6-e989aac99f6a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae67f980-8023-4bdb-a5f8-67f81a3ecab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63683eca-4745-4a02-8f54-0b406e63d72d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543626a0-b6c7-436c-a933-837393f0ab71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd0a02fb-3b12-4da5-8afc-912b3db8a8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a78739-22f1-434a-b337-8d713ecbd51c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02253813-f254-4005-8aaa-5015d8f87344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fed665f-269a-4c33-9990-072e06f3f7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e30749-ed1b-4caf-9bdd-5bc85627372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7865667-f7f0-430e-b214-3cb954d440e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a815e7c-e57b-44a8-a08e-5c2c584378fb",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaae020b-3b4b-48cf-b05a-2fc64544ac3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7aa7aa3-fd5d-4942-957f-33f1476c5741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee02d41-169d-4094-a340-9a21cd2041ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aba9bd97-474b-4106-93b4-e4cf768b50ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795c8ed-7b51-4a30-b191-df28b6c68b91",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7173d043-e48d-4414-a664-84cb1d92e0c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b97e08f-6189-48b1-8c08-3ebb4f600864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd86149e-06a6-415f-9991-5514ec431199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "def3a6b1-8eba-4a4c-adc0-1dee112c4001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5d52fb-e5bf-4c52-8a72-2a51d23d6cb2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9386cb27-ef94-4cc2-adcc-049ad26c7c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd908aa-a5d6-4950-91f4-23691de1dea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13829db-0cce-476e-b7ee-226e8653fb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "06d2c820-c393-47ee-b04a-abb9e3293ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e1c239-d59c-46b9-976d-b8f4d60630b1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b75e04b-7001-4e9e-9b52-ffee36a46c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39308528-4995-4e08-bd61-2ecf6bdd54d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74645834-050f-42f1-aff3-b90f3455e364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf8b5a1-aa53-425d-8d02-6ba072734ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4bc318-e0a5-4eb8-abae-fc83621a34d1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9707a71e-acc6-4095-8af0-1c68d34b1599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8edbfd1-5ec4-4798-b6d4-bee123f19032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4561e16-b158-46f7-9139-c7001f5c0152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f683e41c-9669-426a-a992-125ba46853f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd365f17-f64f-4a65-89a1-989356e24028",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95d9449-f037-4442-9223-b331421066c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c058d4-4a30-4513-bc6e-a28287f35a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fd8996-2a3a-4f65-ad8c-b273f7955f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3967525-b3a4-442e-96e8-28e1a520b71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8545f563-4491-41c6-a750-4ed505c9c47c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ace05f-ca80-4dd8-9600-6b564b918be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389b985e-92c2-4acb-839e-19260dd24eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d169213-cbd1-42c4-9e42-51073acc72b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "18bfd32c-f4f9-4b08-9d88-023978d7b09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f090850f-c9e9-4881-821c-82fcbb420655",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10546153-8920-4a13-a3d6-711806539c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c796d3-9b0e-48db-befa-ec7128212c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b354e-b6e2-4eb6-8a16-f9fc8b4915f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35abd957-2081-43d7-a931-1dd3546c7b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3359d3a-6be8-4792-add0-c038a446e9b3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc50a04-5d84-4cc8-87b2-ff15bdd377b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f122c6c-3e9c-47f4-8cfd-23d3c9ede03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cb4f27-08f4-4ec6-8756-c781460afbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a168267-0cfa-4b81-a420-d55007b50c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1264e92-837b-46bc-b46f-688318eff011",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20595347-ab79-4396-85bd-de25939bab9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "927118d4-93c7-4d65-ad16-b8cc4677fda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef11681-fb24-4cc8-b3d6-2416ddc6a6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c91d8d-8361-49d3-a07c-a1c272a30213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe74d2-19b6-4607-a150-230098cff3b1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab629d2-2369-4990-8e9b-fe34725da411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c64a188-ad71-415f-a84e-552b604dbfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e12393-23d0-4293-86cb-788c5c704c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "aeb03434-20d9-4eba-acf4-539dc7b69565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96183985-17c3-4ce9-b134-aa0cd0a2bfa8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9989f49-f7da-449e-9353-0093d583d9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca071a7-3cc2-4cba-a58d-009a7a53fcc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb7879db-044d-4092-8e0a-23c811f28e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d455d5e-96ea-4edc-a691-5b7ae3a4caca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685bdb8b-24eb-4f3b-8c0e-e36a0ea46a0e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a842db9-c4de-4442-84de-e700310706cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fa4d3f-3358-4126-a0b2-d4e1527222a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c2e67a-dc94-48ee-959c-c1b718bb57b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe15b35b-ce38-4b1a-951d-37173b6b6153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d129da1c-8319-4f1f-aa37-1e5fae7704c6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b59e686-a215-422e-a069-8b1503dd85b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be77bd4d-db68-4466-a6ac-2614348b0aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f847683c-86ed-479b-8413-4b268b9220c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e67525-984e-4abd-a0d4-99972d4d41a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec18059-cd69-419a-9181-e9b6b7355e6f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a42a0f-73d8-4fd3-8644-31bf8f56389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5978f4f8-b1d1-4ce1-916c-7072db727ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a18193-a733-4fd8-9b6f-f5f46b624d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2385a99f-b240-4f64-8122-e6ee755614fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd27246-a6aa-45f8-b98e-81f4cc2586d5",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d8e66-017f-4e87-8de5-51d25f6a9342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe2ade0-f7bf-4469-8c1e-c574c5e0b329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d0e172-e59e-42d4-b6bb-9e7112c36b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a66342-9362-409d-a8a9-b435aa0ba56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717b895e-9fef-4297-9af4-057fa71c03d0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bdadc4-b853-4a68-b626-32783013586b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df97b0e9-5a94-4b20-8489-090392c355c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf2aea2-73ca-481c-bee3-935fb2d6c131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a0c925-ccfb-4757-8815-ba7dbdc70ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f503892-13bf-4f79-8bd8-ec38c8a8e96d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdb7796-6928-475e-a78a-1347e682d4d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0b05d6-d510-4168-9278-5d837335ac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddf60f1-218a-40d7-8db0-47557331ee77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b7891a-fb2f-4f31-accd-a36a8333e2e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4714bfae-5664-4c9e-8131-4b72767db1e8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2618ae-cad3-45aa-919a-1f0a13646104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f702a998-390b-4a90-ab3a-04da271ad378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9097533-5424-41c9-b4fa-08b8d188c677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64aa312-573f-4838-b43a-d4656ac73c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cfb838-7eea-44c0-82ec-987b06299ad6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3b9880-4271-4ca9-957a-b39218adfd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548b30f0-f4e6-43ea-a8c0-02f9903f3ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee154d0-b956-423f-bc3f-b8da615be9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3187a4d0-8ce4-4d55-9989-8a3caa5d43f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d4305c-28ba-483d-bedc-83bb809ab504",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4c5f2-19f7-49e7-a48f-e316d6ddae30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d66ddb-0e28-4ff7-becb-12c542924929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7214082b-67fe-4203-82dd-9abd528150be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79516da2-c8db-410d-a21f-50a8dd107c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee075a5c-bde5-49d0-8714-b9d9b0ad8170",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c479f8-a10e-4c7c-af2f-65682271d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47cdef6-dea4-45d3-abaf-80b0fbb1aead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f35cdd-741b-43df-88f3-61f03a86c94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3460f0e-2712-4cf8-9e40-ff832bd1cd21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ce223c-694a-4b8a-a202-8283cc6e0629",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a23c83-9e45-4376-8c47-ffba487f4438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4170a578-0625-4476-b3f1-2508284aece9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe77076d-8e44-4c98-8095-c88b4f9fc660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6353630e-11eb-4a8f-bd8a-ba8c28b8d529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de541f00-c5c0-4be4-a42c-a6abd941a483",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6fbcf1-0a4c-4980-93c9-4c64a05e812c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74693494-8023-426b-b1b0-0c31c8e25985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d5a3f3-1e51-48fa-b1a8-3191be0d9c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43cbcbfa-6836-4048-b650-7b843dba4902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81e7f2d-3a67-4441-aade-62552b8513c2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d84948-37d4-4c80-a7f0-673252b405f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e9e880-f29e-4004-a529-aceed424d7f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd83ce7-3ecb-437c-ab91-38abfd5d4d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f027d52-9e54-4d19-b416-104d79995b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c489e14c-7af4-424a-9a6c-dacec4488c46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "331151bb-21c5-4cab-8e4c-fc1d29371d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b104775-b60a-4ace-bca0-a850a23c0abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d8784fe-27b6-45ab-8769-352f924d1174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "422ff95e-85a4-46e7-a7c2-76e117ad45ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae220de-f0f4-4dd1-8cdb-3e8d1a1b1164",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5cdc23-df2c-4907-9814-cdc40b14c68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0418e93b-3fc0-40cb-acd8-7bd638631d3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185601cd-6e63-4c2a-be26-d9b9c93d5efe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1202e92a-5ebf-460a-9aab-d33d91652275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db815f6-ecc1-48ee-88fe-8b915737248f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b227f1-b198-4b6c-8b6e-981fa8e0bba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d25e9f-7df7-44d5-8602-e80bc7a6958d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21138f1-54bd-4dce-87c2-86bf6075a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "128c19aa-7435-4623-b178-d892f9f9b664"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "afb5c9b3-0ff3-4048-a41b-bce72436dd41",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b9c0183-47d6-4d36-926a-0714ccb50354",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb7e4a1-91d3-42c9-b164-715d1f5d4bb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0c837b57-9c76-4da2-b3e7-7f54f871ac20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c2edb7-f361-4070-ba21-72a825ec8df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1aa38cf3-7223-435b-9294-626531bc5c35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afeb300a-5269-4050-80fd-e1939c6b8daa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4ae5aa8-3c22-460c-bed2-d11a844eb74e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be21376c-f63e-4ae4-9a3c-d89c761b482b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9d5faf0-992f-4a42-b8ad-5f614c45dbc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e917f360-54e3-45b3-bc62-542894adcdb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c39c3e6-187a-4bd4-9345-02b9c56f99d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f948389-1fc2-4b99-b320-318661c875b8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5592191-8ae8-49eb-b257-08ea7362bd37"
            }
          }
        ]
      },
      {
        "id": "79ca6852-f629-4aec-bff9-790e243d349f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ccb70860-2f01-437e-88e4-0697db2762db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf660d3b-288e-41e8-b0dc-3aa08c2d4a5a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "79391665-58b9-426a-a10e-de98aa6a33ce",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c905b-d5ce-423e-a692-a873aa10341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ea2125-8123-4a2f-b1fc-0666260d8ad4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151464c4-b375-4a94-b387-f5853bbb22e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b96ba2b3-6fd4-4e9d-b144-17614bffebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94052744-28cb-402a-af88-cf542bc97a95",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a977138-be4e-4619-80e0-e4bf1f43a6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993b108d-0f14-4ddc-813d-2043256beecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dfdfa68-9dd5-45c8-91be-dce35eb5f88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8dfa96-dd65-435c-9f2b-345d675e78f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7ac285-172a-45b0-ae68-6b877db277c2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65656ed1-a21d-417e-9adf-a924d026f198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966003a1-8005-4ed0-9009-714c2349f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76c9416-bdfe-4d4d-850f-faa2eeeb892a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a87d23ac-e254-407b-83e8-d1e53a741786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a8bc94-064c-4fc5-b338-4cb851d0b7d4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce729e-6427-4440-9393-9a1f3ffb294b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e58ee581-833f-4575-9e60-5d316fa1a047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90743a92-331c-4689-b6e5-9bfb077c7e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a31b5317-7f6f-4275-8bdb-581681c2e19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8692735-c610-444d-aa62-bc4d66a3cf46",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834f0291-ad02-4685-b3a3-b7baf04af491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f43677a-e8bd-4658-92f2-bf8b62ccf01e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febf1091-6afe-4e4f-9989-341ddc2fb0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed074ddc-500b-4cd2-a606-432c54ecb589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f87e1a-1441-4d3f-ac37-476bbc04e6c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb05021-38d2-4239-a650-007807f81d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04f2ff7-9071-4bff-8907-89d5ccd8aaea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc66b2fd-f4d1-4b75-b58e-1aa60ea7fb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c00cde-3029-4590-8f25-9daae8fe2cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a93249-a564-4115-bbf6-4502567c90d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b770cddf-5a8e-40d8-b55d-ec98e4616801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacb32f0-8250-418b-9c8f-4e3c5769a4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e43318-a4a7-4dc8-84f2-246d3bbaf1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d4e895-a695-469a-9ae0-33530553d5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7f0dda-14cc-4524-8d5c-4b57f3ee1908",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9d542b-92be-4b8f-a97d-288d2407cbbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a2b5e3-c23a-4839-9a2d-e674d96dbc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e0a57f-ab6e-40a4-9191-c29021f4be07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87573997-aac9-4d94-9569-ef3d01029c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f35880-10d6-4273-aca2-bd3ef087d35a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a897236-b070-479c-92b4-0f32d0073c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9c0172c-966a-45a0-a8e8-493e85a5acaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ed085f-aecd-4721-94ea-fedddeb9021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd91ef23-16c9-4133-bfed-ebcda45def9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb99119a-d816-47ca-841f-90b871d5e311",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae2207-185e-4609-bb7f-23c9da4c4f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b3f7ea9-b2d4-43a3-b4ca-e05f1ff85228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56742329-8114-4319-8879-0ee29c86a476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7a45b7c-c360-47ae-bdf6-d3eb8c89c018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e838465f-6342-47e2-b6eb-13c642fd54a3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ab8ba6-beb0-46a6-ad7f-a41484026c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28102967-6121-40ae-b96d-31b54c2de0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220c4fc1-e917-4e73-a6bd-1db8b9f54ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ac68a172-8524-435d-a2b8-2e970ef8ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e146514f-54b8-4882-9ec4-cc940469ae54",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cafc58f-5437-4e48-bae1-a75dba5d311b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c41f69-0ca3-4967-a859-cb2ee75739d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25559119-3cf5-4ba6-9827-ebebf85909fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e0eab0-bf5c-4a10-9e26-81aeea5d4c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7798e9-1e7d-4605-b3a7-84fcc678d4c2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e159efc-1681-41c6-bdb7-14698c1234bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9394228-8b7a-4f44-8f16-74cf33e92c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ec925b-e156-4a56-9eb6-42e59b072ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc35316-a699-48d5-90c3-1b1b866957cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39a7bb0-6388-4d32-8f8e-6aef7bf37507",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f4b22d-d99d-43c5-9826-181b2bd0b11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94688332-c304-4de8-9b76-44ed1dccb3b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7f316b-a6cd-4681-b4eb-37b3875dcd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b7bbe7-af60-4363-ac3e-0266efc2ff98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d1c21e-3eb3-42c7-ac4c-6cfd1f39218d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67be4c5-7394-43b6-bfc6-816c294dc743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c502933-cc2d-4fe5-a2f7-80265d02996f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f1c8e5-ad5c-4b5e-a7b3-a6e32199fdfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a75bcec-615d-4674-856d-9b4ba242cd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd11a414-41d1-47f0-9b3c-ca083ce8dcf1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0be2f2-5409-4c98-8776-22a62ac4b857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674b5ecf-519d-473a-99cb-711567bcebd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5deac84e-2eab-4123-b678-364135c3856f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "23330410-54d9-4c08-ae98-5170629c47dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37ad441-5d19-474f-a35c-b7fba75414cd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30653482-ee24-4f1d-bec9-c41608da1ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3759e853-9e33-46d9-ba0f-957612ed2ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24b1a77-0aa0-4df1-b782-a204c41f369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "382ff849-b526-4199-9f68-7cfe41e74f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89903b3c-157f-4a3e-9dac-f8f7ae3dd25e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c49346-39f6-4750-97cf-fc223dd5c4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a6f769-f19b-4c4f-84a0-e21bfd758061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bd6387-14ef-4cdd-aa7b-6d0704c73bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "05085ed1-b60f-47cf-929f-af8dd3ca4450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a918f9f5-e991-413d-a262-450fba4a013b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084b5d7-a7d6-4a48-87c5-e21884bd380b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe94dff-de15-434c-8056-5f4a442a587e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfcb961-16cb-4241-b501-af303109b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e78b1a-c088-41ae-824d-8feb0ecb5f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c8f98d-54ec-46e6-9636-3b2bb467f6bb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785eb7b6-a035-496c-9ec3-4bc841684374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee139e8-a447-4dc0-85fa-bbdc7415d7c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5125aaa-4407-42ef-bc87-f5a02a0d4b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8379dc1-3e81-40ac-8dfe-2ef78d98cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272e8a67-6fd0-46c3-bee2-d6917c0a0d87",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ade2f7-a6d4-4a28-90a7-54c92c8bcc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80189545-8386-424a-8e16-cb0dc69317b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd6acb0-0579-40f5-9751-4312f8c96d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf5ba43b-9c33-4c73-8f88-8735adcd441d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a77644c-4ecb-4e0e-a06d-7218a30f4fde",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904081dd-5080-44be-9c8f-7a38e7225acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7655cf3d-528b-42de-a395-bf3c235f7471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8500ec3-5a9c-40ed-b76a-c0e5fc7d5709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f6d324-5f09-4cba-9089-b969b699cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ecc0ba-bfa2-4185-93cb-da6f7a6d9aab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6afbab-d399-4c4d-be28-e7b12c959b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e83ecccb-291d-4d87-9cfa-2c9d4d7b5c10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efdfa27-184e-4d30-9900-8c91ca05fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f34b794-e177-41e6-b840-094bc5024a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75312e3-df2d-4e58-8c17-1b3074dc682e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2956b047-0296-4be2-a167-d6f06f183fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e81b3ad-3030-4a27-b60a-584c77845ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f631019f-71de-4785-b7c4-729b8802b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a60271-cba0-4a9d-805c-90f4045617f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f818b314-ffd1-4c16-99fa-c00175c30a68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de694977-e2fb-4ddd-8a3c-4b8446342f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0ea6b0-0149-4c48-a480-40682bf5919c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0584b8d7-f5e7-4990-8f1b-4d7cd4130ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb214f3-13a3-43de-8418-893ab14e591a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4608e23b-5e49-4f5c-8694-6809acc75215",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ca0f55-8849-4201-890c-50d3ff6f43a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab621f3c-8eab-44e5-972a-6b925150dfee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90888088-d230-4c9b-81ef-3c45f1251e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6413f04-9f30-4328-a262-429d5ae2e0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7d6a5a-7b60-4ce9-b015-7bc16e71cee3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1d8ce1-094c-4eb9-9b48-f64a8e7c0561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb711aa-dd2e-4200-9bb6-ac02dccc446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65df5f92-9f68-4b40-8f58-b9cd4be1f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90db2cc2-86d0-4be4-a276-8fa46a9386f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21b8027-305d-48d3-b0e4-7e377a67a358",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc003d66-07b2-4874-8f2c-ba4b8885c7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5231d1f-f9de-4bc1-9a2e-f41f34df9c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cf6508-de4c-4ae7-9d44-7ac4e2797377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76422e09-8a16-426d-8b03-b85c4a868dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee42e219-b79e-4de2-b097-0cf0bdbb7c23",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e646db-da6b-491a-99c8-177a7001d17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a81d6f8-a155-425e-bf65-d79ba1f0f363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dae2f2-5056-45df-bd54-3bbde04653ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8582fdcd-5496-4dd5-a24e-3e8a2f8c042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8d11c4-d2ae-4fa0-afad-9003105d1a8a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d446613e-f41f-4cc0-b1fd-543e47a77955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0522143-d153-457e-92e0-d9431aace56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b8dd77-d687-4f8a-8631-bf5ff2c0fd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5721b977-af0d-4b49-b936-d47b80b66141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f2ec31-39a9-4db6-8e6f-07aeed07f98c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5365674a-a02d-401e-9e55-fb7241862aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e01b4d0-3173-4ac9-95cb-8c938df4d67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f962305b-0b0d-4f3c-91c2-db32b98a3c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929e7f2f-d192-4ab9-88b2-f47dbb06a34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e6bf43-c06b-4c75-acd0-ab87ca14f7bb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea907e-e823-424c-8708-ba58460d1fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e15f92-c55e-4d6d-b0e2-565baad653d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29eed47-9b6d-4fb3-bf1c-05caa7a0be77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7256bf99-1566-412a-a1c6-fed31c2bd41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cc89fd-cd57-4ff0-8981-6db8c5dd0b36",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b689836d-5e6f-4aff-b9bf-17db30ada6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd000c1-dba5-4314-b07b-37ccb34d6953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6ae3a9-d6f8-46ae-ae5d-0b4b08cbda0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bee1a04-6dc3-47c3-acd8-12e4d0009310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d642272-abe1-4213-93ee-ba01c9632f2e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df038dd-0024-4cdb-8663-1e8c265448fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9744488-fc1f-45d7-b3b5-20fdcfdb992c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2f6a50-d392-44c4-9d0a-22535a6a11e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a746e0c-28eb-4099-b3dd-99a8cc6770b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746155e3-ba00-4f73-958f-86a8aa7f7e5c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44d8c286-de30-47bc-a572-7fbde94a6b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9853edf-ff81-4f5d-aac4-f391e0559e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4eb27b-c4c5-4fcc-8a13-7549a60b2aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d780541-7e18-40e4-ac27-60f79e2806e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d813e733-7621-45df-9d64-3a839e9dc3b9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71bd26f-e69e-4d5f-835c-4e4a51c4193e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41892146-165e-4d6d-bc1d-558cbe8f6af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0750ec60-e408-4b94-8c25-fae1e318945e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34ffe46f-6f56-459e-b48c-82e1e989b12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a32a3c2-3058-407c-93fa-d0ce4ed02ea5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4962c266-d1a9-4248-a116-6d5e85656c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad97f842-4767-4a4a-b498-e0fe91cd8bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de93935-4e3f-4ab3-aa0e-26fce538945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297b2932-aed1-47ae-a471-385556745a31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c759c95-720a-4c07-aa65-c25ada997148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf4a11b9-8946-4640-94ac-31bb574e90e8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259858f3-fab5-4a9f-8197-58430bb87065",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8b53cf-d52f-42cb-8871-45c22b203121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168778ab-eafd-4c8d-8748-b27ea7f20225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a6b03c5-3c1f-4c25-ab4d-ded2a0bed35b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7aeec9e-b532-47cb-98fb-83fa3b96add7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfe559ce-4340-4f8d-ad00-4e0c7fe7aa0d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23235eb3-ddaa-49a3-a00d-341a6aa84fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcacc052-c410-465d-9883-c32f7f98499d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "159b3ae5-85b6-4736-bf93-e08ec56b0d39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e596514d-a7a1-46c5-85eb-67d3a57a82df"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f3c6133f-3493-4270-9239-7642d01902e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a2aa40c-be64-4874-b4d4-a76d61b6c662"
            }
          }
        ]
      },
      {
        "id": "f9f9754a-f367-4a43-92bb-d6bcd21a2e3a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "43d13bb1-51d7-465c-8fc1-e70c44f4c0bd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9d7148c-8ff8-4c18-88b6-cf5108c88146",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24f7fe30-d45a-4445-9eab-eba06695e4b1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e411a29b-ddff-4a68-ab61-d093eb4e58f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da19670-41af-45fd-baff-a93b25df7f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8c1e54-944d-4796-8b19-1ca623726da3",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d507ac4-c146-47ca-83ff-0faa43184391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afcaece6-bde7-48cc-887a-f12c26479bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec1f186-181e-4379-a874-799977f463f4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aee2e6-2738-40c8-9cea-b629e834091e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fb7dcc-aa81-47ce-aece-c72747a7a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3396470e-f3c0-4818-b521-b2bfa5006dc8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a938d193-350b-45e7-9d83-82fb835c09b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1fb9533-0533-4e44-83a5-63db76226c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1842c324-e8bd-47d3-9e77-c5ee6afe0b27",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b076f8aa-1b61-4654-9800-2c0240ba6134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7411fce-8f5d-49dd-900d-5613588e23e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802b9a94-e280-4a35-b877-266f1b7cdf64",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a0ccfe-021d-47ab-8e63-a44f3f6d70a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd22e5ea-12c4-485e-acf2-9dc53fc6a961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f8a8c7-d5bc-4461-8e87-37fca73bfb47",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b661f368-eeea-4395-8ee9-0f021a1d40c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a71364-777f-482e-8487-215464344587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a4d7c2-464d-4db9-bf36-19dc5377e5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc2e319-f79f-4b70-8110-35ce9822af57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0335648b-4594-44b4-8a25-d09abe9d87d4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f9ea1c-624d-4afa-b3c3-b276f7266414",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e91631-71b4-4cb7-8a23-844aaceaedf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016aa33a-3495-4d99-935f-a898a11cef08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5482ef70-8a96-4dc8-a726-5da3582dde76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f5483e-a076-464c-af1f-b8e0ebc20319",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b360f9b-cac9-47c6-9e97-17810e86b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35f5c639-6767-422a-aa21-6e2bf39a314e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a20c31-a099-4840-b886-380f2c70dc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7ea625-b8b8-4542-866f-ffd36e0124f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc041729-e5dd-46ee-baef-797d37c07638",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af6fd03-9ccb-4850-a782-0d293bd42e4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e19367b9-2163-4662-9bba-24bc0c4cc544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb169e07-5aa7-43c4-8248-e8510977bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960457b7-7ff6-4c13-ba97-1f142b6e911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ad649e-3af8-493b-90b3-0c9a125a0700",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87e2d79-db30-4de4-8dfe-337f586947e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a31def-5f02-42a3-a5c2-dc6d7332e82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600ddbb9-95df-4b6f-8922-c870f3a92243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20da2cc4-aad0-4ef0-8559-d285fcf4dd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b961a61-cbc4-45ee-b5ab-98be4c8695f9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f169f488-b7a0-4355-bc9d-44ac4069fd71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56d5761-4695-4b33-a4d7-4e55a5991f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bc7e95-ec0a-4abe-95a2-96c8b2c2ce16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6cda03-5f49-4740-9625-d151d16fea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af308a4b-cc4d-40dd-8625-34f6b67d284d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951645a1-e866-4c46-b459-3a31eb6eb740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b91114-2ff4-43a5-bb76-652231e415c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaff077-29df-452a-83c8-91de59b7a5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "058e529e-7a8e-41ac-8fcd-8aeb61b74243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69dc5b36-f29b-4094-b1cd-ebf8daae54d8",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3925d55-511e-45ce-a9e1-5207e5c822b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f908f6-25b9-4486-bd75-b55fc14fbefe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe7ac25-7b55-4643-bd08-d3ebec16f006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2011e432-ba11-4b5b-954e-260e24e5aa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73707b3a-463b-4cc9-9e24-184050217d32",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e651b48-d218-42cf-8088-de461164f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "536f1651-e832-4ef0-a024-e2acea889b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d14acd-0959-423f-aa77-46e0c787ff88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd9f1b1-d517-4847-a5d4-9bebbd1e162e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd354e79-1469-447d-9f86-77cdd73b5298",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd0f845-4be5-4db9-bb36-9162a1a47ee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1223d71d-6c4c-4387-880d-ec2d094b12f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8a3821c-ffc0-4c5b-84c3-774aa3b8ed32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f878522d-3e56-47fb-b19f-c3cabe4e5f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e40d06e-e8a1-4ba4-8598-c2c468ea9520",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347a6bbf-a795-44c7-9a4b-71c3035c0eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42396b50-31a7-4a77-8751-40c0bc90289c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f705267-860e-42f7-969e-5082a19bf007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c889db47-7f05-4e59-85eb-d1fe46023c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7be4d4b-8a19-40bb-841d-901f4a780b86",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77143089-a562-45ae-9cbd-a88578ced46d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b27786c-e271-434a-8a44-12ad481dab11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4dbbe60-b183-41d1-808c-80128e33869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54dc1e9f-13a6-4570-88ac-8c3764c8f006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3b07fc-0615-4683-a479-ef5e4ce99964",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69042b3c-e729-420f-b9df-7fecdbbace7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76083842-b2c9-46fe-84b5-9b465c1f4dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8146141-c1a8-47e0-a931-2dd6eee17f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ed3fcc-008f-4db5-8aec-5272ce29e8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591426ee-e686-4a48-aa97-2b2dc94d34e2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a83fab5-b269-414b-b121-837842489fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618d88ff-ac64-4db8-ba39-cabebba0b4e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8a913f-de08-493a-9dab-df44a308826c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57268f6c-11a3-4003-add9-7b93c9ed99b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dcaa955-ca60-4728-aa9c-a0a8ef7118f4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b662acd2-8f26-448c-b9da-a7210d33cae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f1233a-744d-46be-8491-3bd41a785d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f672679b-cf36-48e6-a9b1-fbf968255b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28b0b4a-c920-4cc0-bbee-7a4fd8e841ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fc94a7-07d6-4f39-8bf1-c9c306c1657b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fdecda-1a72-4d8c-9ee3-ae79419862e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a00e7b-ccfb-41fc-9e53-3956fe20e925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecc772a-26da-4ab2-a59f-6ae5e2e494c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aebc667-8721-4c50-96ac-74f87a40670c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb50f2ba-bd70-4837-8f02-c04737b381ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6ec08d-16bb-4dbb-9c5d-640a706fa250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee14e8a-11c8-4ef7-acce-8351c27a5dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e74c799-cbfa-43b2-a738-06241c4d655b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1528b160-45ce-4129-bbb8-a957578e0690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f421a75-2a51-440a-8fc3-64d9b2e3fb0e",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a127949-ee5a-41b1-85bb-91e0bb385983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50c7aec4-25c1-4793-a324-f9c23f1ff00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f91ab72-97b8-4bf9-8ecf-3f09296d327c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b417ca-d371-4406-8cda-a2eac608048a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632dea09-dd0c-4ca2-a98a-6df1bf58b4b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9daa3099-19f7-46e0-81b8-19f3258ea60e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47d4365b-d30b-4cdd-9f62-fb0ba60904be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b5a8ba-b3ed-4be9-a156-21aea3c014bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a81cc078-0860-4447-a340-7e30b691e8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497c5dcb-419f-476b-878d-83f4c0801532",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4765bbcf-db80-45c0-841c-ecb0ab01fd10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3cc8569-3738-4973-8c9d-f5d486f3da3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436e3d76-e181-421a-b42c-ebc7ec781522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ab26b4-1fc5-48d3-b63b-e2a54477d055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8e706a-e6af-47bb-b910-0c410b8be702",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a846fb0-dbb2-4a95-bdc6-646a155711ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8f90a23-ac6e-4e91-967e-e5d67775a43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16d91c4-d12e-4f6f-92b0-b5254e0e3b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42febd5c-a5c3-434e-806c-aa0d5c9599f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82794ead-23ae-494d-b781-c4830b70b1d7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c8be50-8fa2-4e2e-8b69-588a64fb406a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeb4991-edd7-47fc-b02f-c685940c7568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0842ae-8303-4273-a62b-d2dce397131f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05570ce5-c9a9-42b4-a2d9-ad5b7d130a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e51db6-8837-4355-affc-42fe1d2b0b6c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e112f73e-959b-4b9b-8ecc-f76be8fd363b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3f5ece-ac98-4f4e-bfe9-410a9ede23c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49567010-89f6-4aef-8171-423861df5acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6913603-aca8-4ca7-b5e1-83c828c6cb70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "828c05b0-e4cd-4aef-8ac7-344bf15bee15",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734ca763-aeb0-4988-8788-46b58c83b109",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ccf658f-b4d1-4193-af6f-5693e40c325b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912e4535-c00e-41c3-9e93-c31af9495306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c25ac78-37a8-4f66-bdab-3c28f3261b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44ff374-93cc-42ba-92d7-e575403627e1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51313fd0-8391-42a2-9baa-55edd49fa093",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc530abd-940d-417e-b098-2aea311f04e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06f4145-a911-41f1-a282-ee9046f60061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22692c54-8b88-45ef-a994-d55f5bfb5dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3803687f-0d7e-42de-adbf-a6649533a49f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ab7723-aaa4-42a6-9de6-2365f37420d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f5a3fa-b102-45de-8906-7935133ca0d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29690f63-0eaf-47eb-9425-8d3394fb6c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957a465a-9684-44a5-998d-543d1b5242f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0166f378-1266-4b50-aa15-5248968142ac",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ce5736-6b29-4556-b663-9ef3db608c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb4181b2-483b-43ec-b82d-d0b16fa60c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edae47fb-9c4d-4ad3-a59f-87002d623d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f907a6-f5d1-4679-9587-32246b8bd1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216a3509-bcd1-4eaa-be50-3af629a6ac3d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5428d-200a-4546-a8f2-96b4dfc3908c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c1b0ff9-0e40-4ce0-a6d0-1e49c4c54c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7279a367-5138-4609-bef0-3cadc3e212e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa174348-24cf-4c4b-8e18-8f2f9a9d1092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf211c3-393e-46cd-8b2a-9ce1c74b6de9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd1abef-8663-4a0f-81cd-61e83fa186ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfcaa3d-5fc5-4f90-a990-35f0fea3a7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a76531-bc3f-41be-849c-40872b14e837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e37849-386e-4a1a-88fe-58721501c386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330ede48-7e1f-419b-971d-0f1d445e857a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81c3596-5a0f-4b54-8db4-65a086d3df7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f1a43c-8653-48e7-a5bf-1254b99cd170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e785da2-fc5d-41fe-8f0e-c2c9c1925be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4955bf4-f9a3-403b-a27b-f653c7513b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2183acb1-ad4f-48c0-ab6f-25a31a3fb179",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efea475e-b299-4f49-ab09-c06364cc2619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0871b927-505c-477f-8dde-01311d45d36d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774d6808-281e-4e4e-aa4e-f0f6cb56843a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd7d457f-4429-4b8b-ba43-6f659e00a91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20547d4-0558-4566-ba06-b869fe54b346",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebd962f-ebc9-4aea-b0d4-6c31a93adc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c01e85e2-4bb2-42af-8c1e-5456e7317dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e46073-a312-415c-ab8a-77b2dbde3337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e0f4fb-b083-4ad8-850e-2961587fbbfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943df020-495b-4df2-85f2-ee9d6094b74d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa0fd1-d8de-4a0b-9285-14d308b73b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c447ec6b-38c3-4192-a4ab-529b0ff76ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0758954f-2072-40a8-acc0-929112bfe10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "193353e2-d8d4-4896-8bd9-99f0096edc4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a47a9e3-28fe-4712-8365-cdcc964c06e8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a01b906-47e7-4db7-a3e5-5cd08b7f1a94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b63ce4-64eb-4438-b51b-e30704d25dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83c3778-dc26-46fe-9d66-95c33727590c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56dcd210-dc55-4fef-9f9e-4ef4844d21af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea062c4-93de-4353-b7d1-ae7ea8cd0941",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1df83c-3e02-4d09-89fc-c33c3955c8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23436ba1-980b-4709-b910-8a29c3f479e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f65a02-74e0-4cf7-8b86-46bbd49a2cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29af6add-79b2-4823-a769-07a9d7e09727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f567a6-3ce0-482a-a8f7-13b0612539ac",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cf6bbd-1118-40e9-9102-73698d74f271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b660212a-6a6d-4958-bdc4-e76a30c4eca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5d2322-c674-47d6-b212-2e57d2792535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f5d5de-88ee-4039-8948-bbdb95588442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9572fc35-b164-4f13-a768-213a2f830f24",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05381660-ea7b-4f61-a9c6-07c1734b29c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5581b8-79c6-44da-855f-c0b1a9941b13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0e4aae-d820-43a8-9bcf-8ec58ab965f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3798d8-5fc6-4171-98b0-b09723a0bc70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8233111d-df55-4d72-9e9e-ff171070c1f9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da9dc4d-c322-4a24-a85b-9e7acc8828af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1776d591-977f-4639-b6d1-c15fb6ca0136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76c079c6-c536-4dc6-a7e0-1da2ecd9e31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c4491c-1de7-4d6c-8b9c-6be89f12bc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee91785-df85-4e2c-b7b6-4e0e76504c1e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44578c25-f7d5-4cc7-a174-3c8704027eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20411e26-0cee-4f10-bae0-f7f50e11b4ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372a1130-b8df-48cb-bbc7-93c1cfd59fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3da445-85c8-4d00-a3d5-9630c7d10331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcbb854-32e4-4260-a898-f70539b83f4c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9534a338-1076-4210-a2bb-ad67bed173a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "082aaaa3-bfd9-43e4-a3fb-1428cb00d343"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1489d78-4233-4322-a716-afd4ba9beaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b35815-ffc4-48ee-b680-e3961472a737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7658d24f-d9a5-4d7f-9d78-e1edb76770f2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2e7004-feda-42e8-aa40-1d3a57ffab22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d721d6-a407-4ae0-a642-3a672590d4dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e7b948-d8b7-4017-8252-55534c2ac3a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c723e2a8-2e76-4e7d-8b43-b8eec9553857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacd34b4-134d-41dd-9b0c-d788d855d1e3",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5fd7e7-c5cc-4d46-996f-8e9958cd1a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46bef190-3aae-40cb-a413-2cb364d0e12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71765b01-1822-425d-a6db-c55e410fbc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372d289e-30ee-4e53-b065-395dfb0a2e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859c5b88-40c6-47eb-870c-1d7fd466c8af",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29ac413-4601-4e1b-8fe1-2df8c1f4723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c458b807-df1c-4759-aa22-b5973c00c82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7512abbf-adf8-44ed-9e38-eef195f18fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df22bbd3-2a6e-4b19-a3c3-23bedfc9a8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae54caf9-bbf3-4f9b-8c87-22630545ab87",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79acc3d4-95ce-4665-aac9-b07331d33a0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee27ffca-c185-4729-98e7-64813ab5a48a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae916e3-2892-4108-9048-ce2fd51cd64c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77bcd492-a819-46a5-bd6b-21f73dcff39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bce83b-3794-41f2-8a9c-d7c3d22856e9",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180c53d1-2d5d-4468-bf6e-7691d7de3562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c441f5-06ec-4eb1-a65a-9efff2ad52c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d807ee6b-ffd4-4cc7-af93-4544f4ca6b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe45f6a5-0e39-477b-b3c5-d473c6aa162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60dc901-e7f9-4589-bac1-8714c7c11b85",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907f8e30-f7b4-4875-a00c-5cf286c2b1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f4f07d-0be8-4220-b4e8-b35c7939eeb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a962d120-b119-4cb7-b317-0c2fbbe938d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb60cbb9-12bf-44ce-bbd3-d226f28020ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493e906b-bccb-4ef4-b847-96072d644a30",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364dc48e-3244-46b3-9eac-6b419a3cf12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75160d07-2435-401c-a908-c659a4c3b31d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21f2dee-d174-4beb-a314-ade4a95eb143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abb71008-3ec2-44e1-9c1e-39d749de1d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fcbd39-3290-45a9-89fa-526c7ea4ff93",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1885ee-c0e5-4f41-ba8e-cebb6414db3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9824b52f-0906-4c0a-a709-7128c7b9657d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03858064-ec01-4e4c-a26d-d65d34f58e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e715a93-b77a-4eed-8905-75eeaff01dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01be373-17f1-4380-991b-2b233f0b9b25",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31b1f01-44f3-4aaf-b7e2-c645b68a6788",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0157ff67-ba4c-460a-b4d8-01ff6f52268e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b2fc42-a36a-44de-b8fe-aa0891561349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b229f67-5aeb-4a7f-b756-5528748fdf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4ba7fc-1a7b-46ca-833a-5d79bbe7e4f4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee4146d-d268-42bd-91e3-72d32c88703a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d0aacc-a594-4f07-b889-d53b016fadb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a6b491-fdac-4e98-ab66-44682a6ea83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c582620f-2ec1-4aa9-9c11-adb529fbfae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414d14e3-f492-4f72-9a56-f05f7edcdadc",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd1a87f-6d25-416b-b8c2-35d05270d0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6742f4b4-8c49-42ca-a76e-5c59947d3366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc228c91-043c-440d-a17d-16035e969836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733826f5-9a62-4c02-b3fc-1b3ca6f6643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a20ef7e-5c5e-466a-85fc-ebf3ade17a75",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6202526b-1194-4c95-b77a-64d972d4eac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690b20da-5ca7-4d84-acb7-7d33166d5601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8221ff-26c2-4548-af9a-aeead5f7f953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bc5464-cd1a-442f-97dc-e68d6d49688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc5e689-21d2-40d8-9f02-0aef4b23a6e4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a5d0e5-ac52-479f-b5be-acbd14f8f524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f291a575-ad5f-430b-97f2-ae468f4a280f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e8e462-ecbe-4b6d-853d-3e473e67bf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9964a60-4cf9-40e3-8dab-88e7a5a5a995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7320932-07c3-4fce-a4aa-d8b608cb0123",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538181f6-5f54-45cf-bc15-09395fe4089e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80d83e5-3835-4cd4-a0f4-c61da1291e6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e71ba8c-cdc3-4503-8a3b-05651f7bae95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4c2ca8-fd15-4a6e-98b2-277c72fadc0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a2a290-caa6-43bb-b0e3-37f84c9954bd",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd7fb94-14a1-4e90-b1bc-46058a1069cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f76c34-2e37-443e-803a-a602d89af964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01df47ab-36f1-4516-933e-6ecd194e2149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3509c4f-7a68-408b-966b-7c3d5a29a3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13280411-2f2a-43b6-be88-648918b7d1e8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e3096f-5019-4356-b95b-20177c8a69d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e252ca97-e471-488a-839d-0d9f43328149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe86ea45-e7af-42ed-a177-0bc80dd17559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72de6569-9773-4d23-a1ee-429fdd8abb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0250290e-f6ce-4776-ae09-c00c37132b0d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb03e0b0-1917-4f6c-9232-fe1fd62e66eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86ebdf8-d6fc-409f-b103-4464c50120aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb66bf26-c7eb-4c2a-af12-04767ee79ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7955d5-ac31-44c3-80b7-4b51f743bdcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ed1ea0-777a-4edd-9b0b-fda9fe25d67b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be19aea4-5138-4a46-b50f-9fd6e803ed3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a4bb8c-fdc3-4e0c-9a7f-397f9e1adca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de82b50-99fc-47c0-9457-fc38989891d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b5cef2-b31e-4e3a-8c10-54597daf2d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28548789-0de6-4339-9fda-38d97a26214f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4e700b-6aee-4d38-9eea-1cf22ecb517f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5534d0e3-6b88-45cd-9e06-8235cf7618a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4c224-fca2-4bd8-b1d7-2e008bfb0a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cbb95e-bf63-4bc8-abe5-334377faba24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c48a67-5c9b-432a-b1bf-2af4541239f1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b29623-0626-49e4-8175-75cbffeac6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "702a87f7-71a7-4b91-9257-c990d0149397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ccae06-d283-43c6-a7af-87947f568b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead3894f-f37c-4682-8377-876c19259197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354afa3c-c8dc-41e2-8488-2133c3ab58c2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a050f3f3-0dea-4c18-82e4-1d2e4fbe5d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3e4e97-8f4f-45d1-bc2e-8ad6cfb9785c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f134127-f188-43cd-ac02-b207139c31ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e20be85-94e0-47f9-a1a7-d02b32673298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716183ce-a278-4e02-97c9-5cdd45dcc9b3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de972887-ab52-4a81-ae2d-b875a4d984e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beb39233-8a0f-4ca4-874d-cf3fba0204f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0605a3bf-1a9d-4dff-a8ab-c11f9ffc8912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "794448e9-2015-420b-bc76-68d69c0ae51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3c70cb-b9cf-49e2-a2b9-44a3fc9ceec0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def24c26-ac74-4042-817c-89831aade590",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739f42d0-ba2a-43c7-82ad-cab7243f847d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a770a258-1265-46d4-9ff4-d4058610588d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d77e01d-7704-4d02-871c-46a27abab7ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e57f4a-7b11-44d9-a5f8-2339eef61c49",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146261a3-55b0-4362-b3b6-081fd2eb994d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f388e60-3247-4285-a08e-2aff944263a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e44a3f2-8d71-417e-86e2-fff2ac5b6143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09b353d-4943-428d-9fdb-f1c12f25b33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a361d427-a40f-4a2e-b2e8-c7e732bcdd20",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fea7414-f6d0-46d0-be61-881363001dff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112eec5f-d8f9-40b9-8faf-51a2a0d817ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6acf55c2-f935-4084-a36a-4fb25d4b15a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd55874c-1277-4d1a-ba7f-023692cd24be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d134394d-e0fa-4af3-842f-4d039ed148d8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd5e854-d936-4d40-a74f-57a13acb662c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79edf7df-c58c-4308-a0fb-395283a52bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "192561fc-874a-4a78-8944-bc888d630588",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8ba4675-f7cf-4d93-a374-2fac56db4230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179bcd97-ed80-4243-b895-6ce95b1a4509",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede11a61-09c1-4a08-a70b-5fc6d1d258e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d90dbeb-d7aa-4c4f-a338-ee0a4ba8bcab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fa674a-7d28-458c-ba34-872089c3e6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077524d3-42f0-43a7-ad04-c2db521fd366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58aa53f-f2ca-49fe-84af-e6337ac20d66",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23682308-07bf-4ab6-846b-8fc10f74879f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3f041c4-1645-49e1-973b-aac5398c5634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1780edf-0a61-49e9-8e4e-e10abfacf96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7245dad-c963-4d71-a66a-7a1fb12a0dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158424f-0fdc-407c-a003-c38c85126fb0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080915e-6f24-44cb-abce-2fde390a934a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d45310-f230-4e5c-9bcc-b62b4f511649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53a4b87-d255-4b71-97a4-b2f4a54d6b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d985f20-d36a-4f64-812a-2028cf482ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0489437d-ebce-46b6-8155-87801abde304",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b259144-4956-44e3-bfff-6cf8c4776bbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d02572c-c9e8-4597-b247-c4f3d20e7365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8830e843-55d8-419f-85b9-5cff405478d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a8749e-3e3f-43ab-8498-8fc663792acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590cf2b0-357e-4aeb-a74f-a284d60b8237",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e5f415-34a8-44d5-a279-2fcaa2cf111d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e248a31-4fce-4035-bf95-f7d74b46ded7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6e3700-63f7-413b-83b7-ad3fb610e4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a597ba3-8e3c-48ae-ac92-4e7a34dc7de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a39919-63f3-40a9-a8b5-94d1227a54d8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da2980f-92a4-4f69-bba2-f3b41bfd7dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7034b514-b88b-48d7-abce-84e6cc2d1db5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be2aafa0-a155-4043-b79d-c31e92eaa866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77da818f-0984-481d-bcfd-fd24252ffffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d7d5223-1dc4-4a75-a6dd-5b3991ebbbd6",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1232e9fe-4057-4f35-838f-189cd9eb0281",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afce2e34-c776-4eca-8189-075be165b2dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd52812-39d2-4af5-81f8-536c7465f30c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd22399-5a4f-4e93-b635-bb47319a474a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4feb1b7c-9275-4613-89bf-a5e04932272f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c68cb82-1cdf-48ba-a16c-7879a9b8041f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54f8c115-ad33-410c-9147-bd984955e642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbffba5d-bb52-4a42-ab92-40bc7a7ea01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2ee1c1-12f5-432c-bec3-6b739766a056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7e6afa-a668-413d-a7ee-ce0a4e028dba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e752a95-ebd3-4b93-9bbc-2aa1185416fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa2205a-3b4b-463f-8e35-a9cd4094da01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c09220-c573-4c6e-8fe2-fbe5a21545ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693ff70b-4f90-4e0b-a56d-417b1e20f3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87467d08-7850-44b2-980e-b8c67c63c14e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9235551-60e1-4f06-86db-1403f2e62544",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bc0fd00-24bb-4304-b377-9451d0aef282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5cd2c14-e9bd-44e0-ad51-d1a77709f168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2977036f-d54e-43d0-bcb1-3fe309b10e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f63cd-834c-4158-99fe-05f95c2b28d8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6a8c30-a223-4c81-a205-f516023eb942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761838db-ddf2-4022-a1a3-32780c8d46fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6277f2c-3e29-4aaf-99ce-863ea7b6bf4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e59ed6-0705-496a-9e51-f27e2989ca05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7da4ee-a46b-4b74-9f22-1a29a3040b7d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c8217d-daff-40a8-8159-b3150f586300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f8dedf-792b-4b04-8271-2552f5f7f94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ba892-56a0-4904-b72b-3339c347c714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0a60ac0-9c6e-4f4e-9277-f0eda2072045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "983c509f-9808-4945-928c-726d7e5010b1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1d84a1-be0f-41bd-8273-da5cc7c83a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0cca173-3248-4a1e-913f-d3d8d900ff3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed66817-2fe4-4714-a7b8-d095ddece6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a09d5c-e487-458d-a200-29dff547c340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baa7c0c-a6d8-4e35-bfb2-899f7ed11f39",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7bdb462-0adf-42b1-a73d-45bf0fadb4c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521d3a2e-5d36-4c21-b0eb-97a8473d54ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d562c7-c549-4fc4-8b86-d2f96817a7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe099f22-b007-4899-b3dd-a91e795771bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f20049-516c-45b5-9779-c2ba95e09960",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d193bcb-10db-492a-93e6-cc1fdc1e7eda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49e265b6-e0a2-454e-a9ee-fe1ec7d61830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f65a957-8e15-44f8-9f47-1c5bff2231e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8673c7d-4445-4d21-86ab-a925faa5a36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7450434d-11db-43b9-b548-db1a02a965bb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef3b113-917e-49a7-9913-f5337b9c3dc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32736cc8-ba53-4a57-a3de-172292ab65b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eecf5e-e542-4b84-8c88-919e3c9d689a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f0ba7c9-d8f1-49b2-a557-0cbfd5560af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaee6500-6e2e-442a-87fc-b20591793317",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879acf47-0601-49e7-b039-a5e8bb9d5714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c93e9431-c660-4de9-b915-849e88c4f856"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad4d287-0e38-4eae-a0a8-d7467847cef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538338d0-1437-4782-bfdd-c242f27a41b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bda56e6-3191-4c97-abbc-ee15e203e565",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d520aa94-805b-49e5-b92d-bbde41734cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e594dc-fd85-411c-9939-1e28cd1e6d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3f1ac3-5947-4fe8-b129-dd94e95c522e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d6d3ec-e8b8-4c01-b22a-f04c7170bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026d5411-c3e6-4de2-92ec-fc523bb20621",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1418d3-a63c-4e0e-bb73-783ae80ec11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6bc670f-f263-46ad-92a6-12b9714a86c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca0139f-326e-4f92-9362-0fc720a7ce11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc3d74f-f7e3-4ed4-ab4e-09b31cf619ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b676eb6-629e-4663-81b4-f129a0a65697",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77149bf-18e6-48d6-af58-fcd7a0cc1c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7720eb65-c058-49b8-b975-67b368e0034e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b317aa82-1086-4db3-bf3c-0f914f8361df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb1d68f-a4b3-4b3d-aa2c-b4c15924813b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f592e88-ad25-4ed9-9fc3-16d707199139",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25203990-98fb-4337-ad90-1f02209a0511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58ab956e-41f9-47f5-8793-36bf6b9f4a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "538b1106-0889-4e31-8e40-f8f00362ec49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212c532f-cba4-4855-9a70-67f9124a272b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32b0285-97b6-48f0-9ca2-88813998b6e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fedeeb-dfa0-4254-be04-4935d2f1363b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50614a12-117d-4326-9152-5282b67f40e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3c023c-2a54-49d7-b177-1e82648ec789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1952c592-8ad5-4543-81a5-e18f2a10d785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a934d3-556f-47ff-be30-59c1a9ccd850",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf9c563-9849-4f23-81ab-842263a77987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea89b73-815b-4783-8a3d-dc9b0f3925f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b89bad-4a2a-4dd5-8189-85385a028236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711d1c78-60ef-4e52-b297-d8dbe85d9990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4f1c81-eb2c-41b6-8099-6403a1516d76",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79676c82-a479-45ea-94a5-4759f1c3ae26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5a505c6-2004-4430-956f-36ef3b22f98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc49acb-8660-4664-bb90-23e80ad0f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d372f6-63f1-4b37-ac51-c5ef530296fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c571e2b-7f25-4390-a133-86cda9cf8566",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e54b6f-ddb1-449d-8a99-37b40a29ce17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df6d73d1-e990-4942-95ec-a2bd69cdbe48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa19c9d-39f4-4c23-90e6-eb7067cd8307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d949c1-fcb1-42d2-8e59-94a33304314c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4228e724-78fe-4f40-a259-894ab8537884",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d064c4f-0ead-4a93-ac38-9f1cf60438eb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbb0fdfa-cfd2-476b-8d7c-d8429f91a636",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a9396f8e-a086-46e4-be23-53f68e6c542a"
                    }
                  }
                ]
              },
              {
                "id": "2a219228-ed2f-4259-945b-5027be1300c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7df87cae-c353-47ab-83cb-63887c8b47e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7c57c6-4a7d-4141-b53d-827fb843c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3188638e-2ad0-437e-9e83-e649aaab88ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c1e4fe-a9e1-4085-8523-db9000e11395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d37942a3-9af5-4783-8c9f-44f5fd93278d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a85aad2-7a37-4360-aca5-c285b7d40c70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09a2e299-b47b-459f-9331-df4eed55527d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e3b2eb0-cb2d-4fe8-9d1c-97067b37745a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad34a8ce-3f3b-4ea9-b9cb-2bbd4c37c7c4"
                    }
                  }
                ]
              },
              {
                "id": "0298ff9b-890b-474c-bf2a-5f693a60f4ba",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0805994f-5d23-4819-81b6-6d47b8138462",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b069cb-0833-42ae-adc7-55cd6625abb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "72831d3b-ec08-4d2c-8b20-8a09aa5a5993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1327dd-473a-43c6-8787-8f5343a576fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d33fb-9df2-45b9-9665-8f36cb24df34"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7b83311-952a-4536-9ea4-e2672af2e080",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d32a7c70-159f-4d61-9636-17fabac82e77",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b2c9cfa-6728-4136-9f52-38d145c7a1cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "913cc031-a0b8-4ffc-8c18-15036fe84b89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4f96b787-839a-480b-a709-975ba53570be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2901b3d8-42fd-4ea4-aeea-c49a257bfee9"
                    }
                  }
                ]
              },
              {
                "id": "13608f8c-b8fd-4de5-add6-b92e5cc19872",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "684bcfa1-142d-448a-935b-b1ceb757d960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b6910b89-779e-4fb9-bc92-5fa2732ba3c4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34180e4b-1301-4c85-a91e-ac1012b320af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bb82be2-6d34-4aac-9bbe-02afbf70ea64"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a67a7dd6-9387-4ae5-b66f-df5fa83302ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88acf0fd-0f9a-46b6-92af-b769eeed19e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47f46c7f-7f9f-4fd3-9336-dca0dfa30468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ce0f8aec-5ddb-4b6b-b3a5-4c0c29cf0d49"
            }
          }
        ]
      },
      {
        "id": "3288b791-7c6a-4647-9975-133d304e732c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5828593-e04f-4e49-bdff-19ef074f887d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f3f5a1f-532c-4dca-914d-6727b4822dfa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3a0e60b-516c-49ff-a48f-feb96fce67ae",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb5970c-b3ad-44fc-8d00-591bd6c266c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "663b067d-9111-490d-aad2-9853f6fee1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b6af2-0a3a-4672-a892-852e76a28477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b7bfb24-e4e3-48a9-a640-2dbdb2dc40a0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa3d8584-9f27-4333-ad33-10e2197beaae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8d5a77f-0254-4e76-a491-553ea3bf9190"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a7a4f24-74ee-42fa-bc60-d249dd71015f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c650330-f48f-4eef-a368-fbb695fe8b02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08ab23f0-f107-4f27-b32b-1a470093a1ac",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "25fef780-a2d0-438a-85b4-4de0d1b87222"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2403125f-3de5-41de-a852-14521a0717f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7491e8f-31bb-49f4-b192-d5856919c38d"
            }
          }
        ]
      },
      {
        "id": "f9b39d8e-c7c6-444f-8d51-5b22fc0d9bc5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "46410912-7fc2-4741-879e-f14afd6e5053",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d499697-63e6-482c-8ed9-0dc36a7a3391",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4302396-c4c4-454d-9e53-2e1822aeb69f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805f6a38-cfad-4b06-9911-f4acef63be5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f093bfe0-848a-4450-a6a2-bf28ed3b08d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733780c9-77d0-46d6-8138-b0bdadeb590b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9cc88768-66b0-4a64-b2fc-a77c900eb311"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68e1c417-c820-49b3-b316-5ec5c533ff13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3e273d3-22f9-4c21-ab83-f1c0031858a9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f0c78f8-2ea9-43f0-86d1-85b1f14c9318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e288a4e6-5837-4691-85b9-163063e19180"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2a9ab62-0d99-4acd-b6dc-7539e6c04486",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c0e9799-92d5-4ebc-873b-0e22713f97b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e55f86db-8ecf-4db9-a58c-6427bef6ee23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20fb9b1e-8dae-43dc-8d79-881ed71c6dde"
            }
          }
        ]
      },
      {
        "id": "a6a9bad4-005d-4d41-bd0b-28c1d1745826",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c9022d7d-f6a0-438d-bde2-67d2edb10129",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20145739-66e7-476b-af38-fcee061328e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bd31545-ad34-4e55-8b51-fc36a29ca3c7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f14f422-2934-45b6-b3b9-9df778edfa38",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37ef686e-ab12-42c0-911c-36c8e117b361"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e193b9-cd2d-42df-aaf9-34bea3779838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a1ccad4-43db-4b64-8cdb-d745b9984d6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ae7a12a-0573-4854-ae10-0e09ac6c2670",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "976bdf12-de66-4edf-bfd3-0f6a07a1f008"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5bb2555-ad4c-49e1-89c4-e61f869b546f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59651fab-de3f-4eb6-8efe-767096294f13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed178623-3fa8-4f02-bfea-62d2c0e5c30a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f5d6b66c-9054-4d97-a5bb-f088d1b0bb95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cf51d93-6262-4361-b0ca-7eb983f2ddaf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77ea2fdb-5c28-4dd5-a47b-26df11bafcd5"
            }
          }
        ]
      },
      {
        "id": "691aac34-209b-4e0c-a312-39f94b1ccd65",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e9e3671-b766-4d45-b2ec-2b522783c70c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff31c569-6f13-4466-af22-42d8689a4bca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "33ace91b-a196-4630-8cec-c6578f875bc4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35f7e3f7-22dd-440d-b806-4a7e14e09d6d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42789c0a-35e0-4a4b-acfc-59b3c0181b73",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 69.10563380281687,
      "responseMin": 8,
      "responseMax": 308,
      "responseSd": 23.511521822313217,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690332041596,
      "completed": 1690332076379
    },
    "executions": [
      {
        "id": "a38a240b-8d2a-4248-b140-ce76ef3ee184",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "edad6e3d-eec7-42e2-9b8e-06899ac6ccf0",
          "httpRequestId": "82673e69-be40-4cd5-8183-ece7749ea25c"
        },
        "item": {
          "id": "a38a240b-8d2a-4248-b140-ce76ef3ee184",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c50de20d-0803-4d53-8301-4d2366a6974c",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "fde720c9-a436-4a0b-831e-863f83a49ba1",
        "cursor": {
          "ref": "8fb4b51f-85f3-4b4a-b979-ea8ad266bbf1",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "582ed065-eb04-4c87-b740-4eb5a3ee08a6"
        },
        "item": {
          "id": "fde720c9-a436-4a0b-831e-863f83a49ba1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3dcbf604-77ee-4915-a8ac-66b9de875813",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "24d071a3-4337-473f-bae8-373077d694a6",
        "cursor": {
          "ref": "8249a3dc-3625-4b06-8245-0928d0715959",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2db1222e-b9c4-4746-addd-5fbbb3ba166a"
        },
        "item": {
          "id": "24d071a3-4337-473f-bae8-373077d694a6",
          "name": "did_json"
        },
        "response": {
          "id": "600ec63d-d026-44d5-94a2-8dbd41116a1c",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c5c4f-c457-4166-94ab-a917b529ca99",
        "cursor": {
          "ref": "c7493ffb-d711-4a3f-81c1-cba181c12666",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b628a6e2-1e65-4fca-a0ff-bf45749d3009"
        },
        "item": {
          "id": "7f8c5c4f-c457-4166-94ab-a917b529ca99",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a679548-b550-4918-b157-018572458dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8c5c4f-c457-4166-94ab-a917b529ca99",
        "cursor": {
          "ref": "c7493ffb-d711-4a3f-81c1-cba181c12666",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b628a6e2-1e65-4fca-a0ff-bf45749d3009"
        },
        "item": {
          "id": "7f8c5c4f-c457-4166-94ab-a917b529ca99",
          "name": "did:invalid"
        },
        "response": {
          "id": "1a679548-b550-4918-b157-018572458dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d6ad36-33ea-46e3-9b6d-b8dba5ac09c7",
        "cursor": {
          "ref": "ef84f460-75ef-4914-b755-6f9777f7b771",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "35d10005-2a83-49c4-a401-609740c014a6"
        },
        "item": {
          "id": "51d6ad36-33ea-46e3-9b6d-b8dba5ac09c7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "90f9fedc-b966-4fbd-b982-5230e04bd7c9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561bd172-0c9b-459f-ada9-4dfef455d26c",
        "cursor": {
          "ref": "9ca9b750-cf29-4082-a517-fad3faec7bc8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8453c28c-ccfc-4742-a24c-e7190b093fca"
        },
        "item": {
          "id": "561bd172-0c9b-459f-ada9-4dfef455d26c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5dcaa517-27de-4b3e-b44c-e218c170d68a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b22c55-cb11-463d-960b-26f9e6783efb",
        "cursor": {
          "ref": "4d1c48df-1166-4d90-b171-cf195073546e",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "52840518-eecc-467c-9954-ab940ac64d15"
        },
        "item": {
          "id": "64b22c55-cb11-463d-960b-26f9e6783efb",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5479ae30-efd4-4827-97ae-b8bf78d5516d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fcf92f-2472-410b-b692-e7f0087e4db6",
        "cursor": {
          "ref": "aa2280ce-cfb8-4e3d-aa4b-712d77df84cd",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "99b7b9e5-f339-46ef-9f3e-ff521513d65c"
        },
        "item": {
          "id": "c6fcf92f-2472-410b-b692-e7f0087e4db6",
          "name": "identifiers"
        },
        "response": {
          "id": "f5e2f3ea-5f0f-4737-a410-febb98efbaba",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501f75be-7d7c-451f-aaac-1de17cc82c88",
        "cursor": {
          "ref": "5bf59bd8-0cef-4366-b790-dedf58465969",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "406b6fef-8a50-49f9-bbba-84d83eeffc3c"
        },
        "item": {
          "id": "501f75be-7d7c-451f-aaac-1de17cc82c88",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "67cd7021-90a0-4e5e-b68f-3b113c3a454e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e27ffb1-6910-443a-9e7d-e108702aa060",
        "cursor": {
          "ref": "0f9d13fb-d345-4d68-8651-ca6dc0d30283",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a7adc030-d8d9-4189-a8dd-d18a062c2647"
        },
        "item": {
          "id": "9e27ffb1-6910-443a-9e7d-e108702aa060",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7b530931-e82c-48ff-af59-0cd495255741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6497cf-8029-42f3-ad69-a5f3c473acd8",
        "cursor": {
          "ref": "127aed80-3ac7-4465-8ded-d919961b8470",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f0d0338f-3287-4960-a701-b57ca43334df"
        },
        "item": {
          "id": "7f6497cf-8029-42f3-ad69-a5f3c473acd8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a4d31d14-f49f-47e7-a96a-cc1d1968487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88e2857-37b7-4bd5-b8cd-ba5f17473c60",
        "cursor": {
          "ref": "108c96a7-c268-423d-a694-d28591e8d239",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e5db05cd-75c5-45f6-bc96-201d796ebc9b"
        },
        "item": {
          "id": "d88e2857-37b7-4bd5-b8cd-ba5f17473c60",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a3c39076-712c-4c3e-9dc8-dd62ae6178d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afc4ad2-5bd5-4923-9f96-deb35cdbfc1f",
        "cursor": {
          "ref": "98012bfd-1503-4f0e-827a-81c797954278",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2c4ba19a-5f53-4692-9686-eeac0783864f"
        },
        "item": {
          "id": "9afc4ad2-5bd5-4923-9f96-deb35cdbfc1f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "06dc0acc-027b-4151-92f5-1e9fa4a9505c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2bd78d-d230-46ae-8939-4aa91a16ba32",
        "cursor": {
          "ref": "ad1d2223-21d0-461e-87a1-54c8f048f90d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a7d51a18-3efd-449e-9135-838b5b0e4cbb"
        },
        "item": {
          "id": "0b2bd78d-d230-46ae-8939-4aa91a16ba32",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "25387f20-4b57-4060-bfec-45b443d17200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124a0928-3d2d-4d84-993d-e070d51a4b02",
        "cursor": {
          "ref": "bb951ff4-010a-47b9-9b8f-9fff5c506422",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5ca4b373-0b61-4ba9-b8ee-e9675f74a181"
        },
        "item": {
          "id": "124a0928-3d2d-4d84-993d-e070d51a4b02",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "21d93507-c941-4b91-bdd3-82845031038d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd25d707-d17f-4801-a43f-2ec482737a49",
        "cursor": {
          "ref": "b3a4acd6-cf51-4de2-8b7e-9dc66b0eceac",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f685673e-bc9a-4f06-93f4-bdbd1aca229e"
        },
        "item": {
          "id": "dd25d707-d17f-4801-a43f-2ec482737a49",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "48f4ab07-b498-4d2f-8d41-cbece0c87350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13edd9cf-0230-4738-aa42-45fc97ba905b",
        "cursor": {
          "ref": "baa2cddf-3dd7-4d8d-afc2-49fffbaec59e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "11903440-c489-4a83-8afb-ab9d767a25a6"
        },
        "item": {
          "id": "13edd9cf-0230-4738-aa42-45fc97ba905b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "044adeba-6218-48a8-b95c-e2b12ebb115f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad02dee7-21dc-4cbd-a810-7d0de7399a33",
        "cursor": {
          "ref": "759538a4-617a-4312-ab95-2be25e9f132f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "15defe25-9c44-486d-ae2f-56735b201070"
        },
        "item": {
          "id": "ad02dee7-21dc-4cbd-a810-7d0de7399a33",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2cf0874d-295b-433d-b5fe-93cba65d7573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6af6c5d-35c1-4d1f-b5f3-84f88aa00509",
        "cursor": {
          "ref": "d331b1de-be72-4834-9bbb-d8a5b028747e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f15946f-705c-41cd-8133-c70d5a390079"
        },
        "item": {
          "id": "f6af6c5d-35c1-4d1f-b5f3-84f88aa00509",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bfacae35-7ee5-4459-ad7f-29168c0820f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d51ec9-5aba-4c57-8971-f2ba011e8e71",
        "cursor": {
          "ref": "73222f54-1b41-47ed-955e-a252781a8914",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5d66b462-24ff-47f9-bb6c-8f1e1c5008a2"
        },
        "item": {
          "id": "11d51ec9-5aba-4c57-8971-f2ba011e8e71",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d2bec0c-8312-447e-8019-b9a3ce79afe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f4bfe-67ec-445c-af3b-dc9ae9f41c01",
        "cursor": {
          "ref": "75cd56aa-1997-4cb6-ae48-5e5582f0f753",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "da205973-490c-48d2-afc8-2c1a87340864"
        },
        "item": {
          "id": "848f4bfe-67ec-445c-af3b-dc9ae9f41c01",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f6b4e86f-c4c9-4e02-805b-730b9ccd7230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a066e0e6-6a6b-4071-aea0-7d5172aa143d",
        "cursor": {
          "ref": "ba12d351-e0db-44b3-95ed-cb7dd8b34612",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9aee150f-d343-4b5b-ad20-8e4eacd07a2b"
        },
        "item": {
          "id": "a066e0e6-6a6b-4071-aea0-7d5172aa143d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e670e36e-423f-4693-81f7-fe744515817d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6414a46-1642-470c-9073-d4bbe4b4464f",
        "cursor": {
          "ref": "84a5c2ac-444e-41b6-9a8c-c26eb9f4b87a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "869e3577-4909-43e5-8810-939b7e72a324"
        },
        "item": {
          "id": "f6414a46-1642-470c-9073-d4bbe4b4464f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9b22a7f4-62cd-4fd0-9fee-008c796121a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac29f38-6883-41fe-9703-73a7ddd8d49d",
        "cursor": {
          "ref": "5ee0e57d-095a-4f6e-8d16-e2c891a647f5",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "357da470-5846-46db-a970-d1943b6cca61"
        },
        "item": {
          "id": "bac29f38-6883-41fe-9703-73a7ddd8d49d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1bbed10b-7686-462a-9d6d-6a3cd109f2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668c8319-3ec2-4a94-8e58-84f65bec1518",
        "cursor": {
          "ref": "dff1b923-f940-4b5b-b2fd-c3d0858f8c4a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fe2bdd3a-337c-48f5-8f5c-ff56f8b473c7"
        },
        "item": {
          "id": "668c8319-3ec2-4a94-8e58-84f65bec1518",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5498eead-2eae-4b58-8920-8d4370581167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b8ff1a-5b7c-4153-9b2a-3cb75da58f30",
        "cursor": {
          "ref": "13d3c892-5d9d-4579-8915-2054d81a5322",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a16c0e6-04d1-4956-a3c0-43e99d55a6da"
        },
        "item": {
          "id": "a9b8ff1a-5b7c-4153-9b2a-3cb75da58f30",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f6002c5-9d68-4d01-95d5-5171b427708b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b370d0c-2c4e-4976-a318-b3c4b826dfd0",
        "cursor": {
          "ref": "2843a34b-e469-40e3-bbd5-67aa24f3fee2",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c8d870e8-4fca-44c5-841c-4d2d3095752f"
        },
        "item": {
          "id": "1b370d0c-2c4e-4976-a318-b3c4b826dfd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6a60973a-09ce-48ab-bd16-5fff2ec993be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8af9e6-0384-4294-beae-18c2c4da53dc",
        "cursor": {
          "ref": "dcbd59e3-d125-4fae-a62c-541aa431dd2d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b37f87f4-282b-4f3e-8813-0e8ebdfa06fe"
        },
        "item": {
          "id": "5c8af9e6-0384-4294-beae-18c2c4da53dc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "255f01d9-a125-4c14-90ab-9cce56b591f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f08a9-4007-499d-be39-725256b70547",
        "cursor": {
          "ref": "5e9c505f-ab33-441b-abcd-36bfcb788eb7",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b02318ba-8536-4c97-8fc0-2fd6b20b0273"
        },
        "item": {
          "id": "0a7f08a9-4007-499d-be39-725256b70547",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bdbc647f-0513-437f-9bbe-733de20fcfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68838bae-aa16-45cc-952c-70a993c6c7ce",
        "cursor": {
          "ref": "e7555e49-5927-4269-b1e8-76d34822da2e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "614a130a-2e6a-4169-96be-43ff48203d29"
        },
        "item": {
          "id": "68838bae-aa16-45cc-952c-70a993c6c7ce",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6a4b7973-66af-4398-a337-8d969d50a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9debab4-1d0b-4885-8cfe-ff4b749eca5e",
        "cursor": {
          "ref": "f693920a-e74d-4086-b662-ed2dcd2cca8d",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "92d048ca-299f-4d40-b1bc-fdd840e59df3"
        },
        "item": {
          "id": "d9debab4-1d0b-4885-8cfe-ff4b749eca5e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fa202f4a-9c1b-4087-a294-c3fab7dc2127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1ba7905-d212-4eb5-aa0a-547d33768ae1",
        "cursor": {
          "ref": "1e470567-b99b-4581-afdb-cd2ad0c9fc98",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4349fcc6-d257-47dc-893a-8a85ebcce12a"
        },
        "item": {
          "id": "c1ba7905-d212-4eb5-aa0a-547d33768ae1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fa633d67-d354-4235-93ba-6df3a23f1615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a804bede-f55e-4cba-a3e4-54825ea6a7f9",
        "cursor": {
          "ref": "644e2d58-4672-4c0f-92ce-72aba08446fc",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6e42b18-2ed5-402a-81c5-0d99c43efa25"
        },
        "item": {
          "id": "a804bede-f55e-4cba-a3e4-54825ea6a7f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "338b69b8-5a79-4ffd-9781-7e8e05601b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5688f29-7bec-4a36-b06b-e6e0950226b2",
        "cursor": {
          "ref": "e465d26b-355f-451d-8009-f6c17f218b6a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60ea95cf-7191-46ce-8d78-ee2f2abe6b10"
        },
        "item": {
          "id": "a5688f29-7bec-4a36-b06b-e6e0950226b2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "82f310bf-870e-4673-8270-5af391069329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53355fcd-e35b-46f9-8c99-4213bf95c54d",
        "cursor": {
          "ref": "d345c05c-8678-4073-8d9f-cf42fc0024c9",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c8fcedda-d2cd-4955-a385-c99504cb49f4"
        },
        "item": {
          "id": "53355fcd-e35b-46f9-8c99-4213bf95c54d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a591ce01-712d-409c-88ea-b0a9e18a9c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db3fb442-287c-4a75-8740-d453832e41b2",
        "cursor": {
          "ref": "b7fdd1e1-8911-4d0c-8817-e30492025d77",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "df040c28-ef2d-4712-bae3-372587ea44b9"
        },
        "item": {
          "id": "db3fb442-287c-4a75-8740-d453832e41b2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "690d246d-fe3e-4731-bd57-8372cf8ad2cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9727a9-5f31-40e6-b4dc-3b1fc89a328b",
        "cursor": {
          "ref": "bf636fed-2b2f-4aea-bbf6-9c4ec4d73240",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "db3d28f8-7bfc-473e-b912-c8fdb7434756"
        },
        "item": {
          "id": "ff9727a9-5f31-40e6-b4dc-3b1fc89a328b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "135ee5f3-256a-4e6d-8b01-b2b1c3438d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45522806-3310-41ca-926d-f6a1a8e0fc0c",
        "cursor": {
          "ref": "c67a7214-838e-4cf7-80af-3d8a13869214",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e45aa0ca-1dcf-4b6c-a470-37b7ac4f33d2"
        },
        "item": {
          "id": "45522806-3310-41ca-926d-f6a1a8e0fc0c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "37829d62-c5fe-427d-949b-018ca337e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d954a13-46a6-447a-bbb9-05f1686fbea4",
        "cursor": {
          "ref": "f6268fb7-3162-4a36-8e11-e7b24195982f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f50bbdf8-19ca-491c-809f-0ca1ace10301"
        },
        "item": {
          "id": "1d954a13-46a6-447a-bbb9-05f1686fbea4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ed8f14a7-2060-4e84-a756-6df85ecd3be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faba6df5-dc7f-4d1f-8a09-e500d827a92f",
        "cursor": {
          "ref": "4372d838-5156-4d6b-b8c3-0b4fd9987770",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8f73f794-63b9-4917-9671-29c93174a94f"
        },
        "item": {
          "id": "faba6df5-dc7f-4d1f-8a09-e500d827a92f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "76e9fbe1-902d-4d5b-8baa-ac220e468e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e5b578e-7d8f-4280-b626-da806859d857",
        "cursor": {
          "ref": "e6176f46-6550-4beb-bc45-aef35ffd50fd",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6318854a-aec0-447d-a075-d8cd3b68061b"
        },
        "item": {
          "id": "3e5b578e-7d8f-4280-b626-da806859d857",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3f2c19f4-a222-4d7d-bf29-f4914547d226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf0c843-3fd6-4812-a2ac-788c5d6c88df",
        "cursor": {
          "ref": "b3d5f506-b9ef-4602-bc37-386f7d1c9fd3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3f9967e6-1cd9-4902-bd0d-b04c827ca3ed"
        },
        "item": {
          "id": "fdf0c843-3fd6-4812-a2ac-788c5d6c88df",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "26fa369f-5330-47f2-b6e8-02646f868e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a343b5-164c-4386-9027-0baf6f5a12cf",
        "cursor": {
          "ref": "1a5a8225-8a0b-4e57-b2c0-9aa62cd5a589",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dddeec5b-21af-4916-a8af-44b0f9fc405f"
        },
        "item": {
          "id": "41a343b5-164c-4386-9027-0baf6f5a12cf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "142c6c0e-83d6-4901-8a89-e73c885dd085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b265481-0d81-46e8-b7a5-fca41ce79bd8",
        "cursor": {
          "ref": "a4d3374c-f76c-4f83-84e9-b39cc83e8a73",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "60d6890f-7454-41e1-ad8f-05531de5ca8b"
        },
        "item": {
          "id": "1b265481-0d81-46e8-b7a5-fca41ce79bd8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "748b5f7e-7d93-4168-956e-b9cc05fe2a87",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2941dc63-09ca-4d85-b8ed-5d084f1e67dc",
        "cursor": {
          "ref": "eaa25d5d-268b-415f-9280-6c9111325621",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1dbd5614-a5b2-4ae6-99ee-ac4843d97e47"
        },
        "item": {
          "id": "2941dc63-09ca-4d85-b8ed-5d084f1e67dc",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "de83333d-ab14-4b5d-b191-64d4c01c70a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bbef29-7218-4e3e-ab14-f26fd15e2c13",
        "cursor": {
          "ref": "2d4d4344-54cf-4233-a24b-6ca610b2316d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be2eb816-9790-4034-887e-270db0e4f8f3"
        },
        "item": {
          "id": "00bbef29-7218-4e3e-ab14-f26fd15e2c13",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b47913a-baee-49a7-893a-ca627ff819c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d20bc93-9982-46dc-b92d-12d2aff704a1",
        "cursor": {
          "ref": "a0b9515e-a492-49be-93df-4fe9c787f47a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "975c4bad-f08a-4378-9a32-52229c4ece0c"
        },
        "item": {
          "id": "8d20bc93-9982-46dc-b92d-12d2aff704a1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "56419b38-8f62-4aac-ae22-672c71dda388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2903162b-843c-4ccc-a544-b6080a5d953e",
        "cursor": {
          "ref": "3db12d18-8005-4684-aa10-6b28206817d7",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "167b51cd-5698-4e59-b5aa-da4441858f9e"
        },
        "item": {
          "id": "2903162b-843c-4ccc-a544-b6080a5d953e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "160f6026-e9d5-4675-91f0-33ca596da803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a72735-b531-4854-9d94-c4873b819e51",
        "cursor": {
          "ref": "7e576f21-2835-43fe-9961-e412f221e946",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fe073fb1-2fb6-47b1-8d0e-735f51cc7e88"
        },
        "item": {
          "id": "e2a72735-b531-4854-9d94-c4873b819e51",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "86d6a064-bbeb-4fb7-aa63-02def90be522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74be0309-53f7-4a3b-b328-25223de619ec",
        "cursor": {
          "ref": "97e69487-8eaf-4b5d-a635-fa8b7088fd74",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f259a9d0-94d2-4342-9a13-d2d3632222bc"
        },
        "item": {
          "id": "74be0309-53f7-4a3b-b328-25223de619ec",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7c8242b9-b4a2-4b22-836d-8eef67fcf5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fa9c46-6f42-4ac2-95ad-55cf96ceeb1c",
        "cursor": {
          "ref": "e6cd0347-33fa-4dde-bca8-302f6acd7942",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "887bb664-f5db-4471-9489-1b336961085b"
        },
        "item": {
          "id": "02fa9c46-6f42-4ac2-95ad-55cf96ceeb1c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4cadd6e8-514d-4346-a68b-f0bb5cb150b0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fbc6e3-1618-4f05-9f9c-ea23f06e01d1",
        "cursor": {
          "ref": "affbbcf9-c1a9-4ad6-8a02-1cf93c20cf4e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "60f8cf6f-90a9-4a80-82ee-ec1e8f7cc4d8"
        },
        "item": {
          "id": "55fbc6e3-1618-4f05-9f9c-ea23f06e01d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4d2189c7-1534-419c-9926-0f786a0dbe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a095b964-7404-4e25-bc56-52e5cb7ddda8",
        "cursor": {
          "ref": "19e37c15-3ef4-4285-8417-e372e201e1c3",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4af3e81b-9c1d-43ce-a97c-0f28f83c80b0"
        },
        "item": {
          "id": "a095b964-7404-4e25-bc56-52e5cb7ddda8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c8ef31bf-f634-452a-bdde-2271c650e87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f44d788-9eb3-477d-8947-6c61edcec813",
        "cursor": {
          "ref": "e3b93fff-2188-4e93-a89d-dee88fd6a322",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bf6b24b0-c2bb-49cc-bbb1-8c31f3c81772"
        },
        "item": {
          "id": "3f44d788-9eb3-477d-8947-6c61edcec813",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "422ce376-8555-4396-8202-a9f9b328e170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75409ab7-ffea-4793-9376-d7f22ca19295",
        "cursor": {
          "ref": "8581a19a-e5de-45ab-b8d8-7167ca72908f",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1aed9271-eda2-474c-8e3d-29122561c13f"
        },
        "item": {
          "id": "75409ab7-ffea-4793-9376-d7f22ca19295",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "792a3cbd-0b9c-463e-9bbd-2ec1d27e4543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33792fe-60a3-437f-a6b8-39339e65996d",
        "cursor": {
          "ref": "d6a3c4a1-2a52-4825-802f-dc133f85fc4d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81302465-ee05-483c-bb88-930ba9ace520"
        },
        "item": {
          "id": "c33792fe-60a3-437f-a6b8-39339e65996d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "75be11aa-9664-48c3-9d01-819fd6cad989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4932e4e5-7ccf-4c22-b78e-0eee36658158",
        "cursor": {
          "ref": "062bf695-6f42-458d-ba6e-7db0fbe2debd",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "04f76600-aa20-42b1-94fb-ffa489df1abb"
        },
        "item": {
          "id": "4932e4e5-7ccf-4c22-b78e-0eee36658158",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b4088c60-c874-4453-b4a4-f8272bf6f9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41382b32-27f6-4427-9c92-66675d0ed9f1",
        "cursor": {
          "ref": "7768ab51-3fbf-49b6-93af-e7a55f81acdf",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4733f619-16dd-42d4-a06e-e201fa1ddcb8"
        },
        "item": {
          "id": "41382b32-27f6-4427-9c92-66675d0ed9f1",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "69384774-ffd2-4f1b-bc7a-645558d5d3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b68985-88ad-4333-a082-7e7810b45d9a",
        "cursor": {
          "ref": "688aa80b-8af4-4946-b449-dad92a4f8073",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "407e417f-26c9-4bef-b59f-3bd1e6f8e8d6"
        },
        "item": {
          "id": "78b68985-88ad-4333-a082-7e7810b45d9a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "793f506f-94e4-446f-bff7-c6961a8cf66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a650d62-9cd8-4f27-9aa9-16b3f9443e57",
        "cursor": {
          "ref": "9ea506cd-9147-4c6e-83f5-dc2d502784bc",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f718420b-7535-4631-82a9-70158083bb13"
        },
        "item": {
          "id": "8a650d62-9cd8-4f27-9aa9-16b3f9443e57",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "047f1c48-d785-4bcb-8959-77cb26c7d43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac3119-a43d-43ea-b585-f0d003285c55",
        "cursor": {
          "ref": "2591ba69-81eb-4683-895f-6f6fbd731946",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "8cf32474-2293-434f-83e0-3358f6e5f679"
        },
        "item": {
          "id": "8dac3119-a43d-43ea-b585-f0d003285c55",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a0baeff9-64ed-41a4-a1eb-3a8369ffa8bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697346d8-60d1-48e1-9cd8-323e23b241d7",
        "cursor": {
          "ref": "9fa86996-90ed-4b2c-abb8-eb01b8140f84",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "59389aff-0bea-464e-93cc-7b9ddf3db506"
        },
        "item": {
          "id": "697346d8-60d1-48e1-9cd8-323e23b241d7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ff29e7d6-7ed3-4f0c-9962-d6e98b7c5cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e952e9cd-6802-4034-bc42-40e89809cd24",
        "cursor": {
          "ref": "4602eedf-6ea4-474b-bd5f-6d878b1bfff5",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6feb71a8-8365-4ff9-8d44-95c9c6db73c6"
        },
        "item": {
          "id": "e952e9cd-6802-4034-bc42-40e89809cd24",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "db1d8b79-c74c-43e6-a205-85084b6b7003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87449c9a-eca5-4db9-82e8-85fdf78fc039",
        "cursor": {
          "ref": "7e8db346-f273-4d0c-9cc2-1bbbe8d3e2db",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "99d8f03d-a566-4134-9690-d973884bfa47"
        },
        "item": {
          "id": "87449c9a-eca5-4db9-82e8-85fdf78fc039",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7dc10df7-2da1-41f3-b3f4-193555cbe769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bb0f7c-4a01-4ad4-a984-05a69685a284",
        "cursor": {
          "ref": "d6585d1c-5f90-467a-9c0a-82f2105a78ac",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8fbff915-749b-4c3a-936c-4aae173b658f"
        },
        "item": {
          "id": "c0bb0f7c-4a01-4ad4-a984-05a69685a284",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "387ba87e-c03a-4b8a-b3a2-eca62ffea266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d03d0b8-308e-4e1e-928b-0593fc0e1022",
        "cursor": {
          "ref": "c65dba54-df8d-4bf4-946e-c8c358af8e83",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c29c7783-4a95-4597-a8f6-03292afa968e"
        },
        "item": {
          "id": "9d03d0b8-308e-4e1e-928b-0593fc0e1022",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0b2076a2-6554-4457-b6a7-56f772227a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14bc98b-ed3f-4db8-aeee-bb673e288226",
        "cursor": {
          "ref": "ec844ced-52d6-4cbd-9369-8a251123afd3",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f732fb19-1faf-4f11-b6e2-f36272afdb9a"
        },
        "item": {
          "id": "b14bc98b-ed3f-4db8-aeee-bb673e288226",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d68b87c1-72d6-4c4a-9d9d-d9f2361b6375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7cee614-91d4-4e72-9b4c-4e835b1c0edf",
        "cursor": {
          "ref": "87ea7ebd-3ced-4f10-a09d-599218d1750b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7712e967-5f74-438a-a455-bd9018fb5083"
        },
        "item": {
          "id": "c7cee614-91d4-4e72-9b4c-4e835b1c0edf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fdc3d387-4fc2-4c81-bb20-0939fc9f44fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e936ce-2e07-4939-b67a-54c17665edba",
        "cursor": {
          "ref": "c05450dd-ad15-46eb-9bdb-e4a9614cd867",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7323e79b-7a1e-49ab-8783-f1ce3dbe8182"
        },
        "item": {
          "id": "44e936ce-2e07-4939-b67a-54c17665edba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8972157c-9e99-4686-956a-cb1abe03dfea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb639e2d-cb7b-4567-847b-78ec731d2f6d",
        "cursor": {
          "ref": "c115a269-58c9-4a15-b847-bddb601f8594",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b01746e8-2ea6-4062-bd66-a1b4e3a9e0c1"
        },
        "item": {
          "id": "fb639e2d-cb7b-4567-847b-78ec731d2f6d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "af502489-b99a-4c48-b79d-5e3a73fe9904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530ee612-8a51-4a8c-8d41-628a452adffa",
        "cursor": {
          "ref": "5120f572-962a-4a15-a233-8d208dba39e9",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19bd4245-d3e7-44c0-b447-2dfc3c89ce3e"
        },
        "item": {
          "id": "530ee612-8a51-4a8c-8d41-628a452adffa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "646607a2-cff9-43df-a234-90b9a3d5621a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c2d846-2651-4281-9301-1b0e308440b5",
        "cursor": {
          "ref": "939fa358-ce6b-41b3-8493-db8a98afc769",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d02c2737-4e79-4399-b1ba-7c1142c36ffe"
        },
        "item": {
          "id": "03c2d846-2651-4281-9301-1b0e308440b5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cdb1a71e-1995-4202-8516-f109d083162f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4522c81a-1888-489a-81f3-a43a75f4c939",
        "cursor": {
          "ref": "658f10fe-8c79-493a-98ec-66c2651bf048",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "763da743-c6a5-495d-889d-6457d338743a"
        },
        "item": {
          "id": "4522c81a-1888-489a-81f3-a43a75f4c939",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "95794235-00a3-41a6-991f-c07078f50be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce06179-fbf9-4414-b4c1-b2702b05b058",
        "cursor": {
          "ref": "a56abfba-de89-4b25-b9e2-7512bbca6a64",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "05cde875-8210-4449-8ccf-3888c377b266"
        },
        "item": {
          "id": "dce06179-fbf9-4414-b4c1-b2702b05b058",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "81f935a8-3de1-4a97-9245-79a97de23d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f401e17c-93b5-4890-9398-aac9ae94c6c3",
        "cursor": {
          "ref": "9b6b9c52-31ab-45e9-9b97-433aada6d3cd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "02222a19-baf4-4a0c-9722-30851a18627b"
        },
        "item": {
          "id": "f401e17c-93b5-4890-9398-aac9ae94c6c3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "42315b2f-e925-4283-8081-37580d72ad4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de53a1f-5a5b-40d4-918c-75145042c365",
        "cursor": {
          "ref": "80a26745-9b68-4379-bfbb-54bef00689ce",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ac818c2a-19bb-468a-8079-85981218301f"
        },
        "item": {
          "id": "4de53a1f-5a5b-40d4-918c-75145042c365",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "10ed592d-535d-404b-bea3-7d5fb9fabca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db09953-bfcb-4066-aeb6-fe3c3dc87e00",
        "cursor": {
          "ref": "bd3a5b6c-b6c4-4eba-b8ef-907fb4bcaeba",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0d342af4-48e5-408d-95cf-fb3b23efd847"
        },
        "item": {
          "id": "8db09953-bfcb-4066-aeb6-fe3c3dc87e00",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ecbd72c1-2707-415c-a8d6-1e3a4acae59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe3e565-46c3-4118-8430-d97629d8a094",
        "cursor": {
          "ref": "9ea24cae-5b14-4951-8bd1-ea9fa25071d7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a63d68d9-06c8-4bcc-9a14-2657597f7674"
        },
        "item": {
          "id": "2fe3e565-46c3-4118-8430-d97629d8a094",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "0281d7c2-791b-4853-bb4d-f443cf0f4f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37033cd7-cd4a-4d24-bf88-4d70e85f49a0",
        "cursor": {
          "ref": "7de352f3-9e90-47c3-aab1-efc922974659",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eecc12d5-62f9-4b3d-887d-fbbcb0217ef7"
        },
        "item": {
          "id": "37033cd7-cd4a-4d24-bf88-4d70e85f49a0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "719447d9-1f2f-4faa-98c8-5c1bfc5d07b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c82003-6bec-4675-9c2a-9261a5aeebb0",
        "cursor": {
          "ref": "fc0ee0d4-350b-4054-aa84-175f59cebf48",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1b9945b0-f630-437e-94d0-ec3bf906616d"
        },
        "item": {
          "id": "e9c82003-6bec-4675-9c2a-9261a5aeebb0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e55f4eda-cc4a-4926-8aa2-84939083eaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed63bff3-2402-49f5-884b-71a71d3459fa",
        "cursor": {
          "ref": "bcf728f7-5e77-4ca2-bae4-c9fa35abeb16",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca520ccd-9d07-4057-98c6-cf809862f1c7"
        },
        "item": {
          "id": "ed63bff3-2402-49f5-884b-71a71d3459fa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "39e29221-c316-4368-812a-3e5558d12af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5530e94e-5696-4396-bb39-a0798a0caf2e",
        "cursor": {
          "ref": "c78fe1e1-5baf-4128-b747-99ce2e24abf3",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0142c43d-73bf-4e6c-a83b-1ebb1054a9d5"
        },
        "item": {
          "id": "5530e94e-5696-4396-bb39-a0798a0caf2e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a2f681f7-f7d4-495a-8829-caca51efa72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e09a91f-6bb5-496f-ab58-cbcc7bde4f82",
        "cursor": {
          "ref": "6a467018-ced3-41a1-818e-e1ecbc9f446f",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "84edeac4-60bb-4d59-8397-c981c04a33c0"
        },
        "item": {
          "id": "4e09a91f-6bb5-496f-ab58-cbcc7bde4f82",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "29503ea3-e2f9-4b92-bbbb-7612e8ee17c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254974fd-3dfc-448b-8f12-71e4a64c0b8b",
        "cursor": {
          "ref": "7df2e75b-fc86-4e89-9dda-7fe4e7c7c515",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "33d51bd8-8c90-4868-a3cf-bcee2ff41b91"
        },
        "item": {
          "id": "254974fd-3dfc-448b-8f12-71e4a64c0b8b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ab44b31e-c7a1-427f-8836-4dead2196762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719f9ab2-f9b0-4f71-87f5-e0baab9c7b36",
        "cursor": {
          "ref": "115441c9-6a5a-418e-aed9-bbd7fca94a10",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e5ca2775-b260-4f6e-adae-c7151e93af68"
        },
        "item": {
          "id": "719f9ab2-f9b0-4f71-87f5-e0baab9c7b36",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e8960bc8-e518-41a8-95ba-4310c51a80f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93b90c9-db8b-4ae6-b3a6-b354457d17ec",
        "cursor": {
          "ref": "dbeb09c9-2db5-495a-8ad3-741204f8d432",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3ffc5eab-7e5c-4009-a53e-bd9ac5a966b8"
        },
        "item": {
          "id": "b93b90c9-db8b-4ae6-b3a6-b354457d17ec",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "781afbec-b7f9-4414-a98e-080ee61431a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f06f7d-bc54-4927-8811-9722f3ea67c1",
        "cursor": {
          "ref": "48ac9e3c-fc9f-4314-8dbb-feb62e71cb50",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "028ae4b0-fdd4-45f8-ab75-b9b6be15ebdf"
        },
        "item": {
          "id": "95f06f7d-bc54-4927-8811-9722f3ea67c1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3c56785c-90dd-40fe-a82e-880c275c21c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005fa48b-b5a9-449a-8743-8664a4acbed9",
        "cursor": {
          "ref": "6789b858-9e57-40f2-a62f-898bf7b6bf09",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0247c432-e67d-4d60-b11c-55faa0c24fa2"
        },
        "item": {
          "id": "005fa48b-b5a9-449a-8743-8664a4acbed9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bff8811e-8225-4b51-8647-0455f491d13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d441f7d5-1794-4ac6-8d05-46582a4c62c7",
        "cursor": {
          "ref": "6e915a0c-dac5-4473-ae0e-b5ad5103c1a7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ab4568f6-bc78-4bca-ac11-ffc018bc561a"
        },
        "item": {
          "id": "d441f7d5-1794-4ac6-8d05-46582a4c62c7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "34357f80-c82b-4b18-824c-c14569191c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e4ae371-c7ff-4b2c-81f3-19137940f2e0",
        "cursor": {
          "ref": "01df06ad-5cf4-4a6c-a6a3-89efa17d322d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9f2e68f0-d44f-4afb-b615-82c6411b984d"
        },
        "item": {
          "id": "1e4ae371-c7ff-4b2c-81f3-19137940f2e0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "016420dc-fc0c-425c-8aa8-37c535258389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d8686d-a3d4-443e-b1fe-fce8da63ce63",
        "cursor": {
          "ref": "ea192a96-bb7c-4a75-89cb-24356046398f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8eadee10-c3ca-439b-9aaa-f7694c860db3"
        },
        "item": {
          "id": "c5d8686d-a3d4-443e-b1fe-fce8da63ce63",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8165b519-5b50-4325-86f4-6d4a174748b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec330c-ef9e-406d-9c68-72421c857a76",
        "cursor": {
          "ref": "190cb843-3c32-4ef4-9d61-de30fd32516f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "67e63d8d-4165-4c34-bc6e-aa9638f2c5bf"
        },
        "item": {
          "id": "91ec330c-ef9e-406d-9c68-72421c857a76",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "218fb480-f435-4736-a372-3bad0c9deb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c58799-c267-4bfc-8951-f5df1af3f4f2",
        "cursor": {
          "ref": "3fb69704-f53e-48ae-a9df-2286f020b3df",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7345d3cf-c7c7-4471-91f2-3e162a402ddd"
        },
        "item": {
          "id": "84c58799-c267-4bfc-8951-f5df1af3f4f2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bac7d4c9-b0f6-44fa-b4f2-1baf69f12a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ee573d-e511-4161-a4b3-4b327db2809b",
        "cursor": {
          "ref": "b4e4b737-d95f-43dc-b888-7858fd38bc68",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "df5aee7b-99d9-479c-96a0-1da0ce5d6d9b"
        },
        "item": {
          "id": "79ee573d-e511-4161-a4b3-4b327db2809b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5edb2a25-a333-4f2b-ac02-290273f34ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46abd4ea-1cdd-4428-b35c-0a74ff13e1b6",
        "cursor": {
          "ref": "3efb3671-cf07-4d96-b928-d3462e4b03f5",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2a90039a-92a0-4fc6-a98a-4e0c50671886"
        },
        "item": {
          "id": "46abd4ea-1cdd-4428-b35c-0a74ff13e1b6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "76d947f6-30ff-4e38-80ce-741d8ab6e186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fbb835-22b0-4535-8013-4b48985148cd",
        "cursor": {
          "ref": "73f68ba1-2103-4c14-9891-aaf222400813",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c632b819-f6f8-47c0-ada9-efee564a7680"
        },
        "item": {
          "id": "03fbb835-22b0-4535-8013-4b48985148cd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "27c0edd6-c911-4948-a405-6b9937b14d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef2917a-d2e8-4fe7-a6a1-c0450507d1fd",
        "cursor": {
          "ref": "06de1252-40f8-4d7b-8828-dbd8bc62e130",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b18290c3-3f8d-4374-be8f-03f1148084d1"
        },
        "item": {
          "id": "9ef2917a-d2e8-4fe7-a6a1-c0450507d1fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a942f452-0301-4490-a9b6-fd412636be39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1a07c-9650-4015-9ff7-5bc52cad0922",
        "cursor": {
          "ref": "52cb5810-014b-422a-8ef1-fc80f3ababdf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8e0bdc91-1ae7-4594-9b4c-1c2891d8e0b5"
        },
        "item": {
          "id": "f2b1a07c-9650-4015-9ff7-5bc52cad0922",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "abc97435-0932-4bd1-bfda-fc33849b964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91408f90-71de-4d56-b0ee-e19cfc6359fb",
        "cursor": {
          "ref": "5bf3a9bd-bc9c-40b2-958e-aacfe48a70c2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "387f698d-8e80-4055-bcbb-292b39e31cb8"
        },
        "item": {
          "id": "91408f90-71de-4d56-b0ee-e19cfc6359fb",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3a5e8510-b115-491c-981f-32b385fd695b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f18905-0568-470c-a79d-7de9c8b53f35",
        "cursor": {
          "ref": "070c459b-4143-46f3-a5fe-1a21bd5004a4",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "aea55afc-8ee7-4fd0-ab38-0a987f605256"
        },
        "item": {
          "id": "32f18905-0568-470c-a79d-7de9c8b53f35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "65e53dc8-2551-4325-886a-d71c9e4ef61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85acfc0c-43d2-4f45-a105-6960f3924873",
        "cursor": {
          "ref": "7fab13dd-ef3e-4515-b50b-9c9da0170a8d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "527f66af-a7e4-4731-a6d3-e67d023a9e7d"
        },
        "item": {
          "id": "85acfc0c-43d2-4f45-a105-6960f3924873",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d6ecb433-4e78-4ca6-9410-735efa65c12d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75c5fce-ad5c-42ae-872c-8c2910c35c83",
        "cursor": {
          "ref": "edf4142b-b6d5-4753-865c-067d7e98a827",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bbb46d57-3c6f-47a7-8989-7e44a25b7b5c"
        },
        "item": {
          "id": "d75c5fce-ad5c-42ae-872c-8c2910c35c83",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a7c2a802-7d31-458e-b979-5fc1e0a44f11",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e95c6-296a-49d2-90df-cdf515df6601",
        "cursor": {
          "ref": "55b6d2d7-6239-4a2f-b0ed-03af97207f77",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "167993cd-a770-4702-a0e2-7f8f4e944fca"
        },
        "item": {
          "id": "070e95c6-296a-49d2-90df-cdf515df6601",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a8d70d4b-0bae-4356-9470-c21147210be4",
          "status": "Created",
          "code": 201,
          "responseTime": 275,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "250d1f71-ee77-42f2-8b4f-f046508c43ac",
        "cursor": {
          "ref": "5fdd06db-8256-4e8c-ad1c-b039fdbe1f22",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b369688d-9c85-4a5e-8cdf-ca345e7f26dc"
        },
        "item": {
          "id": "250d1f71-ee77-42f2-8b4f-f046508c43ac",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f698ab44-2d49-4cb1-9ea6-04187a0efd00",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "329102b1-52ab-4816-96e9-94d328fe87f5",
        "cursor": {
          "ref": "d4b928bb-6f93-47a3-a037-3a8a389820a8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "135c2c29-0277-47d0-82ad-0b74ecc2cdb2"
        },
        "item": {
          "id": "329102b1-52ab-4816-96e9-94d328fe87f5",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "49cd7df3-065a-4302-bce6-cd8320cfbf02",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a4af9c-e3f2-4eb2-86df-462657bba298",
        "cursor": {
          "ref": "1f4ae358-e11d-47e9-9089-81d04d940983",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "088dbc66-20ac-4658-a93c-21ddde251166"
        },
        "item": {
          "id": "63a4af9c-e3f2-4eb2-86df-462657bba298",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3d0c6936-7980-4c33-99b5-da8ffee8fe50",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "d397d9b9-3397-44c8-a71d-31781ece2701",
        "cursor": {
          "ref": "faee241a-b4e1-4873-9d08-996e5a7eafb8",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "69b83e03-075e-4fee-8fd1-1877f2887a65"
        },
        "item": {
          "id": "d397d9b9-3397-44c8-a71d-31781ece2701",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e5bbf5d8-36aa-4a19-8317-5bb5b4a7d00e",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640975cf-427e-4c2a-903a-6d7670656b26",
        "cursor": {
          "ref": "4c3c5a0e-54c4-4311-9123-afc37ce1d605",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1a476f88-d893-4d2d-af06-587e3857814b"
        },
        "item": {
          "id": "640975cf-427e-4c2a-903a-6d7670656b26",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f6476bda-0e9c-4bea-a757-72e6696c831a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1012cc4-cfb5-40bf-b90b-66a8f90fa024",
        "cursor": {
          "ref": "0761e0a2-ae7c-4fd2-b5ef-9eec14363d3c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fecaa2b6-adc0-4d85-bbd8-222fa14ab1a4"
        },
        "item": {
          "id": "d1012cc4-cfb5-40bf-b90b-66a8f90fa024",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3a890f02-f2b4-4652-ab53-b749ad10277e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1001f4-f82f-4a0f-80f6-e989aac99f6a",
        "cursor": {
          "ref": "01e4275d-54d0-4689-a650-ecbe97c8579d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "6475c098-1db7-4709-9af0-ff2abec2f657"
        },
        "item": {
          "id": "de1001f4-f82f-4a0f-80f6-e989aac99f6a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f0643c7e-dc2f-4a73-83a4-4a73ea7e9ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a78739-22f1-434a-b337-8d713ecbd51c",
        "cursor": {
          "ref": "0f393f81-bbca-49af-b6aa-a470848bd61d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8849818d-597e-43bb-84c7-f3c0a086b4c3"
        },
        "item": {
          "id": "39a78739-22f1-434a-b337-8d713ecbd51c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7427fb16-fa32-425c-b79b-a9b39804df3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a815e7c-e57b-44a8-a08e-5c2c584378fb",
        "cursor": {
          "ref": "e66611ce-2138-4360-a343-7c38c4e10183",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ceff1e4f-0f4b-4623-b35b-1a1b0855c426"
        },
        "item": {
          "id": "2a815e7c-e57b-44a8-a08e-5c2c584378fb",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0c47390d-c690-4289-b117-e791fe05ede3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795c8ed-7b51-4a30-b191-df28b6c68b91",
        "cursor": {
          "ref": "d5d142e3-e67a-4af2-93df-8a931e6f183e",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "221b3527-cf65-4600-b703-12dfe660acf7"
        },
        "item": {
          "id": "0795c8ed-7b51-4a30-b191-df28b6c68b91",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bd5d9587-0aa4-42bb-bd8d-074ed39e3575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5d52fb-e5bf-4c52-8a72-2a51d23d6cb2",
        "cursor": {
          "ref": "d401f9e5-6d4d-4b08-bd8b-afc3ee7e5ebe",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e6eb2d42-b061-4c7c-911b-aae5bd04229c"
        },
        "item": {
          "id": "db5d52fb-e5bf-4c52-8a72-2a51d23d6cb2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "36dda0e6-ba26-430b-8deb-e87f39430bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e1c239-d59c-46b9-976d-b8f4d60630b1",
        "cursor": {
          "ref": "b16e6e13-5ee6-49d8-98d5-2743bfe6f978",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4941aae8-8b78-4923-bf58-1492ea61ce75"
        },
        "item": {
          "id": "95e1c239-d59c-46b9-976d-b8f4d60630b1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ce51b328-b566-430b-a283-b8baac355197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4bc318-e0a5-4eb8-abae-fc83621a34d1",
        "cursor": {
          "ref": "0029ed73-8a91-4563-bdd6-8aeda5aacd7f",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c3c8478-33c6-4d3a-8079-755075e0d047"
        },
        "item": {
          "id": "3d4bc318-e0a5-4eb8-abae-fc83621a34d1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0c39c42e-b65c-4a8c-baa2-20bcb2968455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd365f17-f64f-4a65-89a1-989356e24028",
        "cursor": {
          "ref": "9c8addd3-3935-43e3-8660-d8892d295cd2",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c59a6c31-ac05-4906-a9c9-e299f7ba8b68"
        },
        "item": {
          "id": "bd365f17-f64f-4a65-89a1-989356e24028",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b77d2b16-d890-4ca3-99ba-9b5bb691c879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8545f563-4491-41c6-a750-4ed505c9c47c",
        "cursor": {
          "ref": "200ffba5-3a92-4ef3-9b32-0f608975cd5f",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a16ec4dc-4396-4e11-8e37-77904d2d153a"
        },
        "item": {
          "id": "8545f563-4491-41c6-a750-4ed505c9c47c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e21e3b80-b0af-48dd-899a-d2ef5553f656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f090850f-c9e9-4881-821c-82fcbb420655",
        "cursor": {
          "ref": "7e0f7329-4c94-457b-9227-ba1eba5b2f01",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9ed2d50-e1bd-4ed1-bb97-9efa41e8aead"
        },
        "item": {
          "id": "f090850f-c9e9-4881-821c-82fcbb420655",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fdd6ad70-0ba2-4d6f-8712-6930c1de1019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3359d3a-6be8-4792-add0-c038a446e9b3",
        "cursor": {
          "ref": "de0caae6-17ea-449d-84c1-40a1d6b860df",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2195c5cc-0f32-4e85-9ced-f1860f69cb57"
        },
        "item": {
          "id": "e3359d3a-6be8-4792-add0-c038a446e9b3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ce6f5cbd-8860-4d79-8ac4-18c98cee6e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1264e92-837b-46bc-b46f-688318eff011",
        "cursor": {
          "ref": "4eeec6a1-166c-41cd-a81a-23a35ae6a463",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a4973235-5fed-48cb-b0da-ab11ae06d3fc"
        },
        "item": {
          "id": "f1264e92-837b-46bc-b46f-688318eff011",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7c616a12-58a8-4730-b6cc-6ecc99486a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe74d2-19b6-4607-a150-230098cff3b1",
        "cursor": {
          "ref": "12d48614-a56c-43bf-9b08-4d0fd050f2c4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f42d7ff6-0686-40ec-93b3-df1864836340"
        },
        "item": {
          "id": "febe74d2-19b6-4607-a150-230098cff3b1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61c1bb20-fbbe-4a25-a61b-210d5b79da5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96183985-17c3-4ce9-b134-aa0cd0a2bfa8",
        "cursor": {
          "ref": "6f861d48-a6c7-4e94-9a98-e8c548c58d60",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43dbd4ca-2eee-42f1-8111-2287032f42df"
        },
        "item": {
          "id": "96183985-17c3-4ce9-b134-aa0cd0a2bfa8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "acb65dba-a14b-4995-a876-73616fae8942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685bdb8b-24eb-4f3b-8c0e-e36a0ea46a0e",
        "cursor": {
          "ref": "24750e78-5f81-4188-94ec-ed306bed9e85",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "df4272dd-9e56-4af3-af0c-ccd3a2b283cf"
        },
        "item": {
          "id": "685bdb8b-24eb-4f3b-8c0e-e36a0ea46a0e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b38fc5ff-a782-4254-a362-3b227c8a97a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d129da1c-8319-4f1f-aa37-1e5fae7704c6",
        "cursor": {
          "ref": "597a394a-1830-48db-87c8-8e54a4e099ef",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c03c8fce-ad12-4a3a-8821-8a0284f2a59b"
        },
        "item": {
          "id": "d129da1c-8319-4f1f-aa37-1e5fae7704c6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d9a4b2c-ee76-4c61-9809-e5feaf6a3b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec18059-cd69-419a-9181-e9b6b7355e6f",
        "cursor": {
          "ref": "9e0b52b4-ec1d-4ea2-bab7-2a8207faca6c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ae50cd8b-3138-4127-9665-7019d4edcade"
        },
        "item": {
          "id": "cec18059-cd69-419a-9181-e9b6b7355e6f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "70bedf9c-de56-4bd0-92b2-e95a2a856a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd27246-a6aa-45f8-b98e-81f4cc2586d5",
        "cursor": {
          "ref": "1d347f40-e0d4-49a1-8248-481d6e99fac5",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9f82ff92-580d-44b8-86d8-61cb189fc24e"
        },
        "item": {
          "id": "ecd27246-a6aa-45f8-b98e-81f4cc2586d5",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5ffebc02-4379-4992-975d-6d3e243bc916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717b895e-9fef-4297-9af4-057fa71c03d0",
        "cursor": {
          "ref": "fc53583d-9b6c-4aa2-9906-4a21e309ef4a",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "789c425c-6d05-40dc-8467-3d21e91a158f"
        },
        "item": {
          "id": "717b895e-9fef-4297-9af4-057fa71c03d0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9cfca95b-476b-4ea6-97cf-519177307739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f503892-13bf-4f79-8bd8-ec38c8a8e96d",
        "cursor": {
          "ref": "07c5ce38-4fa2-4e3d-a211-ffe022580100",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fe76f39a-b902-4902-9753-eeb596949844"
        },
        "item": {
          "id": "9f503892-13bf-4f79-8bd8-ec38c8a8e96d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "74f9b583-f923-48b3-ab7a-d50309601586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4714bfae-5664-4c9e-8131-4b72767db1e8",
        "cursor": {
          "ref": "4453bfdc-750d-4f91-a809-9f80ed62b7e4",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e3c1c911-a324-4cd9-a75e-8db49c8398d7"
        },
        "item": {
          "id": "4714bfae-5664-4c9e-8131-4b72767db1e8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2ee8c4ab-8f98-4fd9-b766-67399e57bced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cfb838-7eea-44c0-82ec-987b06299ad6",
        "cursor": {
          "ref": "13b3d1cc-a1ea-440e-a204-9e6967f64755",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4afeec64-5d05-49b4-b9fe-b7f812c70dfa"
        },
        "item": {
          "id": "67cfb838-7eea-44c0-82ec-987b06299ad6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b747a7fc-911e-4312-ad13-86cef21b0af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d4305c-28ba-483d-bedc-83bb809ab504",
        "cursor": {
          "ref": "d7d586bb-194e-4a30-9878-ff8e54525b5c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "765b1ce5-847d-48c2-90b0-54cfa055c627"
        },
        "item": {
          "id": "92d4305c-28ba-483d-bedc-83bb809ab504",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3313b8f1-45b3-4b4c-b6af-18d5c2dd1561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee075a5c-bde5-49d0-8714-b9d9b0ad8170",
        "cursor": {
          "ref": "8781c389-6403-4935-970c-d59619952a30",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a5267dd2-6cfd-48ca-879d-748a0324a8b5"
        },
        "item": {
          "id": "ee075a5c-bde5-49d0-8714-b9d9b0ad8170",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "29dd3c18-9214-4eee-922e-1136edbd2dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ce223c-694a-4b8a-a202-8283cc6e0629",
        "cursor": {
          "ref": "42001174-71c2-4a80-a276-8aa941cc94ff",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b2e069f4-bf0d-4758-b61c-4501b0c3a2d9"
        },
        "item": {
          "id": "22ce223c-694a-4b8a-a202-8283cc6e0629",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "243cfc90-24eb-4fd7-9b7f-1df7d4e821aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de541f00-c5c0-4be4-a42c-a6abd941a483",
        "cursor": {
          "ref": "beb4a5f1-7c28-46c9-b5a8-4ca8ed8d5b45",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b16d1a86-3025-4cd8-a8dd-e8af6d24b3d2"
        },
        "item": {
          "id": "de541f00-c5c0-4be4-a42c-a6abd941a483",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2ac7503e-73d1-46c4-91b7-bd412686d84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81e7f2d-3a67-4441-aade-62552b8513c2",
        "cursor": {
          "ref": "c0097069-08cc-4ed6-90ff-2f605dc45c5f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8241213f-91ba-43cf-8c74-70a96e15c111"
        },
        "item": {
          "id": "e81e7f2d-3a67-4441-aade-62552b8513c2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "d1d758ed-fb70-43c5-8e03-05d7f9807d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c489e14c-7af4-424a-9a6c-dacec4488c46",
        "cursor": {
          "ref": "0f8778ad-68d1-4c04-8940-cb66674fa391",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9f45598d-134b-44f6-ba9e-1cd4b11b34eb"
        },
        "item": {
          "id": "c489e14c-7af4-424a-9a6c-dacec4488c46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f3bb431a-2b94-4244-b914-37c95517a3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae220de-f0f4-4dd1-8cdb-3e8d1a1b1164",
        "cursor": {
          "ref": "4d552d0e-0b41-482d-b87e-2f6d6510c76d",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "68281a60-51a3-44ad-8dbb-ee2dc4de66e6"
        },
        "item": {
          "id": "eae220de-f0f4-4dd1-8cdb-3e8d1a1b1164",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ca1cb537-2f25-4961-8f8c-b7a0fab0d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db815f6-ecc1-48ee-88fe-8b915737248f",
        "cursor": {
          "ref": "96780bb9-f485-4abb-85f0-36236357b5e5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a08b6663-15ff-4f8f-a773-93e1644e743a"
        },
        "item": {
          "id": "2db815f6-ecc1-48ee-88fe-8b915737248f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c1821552-9ee0-4434-98b2-5068d0f5849f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9c0183-47d6-4d36-926a-0714ccb50354",
        "cursor": {
          "ref": "2cd09d83-ed04-4f46-80c9-43efbb750217",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9982040d-3de7-4511-8560-f05878fd8860"
        },
        "item": {
          "id": "7b9c0183-47d6-4d36-926a-0714ccb50354",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "54fa2a76-1375-48bb-8eb0-5c9f898c71ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79391665-58b9-426a-a10e-de98aa6a33ce",
        "cursor": {
          "ref": "9a77e211-6f22-49e4-8bb4-d60b51b88cf5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "07cef886-9015-4028-b059-a45a15bf3908"
        },
        "item": {
          "id": "79391665-58b9-426a-a10e-de98aa6a33ce",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ade72470-f6a9-408b-ab37-495754da437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94052744-28cb-402a-af88-cf542bc97a95",
        "cursor": {
          "ref": "ede9e85d-123a-4edd-8dcf-960a7a4b8b1d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "7686dbfa-44f2-4736-b158-7f8227cf5a97"
        },
        "item": {
          "id": "94052744-28cb-402a-af88-cf542bc97a95",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6bb59fd4-24d4-46f4-8472-49f835ddf114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7ac285-172a-45b0-ae68-6b877db277c2",
        "cursor": {
          "ref": "531ebb95-656e-4ba2-9524-3a46810a3ca5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f6c2e9ce-5095-4c1a-b4a4-2dedb283853b"
        },
        "item": {
          "id": "6e7ac285-172a-45b0-ae68-6b877db277c2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b048652a-dddc-47d5-ba6c-6178d1fb8e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a8bc94-064c-4fc5-b338-4cb851d0b7d4",
        "cursor": {
          "ref": "c0738457-dc58-41ba-b917-d7042a9c1d96",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "abc33b54-12d5-42df-8f3c-b7c2caa82757"
        },
        "item": {
          "id": "13a8bc94-064c-4fc5-b338-4cb851d0b7d4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3a137bfd-96d5-4273-9f7f-7d60b47e3ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8692735-c610-444d-aa62-bc4d66a3cf46",
        "cursor": {
          "ref": "0934cfa8-d0c8-4a7d-8379-b8d5201a00e1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "27c3a5fa-4db9-40ac-a91f-53abe4e040ce"
        },
        "item": {
          "id": "f8692735-c610-444d-aa62-bc4d66a3cf46",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6ccd1d1-dd51-40b9-a9cd-12c870880cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f87e1a-1441-4d3f-ac37-476bbc04e6c0",
        "cursor": {
          "ref": "8310818a-3f0c-46ac-bf25-1e14e545a054",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3165fa5c-fcfa-42b6-ad06-673cdc318993"
        },
        "item": {
          "id": "e7f87e1a-1441-4d3f-ac37-476bbc04e6c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "46176ae0-84c4-4f8e-be69-6b64fed4853c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a93249-a564-4115-bbf6-4502567c90d2",
        "cursor": {
          "ref": "473995ee-bdbb-4d6a-9629-d117d90f1d4c",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "17ea21f9-7a9f-4d10-ac43-2ac7c0e34a0c"
        },
        "item": {
          "id": "22a93249-a564-4115-bbf6-4502567c90d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8d09b2ea-1a56-40f8-a9d0-74bd2b5f3757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7f0dda-14cc-4524-8d5c-4b57f3ee1908",
        "cursor": {
          "ref": "9d6b9d49-e2d8-41ef-9b1c-7bff540c5aff",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "540b440d-101a-425e-8311-b6a5463ac644"
        },
        "item": {
          "id": "1c7f0dda-14cc-4524-8d5c-4b57f3ee1908",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f216eece-a5d8-4b42-95b9-6760dafe358e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f35880-10d6-4273-aca2-bd3ef087d35a",
        "cursor": {
          "ref": "5dba918f-8937-486f-937c-f4afc63524fb",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "af78a4ea-1fac-4f70-b9f9-6ee845890613"
        },
        "item": {
          "id": "d4f35880-10d6-4273-aca2-bd3ef087d35a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "afaffbd0-5a00-471e-9171-aea1b2623ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb99119a-d816-47ca-841f-90b871d5e311",
        "cursor": {
          "ref": "edec5da5-575d-4a37-8070-d36df851dbcb",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4340ac18-653d-45a8-86c1-63eaf1b0a0e1"
        },
        "item": {
          "id": "eb99119a-d816-47ca-841f-90b871d5e311",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85cccaf2-1837-4134-b9e8-34a51b4a3a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e838465f-6342-47e2-b6eb-13c642fd54a3",
        "cursor": {
          "ref": "1ad65782-1007-46f9-8e3b-831ad33fab00",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5b670306-e5b1-41a2-81a0-11e29279d785"
        },
        "item": {
          "id": "e838465f-6342-47e2-b6eb-13c642fd54a3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e01536ed-2d06-41af-9c9e-48764d81e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e146514f-54b8-4882-9ec4-cc940469ae54",
        "cursor": {
          "ref": "5c500b2a-ca07-45d1-a675-0fb68f02fb88",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "77a683e1-ffcf-4301-8529-a3294cc26519"
        },
        "item": {
          "id": "e146514f-54b8-4882-9ec4-cc940469ae54",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24be46e3-3cd5-4995-8989-f1725bf84cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7798e9-1e7d-4605-b3a7-84fcc678d4c2",
        "cursor": {
          "ref": "75d885e8-b443-4088-a732-6420d6f94bc7",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7fa26535-363c-4b7f-ab38-32dc0222647c"
        },
        "item": {
          "id": "6e7798e9-1e7d-4605-b3a7-84fcc678d4c2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d79d1bac-cc40-4b90-9b6b-cdf0a7b4607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39a7bb0-6388-4d32-8f8e-6aef7bf37507",
        "cursor": {
          "ref": "552d512b-61c4-4962-bb89-986c3cc11dbb",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2cb69e0e-664b-4eed-bd50-583c8688c93d"
        },
        "item": {
          "id": "b39a7bb0-6388-4d32-8f8e-6aef7bf37507",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "457f66d1-0970-4442-8783-db23140c3916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d1c21e-3eb3-42c7-ac4c-6cfd1f39218d",
        "cursor": {
          "ref": "83cd2fc3-526f-408c-935c-4e5550df5ea0",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "4489100c-c934-464e-a27b-b68af0650781"
        },
        "item": {
          "id": "b9d1c21e-3eb3-42c7-ac4c-6cfd1f39218d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b60cd731-af2a-452d-b497-8e23f2da6844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd11a414-41d1-47f0-9b3c-ca083ce8dcf1",
        "cursor": {
          "ref": "e89cd713-ffed-4e11-9084-ca77528f9b83",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0102eb1b-21c2-41c7-b9c0-af445deb6ef3"
        },
        "item": {
          "id": "fd11a414-41d1-47f0-9b3c-ca083ce8dcf1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c320ac61-e17f-45ad-8126-72fec89e3172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37ad441-5d19-474f-a35c-b7fba75414cd",
        "cursor": {
          "ref": "01bd79d9-2dff-4d1e-a57c-ad41452859b1",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ec1560d7-7676-450f-9088-7e30ff0f54a8"
        },
        "item": {
          "id": "c37ad441-5d19-474f-a35c-b7fba75414cd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "43fb5e5c-0bcf-4280-94ee-df532548abb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89903b3c-157f-4a3e-9dac-f8f7ae3dd25e",
        "cursor": {
          "ref": "96509d0a-f0b0-4fe0-8df6-2198203e51de",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7addc6c3-00a8-4177-a144-87d6e867ade2"
        },
        "item": {
          "id": "89903b3c-157f-4a3e-9dac-f8f7ae3dd25e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6a0eec68-8063-4cc0-9777-11576b624553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a918f9f5-e991-413d-a262-450fba4a013b",
        "cursor": {
          "ref": "fe07c38b-bad1-49e5-ae00-7b6a91d607b7",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c5ad15d2-dc10-4ec2-bc32-ea0fcbeb33f5"
        },
        "item": {
          "id": "a918f9f5-e991-413d-a262-450fba4a013b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "88cc9084-f6af-41c6-8e84-b860cb273001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c8f98d-54ec-46e6-9636-3b2bb467f6bb",
        "cursor": {
          "ref": "189168df-d570-4d7b-a130-514e7dc777aa",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "45148287-15a5-46ff-a4d4-02fff56c4011"
        },
        "item": {
          "id": "87c8f98d-54ec-46e6-9636-3b2bb467f6bb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6fd4d73d-82ad-4a27-b336-1f37fd532b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272e8a67-6fd0-46c3-bee2-d6917c0a0d87",
        "cursor": {
          "ref": "31f2e29f-fa26-4f4f-bc7f-35d919eb7798",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f555e0c6-02b8-4eb0-a559-2d217a812899"
        },
        "item": {
          "id": "272e8a67-6fd0-46c3-bee2-d6917c0a0d87",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5053cbd7-8d44-4fc9-95b9-df437f30f7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a77644c-4ecb-4e0e-a06d-7218a30f4fde",
        "cursor": {
          "ref": "c0702c3e-b8c2-4f86-9c7a-21d1108ba95c",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "97e130d0-5214-47fe-b7ef-b2e0e42dffe7"
        },
        "item": {
          "id": "5a77644c-4ecb-4e0e-a06d-7218a30f4fde",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b8f6ac0-a8f9-40a7-a800-a34d1da4c9ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ecc0ba-bfa2-4185-93cb-da6f7a6d9aab",
        "cursor": {
          "ref": "999ffa0c-c820-4f0c-87b8-3e12eace8005",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0b8fed84-94e7-451b-adeb-c59ac5aa234a"
        },
        "item": {
          "id": "84ecc0ba-bfa2-4185-93cb-da6f7a6d9aab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4dc98a52-ea34-44cb-a60d-289c671973fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75312e3-df2d-4e58-8c17-1b3074dc682e",
        "cursor": {
          "ref": "842193c2-71e4-4d60-b131-04fc1d60ae5d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "86880cbf-e73c-44c7-a16a-b5ae89837f87"
        },
        "item": {
          "id": "c75312e3-df2d-4e58-8c17-1b3074dc682e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ae4a6ce-33f2-44ec-a8ab-9378dc91777d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f818b314-ffd1-4c16-99fa-c00175c30a68",
        "cursor": {
          "ref": "4c21c681-daca-4282-8e0d-8b87beef4dc9",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1ca1224e-47c8-470e-861a-360cd5bcfbca"
        },
        "item": {
          "id": "f818b314-ffd1-4c16-99fa-c00175c30a68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34b71fdc-6ebb-443a-9e4e-572dc65ba418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4608e23b-5e49-4f5c-8694-6809acc75215",
        "cursor": {
          "ref": "807144ea-b3b0-4776-bc87-4268b8e92f38",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8c8fe1b5-cb42-4aac-b7aa-2f8ed0ea7962"
        },
        "item": {
          "id": "4608e23b-5e49-4f5c-8694-6809acc75215",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "35ffa45d-66d9-4680-bbf5-4e875d60ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7d6a5a-7b60-4ce9-b015-7bc16e71cee3",
        "cursor": {
          "ref": "eba9e6e7-86ce-4b2c-8109-17a18d95c0e4",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e8d23806-8a3d-44b1-85fd-3c7712cfe07d"
        },
        "item": {
          "id": "9a7d6a5a-7b60-4ce9-b015-7bc16e71cee3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2764284-4550-4c5d-845e-5f59676d2adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21b8027-305d-48d3-b0e4-7e377a67a358",
        "cursor": {
          "ref": "a82b7d84-9b88-4b09-ac14-807fa3a9ac17",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "154e4aec-7d65-49a1-a123-38e17d16d109"
        },
        "item": {
          "id": "f21b8027-305d-48d3-b0e4-7e377a67a358",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d6008a7a-3a3f-455c-b8d9-076fad228150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee42e219-b79e-4de2-b097-0cf0bdbb7c23",
        "cursor": {
          "ref": "d08c5786-a9ea-486a-bd00-d986b29df4c1",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d7eaf1a1-cee2-428d-aa99-46865d4d757d"
        },
        "item": {
          "id": "ee42e219-b79e-4de2-b097-0cf0bdbb7c23",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a77fbb84-b348-49cd-bae5-3ceaad1aaa59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8d11c4-d2ae-4fa0-afad-9003105d1a8a",
        "cursor": {
          "ref": "9a422256-9c30-4a6c-9faa-d4a39f87c778",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15664ecb-6f27-4ceb-9ae1-9531e2901840"
        },
        "item": {
          "id": "0f8d11c4-d2ae-4fa0-afad-9003105d1a8a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b04275af-1e55-464b-b003-eac464f81094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f2ec31-39a9-4db6-8e6f-07aeed07f98c",
        "cursor": {
          "ref": "38d0746f-fc7d-4335-9538-63d7d19bb57b",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "893dc6f0-04ce-4ebf-826a-40223ad85a26"
        },
        "item": {
          "id": "90f2ec31-39a9-4db6-8e6f-07aeed07f98c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "24181d2c-fae3-4ef4-9745-219c9e4f782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e6bf43-c06b-4c75-acd0-ab87ca14f7bb",
        "cursor": {
          "ref": "985a3e01-77fb-4c5e-a183-a5a87d19a58b",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8fd0e9b7-71e8-4973-93a5-0e182ead1488"
        },
        "item": {
          "id": "b1e6bf43-c06b-4c75-acd0-ab87ca14f7bb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "de2a068f-36d4-41a3-be37-540d8e26fd86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cc89fd-cd57-4ff0-8981-6db8c5dd0b36",
        "cursor": {
          "ref": "70397e5a-8fb8-4853-a64c-946e8ca5fa76",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5db51e48-9781-4fb8-9eeb-45b0852c991f"
        },
        "item": {
          "id": "b9cc89fd-cd57-4ff0-8981-6db8c5dd0b36",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e62c6009-2b3d-4db5-b614-b20b05b41e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d642272-abe1-4213-93ee-ba01c9632f2e",
        "cursor": {
          "ref": "1443e8a9-7b12-4968-aa6e-d65ef87d8193",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9d39a104-d40a-4b85-ae67-f1a7b3344266"
        },
        "item": {
          "id": "4d642272-abe1-4213-93ee-ba01c9632f2e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4d368a80-a8f8-4a37-93cb-c855078ad482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746155e3-ba00-4f73-958f-86a8aa7f7e5c",
        "cursor": {
          "ref": "8cdf6441-8736-45bc-9e55-a65be7062c4a",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c0a29981-e7d6-4a7d-8b24-ce91fc3fce4b"
        },
        "item": {
          "id": "746155e3-ba00-4f73-958f-86a8aa7f7e5c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6ebc21af-0065-4575-9626-d20db1dd96cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d813e733-7621-45df-9d64-3a839e9dc3b9",
        "cursor": {
          "ref": "eeb573c7-590c-4c18-8b76-95862a6bbbd2",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ed2042d3-d8d1-4598-940e-7891e2ab800b"
        },
        "item": {
          "id": "d813e733-7621-45df-9d64-3a839e9dc3b9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1aa11b43-d1b5-4a7d-8f6e-a8ec4f5677ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a32a3c2-3058-407c-93fa-d0ce4ed02ea5",
        "cursor": {
          "ref": "257c31a8-ab64-4c7a-b5a4-99f1e0f2be10",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "184a4984-9340-4d38-b80c-980a7a1576a0"
        },
        "item": {
          "id": "7a32a3c2-3058-407c-93fa-d0ce4ed02ea5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9c88bfd5-42b6-44fb-b39e-c0eaa3131672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4a11b9-8946-4640-94ac-31bb574e90e8",
        "cursor": {
          "ref": "14043a2f-94c9-42f6-90c6-563c4810f3f4",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "04c9da03-0e7a-4db9-b357-1c6c6ef588ff"
        },
        "item": {
          "id": "bf4a11b9-8946-4640-94ac-31bb574e90e8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c874be35-71f0-426a-812c-4a0953827ebe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f7fe30-d45a-4445-9eab-eba06695e4b1",
        "cursor": {
          "ref": "eb2a2250-f267-4ca9-9530-8abffa523c91",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06152a83-9cc2-4e7b-9ca6-c66393e49ba3"
        },
        "item": {
          "id": "24f7fe30-d45a-4445-9eab-eba06695e4b1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "31167a89-6ef5-4a88-9b30-7b43fb52ad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8c1e54-944d-4796-8b19-1ca623726da3",
        "cursor": {
          "ref": "3bfa6260-b508-44d3-9f22-514303afea28",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6cd68b3f-9765-42c4-90bc-710733c47ada"
        },
        "item": {
          "id": "eb8c1e54-944d-4796-8b19-1ca623726da3",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "28699233-7677-4889-933d-1a14b627894d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec1f186-181e-4379-a874-799977f463f4",
        "cursor": {
          "ref": "2ab525b0-fc12-4507-be91-83376f9c1e3a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0a8d069-0426-4d32-9a3f-be6e27cbbc68"
        },
        "item": {
          "id": "8ec1f186-181e-4379-a874-799977f463f4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "442b4373-62aa-4f90-acb1-2b85c199c2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3396470e-f3c0-4818-b521-b2bfa5006dc8",
        "cursor": {
          "ref": "3a4f8e19-c3a9-468b-b7a3-3d141ca1c8e1",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eb7f9471-b7c2-4f2b-a9b4-5368995cd175"
        },
        "item": {
          "id": "3396470e-f3c0-4818-b521-b2bfa5006dc8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0084a9df-9816-4d60-941f-bfb40faa64cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1842c324-e8bd-47d3-9e77-c5ee6afe0b27",
        "cursor": {
          "ref": "ddae63ee-b0ef-4057-a049-44cbdd29da44",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "79279c8f-db49-4e7f-a925-a97bbe025a52"
        },
        "item": {
          "id": "1842c324-e8bd-47d3-9e77-c5ee6afe0b27",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "adc76ec6-f9bf-46de-92d6-bafd2f9c5e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802b9a94-e280-4a35-b877-266f1b7cdf64",
        "cursor": {
          "ref": "1f7fd15a-e2a8-43b4-abb7-021115c41b85",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a325ee5e-04bf-4d59-a4af-6be2f1548870"
        },
        "item": {
          "id": "802b9a94-e280-4a35-b877-266f1b7cdf64",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "755e1efd-29b1-4811-bb35-febc6b7d6970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f8a8c7-d5bc-4461-8e87-37fca73bfb47",
        "cursor": {
          "ref": "1129108c-f8aa-4b21-8a54-ac8d4de5864b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a286c154-4c38-4838-9166-8195d74dcb8a"
        },
        "item": {
          "id": "e8f8a8c7-d5bc-4461-8e87-37fca73bfb47",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c9dc973d-76ac-4e83-b8c1-9a95ec5f0741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0335648b-4594-44b4-8a25-d09abe9d87d4",
        "cursor": {
          "ref": "001e1a90-e9cd-48b4-893c-8885e84de8c6",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "23f68993-1d69-4283-ba07-03dcb8eb1c13"
        },
        "item": {
          "id": "0335648b-4594-44b4-8a25-d09abe9d87d4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "78d587d9-35d1-4aac-be66-48ff1d5a7827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f5483e-a076-464c-af1f-b8e0ebc20319",
        "cursor": {
          "ref": "1b1548f2-6155-47dc-a712-ca248f1c730a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1c532d73-7208-4167-b7b8-f18ed5326980"
        },
        "item": {
          "id": "d6f5483e-a076-464c-af1f-b8e0ebc20319",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fc593c8d-299a-4698-8572-beef8296cc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc041729-e5dd-46ee-baef-797d37c07638",
        "cursor": {
          "ref": "5cab4266-7e34-460d-a17a-9aab52538f38",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5efc2e11-e7bf-402d-bdd2-cd80b179cfa7"
        },
        "item": {
          "id": "cc041729-e5dd-46ee-baef-797d37c07638",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "3ddcb830-85c3-4889-a81c-5b11af78b124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ad649e-3af8-493b-90b3-0c9a125a0700",
        "cursor": {
          "ref": "bb64c5fe-6e1f-4efe-8f50-a46e74c34a46",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a5dcf132-1719-4790-a924-d794b6e3942e"
        },
        "item": {
          "id": "b7ad649e-3af8-493b-90b3-0c9a125a0700",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1280db5c-9d13-468a-a55d-8389d859467d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b961a61-cbc4-45ee-b5ab-98be4c8695f9",
        "cursor": {
          "ref": "8f880374-a881-44ef-a5e4-673b6ad42f80",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "110787e7-154d-4db0-a78b-61a570d3e97c"
        },
        "item": {
          "id": "9b961a61-cbc4-45ee-b5ab-98be4c8695f9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0311782c-da81-4ee3-acb8-f18ef4f360a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af308a4b-cc4d-40dd-8625-34f6b67d284d",
        "cursor": {
          "ref": "49eacca1-a001-48e0-b61a-5943bc215687",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "afd10e80-d311-4e1d-8792-15816db2bdda"
        },
        "item": {
          "id": "af308a4b-cc4d-40dd-8625-34f6b67d284d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6200dfe7-bdc2-4374-bfea-7782c383c384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69dc5b36-f29b-4094-b1cd-ebf8daae54d8",
        "cursor": {
          "ref": "0ed7eaaa-556b-487f-8ad0-a82e4bf768cb",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e21e2c3b-9d2b-479d-b7a4-a48a7e2c2ba8"
        },
        "item": {
          "id": "69dc5b36-f29b-4094-b1cd-ebf8daae54d8",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a6dcfacf-4e45-4125-8a03-12f56ad2adb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73707b3a-463b-4cc9-9e24-184050217d32",
        "cursor": {
          "ref": "037556e2-c378-4675-934b-e29aa59242e3",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4c786de1-8b2d-46d5-b468-0acdc9b1c0cf"
        },
        "item": {
          "id": "73707b3a-463b-4cc9-9e24-184050217d32",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "444f8442-b351-482d-8d3f-99dc99ea9631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd354e79-1469-447d-9f86-77cdd73b5298",
        "cursor": {
          "ref": "29f79d77-d777-46c6-aa5b-ec581c961a1b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "39742708-c401-474e-a6e0-8d3be36325ea"
        },
        "item": {
          "id": "cd354e79-1469-447d-9f86-77cdd73b5298",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b4217bde-cd7c-4099-87fb-83d192d12875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e40d06e-e8a1-4ba4-8598-c2c468ea9520",
        "cursor": {
          "ref": "5887e953-d383-4485-9f11-02fb91e1a95c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c3b256df-8006-4059-909c-aa20aca8fa85"
        },
        "item": {
          "id": "5e40d06e-e8a1-4ba4-8598-c2c468ea9520",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2e62f166-9f4a-419d-9544-500816d29278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7be4d4b-8a19-40bb-841d-901f4a780b86",
        "cursor": {
          "ref": "cea292ee-2e5b-429f-835b-ea06a136cf63",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c10834df-ccf4-4745-a98b-e306a8e363d9"
        },
        "item": {
          "id": "c7be4d4b-8a19-40bb-841d-901f4a780b86",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b35827a4-c145-4ee0-bb09-4d1c5822cee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3b07fc-0615-4683-a479-ef5e4ce99964",
        "cursor": {
          "ref": "a376efb9-1433-4be7-9e71-3e88c383695e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "adbb7267-d4c3-4d1a-a69f-fe737532a65a"
        },
        "item": {
          "id": "7b3b07fc-0615-4683-a479-ef5e4ce99964",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4d0ee2fa-e0c0-4e90-9e55-686ac27ee6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591426ee-e686-4a48-aa97-2b2dc94d34e2",
        "cursor": {
          "ref": "8b884671-3faf-4d0a-ad53-9c166c99523e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4df6dac3-b009-4f9f-bc15-d9ed2742e604"
        },
        "item": {
          "id": "591426ee-e686-4a48-aa97-2b2dc94d34e2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a753421b-406d-4a2f-b7aa-937bf84859a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dcaa955-ca60-4728-aa9c-a0a8ef7118f4",
        "cursor": {
          "ref": "34d03151-4f24-4867-b960-ef7ecfc3f0db",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2ad3bd37-9a82-4ee0-aaf2-92465df34191"
        },
        "item": {
          "id": "7dcaa955-ca60-4728-aa9c-a0a8ef7118f4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "6d61a61b-0d77-46a5-a7b0-e3354b49fc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fc94a7-07d6-4f39-8bf1-c9c306c1657b",
        "cursor": {
          "ref": "9997fcd7-108b-48f8-b2d5-e729f221c6bf",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5b42e660-143b-474b-b12d-74c2dac84d45"
        },
        "item": {
          "id": "55fc94a7-07d6-4f39-8bf1-c9c306c1657b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ecc5b778-0746-4ccd-b3ae-4f190b53db00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb50f2ba-bd70-4837-8f02-c04737b381ff",
        "cursor": {
          "ref": "8f55590b-8ef0-4bb4-853c-9172669928cd",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8cce265a-3be7-456a-b905-51786f4c02e3"
        },
        "item": {
          "id": "cb50f2ba-bd70-4837-8f02-c04737b381ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28059447-58ff-40a7-a284-9ffde502df99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f421a75-2a51-440a-8fc3-64d9b2e3fb0e",
        "cursor": {
          "ref": "153fe64c-b39f-4175-ad68-dbb927bbe8f2",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d1df8046-fffc-49ab-a82f-4038253649b0"
        },
        "item": {
          "id": "6f421a75-2a51-440a-8fc3-64d9b2e3fb0e",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "70a95ed4-3644-4d65-8489-d0b6f17859d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632dea09-dd0c-4ca2-a98a-6df1bf58b4b2",
        "cursor": {
          "ref": "ad637094-096c-4500-bd55-d27d07a91e2d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1146ac9c-37bf-4d1a-9a92-28e08e880eac"
        },
        "item": {
          "id": "632dea09-dd0c-4ca2-a98a-6df1bf58b4b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "819d729f-a62f-4fd6-ac74-f8590abe9a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497c5dcb-419f-476b-878d-83f4c0801532",
        "cursor": {
          "ref": "f65ae6d4-a837-486e-b9f0-13706a5b0d33",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8ef1dfee-c124-49ee-80fe-6e818c6ea25d"
        },
        "item": {
          "id": "497c5dcb-419f-476b-878d-83f4c0801532",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f825bf6-afce-422b-a056-a171d850a1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8e706a-e6af-47bb-b910-0c410b8be702",
        "cursor": {
          "ref": "08e509b0-821d-457d-93f6-029b5e19797b",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fc95d9db-c841-4502-9ea6-904b492b97e2"
        },
        "item": {
          "id": "ae8e706a-e6af-47bb-b910-0c410b8be702",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "404a02a2-67ff-47d2-a9cc-9d1bf080f465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82794ead-23ae-494d-b781-c4830b70b1d7",
        "cursor": {
          "ref": "8f8a27dc-80f2-4df6-b709-01435cf174d3",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c6cdf69-f35f-4704-907a-d4038703b9c2"
        },
        "item": {
          "id": "82794ead-23ae-494d-b781-c4830b70b1d7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "114f66dd-1a1f-4ed6-afcc-c6d9fd3eac90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e51db6-8837-4355-affc-42fe1d2b0b6c",
        "cursor": {
          "ref": "30fdddea-dc55-4737-ba25-97ed521d447a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8215a227-23cf-4dc1-a9d9-6f92cbae90f3"
        },
        "item": {
          "id": "88e51db6-8837-4355-affc-42fe1d2b0b6c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "abbc98cf-cbec-416f-b455-dd7829445741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "828c05b0-e4cd-4aef-8ac7-344bf15bee15",
        "cursor": {
          "ref": "f0e12500-748f-43d3-97b7-7878e7752301",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "722af474-edce-477b-a98d-0e8b1c8887bb"
        },
        "item": {
          "id": "828c05b0-e4cd-4aef-8ac7-344bf15bee15",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3785b2e8-e425-410c-92ab-db8efc817eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44ff374-93cc-42ba-92d7-e575403627e1",
        "cursor": {
          "ref": "ca1eab50-b49e-4d90-8b43-70eac04aa9f0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "053678b0-c246-4546-99ac-8550b05698f0"
        },
        "item": {
          "id": "a44ff374-93cc-42ba-92d7-e575403627e1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "18e43271-b111-46ef-bb50-630acc5d39cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3803687f-0d7e-42de-adbf-a6649533a49f",
        "cursor": {
          "ref": "c651397e-4a7b-4621-a6c9-9c46af931fa8",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "214a8820-d165-4af1-b3c7-544dcea114c6"
        },
        "item": {
          "id": "3803687f-0d7e-42de-adbf-a6649533a49f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7b2320d7-04e8-4d5a-bbb2-38eaa58493bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0166f378-1266-4b50-aa15-5248968142ac",
        "cursor": {
          "ref": "72d9fd0f-8aa1-4003-863a-956c612b2915",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b0d5af05-f244-4e10-8d6c-a44a1b330672"
        },
        "item": {
          "id": "0166f378-1266-4b50-aa15-5248968142ac",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a8931cf7-411e-48c2-b6b5-62615322d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216a3509-bcd1-4eaa-be50-3af629a6ac3d",
        "cursor": {
          "ref": "73b2e7cf-f585-43e7-9ba6-eabc272c5540",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3dd1ddda-e9d0-414d-bdbd-73ccb0b9427e"
        },
        "item": {
          "id": "216a3509-bcd1-4eaa-be50-3af629a6ac3d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "491b381e-b4ef-4342-8172-bcb3aa269206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf211c3-393e-46cd-8b2a-9ce1c74b6de9",
        "cursor": {
          "ref": "b18e623e-f000-4130-b5ee-d1eaec6296f6",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "155cd16a-c2b6-4bee-a88f-23f15034ddd9"
        },
        "item": {
          "id": "bcf211c3-393e-46cd-8b2a-9ce1c74b6de9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bfa439be-edec-4b8d-92d7-f4753e487f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330ede48-7e1f-419b-971d-0f1d445e857a",
        "cursor": {
          "ref": "f50890ff-ce52-4cd3-bef4-284b863112b2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2c66dbe8-c5ce-484c-98c2-57f30d9f9843"
        },
        "item": {
          "id": "330ede48-7e1f-419b-971d-0f1d445e857a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0117a344-b425-42a4-b198-ab9313e094c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2183acb1-ad4f-48c0-ab6f-25a31a3fb179",
        "cursor": {
          "ref": "164ec277-7193-4f25-ab98-34fb78e2a2e7",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "536968de-075d-4a90-89ae-7b226fbb1057"
        },
        "item": {
          "id": "2183acb1-ad4f-48c0-ab6f-25a31a3fb179",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2877425d-24b6-4d08-b261-fb45fa062d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20547d4-0558-4566-ba06-b869fe54b346",
        "cursor": {
          "ref": "b39072c2-b611-44cd-89cb-ba9916a7bbec",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "47f7c348-1ba4-4eb9-a71d-36d1390a7291"
        },
        "item": {
          "id": "a20547d4-0558-4566-ba06-b869fe54b346",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "87a57bbd-f91a-4984-a4d8-d9a06bfa3ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943df020-495b-4df2-85f2-ee9d6094b74d",
        "cursor": {
          "ref": "5124068a-2cd2-4489-a04a-a2cffe9b99a2",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bf0d0263-08f5-49b6-bd6b-1751992a3cac"
        },
        "item": {
          "id": "943df020-495b-4df2-85f2-ee9d6094b74d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "da223cb6-483c-40cd-a570-d32b0442d638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a47a9e3-28fe-4712-8365-cdcc964c06e8",
        "cursor": {
          "ref": "3510c7c6-fdd1-45ca-8c8d-544e43d0ccb5",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3bf285cd-077a-45c1-9566-6a556b215c14"
        },
        "item": {
          "id": "3a47a9e3-28fe-4712-8365-cdcc964c06e8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a07dfa8-e0bb-403d-ba13-2b6d40f15b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea062c4-93de-4353-b7d1-ae7ea8cd0941",
        "cursor": {
          "ref": "f1532264-99ff-4ebf-a02e-8077f275346b",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "59c34d93-7031-42a2-9b3a-5b3c148987b2"
        },
        "item": {
          "id": "0ea062c4-93de-4353-b7d1-ae7ea8cd0941",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8e17115f-8e03-44db-a3cd-93c876423958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f567a6-3ce0-482a-a8f7-13b0612539ac",
        "cursor": {
          "ref": "4ab9d699-d5f9-471b-9ff8-99733a63519b",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "17d8a9b8-9989-4624-b86d-a9a5096644b2"
        },
        "item": {
          "id": "09f567a6-3ce0-482a-a8f7-13b0612539ac",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9d2d3061-7db1-4caf-b110-64ef30571daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9572fc35-b164-4f13-a768-213a2f830f24",
        "cursor": {
          "ref": "b37bd39e-7820-418f-8d4a-958a8b4a1308",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "575f1c8f-262c-482c-81a8-759b7fab1bf7"
        },
        "item": {
          "id": "9572fc35-b164-4f13-a768-213a2f830f24",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fc63e4aa-f95d-4be3-a6c8-8c9c58e17086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8233111d-df55-4d72-9e9e-ff171070c1f9",
        "cursor": {
          "ref": "79d6922c-8ee6-4e67-b6aa-e4577f1ea335",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "dccff73f-8d51-4177-b645-b408ae0a85b7"
        },
        "item": {
          "id": "8233111d-df55-4d72-9e9e-ff171070c1f9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c047dd03-457e-47eb-b2f4-2a1603b3c84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee91785-df85-4e2c-b7b6-4e0e76504c1e",
        "cursor": {
          "ref": "19053885-2171-435a-82bb-221004a1de1a",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "af81d75d-d716-4a10-a8d3-3d33cea8522d"
        },
        "item": {
          "id": "bee91785-df85-4e2c-b7b6-4e0e76504c1e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "450d358e-af89-47b4-b3f7-4b5a57e80ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcbb854-32e4-4260-a898-f70539b83f4c",
        "cursor": {
          "ref": "29aabdd9-19de-45b5-b5f7-dbb151b44133",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e37df727-4d3a-4ff6-83d4-b140b7f9cb64"
        },
        "item": {
          "id": "1fcbb854-32e4-4260-a898-f70539b83f4c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6ca062be-ec94-4ad5-a03b-72fe8b3bfcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7658d24f-d9a5-4d7f-9d78-e1edb76770f2",
        "cursor": {
          "ref": "b4768bfc-034a-4de6-a91b-342a1c459efd",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e3849c8c-f7b4-44f6-ba07-cad10c7c6caf"
        },
        "item": {
          "id": "7658d24f-d9a5-4d7f-9d78-e1edb76770f2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "39ecddb7-84e4-4ebf-b5e6-286e60fced83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacd34b4-134d-41dd-9b0c-d788d855d1e3",
        "cursor": {
          "ref": "53eb488d-00a7-4e2e-9507-f4fa6c499897",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fc7f8656-997e-40f9-93e6-5bd5c5d03db9"
        },
        "item": {
          "id": "dacd34b4-134d-41dd-9b0c-d788d855d1e3",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2d22694f-f5c6-4cf7-93c8-c0d1e70ba8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859c5b88-40c6-47eb-870c-1d7fd466c8af",
        "cursor": {
          "ref": "bab82010-0e71-4d11-b2b4-61778b9dae07",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3dbe06bd-964a-4582-b44b-9c08c535b4cb"
        },
        "item": {
          "id": "859c5b88-40c6-47eb-870c-1d7fd466c8af",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c5cacc5c-2988-43f9-90ba-8fe34c2796b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae54caf9-bbf3-4f9b-8c87-22630545ab87",
        "cursor": {
          "ref": "e85216a2-1b5f-4eac-810c-9f055a6bc136",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "dd5a605c-a10b-4175-ab17-3116dde717f2"
        },
        "item": {
          "id": "ae54caf9-bbf3-4f9b-8c87-22630545ab87",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3fa0b7f5-3dbe-4795-a996-dfb13431ff0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bce83b-3794-41f2-8a9c-d7c3d22856e9",
        "cursor": {
          "ref": "9966ec5d-2579-4644-ab0e-c09a17e3efee",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3b3fdb3f-6248-4f88-9864-1ff4b4ab4b4f"
        },
        "item": {
          "id": "f2bce83b-3794-41f2-8a9c-d7c3d22856e9",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "99fdb227-51f3-4cb1-b2b3-b442fcebc99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60dc901-e7f9-4589-bac1-8714c7c11b85",
        "cursor": {
          "ref": "33f44067-9371-4404-be1a-4a5ccec0eba3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1f48e1cb-de91-49ab-bd59-de5dd4bb185d"
        },
        "item": {
          "id": "e60dc901-e7f9-4589-bac1-8714c7c11b85",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c6d56b78-ca99-4865-8eab-bcd9502a96bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493e906b-bccb-4ef4-b847-96072d644a30",
        "cursor": {
          "ref": "0cf448c3-be05-472e-877e-ac27e435fd00",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ad203646-bcfb-431f-ba2e-9317d9381c95"
        },
        "item": {
          "id": "493e906b-bccb-4ef4-b847-96072d644a30",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "acab5d03-145f-49fb-82b3-0f9489ca5a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fcbd39-3290-45a9-89fa-526c7ea4ff93",
        "cursor": {
          "ref": "8a73f4ba-429b-4064-9904-ce6e4f7feaf8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "24733f0b-3300-41f6-bc95-c2edf61cc2a6"
        },
        "item": {
          "id": "c7fcbd39-3290-45a9-89fa-526c7ea4ff93",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a11517e1-83e9-4952-b3bd-200bedfd340c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01be373-17f1-4380-991b-2b233f0b9b25",
        "cursor": {
          "ref": "6a22d155-7596-46a0-a815-753b5b460835",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2e051a10-1f82-4328-945a-377e736a4b65"
        },
        "item": {
          "id": "e01be373-17f1-4380-991b-2b233f0b9b25",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dbbf2140-8740-4e34-8863-43fbbdb5cba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4ba7fc-1a7b-46ca-833a-5d79bbe7e4f4",
        "cursor": {
          "ref": "76de7b3d-03ad-4eec-81e4-d744082050b8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "795dc7a2-cd5e-4b7e-9484-499dd8b1f650"
        },
        "item": {
          "id": "ae4ba7fc-1a7b-46ca-833a-5d79bbe7e4f4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5dd225cc-5869-4457-8fe1-b170af7a370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414d14e3-f492-4f72-9a56-f05f7edcdadc",
        "cursor": {
          "ref": "2268f662-6917-40c9-bee7-692bf92c8104",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fc62ca11-ac74-4d86-8eec-8ebe0777069f"
        },
        "item": {
          "id": "414d14e3-f492-4f72-9a56-f05f7edcdadc",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2f57191f-c763-460f-b3c4-8919651b306e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a20ef7e-5c5e-466a-85fc-ebf3ade17a75",
        "cursor": {
          "ref": "f34483ca-d01f-49b3-a14f-091557fe4e35",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "de0b1dc2-ae92-4718-bbc4-ba516b53b9e0"
        },
        "item": {
          "id": "8a20ef7e-5c5e-466a-85fc-ebf3ade17a75",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cd053e11-78f5-4968-91ce-32caa09ae41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc5e689-21d2-40d8-9f02-0aef4b23a6e4",
        "cursor": {
          "ref": "bb52046f-748e-4868-a919-9094e335d68a",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f715ec88-baa4-4327-99ea-6d5b99de90fe"
        },
        "item": {
          "id": "1bc5e689-21d2-40d8-9f02-0aef4b23a6e4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5c621371-0ce2-495a-8aa1-9ca876471085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7320932-07c3-4fce-a4aa-d8b608cb0123",
        "cursor": {
          "ref": "ee295a9b-c279-46c3-9a48-3c28838ca7da",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "449d85ea-bb73-4920-a235-6e853d447ff3"
        },
        "item": {
          "id": "f7320932-07c3-4fce-a4aa-d8b608cb0123",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "52e8f9cf-c925-4edc-be5a-1c6ce95519f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a2a290-caa6-43bb-b0e3-37f84c9954bd",
        "cursor": {
          "ref": "bec7dbdb-1ceb-4e28-9853-99e48b7aa90e",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2efd63ad-6751-4aa8-9a3d-55052a06bae5"
        },
        "item": {
          "id": "12a2a290-caa6-43bb-b0e3-37f84c9954bd",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1fd611c-fe10-4ff8-9d6e-9b582b24c233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13280411-2f2a-43b6-be88-648918b7d1e8",
        "cursor": {
          "ref": "349c3fdf-0651-4e17-bdcb-edf4d0976382",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "82f1afc1-850a-454a-8277-dc78d8dc90f6"
        },
        "item": {
          "id": "13280411-2f2a-43b6-be88-648918b7d1e8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4785b7ed-ac84-402e-a252-25583ab6971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0250290e-f6ce-4776-ae09-c00c37132b0d",
        "cursor": {
          "ref": "a731b978-3b20-4197-b94a-ce5ea2ef7fb3",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c52cc4f4-6330-40a5-88d3-00b0ee0cdece"
        },
        "item": {
          "id": "0250290e-f6ce-4776-ae09-c00c37132b0d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a0c5dd9a-7c67-48cf-8f65-a85363d3711f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ed1ea0-777a-4edd-9b0b-fda9fe25d67b",
        "cursor": {
          "ref": "781fd320-956a-42d7-b81b-fad1139fd2b1",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b7559b5e-d8ee-4d4f-94e3-eb043e04c93d"
        },
        "item": {
          "id": "59ed1ea0-777a-4edd-9b0b-fda9fe25d67b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "688f324d-7017-4afb-9586-1a5e2799cb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28548789-0de6-4339-9fda-38d97a26214f",
        "cursor": {
          "ref": "6bd501ef-4b94-48b7-9ba2-a678e2450717",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "817d9b2a-9b69-4d40-a906-0025749a214e"
        },
        "item": {
          "id": "28548789-0de6-4339-9fda-38d97a26214f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "16f9e88e-afce-43ea-a96c-7f89fb7657f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c48a67-5c9b-432a-b1bf-2af4541239f1",
        "cursor": {
          "ref": "dc0d4ccc-4f44-4232-bbc5-58d99a9decb3",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3aab1ca7-d1ff-44e5-83b3-90c7c4b2c8e8"
        },
        "item": {
          "id": "c8c48a67-5c9b-432a-b1bf-2af4541239f1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "01e41b72-d32f-412a-840f-72473815e103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354afa3c-c8dc-41e2-8488-2133c3ab58c2",
        "cursor": {
          "ref": "f33c22ae-d1da-487e-8dcd-286537fea48f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "17e57f96-b1cb-4adf-825f-de97b39c8d92"
        },
        "item": {
          "id": "354afa3c-c8dc-41e2-8488-2133c3ab58c2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0161b304-499b-4102-a196-4701fce9a05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716183ce-a278-4e02-97c9-5cdd45dcc9b3",
        "cursor": {
          "ref": "67dc1058-ce03-49be-ad54-026869456398",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e36656c4-5141-46cf-a36d-f39ff4cf40fe"
        },
        "item": {
          "id": "716183ce-a278-4e02-97c9-5cdd45dcc9b3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "386748f4-9795-4580-8712-44dfc08ccfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3c70cb-b9cf-49e2-a2b9-44a3fc9ceec0",
        "cursor": {
          "ref": "5aa602d7-5df1-4447-af62-b526075007b5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "8e08b10b-90f4-46eb-9974-fb5bd68cfa34"
        },
        "item": {
          "id": "2c3c70cb-b9cf-49e2-a2b9-44a3fc9ceec0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7c7c00a7-d2b9-41aa-8948-d7d929e2d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e57f4a-7b11-44d9-a5f8-2339eef61c49",
        "cursor": {
          "ref": "b6f43336-02e8-4a09-8921-97c75f4b1284",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0111d680-006f-45b5-aa1d-350c08fcfbb5"
        },
        "item": {
          "id": "76e57f4a-7b11-44d9-a5f8-2339eef61c49",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cbed33dc-ddf7-431c-bfda-a2091663a92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a361d427-a40f-4a2e-b2e8-c7e732bcdd20",
        "cursor": {
          "ref": "380118fe-2cd9-44f5-a38a-9267a1ed703a",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "54cc4c99-fb68-4109-82a5-a543157a78f7"
        },
        "item": {
          "id": "a361d427-a40f-4a2e-b2e8-c7e732bcdd20",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "113298c1-83e5-47e7-9eee-4b96b0632b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d134394d-e0fa-4af3-842f-4d039ed148d8",
        "cursor": {
          "ref": "a3400594-64d3-4cf5-969d-83cc54ddde25",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b0660400-06c7-4cdc-90bd-411599d9120d"
        },
        "item": {
          "id": "d134394d-e0fa-4af3-842f-4d039ed148d8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "626d0e8c-7ca3-4172-8c77-bd783baa31b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179bcd97-ed80-4243-b895-6ce95b1a4509",
        "cursor": {
          "ref": "a4f782fa-fe3c-45b4-82a5-0cf7ebff9e55",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "9263eaa5-7408-4552-a9c1-93ff312d2c13"
        },
        "item": {
          "id": "179bcd97-ed80-4243-b895-6ce95b1a4509",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "36e7d825-a747-452a-8e95-467acdf50485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58aa53f-f2ca-49fe-84af-e6337ac20d66",
        "cursor": {
          "ref": "25fa64b1-3a17-4d8e-a598-0f08d628acd4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6e9e6a6c-60c7-4aad-9edf-270710bbb3ff"
        },
        "item": {
          "id": "d58aa53f-f2ca-49fe-84af-e6337ac20d66",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "329402ba-c223-4317-a913-ba6bb977332b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158424f-0fdc-407c-a003-c38c85126fb0",
        "cursor": {
          "ref": "7b069b0a-450d-49b1-9baa-b391ea4478e7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "1651274a-84a1-4e83-9588-b23fbd6e175b"
        },
        "item": {
          "id": "4158424f-0fdc-407c-a003-c38c85126fb0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "25727c01-a40e-4630-bf4d-f6d2ba647c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0489437d-ebce-46b6-8155-87801abde304",
        "cursor": {
          "ref": "9c1e0931-622a-4e87-af00-1700b0d72232",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d214d1fb-b4b6-44f2-9c3f-bbf4de54b0cb"
        },
        "item": {
          "id": "0489437d-ebce-46b6-8155-87801abde304",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "73c6accd-3769-43e5-be18-bc500d118047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590cf2b0-357e-4aeb-a74f-a284d60b8237",
        "cursor": {
          "ref": "4ddbfe6c-28bb-44fd-a4dd-64458d9df28c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "79696eef-bbfc-43c6-b672-2faa5c44a3ef"
        },
        "item": {
          "id": "590cf2b0-357e-4aeb-a74f-a284d60b8237",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "eca9f938-0d61-4725-9b0c-87ba00bfe80d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a39919-63f3-40a9-a8b5-94d1227a54d8",
        "cursor": {
          "ref": "ccd0323b-a34c-4097-8dfa-137700d39fca",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e13c09bd-0313-4d43-850d-39cc6eb299c2"
        },
        "item": {
          "id": "f4a39919-63f3-40a9-a8b5-94d1227a54d8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "696e0b1d-f99b-40b1-b002-cac5c3e45a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d7d5223-1dc4-4a75-a6dd-5b3991ebbbd6",
        "cursor": {
          "ref": "195a6ac4-5869-4c8c-88b7-b67676e83eea",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "824c8ed0-7c65-4d68-9bef-6d034e5fc188"
        },
        "item": {
          "id": "9d7d5223-1dc4-4a75-a6dd-5b3991ebbbd6",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "509fbd09-04fa-4242-9132-7412eda4ef07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4feb1b7c-9275-4613-89bf-a5e04932272f",
        "cursor": {
          "ref": "69797f16-b972-488c-8e21-326d134a2bc7",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f0eefdca-a46e-4704-905e-65c3d5fe7422"
        },
        "item": {
          "id": "4feb1b7c-9275-4613-89bf-a5e04932272f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6798cdec-bc85-40bd-bae4-635e61790f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7e6afa-a668-413d-a7ee-ce0a4e028dba",
        "cursor": {
          "ref": "b5702491-ac03-4e03-9879-3eb8210e5292",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5c678ece-a702-40bb-be65-eeb9e6904d65"
        },
        "item": {
          "id": "6d7e6afa-a668-413d-a7ee-ce0a4e028dba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f2ed98a9-1c3e-4b21-8d00-824d67dcf747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87467d08-7850-44b2-980e-b8c67c63c14e",
        "cursor": {
          "ref": "04bddd7f-1bcf-4b75-a074-6facfe306d83",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "371fb5f1-d7b9-4fae-9b99-8312c11dedad"
        },
        "item": {
          "id": "87467d08-7850-44b2-980e-b8c67c63c14e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fbc5c42d-0400-4120-87d6-a4f9bb9f9629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2f63cd-834c-4158-99fe-05f95c2b28d8",
        "cursor": {
          "ref": "0dea17f5-96d6-4911-9115-ad84b337758a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "12abd9e3-6e6b-4278-a70d-35161d5a0e0f"
        },
        "item": {
          "id": "8a2f63cd-834c-4158-99fe-05f95c2b28d8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d2bc3966-0f21-496e-bb67-09036ee43bd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7da4ee-a46b-4b74-9f22-1a29a3040b7d",
        "cursor": {
          "ref": "a82a93e2-dc34-477f-9f38-d9f2e8d379c9",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "71379d34-2aad-469e-b9c7-f1216c96300a"
        },
        "item": {
          "id": "cb7da4ee-a46b-4b74-9f22-1a29a3040b7d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "af52549c-3ed2-4228-a92d-23779f172a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "983c509f-9808-4945-928c-726d7e5010b1",
        "cursor": {
          "ref": "b801b465-bc95-404f-9fe2-04cf7dc9e776",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "29d5e3bf-3c15-4d1f-9496-4005b494aabb"
        },
        "item": {
          "id": "983c509f-9808-4945-928c-726d7e5010b1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32431b1f-cbd9-422d-9de9-18a708f07472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baa7c0c-a6d8-4e35-bfb2-899f7ed11f39",
        "cursor": {
          "ref": "13914fa0-dc8b-4674-8c4c-ffe79938a11c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1706cf6e-3612-4922-8f2c-26ad76006b32"
        },
        "item": {
          "id": "9baa7c0c-a6d8-4e35-bfb2-899f7ed11f39",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba8574c7-e0ad-43ac-86a1-84b01060e17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f20049-516c-45b5-9779-c2ba95e09960",
        "cursor": {
          "ref": "adb258ec-f74c-4037-9aa6-4b7ca7f24e04",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "386ecbb3-f1fd-46ee-b030-d7b38150abaf"
        },
        "item": {
          "id": "64f20049-516c-45b5-9779-c2ba95e09960",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "96e57a13-0ddc-4ec2-82c3-db68b4cbe446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7450434d-11db-43b9-b548-db1a02a965bb",
        "cursor": {
          "ref": "f2546fa7-174f-4fd8-b622-c92c6e5137b6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "af55bc94-923a-4d2b-bcfc-c8447aba0168"
        },
        "item": {
          "id": "7450434d-11db-43b9-b548-db1a02a965bb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1eba1255-da0c-4d63-8171-4600a4387ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaee6500-6e2e-442a-87fc-b20591793317",
        "cursor": {
          "ref": "385396c0-c98a-4018-a5fc-872696400fb3",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "16c883c3-9168-45b1-baeb-edd11b5a8913"
        },
        "item": {
          "id": "eaee6500-6e2e-442a-87fc-b20591793317",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3ea4ed18-ee99-453e-b357-f8a62444777f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bda56e6-3191-4c97-abbc-ee15e203e565",
        "cursor": {
          "ref": "78473f16-3247-4da7-afeb-d0a5f1cb2ead",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ac3890e5-ea3d-4f02-8049-10e23a9b6127"
        },
        "item": {
          "id": "9bda56e6-3191-4c97-abbc-ee15e203e565",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "537c29f0-5b65-4145-9fa5-c3b794517bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026d5411-c3e6-4de2-92ec-fc523bb20621",
        "cursor": {
          "ref": "cb3ebe92-fe48-4d70-b577-aa7a2d76bacb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "804b668e-dc8d-44a8-a303-69c772b260c3"
        },
        "item": {
          "id": "026d5411-c3e6-4de2-92ec-fc523bb20621",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f3dd183c-bb58-4a91-a3e1-ef29f66b646c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b676eb6-629e-4663-81b4-f129a0a65697",
        "cursor": {
          "ref": "f7a44ec2-ee52-4342-b5c5-0f9e4fb8e537",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "1e9f4a66-96a2-4647-b4a1-0518524a21db"
        },
        "item": {
          "id": "8b676eb6-629e-4663-81b4-f129a0a65697",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0375bba2-2347-4aa9-bb0e-62ff9b15eb19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f592e88-ad25-4ed9-9fc3-16d707199139",
        "cursor": {
          "ref": "3b2da309-b801-4a99-aef1-bbffb94b970c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "45cf0f9d-c610-4279-b09c-87d045d6a881"
        },
        "item": {
          "id": "5f592e88-ad25-4ed9-9fc3-16d707199139",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3ae3564b-0762-4e01-8d64-8e7fa79169c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32b0285-97b6-48f0-9ca2-88813998b6e3",
        "cursor": {
          "ref": "c4dd30fd-33b5-43bf-924b-308bf45ddd69",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "edcb79c0-d08e-4014-9fbd-58e6d196b894"
        },
        "item": {
          "id": "e32b0285-97b6-48f0-9ca2-88813998b6e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b86055d1-0510-4e75-b1de-399d5fe59d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a934d3-556f-47ff-be30-59c1a9ccd850",
        "cursor": {
          "ref": "2573b21b-e2cd-4ca9-9c6d-218a6b38087f",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c162cc03-825f-44b1-921c-60b88ab8d79c"
        },
        "item": {
          "id": "a4a934d3-556f-47ff-be30-59c1a9ccd850",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ddfe4703-504e-42c2-ad7c-064eadac3dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4f1c81-eb2c-41b6-8099-6403a1516d76",
        "cursor": {
          "ref": "68518a97-9dad-4780-bbb7-4f6d39c4742a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f5b21282-2ac7-4599-babc-d2ad8fe6b5a1"
        },
        "item": {
          "id": "9b4f1c81-eb2c-41b6-8099-6403a1516d76",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d9713d77-b313-4e8e-b7ad-3e1d1b771147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c571e2b-7f25-4390-a133-86cda9cf8566",
        "cursor": {
          "ref": "d0248b61-3b54-4b37-be9c-fb5f70a65560",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "c797d4a4-9e98-4309-9056-760b26cbc90d"
        },
        "item": {
          "id": "9c571e2b-7f25-4390-a133-86cda9cf8566",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "bc938e62-a899-4bb3-9b67-417f9e486c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df87cae-c353-47ab-83cb-63887c8b47e1",
        "cursor": {
          "ref": "9ed00536-55f8-463b-a3ea-a69dcb1aae66",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d8cc7d69-0d21-4cbb-9ae7-edfc5afe6bcd"
        },
        "item": {
          "id": "7df87cae-c353-47ab-83cb-63887c8b47e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7047ecaa-e663-44ca-80c0-faf515b26b1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0805994f-5d23-4819-81b6-6d47b8138462",
        "cursor": {
          "ref": "9001b72e-55ce-4691-9647-ec8371130ee0",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "da278573-07cd-4f97-b806-8c928cd4ff29"
        },
        "item": {
          "id": "0805994f-5d23-4819-81b6-6d47b8138462",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ca145aca-552d-4487-8020-1d6b5894f613",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32a7c70-159f-4d61-9636-17fabac82e77",
        "cursor": {
          "ref": "17529ee5-a55e-4982-96c9-73e5a7c98b79",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "842a48e5-2dba-4757-8790-0f2927118fdb"
        },
        "item": {
          "id": "d32a7c70-159f-4d61-9636-17fabac82e77",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4ff02082-c273-4b52-ae5f-3b96d0329368",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "13608f8c-b8fd-4de5-add6-b92e5cc19872",
        "cursor": {
          "ref": "591ed870-e933-4479-aff9-b670cbfab7d2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1c39d750-e11c-4994-9b76-3bee6e566dc1"
        },
        "item": {
          "id": "13608f8c-b8fd-4de5-add6-b92e5cc19872",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7beeeeff-5765-46b9-ae22-de8ef978bc93",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0e60b-516c-49ff-a48f-feb96fce67ae",
        "cursor": {
          "ref": "77e806d1-5892-4ce9-86d0-a1ce32b3a58e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ac8cc7ba-a616-4f63-aece-d45872aee99b"
        },
        "item": {
          "id": "d3a0e60b-516c-49ff-a48f-feb96fce67ae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "590f91f3-ffc4-4bb1-a4f9-a491806022eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a0e60b-516c-49ff-a48f-feb96fce67ae",
        "cursor": {
          "ref": "77e806d1-5892-4ce9-86d0-a1ce32b3a58e",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ac8cc7ba-a616-4f63-aece-d45872aee99b"
        },
        "item": {
          "id": "d3a0e60b-516c-49ff-a48f-feb96fce67ae",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "590f91f3-ffc4-4bb1-a4f9-a491806022eb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4302396-c4c4-454d-9e53-2e1822aeb69f",
        "cursor": {
          "ref": "8552551f-e884-463d-a11f-fd1d6e74cb07",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "fa10f75a-ca26-4693-8cdf-be186277e81f"
        },
        "item": {
          "id": "c4302396-c4c4-454d-9e53-2e1822aeb69f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32242620-b3e7-464d-b94a-dcc995091dd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd31545-ad34-4e55-8b51-fc36a29ca3c7",
        "cursor": {
          "ref": "db132519-4f68-40c1-b5c1-6fd4b45ca355",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "60261ee0-708c-4722-bf5c-e47ecd788f93"
        },
        "item": {
          "id": "6bd31545-ad34-4e55-8b51-fc36a29ca3c7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "38f144a9-463b-48e4-af34-87f4cf70e069",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}