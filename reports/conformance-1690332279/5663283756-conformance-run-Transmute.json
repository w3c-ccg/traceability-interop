{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "75a24cab-9e50-45d5-abb2-5b4e927227b8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "82beb780-e018-4497-bf00-fece8a283e0c",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "675e1041-63c1-4e28-b0a8-4b47d96a72a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1e444e1d-be0f-45e9-b0d1-eb8b1f17dadb"
                }
              }
            ]
          },
          {
            "id": "88077e57-fb92-4ee9-9755-19b38aa76e73",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f587b954-5b85-48d2-9180-c95666b96ca3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1fcc7f28-bd70-4923-b85f-f6b66a8125e2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "75085767-a145-44e1-91fb-250b31e4ff63",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1e384bf7-5e0a-4bf4-b6d4-5d0308aeb0e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d4274d2-df0e-49ea-a79f-5390b577ee41",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8006644-9932-47a9-88e1-6105994b3b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "38d4b308-2eff-4579-92df-d4ce13985b54"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11199b44-645d-49f4-806e-9d7a69c7fbdb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1aad8280-1d5c-4821-bc63-1de0a204d80a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "46c0914c-3f2a-4fad-a2c1-a64745104066",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6fbcc91d-121f-48f0-80f0-eacee90db463"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "134b60bb-1ef5-4101-80eb-a44d6bd95014",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6227275a-f151-47dc-b1f7-3b13d342eb1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ea7577-8e14-4a68-93dc-0655b6ffbda4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5e724dc3-7a6a-4f9d-83dc-e18a5410aae3"
            }
          }
        ]
      },
      {
        "id": "22c89966-d626-4670-8e69-92c3481b5695",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2658efc2-febb-487e-9095-af638c38fc6e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85ebdd31-eb82-48a9-bc27-f48cc56de444",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c03efe81-1c22-45fc-ae74-183cb5540703",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8adff-141b-4cbc-b37d-ec52cc4b46f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47320104-122c-4192-91db-b96b2762799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc888fc7-ff7f-4acf-858d-ade47458f978",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719a4b5a-9ec6-4f15-a0c3-1d7903cafb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f1f15324-28ff-4526-be75-97b0b26424c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed74a19-6460-40f3-8486-7a47e5a76258",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6579fea5-4e9d-402e-8893-823aa0ad12bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "650a2482-47ca-447e-97ba-93943d542a89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da2d3a0a-bcca-4253-a2a8-b7423c0968b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "476bab95-9c6c-4bae-ab99-3b75bb6797e1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b2c1fd-db98-480c-8a3f-815d255d1da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9a43d78-a4c8-432d-82db-05d6f1473391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897d18bc-4e12-4b34-96ea-2a6e9acf655a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0c9e08-d867-490b-8761-4c2e196f8517"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4525707e-a652-49c6-937c-604d71a3a233",
            "name": "Positive Testing",
            "item": [
              {
                "id": "89f49470-9755-4270-a225-8487ebc4b252",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c144b7aa-9948-4732-9cf2-a80d7bb447b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1c208de9-0841-4817-9697-eece1b7acdf7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "762ad23b-3f0c-4bc3-93e3-35c8fac92e8a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "062313d6-561a-4329-96b9-97a0f29c4735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8bb2599-4427-4201-b209-8b716a4ba973",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fef69514-d6da-49c0-a025-9d6d987c194d"
            }
          }
        ]
      },
      {
        "id": "5bb31665-bf39-4c9d-aa95-8445703c075d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8224e220-704e-4fa0-a803-74e79e3b1d44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d42c3628-85fb-4dec-939a-84df985a4412",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f0e91662-f270-4194-b3cf-dfdaf829af02",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a38247-cbed-40fc-838c-2269e4a6eb30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaba32cd-c696-4ecb-b438-36c4718a7f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bdbbea-9891-4345-88ed-041be9651121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a4675c8-e172-41d6-876d-715b3cd9bda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a17f15-b6cb-4e32-aee0-2bc31218d2da",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e88af53-61f0-4100-9040-72d43d5a7315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23903766-c32d-4f3e-88d3-97191d3e459e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ab5170-64c0-4592-a6b0-bf6732d7e07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2cfb405-fcfb-40a7-9f57-cb09bf64287c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf16cf7f-2c25-40cb-9c54-a440f3be9dfe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476eae8a-fdb6-4788-ad10-be9d4bc70125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c93dba-5981-49e2-ae00-441dbbeeaf50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267df530-4002-49dc-81b5-d183737ea0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c681a15a-ff4b-48be-92c4-08b8ae237941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7b3552-d472-46fd-bbdc-4a65fb3621b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8fb677-3a1f-4b04-aa5d-0921d047bf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458e0351-5bcd-4055-9860-ca27c2c58b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e9a74ec-2efe-4069-a429-7c883bc25f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5cfc50c-4213-42aa-a7bb-670e628cd27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9986d0b6-201a-44cf-be81-092d564d1074",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d46d82-197a-49b3-8e9e-bd29ae914ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb767eb5-4014-4ee0-88e1-6f79ba918ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f605a98-f019-41a8-8fce-51b27ca1df49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "721485af-1933-48c9-ac06-6650db5b12f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f62bc-a08c-4e4c-9867-fa792ba2fbe9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76eaffd8-bece-40c4-95aa-1003b906dda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de03bb22-e184-4ff1-a792-5837536e7e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e071c-ada7-4608-b02a-5b1e8bfa1b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd2134c-60b8-4000-86c8-4c0f2642bd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393e4300-7f46-4bdf-b5c9-93fe302a6a3c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b160579-8046-41db-9ecf-701fcf723b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27555c65-178a-426f-9b17-0e9cf50a5528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc85c75-b6fa-4656-a009-c5c228b8f6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f513ff4b-b71b-4ba2-b15b-15678013e3c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40da493d-d11f-4f99-80b7-eebb319b6bcf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1272f4b-cfe6-45cb-b01f-18394b3ff8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8eca83-9c0d-4cb5-8418-ae997d005290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea59f474-64cc-4903-ac5c-021462caa98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a92461c8-7700-4697-9fcd-1d9e646f626a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8da0a1-ef2d-418c-9e7d-59cde6b95ce0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7316a569-0e96-477a-b758-3eb86a012109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75e1aa9-e90a-48d1-acc9-e272bc0ef873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b560ca-3df0-468e-a680-285301215a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb429efb-76f8-443b-9f70-476a69f79488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b41158-bf91-41b8-9634-d3c18131532c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba4932a-459f-46a2-b475-6909898e35c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf1bac1-b4f2-497c-8185-9be6ae406d84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fde9b7d-c4ac-4465-b03c-55f39eb52da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99b766f9-0e72-4197-9cbf-a34b4e6122e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12de515-51de-4ea7-8681-27be61f65c25",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f1b2f6-ca28-459c-86ca-627c3c4743bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c252162-0fae-43d6-8da0-098386d36636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b25337c-654b-4d11-93e4-1966e20ec74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff4822c9-20f1-4e8d-90c8-dac7ad2fb6c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c73e164-1219-41f5-b72d-b55aa1f2dfcb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f625ccbe-8fab-4926-adff-ee1ac7e98973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3105fc-2ae8-4f71-bb95-e3bc0e926d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60ff2dc-f2df-4bf7-b7c9-5566ab20e5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d38be6b5-fd9b-496f-aee3-ac9c3501b4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda7ae6-187f-43b3-aba3-4b2fa568d4ab",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2424d1-6917-4dc3-b246-b2ecb0796898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "926e523f-3aa8-4d12-acd4-ff8688ccb2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3c609a-b6ff-4348-8c28-5dd27a031fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0055b3b8-a4f5-4ca3-8372-b606f24192a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8aa9f7-f45a-43cf-8122-2df4fd4359b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1466d88-893a-46d0-9ef8-a429879c0081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdc10dd-7678-402c-9a22-11aa86f96e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3fb169-0bfb-4c37-ba21-3ae8494b6683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77971a14-9cca-4b67-a6e7-d267b32ddbb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb749ca-7037-4cee-91be-edcc7126f978",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913b9ac0-8c53-46e4-81cb-583f1f02c93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0007059c-6f7b-47b3-9763-3805ba0ece9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64feaf7a-060f-48a2-942c-36ed1012dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0581eea8-0fc7-4471-a468-447dcee78529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987800b8-bf39-4ce5-b415-dd4839fcf02e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2c6f39-76f9-4768-9f0c-90f1f609b95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf465c2-78ee-4e3f-86c1-ceec4d424a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d854bc0-fef6-4e8a-ae98-2da2ba683739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26da36e3-7bd9-47d2-950a-88410bf74f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc576e6-7f0b-4b79-8f40-d547e32e8224",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad0847d-894e-40b7-b13a-aad96d73cda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ce783f-182c-4c97-88ce-ddcec186bb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58733192-f16d-4cb7-896f-d597d8c3222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bad7bbe-4a83-4368-9c6b-14d09edb7d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad64dbc8-2bd3-46d3-ad5f-f64213481c2b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27161307-e05a-4cda-b878-a365940759eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e8425b-83f6-4877-b256-d12c7b20ed87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecbc3853-7947-44e3-86b8-cf8f71d31690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb7c9c2-a154-4893-b628-254096acb5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec0d8b2-9fb4-4eb1-9938-b5e74bef99f7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6481e690-9a19-4d05-a295-08226738bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9acf9368-b260-4a6d-81ff-3ea2bbbe9b19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d625f6e7-837e-4457-8e7b-113a5da57a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "712dee31-f5ac-466b-a34b-80246a8f8921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa317eb5-8049-4f18-9854-afdbfd7a18b3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "428016bf-b318-4be0-9b13-2520a164a0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3f4f35-d32a-4756-b418-4eb64b14e027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dc8c5b-b3a4-40de-8088-396460d93998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be76a457-1c08-4e68-9282-dff291182c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f198506b-b28c-44af-943a-63efde47c751",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d246d708-eef7-4844-adfb-03721a0f4cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31097989-4657-4050-a66a-ed6db6de1777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68469a45-99ba-4acf-a326-2e96417731d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0d495f-c6d2-489a-96a2-79f0aff82bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fab7705-19d9-477b-aa10-07098b042aab",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7f7c53-6e50-4be1-bdce-03f61c2d52d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f80f4e-031f-412e-b6ce-164aad6a344a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f35022-e67e-4fdc-a2b8-adf06e770485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf8b68d-773c-4916-8e59-9742c4994e03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cd92c7-b7da-442e-a5ab-87b0fce5b85b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bfd2fd-7048-445c-ad57-2e51af40efc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0dbbf2-b548-4163-b3ca-80ef27e18aec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0cec8ae-145a-4c8f-b64c-d5fdd8635504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebbd80b-fd77-4cdf-b181-e81bc54b1e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8751f289-052e-4bd2-8126-3f2f81127dab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07f9137-7a3e-443f-ada9-86011016173c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35eb6cee-0432-44af-907a-32513b0ad76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeb20d7-8a2f-41de-9ae6-975ecdee540e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62746770-4346-49b3-b13e-a6997cd46eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddee0be-68fd-49cd-a797-4b05a8172c33",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67985cef-0b40-45b5-a805-ed87f0c338d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69843e65-2fd2-440f-bd13-58881e508d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "406c38ac-7797-4e91-b138-8b3d51b98967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "112b0847-f74e-42ac-8a4a-73c1d90e1f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e71e13-0d98-4a9b-8d26-b4045500724f",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db57c55-d02b-48dd-8bed-139aac3d6ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5be135e-a853-44c3-ba51-e8d880df031a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781ca126-9dbc-4d55-aab0-773bf2f228c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfb4277-ce20-4da8-9d71-d9e48b237846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e52f46-2424-495a-acc5-a60e38c8acf1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327fc21f-fc71-48c6-8204-9d51356cb7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa82672d-d97f-4e27-adf9-f8a462fdaab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5a57b0-f9d6-4fbb-8c9b-05f58691766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da4ae641-3534-45a5-9359-55c145bfd5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a262a1-d1cb-4721-aa57-c4ece3f95fbb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07f53ba-cfde-458e-ad7d-31026aa5be8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6f2b3a3-5a08-4fab-a1f5-9bee425acc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b0d862-511a-4c04-b81b-fc6f3f6a4562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0e2edb-eafc-4dc3-9bc0-582ae1f45975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e14b1c-c271-42ce-96b5-b3aeb76123b7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b58b8c1-d20b-4f9e-a3f7-53dc3ca5fde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a2a2eb-4c3a-400f-96f6-fabc0aa8bcb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ce1753-f57c-403c-a09c-ef558e5a5edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad16173-1aa7-4fec-b32c-e04edf6e59f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726642f4-f931-4b72-9ed6-6fce8e1a8cd8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5c30b6-2f6c-4a4f-bb62-ad34aa0480df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f044b5-64da-4e02-8b74-24ad9b786a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030c6e04-496b-4e41-989a-7203e8a453ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed8f767-5a0b-41c1-a981-ff2a7e2b60f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda1a22a-801c-436a-b899-039d8c7e7b2f",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26038783-8192-45fe-a242-68d7545e608a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee4ca03-f969-4679-b07c-559aa6a2a843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc896a7-1773-4d24-bef4-0c9492162942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc3d67da-3d24-4571-a7a0-823379fc48be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ecf291-f16c-43fc-b071-d0f27bfd1207",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231b4a1f-65ba-4511-b089-762eea2c35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab0a4c1a-8ba7-4a98-aefa-985cf2f52827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a124d5-e77c-4d47-b4ea-b3434cde2d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e3c412b-5d03-4312-a763-044d91c36f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b984747-9bb9-43a2-b05f-fb97c1e3bd1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257cdb84-99c4-47ea-8712-12d31645bcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5292a06b-de46-4c5c-b508-b0a9c7083e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c17074-7980-489e-b6fa-9b5fe254ede0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "150723c7-b967-48be-9aef-a075c21fa0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e427cbbd-e405-467a-a871-c03c76077c35",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1566dd76-d536-4cfd-9e65-591294f42a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8199c9d-378e-4b5d-a81e-674302174a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d9158e-1c42-4eba-aca8-ba4637ff0910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b17fff67-e306-41a3-89fd-240ef3bbff7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c831ad0f-f354-4ee5-bc97-82eecfa26773",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532d4be6-aa3a-48d0-9614-8341ac722070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88cc59b7-0e7a-494c-ac57-f61ff9dc21ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a741106-6d37-44b0-a3b3-8517ba7bf513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "59318a9d-ebe8-4a79-98a7-089c9de9a5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9e4246-553e-4ae4-8c32-c91cddc9acf9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15519762-e243-49b3-90ce-233bfe214153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d33b35f-37be-4776-b664-21d98c9ea880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b04bcf-4ea3-41f4-bcef-1d2fd13a3440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9738a86-21ad-4b37-8873-7e22b26f5865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69661ae2-3cf1-4aca-9fce-0c40fc022f71",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e0be85-3daa-4a64-b695-70696c5a4d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff66d51-864c-4f0f-a0f8-2da867ec5f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dbea5e-5ee7-41ae-b943-a44f1e21da12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60b932fb-cc4e-496f-858d-ea0317ba458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e506b7-f7b9-4dc4-bae9-a8032e9d579a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b708e0-fd62-42d0-90ca-4b110d22d1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c5f29c-188b-4102-93d6-afdc04025300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc046cd-9b29-46a3-9f5a-83e6f09ce618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd2db3e-53dc-42cb-ac68-f2d48d4d7b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed84eb66-f421-4a49-b620-03800d796d07",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67e5db7-baad-45b8-a1d2-25de7d7ece10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490b662a-f6dd-4164-a2f7-6695494294bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b1d1a5-e8ab-40ac-9a53-80253775b61a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c724eec1-3f3b-41c6-b1b9-e838ac4e2aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9662cadb-b7e2-4470-bb6e-8ab5170cfaf6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "520beb03-5ad6-4aa5-aa01-75f2960f48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b4a130-ca5d-4227-a23b-fb54eb37f0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabc1f4f-f77c-42e3-9c04-018e525dd0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f60255b-9fa1-4a83-80ad-0aad21e67fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd94719b-005a-4e5a-b2fb-90a54efd2302",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cba4eb-4bba-44b2-9783-e68c412f729e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "748f501f-ed14-456f-a65a-800cb1e0fff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee6a9a1-9dd8-41bb-980b-b93727d06ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed15f3da-ea71-462f-b6b1-f11597dd72b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48694ed0-21a2-4c2c-a658-c9c216f23dbd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1b1f02-97b5-4ccf-bae1-a435d027c86d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b151ff-0a07-4505-8dca-cacead6614b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4119913f-c5f0-4d37-b89f-9847c1ca6ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a0ed11-db82-4b58-9f6d-945e06fb5cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9a0473-55a1-4b89-9c55-a39266e856f4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae9b4a5-ebd7-432f-bdc9-d13494c083cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42dd3592-2753-4818-bb50-023cc0304770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f32eb5-06a9-4a46-913e-3fdf7fb9bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d83f928-ab7f-4a79-9aeb-5b8b05cd2b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7450ab15-5648-4616-a973-c792a72a0717",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07dac0fe-26fd-419e-ac13-f4c55630610c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592f427c-74a9-47fc-aa1a-1b48016c64f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f34bc4-842f-4bdf-ab33-91f82742710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "84a37511-526b-4a1c-bab0-82a3e698802e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4158830f-30ac-4b5b-909e-07fe2cd1f26b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a83249-1766-4125-b41a-68146884710a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43fa1224-9de4-4860-88c3-ec7cd3d46605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ff96a0-0d10-4a37-a336-26ba630f212f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "682da8ad-0467-4962-bbfc-0a614c2836a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb85722-cf18-453f-8e0e-2fa338fdd905",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9711be0-77da-41a8-879a-0031834def10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a1caf0-b752-4de5-a9fe-df1577761f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b690c45-c2e3-471a-87ea-f213fecb9f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcaedb5c-ad14-4691-a966-bcb1acd36396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf8454a-fd53-4ad2-9aa7-8123eb4777cb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b5c680-19d5-49fb-9309-703afdccc94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78e58072-7417-47dd-b9a1-1de7868e2683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6996c5-c83e-48cd-b9a0-f3d25e1b2826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbc1bc0-6d42-4157-ae25-8ccc1a4b9611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5440a22f-d0ee-4b02-8096-c8bea22ca34a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9e4d9b-c3fb-4639-b3a9-91f46fe0454f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b932b8-a959-43ba-901b-0d2bfd1226f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c53c4fc-76b4-47c1-8354-284a369ded02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad745931-2434-4f0f-bfb2-6e3670c66f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48006ad-de9d-4263-bb0c-715a96a481e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb61d6e-da4a-4a95-a695-ace2a0bdf063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eb7b25-0b34-4f37-a835-210657c61645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fbe1df5-290a-40a4-b97a-ea83681f6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00a98b05-f612-48f4-a3c6-96a5b0521544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced3f5f7-ff49-4d0b-bf2f-2c4ee3f528ea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d7fb02-4002-4aa7-90ae-18680c12d662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e83f4c7-2308-42ff-a6de-ccf307eee1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e01a16a-f161-4655-bd0d-35db7481757f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb087ced-b0e0-4867-a49d-cc6aaaa4cfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e671f2-3ab1-476d-85c2-37512d4dd87c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c3072c-1267-47ee-8716-fb74d183b670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acad7ecd-95bb-49fe-a5e1-be79438db7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0971a44-c2e4-48a7-8c49-21409d862a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bed565a-0566-4171-887b-dc21c38e8dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992c5a13-f770-4a58-adc8-ecb13f41a07a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffaffd00-d45e-40b8-8cef-a1e6b333be47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf97657-b8cd-494d-9220-9b479c0874ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeff864-1a57-4e34-a7df-d07b5ca8ef02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "662eb863-2565-420e-9dac-a0108422c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c71cc1-df83-4a0e-990f-9f66e5668473",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b5f405-aeb5-4dca-9b2f-07ce58781ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0852cbaf-156d-4e39-bc71-34bfdd2ff280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9eaead-e403-41d5-8c5c-cd0e8c6a1645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc9ef7d-5675-45e0-8dae-854b5556218b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77347431-964c-4d75-bae9-1316c7dae487",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66eb475-e0a9-4718-8b40-4a86db25c87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d66353-5b15-42af-b8ed-28dd3f74f0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e826a756-ddd0-4378-be7c-fb7936f6753d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1391d40-07cb-4c1e-9ff4-91e6e2a6cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a587e2e2-5be3-43b1-aad8-adcaf4bf2878",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e399c263-a306-4b39-9ff2-e49644651e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea786a7-06b7-4fbf-abbc-f8c9e0d0890c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb25f9db-c7ed-4cef-a3f4-e63e1272533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb764c5-f3b1-4421-86f6-4001cfbd6f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabe468c-f419-4a2b-8550-fe8d494382ff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab952f-f358-489d-9726-8ff6408d4878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a976cd18-ab37-4502-9715-a4360d31e8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68eab1ec-8029-4ed1-b617-8827771691dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ee38759-6eb5-40ce-b58f-6326b997f4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661bfb5a-5f71-4f43-bb3b-209d5b1f1f1e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daa9eb4-d926-480c-9724-318215dd4877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a20c5ef-adf8-4494-8bb2-9c95aa34a002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7a343e-401d-4b60-89ea-3537826fefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "319512a1-5744-4c63-98d6-bf9c26958302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847972f6-4d8d-4f8b-9b12-96d2d814239c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2ea50b-68a7-426e-bef4-3a2785e34a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1ea5cb-a83f-4080-8947-5de2e7ee6644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b793baa9-b7a0-41e2-a4e6-77cb44e449a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4967d763-cf34-462d-94c1-97b8ee3bb8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fa4c84-a241-406e-a863-df0f9ae3a571",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74355184-a94b-4789-8e57-b12a4c48f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5106f349-e5ce-475f-aa9c-358948f33dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707af554-e7d3-41ca-aaf3-bfd3ac544ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8380ab4b-b500-4f73-bc16-45b2f029f142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e8d8f-f42e-4423-9e34-f92371ec5b98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc7e244-8dbf-4939-9ab4-be613b281c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af19d4f9-d7d5-4c19-91b2-94fc41ea86f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7b61c0-fa69-455c-ad07-e24c423fa0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "606acb59-60e6-4848-81f9-3e214c7eb719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3b749a-7ab6-4169-bed1-bfed3d9e5267",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8405ae-c6c0-48f5-bb30-c4e892d4c47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4dbd677-3be4-4d77-b158-e50a2465c685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e205518-a45e-444b-830a-46ee028e9bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "978b6e17-583c-4c85-bb4d-b604464404f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0245fc52-040f-4df3-9e8c-ac5dac8b448a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b7f501-fb9b-4fbd-812f-9ae8508bae1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e91fb14-17d2-4a48-b50c-f4f94adce0bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168728da-41af-4462-8f45-c8c7b33a2ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe97d2ea-96d0-4c9f-a86c-78308d7d11a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757ba34e-5bd8-4e9c-9dc8-78f2b89c79ad",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555c53e1-3d02-4f0d-895d-06a4bc5b875b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48565ab7-3667-48a7-8156-4613b0f864b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4630951f-dcef-45a8-aa32-970d241a2f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e544e505-ee20-4f27-88f5-6b434d2cc1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b83bd0-4dd4-4834-a1fa-5c0bfdd166a9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8bc43d-1462-4bdc-b15a-d19f67292c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "048019cc-68f9-426b-9fd8-70b864bfa81a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dede77-cbf8-4429-bcb1-5c9e463901ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87858338-1af6-491c-b3c0-2ffe8443d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a472dc0-d74d-4ef4-810b-6d4554e096bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e30f7fc-4e79-4ada-89e8-ca781b6ad063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b551f7-be33-4cef-9074-b9ec93a05ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766d686d-11c7-464f-b148-49146971404d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba479e62-d5d7-4870-810c-92d80c027b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7da5de0-63db-48a8-bca5-f65ccd5d2dbf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888b363d-7049-4132-b435-2848d2a503df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ca2a3c-de8b-466a-b186-7ea590e24f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee820d7a-2745-4cba-a623-ff99411bce31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a123cf8f-5113-41b1-aa09-0d367cf3d63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8485ba18-8008-4daa-8a18-6a8805b5d18f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08dad13e-78c1-4579-84e0-f7020fda792d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a9c0c4-1c21-4715-888f-8b8f30724ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f48a7b-c99e-4fc3-9dfd-ecd1522db949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73a83391-02bc-4ca1-9960-b24b25274116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddc7790-dc19-4683-ba48-460cce46304a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c6f870-f171-41e6-b6dd-2375faafedc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a05192-6e33-480c-b937-a7a8eeeeb1b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2462824f-3e2c-4b4e-9d48-79e4b135ee35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6cc5c0f-8a82-48bb-b6de-44831fd770c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e3cdf0-1135-465b-946d-295765e1f2bb",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf14989-9642-4f2b-94b2-ea9967066514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba5bde01-3347-49ea-9e21-457db5561c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814aa71d-1484-44b5-9840-5b9ca66288e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a13f55dd-8107-4747-ad35-151d82e5d65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc9e4a0-3bbe-43e4-b22b-8aae89071175",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c661bc12-94aa-4fd0-9433-db8c282c307f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a394c6f3-a27f-4d84-8848-1420b20e5b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901c1b47-b2c1-4845-9887-b817acd751c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7cb20b5-16f3-492e-a152-33a8d6c8ca8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898295b8-5251-4245-a323-d66a4b8607b3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c3f210-1cda-403f-ac6c-29eceaa0618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b6ca7c-877e-44d8-822d-463d45a0e2c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a587ab61-8a53-43ef-b033-18ed7c979d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6f71d0a-9be9-4d56-b365-65d3c1194047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edaf5aa-abb1-400e-a68b-aa73535787c9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89f90eb-6864-45a3-ab91-7d57b1525db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bb4a933-7287-41ac-9ef1-ac8932ad3e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ca86a6-fd73-461e-a7cf-87fb6c33bfe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "621cb742-465d-4ce5-a4b8-a068e36ebbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9febb73-1695-42eb-a70a-45bf17e27c8a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e008dc-dc81-4023-a0f7-98a723bfb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f807ddca-d79c-4348-b33e-9ffd8f7c5399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76997ca9-f0dc-435b-8bdd-537a3e4f252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1645ac6b-3987-40e7-8a8e-0987f5142bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7a1307-5524-47fa-a993-51d75d86b62a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc149bc-46b8-4e74-ad61-6cb7a88e6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136d2e98-9a9c-4336-8ddc-841ea8b12f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19886104-7995-4bec-b0e4-6f3a5ec90fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be187bb6-92d5-4852-8e77-c011ea2b987b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e24dc4-4fbb-42d7-86d9-863df7f13130",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1e3029-29bb-46b7-8dfc-9034a4da2e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074bc2d6-2913-4d9f-8dfe-7c7d3a603b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf60d11d-bda4-4bd2-8c29-e9377e3aeb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbca5bd3-bbab-45b0-83fe-e9f93e9a53c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0febb860-31f8-4f9b-b2df-e3dc8a6d5e3f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c924bc80-1875-418a-916f-3727f941e733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119483c2-c2ee-4a95-9cc0-90ca426a49b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a5179e-f5cb-482b-8b1f-6d93d7e82a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "642f0d35-d0f0-4109-b110-22437dbca4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b440876-08b5-48d8-abeb-f8591783b696",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68595bbe-7e32-4205-86f4-256aad6b01e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae48f94-a042-4e39-9ca8-4a59b8d9cca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b371b6d-2b3c-4a51-bff9-51ece93c00d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8f357f-d068-4f7a-b0a0-dcc52f3d5e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5750cc6a-fa59-40d0-802b-096cc6984cf0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1603159-4568-45f1-bb91-743c29382d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96281013-31f3-4832-8d40-da7c8fae5d81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63af98f0-4fb2-4be1-a8f1-bd8c9dec40b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d83c2ce0-8920-4201-baba-3f9ea99533fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8949e3-f78d-4bad-8c86-b1912faf30ba",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78346e85-3e3d-4140-9fde-55c0c6284572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac8230f-7e0d-4c70-acb6-df2615b8f3c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a67d5-f5e2-40fb-8f16-18fe39509455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8141b9a1-96ef-4cbf-8a78-619259039cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ec0631-9213-444d-9897-96639cc80147",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9132f82d-dd4c-4c46-8431-996901ad9457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e08f1f4-6467-4bec-9183-fec41cb6c709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba1cc068-df79-4e36-9fa3-d9655773c2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f66fc82-b6a5-4273-8d47-d7bd2032c0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a95114-05fa-47ef-b809-6512f183ca62",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d10fc0e-3470-42a7-9356-8a4ecf344d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b965cefa-382c-420b-9e63-dd6ea0beb08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8823f23-d50c-44c5-8f97-66fe74496be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8ed1a9-9d15-4693-8032-bd26eca94d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffb92f1b-a155-411c-b466-eb443a3a0af7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a42261-794b-41fe-9c74-2c6a52b2b0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9212f0c-4874-494e-9955-8c4b6cfb28e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7451499-daa9-424f-ab9d-c44c4b14a4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ceb2dec-e3f4-4751-83f8-9912debabfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dd85d1-943f-466e-b1b8-e876e239ad73",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74856cbc-a24b-493c-9dd7-b12fd925b490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fa1d26-9694-418c-9486-76e7b2b3b8e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53ea408-753d-4255-bbd5-52d1ab5866e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ea8bf93-486e-4151-96d9-056969c084c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb78b7-5a9a-4730-8305-805f16e8c896",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6b2a43-42dd-44bd-9515-71cea2064aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac413a8-981c-40be-ba00-9a9853aacb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1926ed4-00c6-495d-a2c5-76611f848454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c67a9ec2-f150-4dfc-b7c0-d9f28bf2b9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9e3f32-e26d-4737-86f9-bbc8b55da88c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24b5152-dc79-46ec-9223-77a4bc6b50d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15bfc35-5ca8-4b5b-bd5e-3ecfe3bd7fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120f616c-0408-4ca3-b077-83ac6c7992ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5915be9-ab5d-468a-8590-1ba2ecb75423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db04d869-26ac-4c42-a064-a4ae37bce51c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e438f276-5ea4-4a5f-8398-d6c2150292f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77ec8f4-9e3f-4e4b-a94d-576904469d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae148c2-0d5c-4015-b01d-4972aaa17efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb82995-c46e-458d-8d33-a0cc013be830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951c322b-2288-4bb2-b3f6-e44cb5fda175",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e7085c-77b7-4ed3-a0ce-0d0dd9af6b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228c9fec-24cb-41b4-8570-924299a735b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e37d40-ed22-40d2-951c-1cbae58dc15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0edbfc9e-acd2-417b-add1-27c5d57d39f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b6431b-33ad-4546-a512-5f99bf292686",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61502444-689b-4e3a-af3b-87e6f432035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11585160-864c-4790-9c5a-7a2c28fe0595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01e069d-d011-4f00-8182-bc6b178e8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbba9ab-1b97-4f33-8eb6-7a1b3cf62e29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f895acaa-b3aa-46b1-a51d-f4157999acfb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27a2bb7-bf4d-452b-9aff-663c3288cc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5171402-ada3-407f-9e42-49101a4721e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad58406-9127-43c8-8702-92e1ea71db9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "635d493f-99e8-4d86-a1af-fc5f894490c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0fb713-6b9d-4d50-976a-a25bfc08d3ca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961d5e68-f57e-477e-8a54-c286a52f5b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b29db929-51f4-4769-ad09-a4ea82543c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad83fe67-03ed-433f-9358-8a7a7dabaa40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebd748f-aaff-4eb6-8cf0-799ee998e6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0e149-6420-4129-8088-c6d11db5cfa4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b23685c-0545-45bf-8fa8-73c2db8015fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faed079e-5986-446e-856b-9ca4d4b019d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c07ca0-5d65-4b46-9feb-d3016acdf993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ed6fb02-bba3-45cf-acff-0fc4809c234d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938c28e3-6648-4c5c-9e53-0551093a9231",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52e4c649-6928-421e-9e90-25ae32318cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e8008bc8-e7b7-4b3c-b19b-5a4e4b7ecf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c4a85-5ea2-4fbb-a606-e216e7c7e5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "334a7728-6e49-43ad-964e-2b9eb36b373e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "beb4a815-afc3-47e6-ba66-ffecbf85d7cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9745cd43-f535-49de-99ae-40f5c47ac154",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd44c85c-2ded-46ee-bf40-231dcaccc923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0243b12-1a60-49cb-bb5e-dec10b550270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6a8292-946b-452c-94cc-cf0dd8a2982e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "054a4b91-2e8e-45f4-827a-774fd50879b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60ec1690-50bf-4823-b30e-e0814f29c2a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac82578a-7e64-4a58-965a-16f74437d6c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b5ca1a1-1f1b-4f03-883c-b0a481902daa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6728cd46-120d-47ee-b9bd-d7cff35dc719"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2522c5ee-358b-4160-b303-5b9ceb42da2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0027853-04fe-4f29-b446-7266e8006d37"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb0003c9-9d1e-4e81-8fdf-1a6c36555ff1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b8f8356-3106-4a04-a556-00a5827b76e4"
                }
              }
            ]
          },
          {
            "id": "8eb4f595-05b1-461f-a90c-06aff4ddc596",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90c21028-8e17-426a-a3ab-3b513fe9e604",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26c1a9e2-5a7e-4411-9184-f9a31ad4e3cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ae25667-4a8d-4155-a904-7accc2b1b6a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61d9dd0a-e1e5-408c-b404-cd6736d5d704",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fdfaef27-1db7-41f9-88d7-e255a1eba878"
                    }
                  }
                ]
              },
              {
                "id": "851cb93c-3b83-4c7d-823b-a38114bd5328",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "627e00d8-d947-4ddd-8b35-b33f6b81c80f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5febb9e-1472-4de7-9b62-942ef7ec2c25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9cfc7954-b531-4659-a3d8-e338ca606c44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80e3b248-ac22-4702-9b1b-d3d7b7117367"
                    }
                  }
                ]
              },
              {
                "id": "922f648f-e706-468e-aaed-cda127d06266",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b32dc22e-c521-4366-88bb-30596169054c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "56dcd2b9-3140-440f-93d3-532fa2781a71"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abe44224-b660-4241-a558-86d21f5d4e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e286f035-d024-4480-9222-1ec6cd133e36"
                    }
                  }
                ]
              },
              {
                "id": "91bda23c-43a5-4ea3-af67-7adeff4c1be6",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "037b2e59-3ca9-49fe-91b5-3bfe4b17dbbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3e80ccc-a94d-47aa-8a92-520051d709c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e7cd193-0180-4588-90d2-64747335d16b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9777abda-fbd3-49ac-abfa-eaccb4c8c243"
                    }
                  }
                ]
              },
              {
                "id": "dc07f4c6-38da-4b81-ab6c-2ea4445f9248",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fd3a457-978b-42e4-a565-7670750b4a7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f423a0ee-aa5f-4548-8f83-da3590b221bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b895814-5179-4499-95d3-771c32aa293f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "833374dc-d87b-4e7b-a724-917fc6d2597f"
                    }
                  }
                ]
              },
              {
                "id": "de56af4d-463c-46b7-abf0-fe7e13a81f17",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d928d64-b247-4691-b874-579a9ec505fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b80460c-3693-4d74-8878-4d3529bb8b7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47914ab3-cb7b-487c-9184-d5cf2f06a59f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "903eb1a4-b3ed-43be-81bd-d9faeb57f33a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "58ced732-7941-4f47-99cf-2c5d0737f1c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f84c2c25-5e67-4b73-b984-9d44bfd67b7a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "364f5718-a02b-4a9b-9dd4-6a796276fd7f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e33964aa-06cd-4704-a3c8-1b34d0970b80"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c596135a-5262-49d9-b3d3-3866e12d6c69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "806a492e-7ed2-413f-a6c2-53597f4d466d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a60d710-5695-4c37-80b5-7074df8f30a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2961d19-90b5-4998-aff9-646c70d2f6eb"
            }
          }
        ]
      },
      {
        "id": "55a63162-01ad-45f5-bfb7-c56ea2f62c75",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f75892ee-f5e4-463f-bc80-53f14829f028",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa5b70ca-9a84-412d-9168-251cf0fc1c80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d71fb37-7eb6-447b-be10-753ed0c69892",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0490b9ee-7354-41fa-875c-026b845b20ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b77a58a7-7e69-4517-b9c8-6e3ec9a32aeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ae1142-8707-4e5b-a4f6-4f6ffc7de720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "91e626ed-c223-48ca-a5c7-30b8d1c50d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94f66b1-cbb3-4970-a07c-9a6b0bc329e6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74695320-1751-4e42-a395-099e50ff3a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "613b43d0-3522-491e-ad26-8aec44bc99f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8c4a78-a798-4718-a63d-ce10440f501f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f68873-eac6-4b2b-bf5a-c76a04d2b66f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4033982-4d1b-4f2c-bb2d-926f9797be11",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc702e8f-9a15-48a0-a5ce-c7c45f1cedd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae48394-2d1c-4717-9b9c-927b0357cc4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d7b958-0540-4f14-924b-b2d314c3a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1db3150b-7aae-4c55-b7a1-e693c973ba35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff21b47-395c-4c11-8e21-2163aad19e76",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa293489-caf5-4ea7-910d-2caa00d76088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f33d020-66b9-497b-99de-99e8ba0fe743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1831ab70-1c6d-4b4f-9d6b-62665f164010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1348c7-69f6-4621-927a-3349f814c2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9fedc2-c708-43e2-afef-87c35b818190",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15057b74-a5e8-449a-a0e9-696e6383533d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f68c3c0-4aff-4990-b873-1af1fc4bdc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73dc4d2-1ea2-4c52-ac6f-1c420d5ec92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "267dd3c0-5750-4545-83b4-f3185089d302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9a54b4-eb29-4895-ad70-982346de32b9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3916d6-6e12-43aa-aef3-174ce18a7cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1424c6b-9d17-472e-9422-7308dee983d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea9d24d-9cfb-415c-9682-b7e341e89459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2dd8442-6e63-4a69-a884-e854a084dbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd5ddb-8c95-4c96-b322-a63056b17eb8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a36aa7-bf68-45d8-817a-fbd817543de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99fb894e-6117-42b0-a408-0bd43afe6824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65914295-f0aa-4f9e-a550-24fb529ea0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5df28ac2-1ab9-4a60-9c52-45bb0290e1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d227cd42-4fc2-48ab-9e4f-f4cdc43cbfbb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3d01e4-7c02-483b-8356-85a32b962eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e05d4c9-0d4a-4072-8a65-2b87786675cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d618392a-a448-421b-b49a-3edc74bd58c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0a6423-dc9b-4272-afd2-ea448fb3be78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6126a74d-b97e-4676-9f7f-3ccbe8c10893",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1416ca7d-a7e9-424d-8009-2fec20a12012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b0160c-79d4-4e0f-83f8-c3c7e41553a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe37133-6cd5-4665-bb04-01fa20e2b7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37b790fa-bb73-4716-a42d-2d51a1c72169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0febfa93-8705-44c9-b285-d5c702c41be4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ec2e86-e283-4ae8-9a17-3ed372e2c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49f67cd-1d6c-478f-90cc-f8ef3337557f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e0d005-154f-403d-90a3-1342ec5e7c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43afcba5-f12b-4a5c-9a81-8ce2bf18e93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c2acef-12a3-4a94-9977-b8071c86928f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13ffeca-e9ed-4d62-9342-c8b58ff766e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30314d2e-698d-4430-9e44-a3bca69c24b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0262a18-620c-4ad8-8601-690f6d9432b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7e60f39a-c5c9-4cbc-93f2-5c827dffd7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363e32c7-7cb7-4995-93d0-624103384ffc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b040c53b-5a3e-4bfc-8173-95f280048b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894c9e8b-8ec7-476c-a936-f5422be870d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1f6991-1e85-4b81-b2a2-fe151dec9a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "969e8d4f-0f55-4841-b079-025abc9978de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bfe277-70a3-4494-9c43-dd2bdca545bf",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f581cb6-88fb-4aed-8880-6fc6aa0db5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1d9c119-753b-4dc9-b12c-a780d946679a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8b4e47-07fb-4ca6-a68a-3b5123b1f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "412ac19b-a6b7-4ff1-8ba0-8937d48dba15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6125189-adef-4292-a703-a4321c1d4ed5",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2874cd-3f49-4438-a41e-a1e4a7b4ae11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9830a1b0-499f-4c36-b463-37da4ea708e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf908a89-f69f-4645-ae83-5c030f020501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf195e90-716a-4466-83ac-fc45f18a2aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400df024-2f01-469a-a1b0-d6fc3e7664db",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef549ad-e481-468e-9ee5-f665e304399c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298a970c-04aa-4590-a58f-b8535265456f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b0c22f-1128-40d0-bcf2-f069a85a90f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "309c328a-9bc8-4aa2-8be9-ec697674b579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1deae0-b262-4c81-8aad-b188cc81d9fa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0013f93d-d20c-4aac-a341-4b43fbe073ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b28952-81ac-40eb-90e5-6385a78d6bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a9d630-5c9c-4e07-aa2d-034cdcea23e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80baf64-98ec-4359-bc5e-25cf789c29d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b11ae-bfca-46c6-88b6-768a6f1f6884",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0ace4b-85c6-499e-af7d-b78a11a0cd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff982baf-1666-4568-870f-72f7bf1c8ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d300235b-1cd7-4ab2-ac90-0901f7b73ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "682567b0-4a2f-402f-8e12-9067b1019fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a7adc0-e628-42f2-b922-f15ec4c8d323",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e1c006-4229-4906-ba89-08ad00af9834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad39940-76de-40c5-9e3a-50fe19dd3c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd850ed7-db3a-47f8-a5e9-1fbe01ca3802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d302412-2da1-46b3-b910-733b9a9bcb62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160f57bc-ce25-4598-bb79-ac85eb72d531",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792f6dc0-57bf-4ccf-898a-c08e12f5d58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67a39931-dd05-414b-a058-e5776076fb60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ecc965-5a68-4e35-bd3f-f0585d203b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a15a9dd-1ffb-47a8-b855-c8e18b63850f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc3cdd9-86de-44ff-8ff1-bf259f4b482f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd728b7d-6ea5-4c99-a172-8f198687e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892ba18a-80c4-4425-b5d0-c6577020a7f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0385d8fe-6c76-40af-95bc-b1387b29c871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a886813-3147-4ce5-a7c6-5afe0f8221c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9b8feb-bc14-46fc-9464-79129153d5f0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90dcf9c1-454c-4e7d-b5d6-7b7cc27c3640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee2a2e0-1993-4a48-9a7b-93b558ade44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d930fac4-58a8-48a5-b6a9-c98816b1a51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "325d8a7d-3ec8-4d1b-a1c7-7b1da2cf80d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7953cfe4-fa07-4c9d-8e78-178222ce6b15",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317eb289-785b-49af-a4c6-6cee25ed7fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "457e9895-d9c1-4f65-b0ce-c2aa5aec29b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a560849-7a0a-4809-ba5d-06f45eedb363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e584d5-fc3e-4fb0-9787-514055f2dcba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e63d5b0-8cad-4569-8847-74874bc11f83",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27190032-15eb-4665-b473-c3fd5405be05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb78e087-745b-4e5c-8176-d2f75812d194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2711556b-dd9c-45e1-89c4-5700dc1a49e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2749d2-f954-4e84-b93c-26b7d1d8a4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c278361a-5f51-4ed8-a8d7-34e314ff1c9a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fef90f0-dcc0-4a55-9a17-4f908829fda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b2d38d8-f59d-4230-b6e3-0f5fbe47b219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac5cf55-3d80-4e7c-875e-762fc95fa64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fb1645-35ec-40c2-96dd-9513c5deb3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca54875-dcf2-452a-8edf-2923816d2902",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a16db90-3731-46ac-9c65-44612435e11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28899364-59ce-44d3-b68d-9fb471ae682c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2a345b-7632-4122-8402-589ab2d92d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f1600-dccc-4a0f-a5e3-a659b8c896fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880e7efb-a072-4c94-83ff-248b8c9a8659",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41e5bae-2252-490f-a1e9-0db04f9a30cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69dbb7-edd8-482f-9444-682906f7d176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9004405c-3251-4898-8b6c-b269f9afdd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "326e31fc-b8db-4305-a08b-4807c58116e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00f4158-f8a5-4b98-8673-77ab3979ce4f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44fdd18b-a0fe-469f-b454-365cdcf4078f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20d1034c-d934-437e-a5ac-a104d0f761ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e720a88-58f3-42ab-80dc-866c151bd66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ac754d-f84d-4e6a-abbc-1a0d7e886d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e1ec97-9a6e-4b19-a909-6680fc9c35b4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d491186-8376-4d1c-ba46-9e2718556a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c99ab2-62e6-4ce0-99f7-344f06ff980c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e9ad4-7eed-42b5-a887-6639442cf3f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a776cc6-4aef-4d69-8cb5-2bc3840735a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e8700-a644-457d-b3bc-42d07093789f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee0ddde-f976-4f33-bb7f-df79b3879b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dbf2aa-a5f2-4ada-a82b-48941323970f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06606e4-d0cb-4111-aedd-6a8c4b1d5f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8416b2bb-623e-4f39-83cd-3095a58d4bdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11febf-da11-49d7-b05d-9b5422fd2d27",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb07d664-d120-49d5-a91d-ef5f7216a908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530fd4f3-b99c-40e3-a7b3-73835e01ba04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3eff656-3f63-43f6-9318-70a6225177fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03812cc-0515-4a2c-a6bd-b9a55397713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c8b311-a892-4874-b3d1-acd7cb2185f3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9394ff63-ffc0-4564-b70b-9f12bcb74f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43238bf2-656a-484f-93d1-e51a6d49dea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882ef174-0f74-457c-9ab6-7e5f5976be07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "568fc547-054d-4b4d-a27c-31f63c20068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc54b30-1e1b-4867-a9b6-2a00d2a84d0a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace545ca-bd55-4bfc-8b2a-1c5ba16e1ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8046ce-d26b-483c-9d90-fcac1faf469b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9095b893-ead9-4e07-b678-8a964928ddbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e12499-6f5e-4fa4-a5f9-0e0ce18a0897"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "813089de-070b-4e9d-8a1b-2fdca07b71c6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "86e4c13b-5997-4661-80a0-2a88197e1938",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c02e7a0-bc40-4ac0-891b-d5c284f897a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c3cc88be-d91f-41e5-9918-2d982a56a090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395941f5-a48d-4ab6-b513-28a9a34542bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4282ce02-15cc-4fe1-8e8e-3c6d15400a88"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21304a84-0ed1-4820-871d-9371143e4216",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25eb117f-e570-4968-ba13-62a3be16eb63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c01ad76d-b19b-4bfe-9714-9caf757edf53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0023b155-b759-4196-b142-a537bfbfe2bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "198adfbc-3bc9-44ff-b7d2-06c742b03331",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4396cbcc-e091-4d1d-a826-e2e502ddaa44"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d4dff812-87ba-48b9-af29-b3ad5fb50a38",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8520feb-1289-4d96-9885-2d66f7b2c780"
            }
          }
        ]
      },
      {
        "id": "54bc161a-0b3a-4125-8f70-b2728fb030d3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3d466464-80e5-4a1f-872a-e4cae63a9d1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "137a5a78-adbb-43bb-8c59-2001d9bc1b9f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0fdcc5ea-0110-4852-b523-d806640529ca",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f7502a-681b-4462-9181-5d2498245060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74475ee-72ce-4f8f-8626-53f6b6646de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a1b89e-3bb2-40b7-92a9-99baa805a63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcc5520-97f6-42cd-b70d-3115c66d3d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "434c64c3-ccad-41b8-ae6e-2e59e99c6838",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d3b3b9-6188-4ca6-8823-94d2463a734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6f97ad2-636e-4b4e-94d4-27c0fda007bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e86f642-8622-47c4-812f-ad618f2d7fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f241c3e4-8844-4919-a3f0-feeeedd87a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e81617-e82b-49f7-a332-29d8d7f654a8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359e2cdf-17cf-4f72-851f-9497440172af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e99db9d-d042-4d08-bc63-05a4af8c3c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb46f72-59ff-46d4-a0ca-bbf531bee748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d203b90-f7f5-42e5-b595-7590f17a664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e98452-3843-48df-b6db-4bf0f7ca6fe6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ccc316-e7c6-48d9-910d-d54a5cfc451c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bbed2a-5cd1-4951-81f0-1f1557ffb216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a605fd0-eeed-4281-ab1a-6b8dd99487ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d489ab80-332d-441b-af64-7cb1bc983426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6c5e59-0e0b-429a-a266-c7dffcf79ba3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b6a075-1e81-4370-9d88-72c93d0b4b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e55493-b5e6-4745-9168-7b3954f5cf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9d970e-8710-4a6e-ab5b-77a291362fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae114aa6-ed55-477b-8341-908a54689e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10b9c7d-c5b0-4493-8f72-4be08108d02d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a37532c-1ed3-4def-85de-ceeb9a22d5f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18d0d48c-6902-4fca-a18f-21ddf3b932e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf4e9b-7aa1-491e-8943-62235f4cebba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4734568-bc84-43f4-b4fe-cc5cbe1ad29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2921ebc3-954d-41a1-8873-18320b2ec09d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8027a93-dc80-41f2-8172-3c606e8261fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5464d617-f6e2-4af3-a29b-6fcd26471b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d527f95a-2291-4779-82af-3b66394ecd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9984c55-4aa3-4922-a5b4-feb0eede4864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d103aff7-029d-4608-814e-399c3046e527",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af26da92-ec3d-47a2-b217-7c8e8bbff299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2af016-5579-4cda-a34a-fa5fd323a82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc7f7d5-85f8-4241-ad16-d3203983381d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b626123f-8cd6-45d1-aae0-0bbba47e6315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7d98c2-8a12-4430-bdc5-62c1e1272003",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c95454-8c71-43a0-b8ba-bb76c3199a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abf6d84-d512-4acb-8fda-3b99183ac2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0394d57-44e5-422a-90dd-28dde6ca5ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88275e2a-b618-4a3f-bbcd-d2c4f123050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d778993b-3e97-4e13-a354-a125e20ff3d0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef90ff-c038-40d3-a2fe-899c522998ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dca49c2-006e-4012-892c-887c9f0be061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b884c53f-b057-4767-b553-45a36342141c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "547f5199-3d9d-4a94-9695-def5b707f832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cec3fd0-373c-49c8-a39f-974d0ac2e417",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0222c4b-a138-4ebc-affc-ce3d372e8422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49cf0b08-0a1c-4692-837c-b76f74d2ee39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd42ac91-bae6-4607-b1fe-9ef83d966ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "48ba1472-dae7-43aa-8005-90c7d5e5cd02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e00288a-9388-4c10-9f40-7c72c9c165e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0148e54b-c385-4254-afc6-2f35c30c93a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e60fe9d-38e5-4858-85be-36863be14a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336985f0-a368-44ac-bbd3-7199a9ad9976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51d20219-eb09-4b1a-996d-4530dfc10933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5649554a-b8d6-4720-a832-8b9852e671c0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0551430e-8c70-4a9f-b25b-65073d6fab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f9a79ee-8d16-47d4-bc24-98a5ccd307c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158701db-5f51-43c2-80a7-102494d03de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c007e8d7-980a-4159-97c6-80ecd6ec4b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df3283e-f717-4550-86f5-dcb8f0206677",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f24149-3559-4398-a9e2-9f28a03926d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a666da28-5e27-49c7-a0d0-5fce0c5aceef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad889859-9b59-4b2a-993e-ad6d8d0a66f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b17f8c-3367-4255-bb41-538d730bfcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d531b76c-2e0a-4b4e-9828-caf2e706ca6f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de37fff8-9833-4e1e-9c76-d495ee267afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3174d7-ca0a-4d4d-bd1d-7fe04cafe313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae0e709-c65c-4470-be68-d8825cd68e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b86cb39-b668-4e83-9a69-d532642e91e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050eb54e-172a-4b2b-96a1-483b90bb18ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9030384-d9e8-4ac4-b5fb-4a11f66ff7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0f90aa-8529-47df-afd3-bb7bf7d2b0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "543697dd-16a2-4b51-8b4a-b8fd4a099c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a55a8dd-6a11-4f32-b108-0568f38d7f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940896c4-f36c-4e66-b464-d72655e3184e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d46849-594b-4281-9e90-2a84b71c9f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e27b92c-4dc7-40f7-92ad-8430f33e4b13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807fabee-044d-410f-bbaf-78963eab24de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebe6750-9573-48f6-8e2b-d739e39f35a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30c021d-8703-4307-9f87-892923bff2a1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6704b48e-5aef-4e0c-9ead-02db58f096e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e19b208-39e3-4d7a-868f-ac26fc8a6de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac62ed6d-6d18-476e-b306-818fab3611cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "191ab761-e54a-49e6-aaed-6f09dff81365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113b492a-49d6-4092-af35-49baa9c864ec",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ed7360-cb90-4a45-b05a-e4330453d4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058729cb-f6b6-4cfa-b16e-a9c2b6a8ce63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ab6eb9-86c5-459d-9b53-9523784d7faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a82a2e3-638f-4ba3-982c-0ed2c6f6db0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5df67d-e4a2-44b1-b595-c1c6cb3494a6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215c05d3-627c-4d62-bd00-e9124376b369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ce53a4-ff9f-4407-8fc0-9dc7cf149b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4f41f6-82c0-4539-a8a3-911e5e4eb896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40278354-3710-4007-aae6-9c305221806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1fc330c-232d-4f55-9a70-5a0d6fba7573",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adebdc9-d9fc-4b37-88d1-525dc55fa1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf702ab-0d57-4d75-85a3-2cb894d73d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9186b1-41f9-4a94-a64a-f95fafd40fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b99a038-bf46-4e2d-9708-7e0c32afcbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824125c6-f8bb-46e9-91c2-b477478f5c6a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b6124d-bb65-45c0-ae00-ae9e881d01e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0a92c3-75fb-41df-bff4-1b501d378e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca507e7-df8f-4d60-973c-592b456550be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf4a10d-3bca-4375-8dfc-7a82db346592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173c38f2-ecc5-4926-a131-ffb7a0f929dc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db9e9a2-262d-4573-a33c-47648ab3f732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92ca43b-27d9-4e12-bff9-516db189deaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e36c32-888b-49b4-8a82-39bea27283f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b76e8337-af55-4eaf-bcf9-f94d64aa8123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c264d2-ca8d-408b-bcc1-86390cd0ac7e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7bd7cb-45bf-4cca-81fd-54f0c98fd7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c33566cb-c885-4d0f-8cca-05406be3f293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "371d981c-0fc2-4cea-b0df-5b5926586430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af466ae7-837b-4eeb-a188-294af48b3329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd8895b-834a-4b7b-bdb2-d4a1970360ba",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaac17f-c612-4764-a3ce-43ee66560fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6a0b071-61ed-4b87-bcee-af9eb7f23e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1821e62c-2c33-4a63-8bff-ea4ad0c116d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f37e4a93-6378-45d1-aa0c-e0b08e07d1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e77aa8-4ba2-4973-be26-118253794f71",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36397d9-aea0-4f0e-8f6b-a4f5cdac236d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178f2a38-59ea-4e49-aa8b-dfced81ae87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1f8320-a20f-4eef-91d7-10f0af329b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be68cfc7-5784-4637-b8c5-ef5dfc6fb95f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7db4f12-faed-4887-acb4-a2d9a826fdfa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffa21bb-4ceb-43eb-9c2f-033f29bbe1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7a6416-1436-4e5c-a71e-67bb5d2c2b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4514ab36-242e-4bce-82bd-5ec9071cee08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef798da-67a5-400a-9c62-3a1418105614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2540a3c-9a1c-48cd-b4cd-12780e900823",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4af4cd3-948c-4d8e-bdb3-345b3384f58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f8b122-ae65-4fc0-9004-d5a5b2a95278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faee3833-dbd3-4c70-8b84-44b9763a9288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b2a7de-71e9-49a8-bf15-329ac07f3766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56015861-6cba-40be-9aaf-556594cf7e9f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a245122b-d3a9-4d11-be1e-3909b66499c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b67a1f-6d3a-4c9e-a5ce-9e371347b02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee6b66c-286d-4053-bac2-88b2ffbe9382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7a8a8f-3eaf-4ec2-ac94-d7f4376c0046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e82d19-b0ca-45d3-9755-cbbdbe9358ae",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9f135b-d572-4cbc-9da6-37b05534f549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162c58d4-325f-49c5-9ee8-e77ad4b611c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880f5085-b627-4523-b43c-080519747a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572ae494-1993-4027-8d71-3a77d61baf54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3adfdab-4243-4eb8-b40b-6852017deed6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6b5345-c929-4ae9-946d-7ccee8c6c13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9df9166-f5d3-4c47-9315-b5d9172b354b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32d0b74-3374-4400-adb2-12cfbd320de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e928e5-4308-4a1c-b119-2e97c1d42202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4eb8944-e759-4fb7-95a8-66c22e407b1b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab6605c-a35f-420a-b99e-92e626caa40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232a1f37-8524-4f18-944e-7f8a9dfc034b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7288816-f987-4171-a548-50576d8e57f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e2fdfec-80fe-4efa-98bc-f15a3904c7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab20b5c-103e-4cbf-ba79-b9b9032090ea",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6acd18-1da0-4ae2-9377-1302652b4803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2071b67f-1c74-41ad-aad9-175c66326dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e115a2c8-1520-4550-8b60-a5e9c8f36d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff51bea-6914-4b1e-be57-65b6394b000b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c556f4cc-0e27-41ed-a243-129c8f7d57d6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70d3dd5-8f10-4e7c-83bd-3dc4037ba0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0043cc-7738-4f75-a07e-a5bbda556d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e0918a-2501-4024-a50c-7fb37ea60a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3aa6d3d-6c01-4090-9c9b-84b0267fd64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b1111d-abca-41d6-9681-ebdb9fde633a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363c95d6-53ae-41d9-8c96-f2e9b187a309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c75fa9d-4aa5-47c0-9791-867de2531bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c54fc19e-fde5-4931-9b4c-e97d9240c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f04b784-efee-434d-8a4f-f9d8e789d03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a9747c-1977-42d2-a80e-ab1d0fbbd75b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87ce272-cc8b-4fe9-8509-3b4c3fd6f04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b6b552-3c38-4a43-b9ae-1e3b6b6b9947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02e2dad-80ff-4b19-abb9-e50e0f18fab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74821f8b-50d0-4039-bab2-01495d4adbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914f8c8d-16b3-4b0e-a0cf-61acfd7831e8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34b7598-7444-4cc3-ad12-347cd1eb0948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add8f4fd-90b4-45a3-b34a-566d6452f871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88546d7-718b-42e4-a2c2-78843ca38281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb9f395-6d2a-4047-9565-5ad0a144eda1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "98885d07-3c6e-43de-83b4-6b6e7fd99cd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34141f5b-7013-465c-8270-fd82ee1accd0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f00d2b-2395-482a-ab05-9f86d9f8727e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f91cd50-409e-49c0-98d9-d35dd9a74256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7acc82-cf5b-4811-8862-bc18c8a0fc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58665d67-afa3-443c-bc54-972e8781f021"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69d54528-e624-4ab5-86aa-d9b50f893fa8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62153fa0-fc06-4f13-80a4-a8ea4c6a95f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4744bb4d-b7ed-462e-b044-535795699664",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d08604db-d1a6-436b-97c8-e49abafba22e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c789f09-7d94-45d8-be1a-406dd9a8d37f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f3e83d3-2892-42cd-a59c-87667bd85555"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "736dc256-3d04-4da8-afe8-e96c922e8725",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0719156f-4932-40d3-b496-f1002e6849fe"
            }
          }
        ]
      },
      {
        "id": "9b7c7dfc-8229-49f8-887d-9593b766ed7d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "79ba9ee9-d07f-45b8-924d-5843eabc5bc9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6cb5140c-9631-412d-93c0-1c8bb062f9b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a9232abc-3754-4332-8569-e939c2ab42f4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bf5353-9a9a-4c85-acba-fdbe7adab35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721dd0b1-99f3-4515-861c-e045dcbcc2df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421f5eab-7d79-48e1-94f7-802f181ec94b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ec6c58-293f-469a-911a-3094f82e5901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a2f986-7756-4a0f-afd0-f5a37c862c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639e8b64-e002-4a71-afa1-16e4030b3133",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994ab85c-8038-432a-b790-194fe5630178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e776123-fefc-41b9-8631-0434047075ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123b19f7-c479-4b09-aa8a-220c8db84b80",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4344f5-5093-4af9-93e3-b630840435f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8809f1c1-a709-4089-b2a6-f6b3823e4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faa741c2-53a1-4dc6-91e7-a116945c8641",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7557f43e-d36c-4b9e-80fa-ffb9272db02e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dbe9a2-575d-4b93-9db5-fbfe63261d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0eebb6-2f2c-4ced-989b-442c7ae1b579",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89d28cb-3513-4fd5-94cc-b76e697d66b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7aca928-9ab7-46de-aa3b-e6f3d66a710b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2692282a-25b0-42c9-8021-a53f0f86b061",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d263cae7-1a44-4157-80fa-6e6b38b481f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e15dc53-0077-44f9-98f9-d596ba477080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911bb6b2-e62b-4fa7-afc8-526e26abb0a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9df369-2e7e-4776-8888-22e16f238b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0cba5c3-b697-42a8-bc65-16b64a7f1aa5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfeea79b-b8b5-4734-ae94-aec0f311938f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249b1c9c-b729-4512-bc78-261c7fabbcc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf61cbc-bb10-42de-b806-60487ee6e128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17a825f3-3e43-4c77-b5d7-df692a0ef487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11261d87-4084-4a53-9327-7de459021c51",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deca7c45-d772-40c6-844c-0b0a790265a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b13eec-b0ba-47b9-b89b-69c70faf3236"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94c9d84-d3fc-4b56-80b1-6a4772910c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c2d279-55ce-4382-8f2f-4d3dfb37752d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56f371d-e754-42e9-9ddf-bdefc8586fd0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a58c76-6bcb-4ae5-ad62-70ee5249844c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55906f0e-bf47-451f-a53e-84b029551000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70a5a8a-700e-40ed-be5d-46a84c39b1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f325bd81-86c1-4671-8bb2-c4043ebbe42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ba5146-5b3d-4770-9877-017ad1de3996",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b1acd-8126-4359-958c-18a762a6471c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90d169c1-e14c-4432-8345-b3e1d7e282cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32026309-72c9-4715-9375-2b86c5069a14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2280290f-5257-4957-8a89-07dfc5df4a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d72fc8-6015-41bd-ae80-a4a13e6df6ef",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7491e12f-051c-4f06-b507-b7da48e9891b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6d3c3e-046b-48c6-a05b-46d58bea648e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db45e009-b323-4656-af27-28ef23430334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef7b010-4b3d-4613-883f-748d024d43fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4625fe0-14ad-491f-82cd-0e6dcf5d7125",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b166a228-637b-44e0-976c-f06e78a05bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e687d24-0292-4759-be75-1ddc43c77931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e238714-2383-4e6a-ac77-9548a2bf90eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed20c9d0-be7d-4113-bc8b-2ad9b85aab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e793c924-9bd0-4792-9430-066af9f1c499",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da97211a-9e81-4555-849d-a64e11097460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d03c1e-2ab4-4b72-af29-bc779d64949e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78756ff0-687d-44e0-95ed-6e20cd631f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5329506-35a5-470a-af01-58c44ce50ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67698ad3-7322-4c03-b23b-da353ed09b93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3872bb45-c60f-45ca-8e85-876e710f5572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7629536-6d4d-467e-92a7-f3c6bc24dc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a4a9bd-1d72-43ef-87d6-9a6d8aef6983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75467277-fa00-4a19-90c5-a730d1e63f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e688110-bff6-4b44-b2a9-c7d47bd3527c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a2a3f0-d283-4dcc-952a-d3ce9188dcbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e08b63b8-82f0-40fa-a666-c264efd09bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b787a01c-bdf9-4115-bb3c-bbdf153d820f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee0de34-82e3-4475-a644-dbdd55d1ee8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56485fa9-eff1-4152-a539-56c626090f3b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcefb53e-98d0-4b99-bf1f-ee05ed9c6c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed2cec00-8eb0-4ce8-9643-1f61ec7cd6e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ac66bd-61ec-430a-8e4c-e0969ad56bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd95a024-4bae-4d8f-86b3-d794c9fd2029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79491689-2487-4b5b-9057-62c82265b7f5",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd830fbb-0bca-4c28-b757-acc76bc71213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7708e08-cbdc-4045-a516-73d3b78cc1f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77871629-5f53-4928-aa9d-5d19657a1fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeea8b8c-737e-4db2-ba99-86eb20ce411f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a15e12e-0962-4bea-a45d-28be9d3a0299",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b097498-3a0b-4b1d-9683-b5a90aab20e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "957a6269-dfc1-4ec3-9a44-1b2135286436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b00a7e-072c-4f15-a1c0-ba4419357c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95fbbaa-07b3-4bc3-8953-d460b0552ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df73cf7-2ce4-4866-a914-826ec200209a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d82765-a376-4335-8e02-9404c70b1d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f3ac2c-fd60-40f0-8326-211ae6fab6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871aed22-40a8-4138-a23b-2a4e812017e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f210d92-1ffd-49dd-b809-51693cd3f1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906bf878-e0aa-4ed7-b670-2e2d29a4e246",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bc1f8c-0aa5-4b5b-9fe5-83fd784b7caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4531e8fb-f7ce-46f3-a1e3-7d5158a8b328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67240b13-7726-4eba-8bd7-ac9e10a2724a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9c8c66-7b5a-457b-88eb-26f191cdd223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd8c429a-6ab1-4f1d-8c4b-19204eb8587c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2ef21f-d495-49da-a913-196e82d7c1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a650745c-0305-459c-afa3-6137bd15a6f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a438d54-007b-45f9-a8fa-ad0108cba769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c3eddd-0539-43b1-9e8b-37b6d339bcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b271f2-4a97-4cff-9bdf-a6f3bd852672",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057291fc-2225-4b57-89cf-c936264f900f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbfff994-815b-46d2-9746-5f30055ac33e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d68692-1934-4984-8cfa-f651bd1836fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db160bb-fea1-4734-bf7c-4ea7ef6d2c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb7eae7-2d0a-41bf-aefe-211f4a10af59",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afcd282-24ca-4484-a19a-a5e7770d84e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffbe670d-908d-436d-bd29-612b73f12122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc107258-290d-4ee0-aa26-5281d6e35f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415ab7fe-335a-4461-9d29-960a1f94fea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca4c24f-7a74-4c0a-9479-bed51b7cb0d7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6bfc38-131b-4423-9080-c9565189de5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9cad1da-1511-4739-95bc-35db66f87e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d31b220-ba48-4bf7-92af-d2e35ce451c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84dda6de-19e9-4a78-9365-1ed1fb99df00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6d5a36-1d7a-4446-a143-020364969d69",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089f9744-a02d-41b3-9cd3-bcbad3a4aef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16e50e3-ceeb-4b44-b1df-a8ab51051576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de85ac0c-fa26-41a6-8230-28519ebfd9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5676473-c682-48c8-8006-658de138c707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43f558f-3b0f-4925-80d7-035bae3b6bd9",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abead61-011b-4960-ad70-0d40a0b8978b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a18c1e-7c8e-44a5-a6b6-f731a46b08a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6cffe4-373f-4543-bf48-5c23e5db75cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c025ee-4369-4f4f-9e7a-8039517f792c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b77c4b-f44f-4ec9-a724-28f86e54e930",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f0fdbe-aeb2-423b-9d5c-18b5a760da3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8df08ed-5f79-4cc3-a6c1-2acaaebdc70d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bff3d7-ecf1-4f44-af0f-d870d63bff9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6484ba01-2152-44f8-a929-393dd310731f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb1a5dc-31ae-4950-8915-55c1ddc33309",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807e77d2-7844-4d7e-9573-7282b28c1087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4aba41-f2cf-4068-b5e4-7bc39a536469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5700da-28ff-4ba2-b1e7-5174efde869f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db05a616-3be4-45d9-a425-330c7127cbc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01bbbfd-5762-43aa-8433-e99697f1c844",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cb6450-b0ca-4bcb-913b-bd4c5d319ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6d18aa-a155-4d63-95eb-67760f7b8609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4927c180-bd47-4071-8d0c-d70ed4ca6059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd8f9b4-a740-41c4-842a-d6d6812187c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db33339-d7dd-432e-b5d3-6b3bc4480b81",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd99007-a7c2-49f4-a917-f2af51862a55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b17cba4-3a4b-486b-b295-ba5a1990e19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43856e16-3a38-496a-86fd-7f49d64b0fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9e91a4c-6149-4549-9086-76b591b63abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f597321b-741c-48f7-ba1b-1afbbc91b5cc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d022f60f-4836-4c97-9c11-a8dc9ab599d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d6c580-d091-4dc8-8ddd-fc0c48e7a597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc043682-c00e-483a-8814-ca592e6f8bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea7792a-710c-4856-8b20-cf1b5a3211bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c03f662-1bfe-44e0-880a-46322ba4eff9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddb433c-10f5-4a10-bfd1-82a44d872e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6417ab93-5af8-4795-ab3c-53afadd77838"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8096a661-3a1c-4ada-b2a2-c43dbbb1eaf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76e581a-aa32-4eab-8e0d-f91dc2948d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9d1591-e730-432b-906b-c7d22ae186ca",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a14381-859a-4167-854f-c893d4639b03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef4b16a1-050e-490c-91d7-37028f8cba0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed729968-c2f2-4191-8c1c-af4a56e025fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822e4193-ec83-435d-aa26-e8d4c4e8d08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0490b81-e3df-45df-bfbd-904b86a0f66b",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af97f66b-d17d-4189-953d-35b38d730cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4664cba-5631-45b6-88f5-53bfbeef91d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f78f25-c318-4ce4-b70a-6147d8a7f75c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcbf1a31-8e67-4312-8b5e-c8293926cb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b2650-dd9d-4d23-99a6-0beb16416c3a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67619322-a1da-421f-a3e2-5b4cd12504b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91164eb-2c9a-44ab-a972-b9aaebc39993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73071c53-478c-46d6-8aad-cb6c6bf6b35b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e5779-69f9-4cd3-a943-50e4b1bf3ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26adfcc7-ccd0-4805-afd3-5998dd46cb34",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a825fbb-3813-4d67-bc16-18d44998ef38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190a8af8-d7d8-4cd5-b392-fee6ca0a1f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3594204-6c7e-4faa-9cee-907a2837caba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8971fc-24d1-41e0-b4c6-6a66044450ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440b8365-66fb-441d-b888-bec07b4cb830",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fc05f0-c31b-42be-b154-47a2eee9f83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2204ac-91d3-466a-9145-51ef0b4b9007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f53ceb-2306-4a48-87f8-6a42e4a1f45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3409bc-2e70-4e95-a973-87b4b3568076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917fdb9f-afb6-4e48-a21f-03de44a62ef5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02571d20-2651-4b94-9ff2-a906f08155bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df46cc3a-ea69-4d05-a2d9-4167ec2e4536"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0153225f-034f-49f0-826c-700c18fa7f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9928058a-cb30-421a-b90b-4d3615513e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72df8dd7-961b-4ef2-b145-988055c59de2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac57395-7972-4d99-99fc-e249564296c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0d6ed5-58bd-43ad-84ce-10d301ba08d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ab9b21-f692-4754-8b42-9446e68899a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57fc466d-db1b-4e62-8859-0725589cfdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0900790-e4b4-44a6-a858-206a74b5534c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42768b89-93a2-4a92-8841-d70275e970fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cd8160c-da68-4da0-9176-056e5101f223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bfe2a21-75f8-46f4-a965-06f89466eef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ed7a95-5ebc-4ed9-9e0a-f91fe49dfbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6112b26a-679c-43c0-8656-5ff574f74f46",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7099ed7-329d-47b0-a230-f1a162d3644b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d6b013-70bc-49cb-b2d7-4327e9f94a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabce1f4-be25-4581-a6cb-9b9a74772c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a4e3f6-929a-4fd8-aaec-25ec17134a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc15a3d-0b0c-4187-b885-63acf19edf21",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbdaf35e-c2f8-4c5c-9d75-65de1c169e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5715ba32-b9d1-4f70-ba2f-b9cbd03b1e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08813b1a-1571-4fd6-80d9-a59b4f3d76fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ebc488-5225-4e61-9460-155ad126de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c6c565-ddf8-4ecd-99db-b7640d039dce",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b60c586-203e-4e8e-b2d0-2cce3e45477d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45e6864-4558-4096-a7cf-b9034bddc5c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8081ed01-4781-46cd-a233-e467356da782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048f7fb0-b0af-49fe-b3ba-2b4319ccedb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f0105ee-e330-464c-9ec6-9de69fa55f51",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53763b-861e-4299-b08b-aa7458b26e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1666749-995b-4c8c-8058-8eb86a55e9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f929c3-4c67-466c-8711-b3b19dfc46f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeca5c5-4b17-455e-89c8-dd3566f62961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f05301-6473-4990-ad2e-d9699af3fd9e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8108a5cc-e1d5-4a15-83db-0825f6f622c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99377a6-0305-4ad7-ad4a-78a451be2f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "847eb169-0e53-4bbf-be63-ad3b9843511b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f1b5c8-f8bc-4fee-b2e4-9623837059b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd600ad-d51b-4487-80db-1916ea4d4c7a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c5017a-a8f0-4f72-a1dd-8df13e0e82db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a374f2-2ed2-4e97-845d-016f42ad8a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0909e3fe-6e3f-40e6-906c-2319b3a42da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1916ce8-e7e1-4f9d-bafd-74045fa70eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35de346c-1a34-4cfb-a5f5-0cad425febc0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fed7132c-dadb-4e66-b911-bd29ba829e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81968f54-94d0-4a51-8e69-d1f68b5306d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9923d10a-1981-4588-84c5-4421a0736675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac3c3b6-4cd6-4a47-a895-87252ad96d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67c0c4c-e17f-47e5-9406-788a26de9674",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694cefb0-9f40-43f8-a3cf-9c107c0b0528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9513f0f-683e-4f3c-991e-5da43d8aaa8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f8df05-4731-4c06-8d6a-d0f3dec45c81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f37aca-c569-4bb9-b97a-d0f518a9224a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e1db38-6116-4887-8bcf-9b47a4e69903",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6c8265-4dd4-4bb8-870d-501b26d73a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76893967-f302-40a4-aa7f-56386a788b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48aac8a1-b4e8-446e-94ef-0afddc9ad41b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee00feb6-4de3-4df8-9787-f0aff6ed5dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781d7d80-07cb-4fc8-a026-d056a0450d0c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fd0b25-19df-4283-8291-d3c7afd20b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d87aee-126e-4c71-8e01-d1bf5bafda6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db2c468-53b8-46cb-ad7c-5fadc6248557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fecabdf-f72b-4fab-a29a-f8bf67b3e88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b12c0f5-f863-4737-949b-2aac24ffb9c4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f616329-84df-4897-b491-d10b842b6343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848b3d30-befa-47ec-a77c-9f3cf7554939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3915b2eb-9786-4603-8939-59f6f2fec2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9de5b5-d655-4110-aee8-fbdb340a55a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7786b71-051f-4036-a4e6-84f769133f36",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b159e5-cba2-4c45-abe1-a42b5edd5038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee20b43-eceb-42fe-b07e-f4d956d804b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eacbd08-8289-4d80-9122-062723c1388f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085c2125-5015-4c91-aee6-7340d9a4795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b66592e-d71e-43c3-b5c1-dc13608afa8f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd96daf-e877-4864-8569-d8cc7203f0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10920404-84f2-4d6f-b101-0de20c4e1c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5ec8e3-65c0-4541-8e3e-a2d02beddd03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a746fc-279a-4cd9-b3c0-ef3daa8ea019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079d14ef-cb11-483e-9ab5-29bd73ff758f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76270684-0285-42b9-b161-374fc145927b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9ca688-8a0e-4771-ae5e-cde80960a522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11dbedad-d562-4c98-8b2a-2030556ae635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5c3521-ea4b-4a1c-9016-9039fd72aa8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24227434-8e27-4e30-9221-6eb9eb386740",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2d7731-7be1-4642-be12-2bc9abc9da70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "681d6534-db0f-4766-a5d5-7f9e273efec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1590569-1004-4f14-8b3c-e91fdbfb0e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8019eba6-aa9e-49cb-a43a-d4f68833dc8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3484a014-5380-4408-9259-1e3b87ae6b90",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c98a6f5-0406-4bdc-bfb9-19136263755d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "135ac0ac-bc88-4d96-a170-cc8a7fc62e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca5ff32-c205-4873-b77f-13f10b766009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4498fa3a-e70d-4778-913c-1af7ebbb2649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550876c9-e6b9-4dee-a06a-0eb3ea28bb54",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e06a318-5e77-4d59-9116-d9c81c0b8b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ee38d9-fced-4c5f-ae74-3797c9acfac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07464f91-6d30-4492-baa7-5637e456b7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91359cc4-ebfb-4fcd-9fab-65e05dc55469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f49aa3-6f00-45db-96da-1faedb5568ce",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81adb6bb-de30-4581-b282-da8e7f5b8ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93158e37-f1b5-4979-a9f1-5309489f56ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f181e7f5-45bd-4e73-857d-e7dca16dcc07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0360b31-0a01-415f-8524-22bf338c0b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4554b4c-9123-431d-b8f6-2cd1a20b227e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fd022e-bc8e-475d-a79b-3e05fe64e78a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800fa424-f53e-486a-bde1-8bad87bd796d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ba3393-aba7-4a12-89de-97d475bc24f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546772d0-b07e-40a2-94a3-9347403c36ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7cfc19-69f1-4b6d-8458-c126124b235f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a043878a-b3dd-45f4-9844-ac4c4b9caa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396ce2cd-a86d-4000-b281-a23288d71bb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4de54f6-fc41-4d3e-acd1-cb8b08ad262b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86215aa8-b226-4c40-9718-80e835b8eb63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e469f82a-3540-48e5-8402-7cf84707df32",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80277008-33f6-46ff-98d0-3fba6cfff9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bd1d3f-ae29-40f8-b059-84b6e98ce3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9060c7bf-f539-4e94-88dc-0bede17cf1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6721bb-18b3-4e64-973d-4762218b50c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72a9e5a-a898-4ded-8c1d-71f54bc1dfdc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5540cc41-e799-4030-97b9-de48adb2c48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e3417a-44a7-4414-8aad-adc665461061"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b75fe8-e949-4280-a49e-18e71128d570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82183882-7b23-4946-8a17-574350222408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "026b82f8-c707-4c2e-93b4-5895d6e78974",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6dbe7d-0caf-4569-8a35-b1df35910ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2e8e609-bfae-4e18-b6fa-aff932c0b5b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f0c1c-a4eb-432e-a2e8-48b6f34e8724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112fc353-0dcf-42db-b17a-badd7beff5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0e723d-31a5-410a-a4c5-81e2332a0865",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4324478c-ed82-47c8-a166-650b94a3b2a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70d68e9-7b49-4dd0-998d-378f2f3814ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a5acc2-5937-4420-9645-640fa31b126d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc507b3-e3ce-4df4-9078-c021659a6247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856efa37-e18b-4c09-aa9e-7446f9d2d1a7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff0c227-340c-4f49-a4cb-d1e47fccb23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "790c518d-2784-474e-8a45-e1f2f8e9dd02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45e35a3-7d98-4a77-a49e-80d0dae67903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20fef3d7-2960-4057-b5a1-817ad7d0fa21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c02000-5fea-45ea-b856-e5b949df660f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5aa412-80fd-42f7-a350-0c0be303d23e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e263ee-1626-4a73-95fb-6ae10f5cf00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e2d9ae-4b9e-4b10-b6f4-04f031b39126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd36a26f-559c-452a-9f5d-37e0ee9b41a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdcc14d-3192-48ef-8d80-1780755277c7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6d0b9e-d397-449b-9c87-3caeb4544f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5cb6849-b9c9-4cc3-bc57-62ca5c48cd8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bbcab7-6655-46ff-8843-b21dfa30f8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2c9635-8a12-4817-9bd0-8bbced1f6180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db92cf84-14ce-4ad2-9cb5-9c9bef6430f5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01f9be0-5b33-4454-972b-4efa5120be07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e0b6051-0660-4315-a0c4-0a6f3c39e73f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b56f8c-d779-418d-9984-05964f1b0774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386c2d29-ca43-4421-a0a7-2656e3bb9515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa177b7a-061c-4629-9080-8e54ba3310f7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6067f1e-dea6-4daf-adcd-c8dc44acaa3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "214e711e-77d0-4391-83a9-a05560b069fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9166641c-360e-4ee6-9f3f-337141a52cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0223b4f-7172-4e9a-a58d-e59456399b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad3363a-7fa7-4803-8b72-ff00bce54b83",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068d99e7-04b7-4593-b312-77bcf765708e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e4d383-4b4c-466c-af24-7abd62975540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adc8693-9a75-46ce-9e82-1768ac45b4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ec1d9e-4769-4656-8afe-82e017cb190c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3fe7e5-fbe8-4668-b24b-0ebe7ea3fd04",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9d9e45-6351-470d-9597-f1bffae3302f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d5cf1b-02dd-4d9e-91c2-4d8b1966d248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417a4036-f908-47c8-8938-0327b53a90a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5bf92f-d22b-4b3c-8603-e861d389c21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a956f5fb-7e79-46aa-979e-e84460d3d1f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10dfa550-ef47-40b2-9923-788f2bfc94a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4b8d962-c252-4af2-8388-2b954d792f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0395bbd-25c9-4fbc-a11d-2a0a4dda14ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01492b29-bbc0-4ada-9e07-602401115fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf76e1f6-1b7e-401f-895c-b792bd64c04d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb3196f-fc55-40a8-b5e7-fb8facfa562a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b197fe5-f70c-4ae2-a60a-848c4e4916f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf53816-fc65-4c35-b3c9-6b53805b23ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042d80fd-3329-43f4-b2c8-a4f5fa064622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb3af42-6392-4e8f-b486-37fc12f9cdce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee90dbe-9c7c-42ca-9115-1de81a647c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bc88f5-dc2c-407e-9ca8-f949d18e7d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385f9687-0438-4e19-a4d9-e808bf44d756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bcc3f1-9f00-4947-a52e-22b73084d079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f776799-f71e-49b7-814f-699402dc0cd4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75caa92a-6a2d-4e3f-9690-274afdadcb50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384827be-0d2c-421f-8247-c87d7e876da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a074c2-87af-4dd4-bd76-05e49b431203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3432b966-1777-4b9a-bdd1-e3dcc4ec8c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c831e9-7beb-4a48-b36c-4863cba087a8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34b7311d-dfa6-4583-9f79-7cde4a96494f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17d60199-7672-4aa3-afc4-a3d8f230d979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15849736-f8b9-4d8b-b16c-571b089b6397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b218c3a6-a28c-4f64-8aec-325f41399c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558240c5-93b3-4494-8385-523e59cfff67",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37c753d0-c988-4dbd-8397-9c27d6bb0c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ebc947e-f906-41fd-9605-daa50ba41afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a25e78-1206-4eea-b376-033abd3a0f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b31dca-30de-4194-aa97-c34c317e6477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f19a75-0f05-4359-b1c8-3de8a512fcc9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c38508d-5bbd-44c7-b9e8-9a10d514738c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0db539-9d3b-48a1-b052-d478efb1feb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b259155-f356-4411-9fcd-651c16dd8d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7392b7-c4ed-4d84-8d14-53b4f250bf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf96ca7-a35f-4641-8a3c-b9d74f3bc626",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec55788-83e2-4141-b2ef-896bf49e5e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8f9fe09-854a-48d0-9deb-c4d331f05971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f817573b-9811-4fa9-b649-7e72a8b41c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5f4da5-c392-44e4-a9fa-e44a461e87e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bc1ce2-86d0-40d7-ae0e-3f7f0eee89ab",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c108555-b3b3-4369-b1b2-68ec8dd487fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d783d25b-cbe7-48b4-8af9-a28659ae9af4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74244ce-1f1e-4bd2-b82e-c1346e6432a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c5a2ab-d2a5-46ed-a9c5-f55f8ab40576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d67a4d-0f4c-4784-b27c-9a32326cf2f6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da669acc-e764-4182-a942-925bc3033497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4efc65c5-9061-48de-97ff-c2a4f85f1e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708cfb84-8403-4df2-89e8-7d214062afb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a564165-fffa-46c8-8220-5528d087005b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadddf37-784e-4fd8-9990-9e7c8b1ced8c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ea17d7-4653-4e20-8aac-8e66ed93b84b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d33d814-df0c-4960-a8c2-6f12c8c3b9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb24a55f-4c7e-43c1-b144-12aa69571fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6d34c1-f452-41df-a7f7-970aa3c00a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d7f38a-16fc-401d-944b-a6930a6aee5a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b22840-df17-433b-b5ec-eaaf8ac82c51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944f5b5f-1366-4d04-a3f8-661bbc319e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26aa89e4-00a9-40b8-a5a4-9a5c4f06d98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc6c77f-beaf-4120-bacf-51f7829c7a0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87dda4a1-a129-4f39-918d-65cf8bf5169c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff70c3b-4e6b-489e-b0cf-45814b28c0c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe206b9-e30a-4244-a296-be8c5682b136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb7e36c7-0982-4c83-bd0c-ddd8ab72f040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5c3e3ab-7c04-448b-90e5-009769df012b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef083d5-91b8-48a5-b74c-eafadade7fa4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924bc2c8-fc0d-4780-b952-da3e5e63dbf3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ade9f472-5115-47ff-8d59-4f5b9e7701e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a4b81f-a01f-4072-8c44-4d3c5f62ac95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdd0585-0a14-4544-9869-cc1d7f1a30aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ae443-27ac-4e26-a11b-b9666a3b862d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b753279d-ea49-4cbe-ba76-6912a623bff7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eaaddbe-8674-4770-a130-41c39b7d3ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44e68db-92de-4bd5-9e5f-c3e45aba18b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046e17ce-0ea3-4ef8-85b6-1f42c1a05777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82327f02-c260-48f3-98a3-2d3ecb86346e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a403c00-40e4-4c53-9f2a-5702043c07c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb8beb84-7d83-4b9b-9570-10dee209fb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9984f3-d0b5-45ca-b98b-7581084e4065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d48c3407-6e0c-42ed-9abc-4195f2d0fc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac790cb-27bb-4434-8e33-a8ec377cb21d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eba01a6-b157-422d-a9ce-111c4ec7b2fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1fef4ec-b0ab-4889-a668-59549e207dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6c8efd-20b6-4562-84db-afc27fe263b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2304a93b-d407-4658-a7e7-4f2777f7e382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e05972-b078-49ab-93d5-71e506a2bc4f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c11986-4a9b-4c04-9995-2a601d7caed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c79135-f1a4-40f3-9a01-d2b213002c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "507188be-b498-413f-b4a5-4a4deb34b50c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec86f2e1-c0a5-401b-992d-acabe553a6d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d940fc39-368e-482f-a6b3-4f94872ada1a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f71c1ed-db1c-41a3-9b00-71f2dcfdfa7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad8e0568-2ec0-43c3-9eb2-cf8229d83b0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d39e510-6077-4090-a782-83450c33d40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f453e2b1-3aa3-4961-a324-1f1fc20ea358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1c0372-5442-4626-92a3-78a61ba36d6c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49da4a1d-6f9d-49e8-bc97-a505581018c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9de7561e-3aa4-4212-936b-3f8e86c48848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6b9226-6621-4181-8ba5-bb03cd58be7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be8a4309-bc91-45bf-9e88-5d9d43161764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6abcbc-2a8b-4c64-8e79-8dd9cd859eff",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b5fd0f-bb4c-4221-a9c4-bb07ceb8b66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f3a7f0-b6e7-46aa-8d39-706d71803791"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783db70a-acee-4021-bc28-c1e42f0cee30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f721607e-7cf6-4645-90f3-68441ed7a8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8359d1b8-91ff-4533-8a52-f4f687aba246",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e490116f-3c1d-42e7-9e9f-3746255d1066",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e879579-4f73-4af8-ba8f-ce5a9284d825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df0c258-e9a1-48d6-bce9-93e51a6ab14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a714407-3b72-4dd7-8a43-69f1f8532b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30575b82-aad3-48de-9d0c-ae9628aa21f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a63d20-1092-4bc7-a181-b4b6806f278f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68164d00-cbfe-40a5-90ba-4f13c25759e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9b3e10-676f-4a21-b229-39aea6aadac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8f2d20-e363-4219-8017-24ee25008a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcc78c3-92e3-4f85-991b-f8afbbe60556",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdfc742-f59f-4dfc-a920-f21522f1ecdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1697b2f4-3217-4bc8-9648-5b171d040fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27f0ff5-ba00-49e3-98cf-dd7b9dab380c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d3ea9e4-8672-435b-b860-8b4754b6fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0bc149-b32b-4be4-9fd4-a6f4c4a1ae54",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8c6dce-f7c6-4149-9159-873bc8b377af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2208be55-883f-4e97-8e3e-cdf092792f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7441a23c-4c3c-4ac4-86c6-b26879a1e4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f225a2ab-e93d-44e8-b6b2-5a59b00f7b97"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe6b3699-72cc-4950-949a-6c0aa56ec92d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "168e598d-7e60-46c7-a8f1-9dff12b35ec4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24b7d25a-30dc-4b54-96f2-0886b2d6f17e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7c72bc3-e190-4b93-96db-ba0ac23ba752"
                    }
                  }
                ]
              },
              {
                "id": "702c4915-90f2-4df1-a8db-58f21d1e3e0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75754279-d90c-4ddd-9146-f8b10756ba79",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a39a7d-cc70-46b3-8d69-7e5dbf49940c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "70445fe5-bee4-4570-8d8d-de197a575c48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6236e19-7924-4741-8f16-0237dfa4bc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbeac409-5695-48d4-a9ac-3a75c76fc243"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2aff8ae-7971-447b-a4b5-f12a732fad84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2d39673-4586-4b33-9a67-ecf1b7f4c1e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6246f3f5-f1e4-49d1-9741-396716ad6d1d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d39161e-41d0-47ed-a038-69a353942c0c"
                    }
                  }
                ]
              },
              {
                "id": "baa850dc-77c0-46c2-8b9a-025ab572fd4a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2c790893-4ed4-4d64-8121-863188727cd0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b16b4ac-3d13-411d-a260-f6c3b3016238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7bd977ba-0006-490e-88dc-537cb470d9d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea75af4-4d40-435c-aa1d-90a813f5d143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d43bb1-2e9d-46fb-92d3-9d62e50b14d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7d23a6c9-9394-4729-a22c-5251ace4ea8c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82cc4d39-269b-4044-86f8-9285e2209774",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0408553-6999-4198-96c7-9c0bfd391065",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bbefee21-15f0-40c0-8b7c-823692e86991"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faabcd59-2350-4946-8d49-e1f3dbee1d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68eda345-f429-48ac-96ab-304f4b47586b"
                    }
                  }
                ]
              },
              {
                "id": "d1adf8d5-31aa-403f-8f59-1a5d7e17a5e9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "266c2b95-327f-4c7b-a657-140718aca5ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f722754b-33d4-4d68-a7bb-77996c690ec6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3f9cf47-8659-4037-947e-5943c38a640e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08e416f4-d35d-4fed-af06-167841cc736e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6ed5d03-f474-4615-9709-9235e8dd4950",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f3df00c2-a443-421f-8270-db5ebaabfedc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "153b6acf-ed12-4221-bc38-6a8f23360f01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e65680a4-469a-4ab2-ad9c-e00d7dc5dc3e"
            }
          }
        ]
      },
      {
        "id": "3805ce01-b9c3-4b96-b671-cbebe71ad3a4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f88c5e8-18b0-4284-80b5-3630c7cce0c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af3411a8-37cb-4511-a129-519ae3dd3cfb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f4f10ba-d6c2-4a24-a53f-7ea537b9973c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f902de-9a2f-483a-a234-5e7f67f02b67",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "61f6a70d-d7f7-46c8-8c2a-9d3f9f6b3e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a2b56f-9495-4240-8e7c-6ad0c4f1d6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e7c94c1-9209-420e-8ba5-75b561fd50d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "730078c9-d875-4737-8780-b61d4744a3ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af65aa15-e8d1-452f-9023-19119d622f51"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc1230bf-ae5b-4df2-bb34-c047c4c311df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7bc31c6-6278-4006-af85-6d6cb0019727"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3999ddd5-9bed-4ac9-a414-3b4d1c2e9ad2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ca3c39da-9caa-4332-9db5-7f9849a0b6e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bcf192a-0357-4b9f-b0b0-dec1350b5235",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8dbc9a5f-1782-47cd-af15-a8999a414e60"
            }
          }
        ]
      },
      {
        "id": "411181e8-463a-445d-9332-59432755e4f8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "93e401ed-d334-4385-8d74-0a8b4d52b3dc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8b4f2fa-10af-4afb-a6c7-a61953fd3481",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0eed6f42-290b-43fe-965a-b29e675332e3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217f160d-b619-48dd-8a08-1be76b9bdbe2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ecec439-4e73-411c-89bc-a84f49475621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d94aae-f238-404e-8a10-c47c4e35158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59cd3705-4f41-4829-9eaf-6f598ca54105"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76d94e18-1999-4dc6-b249-eb6cfa06fefb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "961d2eb3-c499-4c17-af01-31f18f93d2c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "093b0bee-ebad-4d8a-8cc3-bda48eee5814",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be3be556-9825-48c9-97b6-f3c136673ac4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79aa86d9-f4a5-4fd3-9888-de90a0892098",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dab08f01-5a41-4d8e-aff3-c3aa9e648048"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a5b9574-ff29-4615-9d3f-34727d99ccf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "19184d4f-3f98-4dc3-94eb-7e6499095c4b"
            }
          }
        ]
      },
      {
        "id": "c35346c9-7cb0-4322-b87e-50869152a77a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b4297582-1b86-49a4-9f97-80d8a8034dee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea50d05e-9353-4ea6-9d67-c637b95bad66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cac60649-9adc-4047-9000-880edea4da4a",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f54c37f-afe3-43a0-985f-e0f8e04b042d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "370e72cf-a997-4f82-9bbd-646ca0451819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51191805-65b4-45d9-9083-4d546ab34e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f4f0123-82ae-404d-b486-eb4a3c2f13b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4365ca6c-2e4f-45b1-bff3-088a1652c3b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7513bb2-bcd1-4200-ad1e-083556b7f700"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "013734cf-486e-4119-9715-dfcecb1f958c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d61ae1f9-9ad1-43db-ac20-9877986a37f7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a06389b4-4606-4c7b-a9d9-2976c948c974",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "78c2f360-d867-41b0-9704-e5bafbd01071"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d26be0af-f171-42e5-9bd2-28188b46258a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb59b98b-ad51-4ed1-9939-940877eb7ca4"
            }
          }
        ]
      },
      {
        "id": "badcaf56-7ce1-4bf1-8a43-a82c799ccc87",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7920ae11-5410-4206-9d9e-b11c638110c0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4aa7e80e-726f-48cb-9a27-2383a8162fef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c87139d-d252-4481-b6dd-0588b26d78f0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca254902-e9b0-41f5-bef7-5e07dc12a4b6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c81a288-0841-482f-97e5-69ba5a823d0c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 218.4507042253521,
      "responseMin": 6,
      "responseMax": 6698,
      "responseSd": 428.21362605801954,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690332026934,
      "completed": 1690332101025
    },
    "executions": [
      {
        "id": "82beb780-e018-4497-bf00-fece8a283e0c",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb0ef97a-3d09-44d0-9de1-d1346c93bc01",
          "httpRequestId": "b46a4173-6939-44e4-83df-88792cb13ea9"
        },
        "item": {
          "id": "82beb780-e018-4497-bf00-fece8a283e0c",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0dd74edf-3260-4fe0-93a1-919252ed0b47",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 0
        }
      },
      {
        "id": "88077e57-fb92-4ee9-9755-19b38aa76e73",
        "cursor": {
          "ref": "f244bb44-ac08-4b44-8425-f12001a07ef9",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c3b2f33e-d0ca-4a89-b407-b7e0e6e9e8bc"
        },
        "item": {
          "id": "88077e57-fb92-4ee9-9755-19b38aa76e73",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1d03abfc-e0f9-4f15-b794-6a6a7879f535",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "5d4274d2-df0e-49ea-a79f-5390b577ee41",
        "cursor": {
          "ref": "4bfa269a-765e-41fb-8a11-a03c1dcbffcb",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e5c11f1b-472b-4200-8938-c07668263581"
        },
        "item": {
          "id": "5d4274d2-df0e-49ea-a79f-5390b577ee41",
          "name": "did_json"
        },
        "response": {
          "id": "1e4dc5f3-cb36-48e1-ba20-e19ca2f93720",
          "status": "OK",
          "code": 200,
          "responseTime": 1352,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03efe81-1c22-45fc-ae74-183cb5540703",
        "cursor": {
          "ref": "1923892f-f90a-49b0-b947-bd9bd395b13b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70017f40-e123-43c4-a36d-ea6056f14aa8"
        },
        "item": {
          "id": "c03efe81-1c22-45fc-ae74-183cb5540703",
          "name": "did:invalid"
        },
        "response": {
          "id": "a248de01-3b7e-4098-b54f-9b06b69cc863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03efe81-1c22-45fc-ae74-183cb5540703",
        "cursor": {
          "ref": "1923892f-f90a-49b0-b947-bd9bd395b13b",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "70017f40-e123-43c4-a36d-ea6056f14aa8"
        },
        "item": {
          "id": "c03efe81-1c22-45fc-ae74-183cb5540703",
          "name": "did:invalid"
        },
        "response": {
          "id": "a248de01-3b7e-4098-b54f-9b06b69cc863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc888fc7-ff7f-4acf-858d-ade47458f978",
        "cursor": {
          "ref": "41282f2e-fb44-4f01-8b11-2eb40dc8604a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a7978609-4d09-48ba-a828-597f65f6a649"
        },
        "item": {
          "id": "cc888fc7-ff7f-4acf-858d-ade47458f978",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "d884c7b1-6635-4f05-b4ab-a185eb69ca30",
          "status": "Not Found",
          "code": 404,
          "responseTime": 447,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed74a19-6460-40f3-8486-7a47e5a76258",
        "cursor": {
          "ref": "75e8eb82-98d7-46f6-885d-6afce2968702",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "63d127af-cc4b-4fb2-a928-f8298d622602"
        },
        "item": {
          "id": "fed74a19-6460-40f3-8486-7a47e5a76258",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d0aa5e50-5201-4483-9ba3-41b4bd14cc9f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 257,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bab95-9c6c-4bae-ab99-3b75bb6797e1",
        "cursor": {
          "ref": "7708dc57-87a1-4914-8839-0e09c9d93251",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2e618b51-1b9f-4d63-8110-be4a0c2b3b92"
        },
        "item": {
          "id": "476bab95-9c6c-4bae-ab99-3b75bb6797e1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9b62ec3d-c437-40fd-89f1-247ddd223790",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f49470-9755-4270-a225-8487ebc4b252",
        "cursor": {
          "ref": "6e8f51de-4899-4057-aa8e-c0e646e886cb",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "53ba46fe-74ef-4222-a74a-53259df96c68"
        },
        "item": {
          "id": "89f49470-9755-4270-a225-8487ebc4b252",
          "name": "identifiers"
        },
        "response": {
          "id": "e19cda03-2bbd-421b-a895-c0f765557da3",
          "status": "OK",
          "code": 200,
          "responseTime": 1006,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e91662-f270-4194-b3cf-dfdaf829af02",
        "cursor": {
          "ref": "9c55f34d-ed38-4bc4-85d2-cd54d01a4f40",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a23d3e54-1f42-4216-a694-e05dff3aae99"
        },
        "item": {
          "id": "f0e91662-f270-4194-b3cf-dfdaf829af02",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c1def61e-e888-4d6c-be63-5203f28a0fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a17f15-b6cb-4e32-aee0-2bc31218d2da",
        "cursor": {
          "ref": "db6da137-7752-4da5-bf06-84943b01acf8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3bfbd396-2d8f-4f06-b9e4-057e7be90176"
        },
        "item": {
          "id": "81a17f15-b6cb-4e32-aee0-2bc31218d2da",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5236daaa-2de4-470b-9eef-a75a12ee5689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf16cf7f-2c25-40cb-9c54-a440f3be9dfe",
        "cursor": {
          "ref": "aed031ae-56e9-4648-8ac4-d10056af1cbb",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "74b3de3a-a239-4901-990e-8ace48f9f2f9"
        },
        "item": {
          "id": "cf16cf7f-2c25-40cb-9c54-a440f3be9dfe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "769bb7be-b968-4ce6-9020-0ac89e02b98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7b3552-d472-46fd-bbdc-4a65fb3621b2",
        "cursor": {
          "ref": "5b7bd235-7c52-4c59-82c2-4fa77e332e9e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e57b67bb-bcff-4779-a321-a4c110ef57c4"
        },
        "item": {
          "id": "1b7b3552-d472-46fd-bbdc-4a65fb3621b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "85010d2d-ac33-40a7-998c-51e87805837f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9986d0b6-201a-44cf-be81-092d564d1074",
        "cursor": {
          "ref": "6eece58f-c024-4952-92d3-909a499f449b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "556ea9fe-fd65-4a8b-b0c4-f5d6c7118aa7"
        },
        "item": {
          "id": "9986d0b6-201a-44cf-be81-092d564d1074",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f72493f8-0b78-4845-bc30-2238b61c3538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f62bc-a08c-4e4c-9867-fa792ba2fbe9",
        "cursor": {
          "ref": "2123d3d6-bda8-4104-b789-1fb1bc1368c2",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a4cd44a2-b0a3-49fa-a6de-8f904d3602ad"
        },
        "item": {
          "id": "848f62bc-a08c-4e4c-9867-fa792ba2fbe9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7959e945-2284-435d-a8e0-f3282bebfa41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393e4300-7f46-4bdf-b5c9-93fe302a6a3c",
        "cursor": {
          "ref": "684576d4-9c7f-4494-b33b-85bbab5d36a8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6e35db2a-d6db-4b4d-80b4-f0c9e2c45461"
        },
        "item": {
          "id": "393e4300-7f46-4bdf-b5c9-93fe302a6a3c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "43ac8d02-b19a-419b-ba72-75a0ecf7be19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40da493d-d11f-4f99-80b7-eebb319b6bcf",
        "cursor": {
          "ref": "50b22b68-e0d0-4a8e-97b2-239b6fba70ef",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ebac212c-4cd6-4ad5-82e2-82ebbdcf0a15"
        },
        "item": {
          "id": "40da493d-d11f-4f99-80b7-eebb319b6bcf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c9aa9c1d-878c-4504-a986-a02ba99fcc0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8da0a1-ef2d-418c-9e7d-59cde6b95ce0",
        "cursor": {
          "ref": "f51e96f4-ae94-426a-ab5d-4b8b2292ca20",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8232960c-da5c-4a44-ba0c-a169ea70a990"
        },
        "item": {
          "id": "fd8da0a1-ef2d-418c-9e7d-59cde6b95ce0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "375e4cf3-1ce1-45a6-933d-8ced5b9fb2a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b41158-bf91-41b8-9634-d3c18131532c",
        "cursor": {
          "ref": "0ffc34ed-39c7-4d01-920d-d84ff397e338",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3ab7dcac-98ce-4fb2-bc79-91cca9df9a34"
        },
        "item": {
          "id": "88b41158-bf91-41b8-9634-d3c18131532c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "290ab2c5-515b-48cd-9190-74de5d92de12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12de515-51de-4ea7-8681-27be61f65c25",
        "cursor": {
          "ref": "101252cc-801c-4881-97e7-73c8c0a6e639",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9a0bb8b3-1143-46f3-950b-cc5645507975"
        },
        "item": {
          "id": "e12de515-51de-4ea7-8681-27be61f65c25",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ff9de351-695e-46d4-9ce9-190b442faf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c73e164-1219-41f5-b72d-b55aa1f2dfcb",
        "cursor": {
          "ref": "4f48b78f-c798-4dae-87b5-ee23a8c07791",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b193dac7-ee6f-48e9-925d-9e3df28bbcea"
        },
        "item": {
          "id": "1c73e164-1219-41f5-b72d-b55aa1f2dfcb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "02e861bb-0e5f-430f-8212-3a8b2ab96adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda7ae6-187f-43b3-aba3-4b2fa568d4ab",
        "cursor": {
          "ref": "7fa3bb93-aa8c-4917-af46-a06eb8fbbf49",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "35155cc6-6b49-4b1e-a663-9c6914c63270"
        },
        "item": {
          "id": "1fda7ae6-187f-43b3-aba3-4b2fa568d4ab",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c3c0a3eb-4623-467b-9802-bbb7f4d42f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8aa9f7-f45a-43cf-8122-2df4fd4359b6",
        "cursor": {
          "ref": "57e79678-c8c6-45d9-ac8c-26dca71b1e06",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "dfd99189-37c2-4354-9876-fbbbceb81b8b"
        },
        "item": {
          "id": "7c8aa9f7-f45a-43cf-8122-2df4fd4359b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7c9de3cb-5908-4181-9095-b307bea6eea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb749ca-7037-4cee-91be-edcc7126f978",
        "cursor": {
          "ref": "86eaf458-2f1e-4c14-8dd4-f6107e3892fa",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3b63ea88-211d-4b35-bbff-3758a15ae21d"
        },
        "item": {
          "id": "3fb749ca-7037-4cee-91be-edcc7126f978",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c5a562c4-b21f-4d45-95ac-dcf320f161e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987800b8-bf39-4ce5-b415-dd4839fcf02e",
        "cursor": {
          "ref": "9e6a816c-e711-421a-b87c-8f36758c7d5e",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0d68ec56-15b9-446d-a01c-7861f2d0046b"
        },
        "item": {
          "id": "987800b8-bf39-4ce5-b415-dd4839fcf02e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3cb6493b-8792-47f0-b811-7a2605bd8740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc576e6-7f0b-4b79-8f40-d547e32e8224",
        "cursor": {
          "ref": "743aaf7d-1342-4a7a-8a14-e02b872384d0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "51dd9dc7-a176-4cb4-90ef-198acc5817aa"
        },
        "item": {
          "id": "9bc576e6-7f0b-4b79-8f40-d547e32e8224",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "71748324-6547-425b-88a0-cbd4173cdbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad64dbc8-2bd3-46d3-ad5f-f64213481c2b",
        "cursor": {
          "ref": "a37b5426-0db3-4d55-82ae-ab32a25d3bd4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "97e8c333-3379-4dc4-aef1-276bf5586c30"
        },
        "item": {
          "id": "ad64dbc8-2bd3-46d3-ad5f-f64213481c2b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1b7c14e0-7ff9-4598-8e67-5e1e2492d5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec0d8b2-9fb4-4eb1-9938-b5e74bef99f7",
        "cursor": {
          "ref": "f05bce42-1155-4e01-ad33-361ac5a066b5",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "82e10730-b91d-4e55-b77d-f61194c770c7"
        },
        "item": {
          "id": "1ec0d8b2-9fb4-4eb1-9938-b5e74bef99f7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f696ecd9-1cee-453a-8646-3613126fe639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa317eb5-8049-4f18-9854-afdbfd7a18b3",
        "cursor": {
          "ref": "8332923b-719b-4624-8139-d8cc0707da06",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "31ca586b-23a9-47b7-8154-ba52353561f1"
        },
        "item": {
          "id": "aa317eb5-8049-4f18-9854-afdbfd7a18b3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "2fefa905-f220-4dc1-9276-c083d71cc6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f198506b-b28c-44af-943a-63efde47c751",
        "cursor": {
          "ref": "63bfbc48-e70c-4592-8858-21ba88ece4e5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b7b79e42-05d0-4975-8e3e-cd546ee27913"
        },
        "item": {
          "id": "f198506b-b28c-44af-943a-63efde47c751",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "cc7a7a75-a8c9-40de-8d62-0e86faf3498e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fab7705-19d9-477b-aa10-07098b042aab",
        "cursor": {
          "ref": "afe3b0e5-4540-49c3-a36d-9db832a07d01",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "77147850-df1a-40eb-965e-4555c7ba73d1"
        },
        "item": {
          "id": "8fab7705-19d9-477b-aa10-07098b042aab",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "db275edf-4588-44fc-bc08-c8bb54b72803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cd92c7-b7da-442e-a5ab-87b0fce5b85b",
        "cursor": {
          "ref": "e1c24a16-9b7f-49dc-8280-90f78f037599",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3d312a16-cdc2-4914-9b3c-e1c93e38aa97"
        },
        "item": {
          "id": "79cd92c7-b7da-442e-a5ab-87b0fce5b85b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4113bebe-b389-4371-b796-49dbbaaaa745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8751f289-052e-4bd2-8126-3f2f81127dab",
        "cursor": {
          "ref": "ef34c207-22fe-4f97-b38c-284e949796ed",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8a009ab1-df0b-4ef9-8b3e-7c2f4ef5f464"
        },
        "item": {
          "id": "8751f289-052e-4bd2-8126-3f2f81127dab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4b5768d6-106e-4223-936f-0feb714283eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddee0be-68fd-49cd-a797-4b05a8172c33",
        "cursor": {
          "ref": "cfcbb93a-569e-44eb-8c30-511aadd893a7",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4f019fb2-ff31-4b45-917d-3043ec80eacb"
        },
        "item": {
          "id": "dddee0be-68fd-49cd-a797-4b05a8172c33",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "600e32f5-4584-4703-bb60-b87270ceaed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e71e13-0d98-4a9b-8d26-b4045500724f",
        "cursor": {
          "ref": "31fdd83e-c419-4757-a31d-d8a626052c62",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "98163aeb-bd04-47ab-88ed-035021810ac8"
        },
        "item": {
          "id": "59e71e13-0d98-4a9b-8d26-b4045500724f",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "80933d3d-9e37-4176-bfe8-b136b3acecd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e52f46-2424-495a-acc5-a60e38c8acf1",
        "cursor": {
          "ref": "23dfbbbf-e177-4bcb-8b31-227b990840f1",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "af588ab6-6f73-4c2d-9fec-fd126b812f95"
        },
        "item": {
          "id": "76e52f46-2424-495a-acc5-a60e38c8acf1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "557361e6-4780-456a-89ed-e70adcbf4f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a262a1-d1cb-4721-aa57-c4ece3f95fbb",
        "cursor": {
          "ref": "656cf1c7-3f07-4af8-ba21-08368079bad5",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "330eb14f-f0e4-49e0-92bf-7e235c97dd38"
        },
        "item": {
          "id": "30a262a1-d1cb-4721-aa57-c4ece3f95fbb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4a349e5b-25cb-45f4-b162-2dab17d6aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e14b1c-c271-42ce-96b5-b3aeb76123b7",
        "cursor": {
          "ref": "b84b9eca-7995-4326-adff-7ce4c97672ba",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4b5ac4a4-982a-48fe-868f-a744a85f7e68"
        },
        "item": {
          "id": "43e14b1c-c271-42ce-96b5-b3aeb76123b7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "15a951e8-cef6-4075-8d0d-171c7ef603f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726642f4-f931-4b72-9ed6-6fce8e1a8cd8",
        "cursor": {
          "ref": "bffd0bd1-75e7-4f89-9c19-06d43b1f13ee",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "23b557b2-e7b1-4860-b3c3-5537a3dd9872"
        },
        "item": {
          "id": "726642f4-f931-4b72-9ed6-6fce8e1a8cd8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b7b3695e-cd67-45b7-989f-5be691d85c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda1a22a-801c-436a-b899-039d8c7e7b2f",
        "cursor": {
          "ref": "0a1e29da-29ca-4d80-92be-8542ebfeab47",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3984b307-f425-45ab-992a-18ce135327d8"
        },
        "item": {
          "id": "eda1a22a-801c-436a-b899-039d8c7e7b2f",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "67b615ac-d217-427a-9b8a-d4104f8875f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ecf291-f16c-43fc-b071-d0f27bfd1207",
        "cursor": {
          "ref": "faaa0617-9df2-440e-b897-b47cc89a7b09",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "586c2cc9-6e8b-4ac1-85e5-4376c04a6ea4"
        },
        "item": {
          "id": "76ecf291-f16c-43fc-b071-d0f27bfd1207",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "22004352-b8d1-4c9a-9f62-9c221c0355b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b984747-9bb9-43a2-b05f-fb97c1e3bd1e",
        "cursor": {
          "ref": "22add438-e4e0-469a-b2ac-77a89203982b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bc9e4bf8-30f2-49ee-b755-0d1cb2785b14"
        },
        "item": {
          "id": "7b984747-9bb9-43a2-b05f-fb97c1e3bd1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bd06a6a5-ad38-411f-a804-bd2ca7b17094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e427cbbd-e405-467a-a871-c03c76077c35",
        "cursor": {
          "ref": "711cccbd-8dfe-412f-87a0-d0c453c807f2",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dc40fe18-04e2-4bf8-a828-04612de81af6"
        },
        "item": {
          "id": "e427cbbd-e405-467a-a871-c03c76077c35",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7bb2835b-292b-4be3-8a10-66b4d1f4d811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c831ad0f-f354-4ee5-bc97-82eecfa26773",
        "cursor": {
          "ref": "8614c18e-fcad-4ef7-b3d0-d7b61438c6bc",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4224a0a7-692c-447f-8cb6-a1fd02efd10c"
        },
        "item": {
          "id": "c831ad0f-f354-4ee5-bc97-82eecfa26773",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6f7ba7b3-1f00-478b-8e60-9f28debb7e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9e4246-553e-4ae4-8c32-c91cddc9acf9",
        "cursor": {
          "ref": "4ba5e761-642a-4191-be6e-5cce06446c4d",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ea014074-1147-4839-8ada-8864e157bc57"
        },
        "item": {
          "id": "8d9e4246-553e-4ae4-8c32-c91cddc9acf9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "27ce698a-ed40-42a8-b6f3-793f79eee263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69661ae2-3cf1-4aca-9fce-0c40fc022f71",
        "cursor": {
          "ref": "135b25d8-2264-4657-a665-ad157ca6ef41",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e2d0d826-1e99-46ff-9493-8ead4d3d45ff"
        },
        "item": {
          "id": "69661ae2-3cf1-4aca-9fce-0c40fc022f71",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "286687ee-cd71-4ef5-8fb6-3cc3311a55cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e506b7-f7b9-4dc4-bae9-a8032e9d579a",
        "cursor": {
          "ref": "f88ad2d5-00b9-4a8f-8e33-9e85a8d8c61c",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e5b9a98d-991f-4d5a-b630-7a0168dca17c"
        },
        "item": {
          "id": "66e506b7-f7b9-4dc4-bae9-a8032e9d579a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "16724e8a-510b-45e9-9ad6-892c30057be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed84eb66-f421-4a49-b620-03800d796d07",
        "cursor": {
          "ref": "a975990c-0143-4cb3-bc55-3312be246e00",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c24d3f10-2439-4feb-9c26-50e1ce47b6fd"
        },
        "item": {
          "id": "ed84eb66-f421-4a49-b620-03800d796d07",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a3cf7a91-5ca9-4bad-8419-e195bca0b1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9662cadb-b7e2-4470-bb6e-8ab5170cfaf6",
        "cursor": {
          "ref": "3a06d3b9-fd5d-47fe-a5bf-f89024eb46e5",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4ae7e574-73dc-4624-a471-6fbdc7b1a68c"
        },
        "item": {
          "id": "9662cadb-b7e2-4470-bb6e-8ab5170cfaf6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3538cfb-3add-487a-a791-e77eb11c38c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd94719b-005a-4e5a-b2fb-90a54efd2302",
        "cursor": {
          "ref": "16a390e0-cb57-45c5-866a-a5a68193fe0e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3fbc00c5-162b-40b5-939f-5f823638e3b5"
        },
        "item": {
          "id": "cd94719b-005a-4e5a-b2fb-90a54efd2302",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9b082124-72ae-40be-a34f-6d9da42d6317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48694ed0-21a2-4c2c-a658-c9c216f23dbd",
        "cursor": {
          "ref": "014bccee-bafe-4051-a060-57babd58041a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "edfada2f-5288-48d3-992e-a2f4d86146ea"
        },
        "item": {
          "id": "48694ed0-21a2-4c2c-a658-c9c216f23dbd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "755ce4dd-7346-4970-96d2-cb6ce73398ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9a0473-55a1-4b89-9c55-a39266e856f4",
        "cursor": {
          "ref": "72caa9f4-9676-49fd-bc70-0b363a69915c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f99f237e-4e03-438e-b52f-ce106d7a862d"
        },
        "item": {
          "id": "be9a0473-55a1-4b89-9c55-a39266e856f4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ef0c3dba-8ecf-4bfd-b6d2-61ffebd69930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7450ab15-5648-4616-a973-c792a72a0717",
        "cursor": {
          "ref": "a1321806-289e-4248-9f17-ea15122f47b9",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2f579224-971e-4464-9115-83d3eb49449c"
        },
        "item": {
          "id": "7450ab15-5648-4616-a973-c792a72a0717",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3a44b15a-a1b0-4734-9185-e74c96bc3343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4158830f-30ac-4b5b-909e-07fe2cd1f26b",
        "cursor": {
          "ref": "299887b1-56f8-4dd5-9495-a75ac7a11803",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "13d31503-b27e-4b5c-82fe-1a9db6b1aad9"
        },
        "item": {
          "id": "4158830f-30ac-4b5b-909e-07fe2cd1f26b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9a407561-560f-43af-93c6-8bf50473f88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb85722-cf18-453f-8e0e-2fa338fdd905",
        "cursor": {
          "ref": "c1ed975d-b36f-418c-812f-6b6619a84876",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "50b4c302-a72a-407b-8912-13174eb44e2d"
        },
        "item": {
          "id": "6bb85722-cf18-453f-8e0e-2fa338fdd905",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "daa34349-5dc8-4074-bad4-6a22f1d2de01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf8454a-fd53-4ad2-9aa7-8123eb4777cb",
        "cursor": {
          "ref": "e3ee865c-9b45-4d77-9436-b81c43e88982",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d78b8405-365b-4da4-abeb-9f464e59757a"
        },
        "item": {
          "id": "bcf8454a-fd53-4ad2-9aa7-8123eb4777cb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "6e0ae7ef-5b31-49c0-a7a9-6aedc8481458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5440a22f-d0ee-4b02-8096-c8bea22ca34a",
        "cursor": {
          "ref": "3f0d412a-a7f7-413a-bc72-12d02d4a5248",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "32557c58-b0a9-4fdc-88ae-b08edaafe488"
        },
        "item": {
          "id": "5440a22f-d0ee-4b02-8096-c8bea22ca34a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f0b6f0ea-5b38-4a93-ad3e-94c995258016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48006ad-de9d-4263-bb0c-715a96a481e0",
        "cursor": {
          "ref": "01c3fc2b-cb63-47b0-b953-06e701560edc",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3adc5a18-44e0-479f-a763-3194546da2fe"
        },
        "item": {
          "id": "c48006ad-de9d-4263-bb0c-715a96a481e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c2235bfb-8fe2-445a-a25e-72a5fba46c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced3f5f7-ff49-4d0b-bf2f-2c4ee3f528ea",
        "cursor": {
          "ref": "6abdf98d-dc5d-4606-892b-ad594de5cf96",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f1594788-f7a4-4ab2-92c5-304eff7435d6"
        },
        "item": {
          "id": "ced3f5f7-ff49-4d0b-bf2f-2c4ee3f528ea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "883fa7c3-60f8-4b18-a885-736529deff98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e671f2-3ab1-476d-85c2-37512d4dd87c",
        "cursor": {
          "ref": "51c38220-1552-44fa-8ee8-3fe65b08c017",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c288601d-6ef1-40a9-975e-3989eea88e6a"
        },
        "item": {
          "id": "60e671f2-3ab1-476d-85c2-37512d4dd87c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3591927b-0640-42fb-98f4-bd1ecbdb66ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992c5a13-f770-4a58-adc8-ecb13f41a07a",
        "cursor": {
          "ref": "fc19a202-8a3b-4223-be6b-234eb44698ec",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "86fb18cb-7dee-48c3-834f-1a25ca7e3cdc"
        },
        "item": {
          "id": "992c5a13-f770-4a58-adc8-ecb13f41a07a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6e2f6b85-1131-4afd-89c2-1b2152bc0dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c71cc1-df83-4a0e-990f-9f66e5668473",
        "cursor": {
          "ref": "4d94d36c-75c5-43b5-b3eb-99b791e2e425",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4ac6ad9c-8664-4de3-945a-350c096b4805"
        },
        "item": {
          "id": "08c71cc1-df83-4a0e-990f-9f66e5668473",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "476ead41-c22b-4508-8276-edb2662d545f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77347431-964c-4d75-bae9-1316c7dae487",
        "cursor": {
          "ref": "4d8b6a3e-5d34-4fcb-8c0d-f0e31434ddd0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ff4d7fb6-78e8-4400-be09-8b6a00cd3efb"
        },
        "item": {
          "id": "77347431-964c-4d75-bae9-1316c7dae487",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b6c77998-a55e-4c32-a7d7-e87f132133eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a587e2e2-5be3-43b1-aad8-adcaf4bf2878",
        "cursor": {
          "ref": "6cbd41f7-7baf-4b9e-8537-95d6bce9c646",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fff50084-2e51-4998-86fb-65e5732d0b4e"
        },
        "item": {
          "id": "a587e2e2-5be3-43b1-aad8-adcaf4bf2878",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "19e82172-6c7c-47c4-be9e-8d98df273211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabe468c-f419-4a2b-8550-fe8d494382ff",
        "cursor": {
          "ref": "a9c3b578-ba8e-405e-962a-cda994b5c563",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a8281628-b04e-4803-b98f-84590ee6b57e"
        },
        "item": {
          "id": "aabe468c-f419-4a2b-8550-fe8d494382ff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "65a3ecfc-5f29-4b86-b8e3-405ca6974470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661bfb5a-5f71-4f43-bb3b-209d5b1f1f1e",
        "cursor": {
          "ref": "c89fff29-b62f-4f44-9bae-46a5ce4f1e80",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b42b5a65-29a1-426e-9a3b-24fc9302da86"
        },
        "item": {
          "id": "661bfb5a-5f71-4f43-bb3b-209d5b1f1f1e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "515beaca-18ba-4676-97fc-1594b6a147a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847972f6-4d8d-4f8b-9b12-96d2d814239c",
        "cursor": {
          "ref": "068cd7a1-c150-48a1-a513-ec53a5c0225b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fb6b6940-4828-48f0-bd97-41dd2d1c804c"
        },
        "item": {
          "id": "847972f6-4d8d-4f8b-9b12-96d2d814239c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b11b819f-fe13-4aee-875b-889f8250efca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fa4c84-a241-406e-a863-df0f9ae3a571",
        "cursor": {
          "ref": "b1f4b9bf-ac6b-4d7b-82da-3e9b10a43b5c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "38225c3b-49fd-4382-af30-005c1dc90998"
        },
        "item": {
          "id": "56fa4c84-a241-406e-a863-df0f9ae3a571",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "23dc0b06-a811-44c1-88c0-1bdb969a0f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e8d8f-f42e-4423-9e34-f92371ec5b98",
        "cursor": {
          "ref": "760cab12-88fa-482f-ac0f-2a7406d2a8b4",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0e3b8eed-e346-4e46-ad7b-cc941604843a"
        },
        "item": {
          "id": "9a5e8d8f-f42e-4423-9e34-f92371ec5b98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "27c4686b-5d10-48f6-bf48-4c85675c9759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3b749a-7ab6-4169-bed1-bfed3d9e5267",
        "cursor": {
          "ref": "ed5f2c1a-8f10-49fb-9a88-efed30c49188",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8f21ffc6-0d15-43f0-bf8f-72e31f5c7c3e"
        },
        "item": {
          "id": "4a3b749a-7ab6-4169-bed1-bfed3d9e5267",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5b694f20-f089-4ee1-b597-781b85fc16a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0245fc52-040f-4df3-9e8c-ac5dac8b448a",
        "cursor": {
          "ref": "cbea85fa-dc53-4d46-854c-b1b2956694c7",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "58fb43dd-715c-4c9e-927d-0a0c99b6bf40"
        },
        "item": {
          "id": "0245fc52-040f-4df3-9e8c-ac5dac8b448a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bdf491d0-d3da-4b5c-91bf-acffd6736784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757ba34e-5bd8-4e9c-9dc8-78f2b89c79ad",
        "cursor": {
          "ref": "7768b953-4e2b-40e4-a2b0-59ba299df6f1",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "941e6f1f-cff9-4de6-a047-28083a396924"
        },
        "item": {
          "id": "757ba34e-5bd8-4e9c-9dc8-78f2b89c79ad",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9c83dd4-c0a0-4eca-a5d1-4ea53777d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b83bd0-4dd4-4834-a1fa-5c0bfdd166a9",
        "cursor": {
          "ref": "a21c2c97-8ce1-4c5f-a11d-979f343d7a54",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3669cd23-f6dc-4116-a733-91fb6937ef95"
        },
        "item": {
          "id": "a1b83bd0-4dd4-4834-a1fa-5c0bfdd166a9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "abac1ae2-bd50-4140-b0a3-4b7b2c3ac54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a472dc0-d74d-4ef4-810b-6d4554e096bc",
        "cursor": {
          "ref": "e41e1fad-3259-4661-b210-0e2f9e648704",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "01546063-e94d-41bf-9252-9b22455e7134"
        },
        "item": {
          "id": "8a472dc0-d74d-4ef4-810b-6d4554e096bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6b51b9ec-c1ff-4e43-9d70-97e6ddd595df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7da5de0-63db-48a8-bca5-f65ccd5d2dbf",
        "cursor": {
          "ref": "a51003dd-89c9-42ca-bd2b-3dc27bd306fe",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8daf020-2643-428a-8b60-4b2bf2d4df84"
        },
        "item": {
          "id": "d7da5de0-63db-48a8-bca5-f65ccd5d2dbf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0a5b7167-7494-4b12-adce-9be8a7b07c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8485ba18-8008-4daa-8a18-6a8805b5d18f",
        "cursor": {
          "ref": "0d9eefe5-7627-41df-8b98-d0e713409a5b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2d179d05-d281-453b-97e4-651954cd8121"
        },
        "item": {
          "id": "8485ba18-8008-4daa-8a18-6a8805b5d18f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "940d9745-b4ee-4ebb-b20c-6bc5ed9fe6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddc7790-dc19-4683-ba48-460cce46304a",
        "cursor": {
          "ref": "6b47e005-afbb-4965-8d6c-ff9a26498ce2",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6564c098-a164-4d31-8d0d-42f5113b0406"
        },
        "item": {
          "id": "eddc7790-dc19-4683-ba48-460cce46304a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5473444f-2229-4606-b997-36e174979771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e3cdf0-1135-465b-946d-295765e1f2bb",
        "cursor": {
          "ref": "a6f1e496-a7d6-4142-9e9f-f304ef0595f5",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "55201ddd-71b1-4284-b9c7-5d74dfecd1b5"
        },
        "item": {
          "id": "22e3cdf0-1135-465b-946d-295765e1f2bb",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8d3fcc19-3127-42ac-8e21-079f5f93b638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc9e4a0-3bbe-43e4-b22b-8aae89071175",
        "cursor": {
          "ref": "29b80fa2-f781-4fbd-9c3f-57c2516fb1a6",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6c7f01b9-ed47-4b62-8a34-9e90de43ccdb"
        },
        "item": {
          "id": "dbc9e4a0-3bbe-43e4-b22b-8aae89071175",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "97ff74c9-f30e-462f-8a59-f588216d22b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898295b8-5251-4245-a323-d66a4b8607b3",
        "cursor": {
          "ref": "8f63a862-a99b-4954-84e1-d0a06f6eaab1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1a16aadf-bd0a-4823-a9b1-2dbb6fdbad6e"
        },
        "item": {
          "id": "898295b8-5251-4245-a323-d66a4b8607b3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22cf7176-876b-4157-9165-171396fff3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edaf5aa-abb1-400e-a68b-aa73535787c9",
        "cursor": {
          "ref": "6704baec-e36f-4b18-9cdb-cd7d93e501c0",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a0b6ab6c-3c07-4f32-8560-e37d3a644743"
        },
        "item": {
          "id": "5edaf5aa-abb1-400e-a68b-aa73535787c9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b9cefea3-daef-49bc-96db-746b6ef96516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9febb73-1695-42eb-a70a-45bf17e27c8a",
        "cursor": {
          "ref": "3b4d6e9c-9342-47d8-94ab-f1965aed5b91",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "62b6c77a-c86a-4a1a-8232-53525d8f3ce0"
        },
        "item": {
          "id": "e9febb73-1695-42eb-a70a-45bf17e27c8a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "12bb80b9-25a7-4060-adbd-d7234a9e27c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7a1307-5524-47fa-a993-51d75d86b62a",
        "cursor": {
          "ref": "4426c9d2-5436-4a32-bf0c-0d53ab731b5e",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2bcfe971-2b1e-4eac-bf50-4f5bcbae58a5"
        },
        "item": {
          "id": "7f7a1307-5524-47fa-a993-51d75d86b62a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "16e87a6f-07d8-4372-b84a-63d4937aa190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e24dc4-4fbb-42d7-86d9-863df7f13130",
        "cursor": {
          "ref": "e52f0276-e11a-4e9e-b270-1d367b6d68f3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "582a0c11-006c-4a19-ad81-7830e141d752"
        },
        "item": {
          "id": "a9e24dc4-4fbb-42d7-86d9-863df7f13130",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45469b91-7ddb-42a7-a117-89012bb309df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0febb860-31f8-4f9b-b2df-e3dc8a6d5e3f",
        "cursor": {
          "ref": "8e3b8331-acd1-4ff8-b8e1-5e87f4d19fef",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d1e6f3d7-9de6-4e5e-955d-597d4e444f6e"
        },
        "item": {
          "id": "0febb860-31f8-4f9b-b2df-e3dc8a6d5e3f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "24456c4e-0f00-410f-8b67-a9afda67ab43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b440876-08b5-48d8-abeb-f8591783b696",
        "cursor": {
          "ref": "a01c3aaf-1f08-4970-8925-244487071eff",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "95621c84-3feb-400c-b9fc-fe680f81f698"
        },
        "item": {
          "id": "2b440876-08b5-48d8-abeb-f8591783b696",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6e6f14a2-eec8-42d2-993f-bb18cacf2b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5750cc6a-fa59-40d0-802b-096cc6984cf0",
        "cursor": {
          "ref": "9d9634cd-0f34-4155-b8bd-e499406a4f89",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0c2d4539-f56d-4eaa-bb9d-b1bd67c589d8"
        },
        "item": {
          "id": "5750cc6a-fa59-40d0-802b-096cc6984cf0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b7e5b1ec-71ef-4dbd-8468-37ac928ea6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8949e3-f78d-4bad-8c86-b1912faf30ba",
        "cursor": {
          "ref": "3100a392-8c41-45d3-a9bd-c2c7637487b4",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cfecac37-7e56-4111-9198-2a8feca32b82"
        },
        "item": {
          "id": "ce8949e3-f78d-4bad-8c86-b1912faf30ba",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "813e7a86-bd67-4f8a-8347-0ca986e8cac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ec0631-9213-444d-9897-96639cc80147",
        "cursor": {
          "ref": "c00c004d-869b-47c3-b6a8-db8ce84f1a2d",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1a490692-8311-4204-8f94-72afdb50f70a"
        },
        "item": {
          "id": "85ec0631-9213-444d-9897-96639cc80147",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ddad22bb-3100-4b6e-a113-3540226fbbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a95114-05fa-47ef-b809-6512f183ca62",
        "cursor": {
          "ref": "5fcad064-2243-4649-974d-c7361470501a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7ed18c40-829f-4439-b42b-41d52771929f"
        },
        "item": {
          "id": "b8a95114-05fa-47ef-b809-6512f183ca62",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0cd0431b-cff5-474c-86a2-311a38feb8c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffb92f1b-a155-411c-b466-eb443a3a0af7",
        "cursor": {
          "ref": "1c6ddfee-4aaf-4561-86d4-7d5103e04f17",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2426c72d-e6f7-4898-b443-1e7409e741f7"
        },
        "item": {
          "id": "ffb92f1b-a155-411c-b466-eb443a3a0af7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "abea02fc-78e1-4098-b2ae-f3515fb6ccad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dd85d1-943f-466e-b1b8-e876e239ad73",
        "cursor": {
          "ref": "a011f6e6-e374-4ae7-a126-d76ee419c83c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "93b6f83e-1103-4e32-a24c-d1cef725cb18"
        },
        "item": {
          "id": "59dd85d1-943f-466e-b1b8-e876e239ad73",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a731dde8-1ae3-4b74-97e6-8efdebb31d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb78b7-5a9a-4730-8305-805f16e8c896",
        "cursor": {
          "ref": "ae858637-7a4f-4a14-bd11-36ea44b9958d",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d8dcf3f5-d4f0-4d96-8000-a07bf6589dfa"
        },
        "item": {
          "id": "82fb78b7-5a9a-4730-8305-805f16e8c896",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1294ff2f-73b5-4d25-a09a-18014ba8a08d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9e3f32-e26d-4737-86f9-bbc8b55da88c",
        "cursor": {
          "ref": "4dc6e4b7-c3f5-48ed-9291-20ebdb6ee731",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b3ecbcc8-f0f7-488d-b780-5251f9a144da"
        },
        "item": {
          "id": "2b9e3f32-e26d-4737-86f9-bbc8b55da88c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9572da72-2da7-4276-b428-84514e78e82f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db04d869-26ac-4c42-a064-a4ae37bce51c",
        "cursor": {
          "ref": "12eb11a1-d302-4f2b-9664-189184b5bf5d",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "123fa605-3d27-4e6d-94ea-51d6c4b85f8c"
        },
        "item": {
          "id": "db04d869-26ac-4c42-a064-a4ae37bce51c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "18d4dab7-af19-423e-ace4-f16630abe93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951c322b-2288-4bb2-b3f6-e44cb5fda175",
        "cursor": {
          "ref": "d1ffcbaa-57f9-4ae6-a186-8181bc493f54",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "74c56f8e-26ef-4658-b74c-3214507819f1"
        },
        "item": {
          "id": "951c322b-2288-4bb2-b3f6-e44cb5fda175",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a212a172-849e-4842-b7eb-b84e442a2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b6431b-33ad-4546-a512-5f99bf292686",
        "cursor": {
          "ref": "c8afbb81-49e0-424c-b5f8-dd9cb9a7082d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3f404af2-34d8-4a76-bfef-4bd6f8c9bf46"
        },
        "item": {
          "id": "33b6431b-33ad-4546-a512-5f99bf292686",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bfb77241-fa68-4b63-83b6-2825e1caa83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f895acaa-b3aa-46b1-a51d-f4157999acfb",
        "cursor": {
          "ref": "22de360c-b873-4443-8cb7-31efb4502c14",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9197aadf-fd3e-46b0-88c1-01d6d1380177"
        },
        "item": {
          "id": "f895acaa-b3aa-46b1-a51d-f4157999acfb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "707ff162-dbe5-454b-bf12-e5f0424ae208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0fb713-6b9d-4d50-976a-a25bfc08d3ca",
        "cursor": {
          "ref": "aebed652-5624-4550-a186-c6482b167df6",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "97507050-0ba8-43cd-93b1-1f4b19193aa1"
        },
        "item": {
          "id": "8b0fb713-6b9d-4d50-976a-a25bfc08d3ca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "66593b23-6ba3-4b01-a636-38d07d4cbb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0e149-6420-4129-8088-c6d11db5cfa4",
        "cursor": {
          "ref": "054f9742-85a4-441a-8b89-a0586cff93d7",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ac97b26a-fbc3-415f-9501-42af7a1c9fbb"
        },
        "item": {
          "id": "abf0e149-6420-4129-8088-c6d11db5cfa4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ffabb168-452b-47c1-a09c-5127cb44a989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938c28e3-6648-4c5c-9e53-0551093a9231",
        "cursor": {
          "ref": "fe760c89-8175-4ea5-afe3-3d9397421516",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "5ad75f56-f079-4dce-b2a2-be992c87dda7"
        },
        "item": {
          "id": "938c28e3-6648-4c5c-9e53-0551093a9231",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5346f2c2-f4ce-4dcf-8799-b4fff2900621",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9745cd43-f535-49de-99ae-40f5c47ac154",
        "cursor": {
          "ref": "97d935f0-c4a4-4d24-b384-1d5e07bec1fb",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "59d0585c-0f7c-4f2a-b61d-7a7f3776458c"
        },
        "item": {
          "id": "9745cd43-f535-49de-99ae-40f5c47ac154",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2be94b30-4a88-47dc-bf27-6f2de542c0dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c21028-8e17-426a-a3ab-3b513fe9e604",
        "cursor": {
          "ref": "f237928a-2835-4683-b132-d437fe7a2046",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "873eb0dc-a6ea-41af-8a50-8e115dfd6b81"
        },
        "item": {
          "id": "90c21028-8e17-426a-a3ab-3b513fe9e604",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d469f11d-bc92-4f6e-a553-0e8bfea16a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "851cb93c-3b83-4c7d-823b-a38114bd5328",
        "cursor": {
          "ref": "990f2f9c-a451-4753-91c6-2db18227c1b1",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "36a514e3-8429-4e94-bed2-b3fc5cd79329"
        },
        "item": {
          "id": "851cb93c-3b83-4c7d-823b-a38114bd5328",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2d4bbe7a-48d6-4723-8fb6-742b271a5ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "922f648f-e706-468e-aaed-cda127d06266",
        "cursor": {
          "ref": "95b956c1-2630-4ddf-b937-832381be572a",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e5240bd1-c3a9-4fc2-bd64-ddf85ccffde8"
        },
        "item": {
          "id": "922f648f-e706-468e-aaed-cda127d06266",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0c2c0295-7153-4de0-9172-a23d80a1864c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "91bda23c-43a5-4ea3-af67-7adeff4c1be6",
        "cursor": {
          "ref": "b7232e32-6f2d-4c24-85db-629acb85f3a8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "495f1849-a1b4-465b-a75e-f5121351e3ed"
        },
        "item": {
          "id": "91bda23c-43a5-4ea3-af67-7adeff4c1be6",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e2d7b643-be50-4b2b-8698-097d2b257614",
          "status": "Created",
          "code": 201,
          "responseTime": 6698,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07f4c6-38da-4b81-ab6c-2ea4445f9248",
        "cursor": {
          "ref": "07ff4597-dde4-464c-9399-69604c4f24ec",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4088689f-d636-464e-a6b1-8257ac253bfa"
        },
        "item": {
          "id": "dc07f4c6-38da-4b81-ab6c-2ea4445f9248",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "783e5514-c80e-4906-b45e-2d4449f93fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "de56af4d-463c-46b7-abf0-fe7e13a81f17",
        "cursor": {
          "ref": "1a6cc345-c950-4e7a-b0f5-b04aa6a7a0d9",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "3b815b28-622c-480e-a46b-d75f8af88e6b"
        },
        "item": {
          "id": "de56af4d-463c-46b7-abf0-fe7e13a81f17",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "1ddd7502-49ac-4a0d-a447-aeab007f2ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "3d71fb37-7eb6-447b-be10-753ed0c69892",
        "cursor": {
          "ref": "56e4d9ae-1e8b-4ad9-a402-d175edd849b5",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2d5a35f1-d563-4db4-a7b8-a958f5164a6c"
        },
        "item": {
          "id": "3d71fb37-7eb6-447b-be10-753ed0c69892",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f910e73-e1d2-43c6-9eb3-0581270fb0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94f66b1-cbb3-4970-a07c-9a6b0bc329e6",
        "cursor": {
          "ref": "cf972391-a3b9-40ad-b551-a5f36657746d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c35219fd-142f-40a3-b6fc-6611cc978558"
        },
        "item": {
          "id": "a94f66b1-cbb3-4970-a07c-9a6b0bc329e6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "faa2d125-bd22-40d3-b5e7-1d6cb0110f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4033982-4d1b-4f2c-bb2d-926f9797be11",
        "cursor": {
          "ref": "55502969-0a0a-443d-a730-495d96fc5003",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2e5577ba-5bc7-41d9-adf0-60fcd38059fc"
        },
        "item": {
          "id": "a4033982-4d1b-4f2c-bb2d-926f9797be11",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "728d3096-7b09-49f6-8b3c-1bf99c555e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff21b47-395c-4c11-8e21-2163aad19e76",
        "cursor": {
          "ref": "25a656b3-3c17-45cb-8ecd-21d8bc9b3a1d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c07ce186-f6ad-4f4f-8ad8-54bbb25c812a"
        },
        "item": {
          "id": "dff21b47-395c-4c11-8e21-2163aad19e76",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fe77b92b-5306-4c9c-947c-6f8ee53d1414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9fedc2-c708-43e2-afef-87c35b818190",
        "cursor": {
          "ref": "325ddde7-85cc-40b3-9071-b1dd3e7daf02",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "159013b0-45b7-40cb-97bd-81e08da062d8"
        },
        "item": {
          "id": "de9fedc2-c708-43e2-afef-87c35b818190",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "abdd4b16-e67e-420e-9be3-0473cad5a31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a54b4-eb29-4895-ad70-982346de32b9",
        "cursor": {
          "ref": "2797a77e-30c9-4796-955b-a08465843474",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bd2b09b5-f84f-4309-8d11-080382d6834a"
        },
        "item": {
          "id": "cd9a54b4-eb29-4895-ad70-982346de32b9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7a68b31e-8fc4-4e39-9993-2f0127e7481f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd5ddb-8c95-4c96-b322-a63056b17eb8",
        "cursor": {
          "ref": "3586233d-3cc3-4745-bd1c-d2410835b08f",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6e17905f-80ba-4b74-a3fd-3b60934c0ef3"
        },
        "item": {
          "id": "45fd5ddb-8c95-4c96-b322-a63056b17eb8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "85ca36a1-d91f-4f17-b6c7-a61c14a8516c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d227cd42-4fc2-48ab-9e4f-f4cdc43cbfbb",
        "cursor": {
          "ref": "e715183a-7298-4cc9-a58d-ed4af5955b95",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "56bf2c68-8649-426d-aa93-d708e380347b"
        },
        "item": {
          "id": "d227cd42-4fc2-48ab-9e4f-f4cdc43cbfbb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "45985d4e-30b1-4791-9d78-a8bde64d7475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6126a74d-b97e-4676-9f7f-3ccbe8c10893",
        "cursor": {
          "ref": "3d4d744c-94f4-4278-9264-42ecc39c5193",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f72da547-7d3e-490a-838c-f481a466a8aa"
        },
        "item": {
          "id": "6126a74d-b97e-4676-9f7f-3ccbe8c10893",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c10d76bf-0d1a-49ca-979e-5537e0b02f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0febfa93-8705-44c9-b285-d5c702c41be4",
        "cursor": {
          "ref": "85286a19-a9ac-4117-b808-5892ec44c742",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "60d6db44-6cb6-48d2-9543-cd5bd51331cb"
        },
        "item": {
          "id": "0febfa93-8705-44c9-b285-d5c702c41be4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b598de19-c750-4525-ae01-eb0ec9db9ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c2acef-12a3-4a94-9977-b8071c86928f",
        "cursor": {
          "ref": "981a29ee-6152-4c40-9076-6c6cf022578d",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3c60d06d-2270-4aea-be8e-395e4570d5fd"
        },
        "item": {
          "id": "22c2acef-12a3-4a94-9977-b8071c86928f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1e9a3100-758d-4b97-b9ae-0c161b985e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363e32c7-7cb7-4995-93d0-624103384ffc",
        "cursor": {
          "ref": "20ab7fea-49ef-493c-a22f-a1d0f7f66323",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c29a3d38-5553-4dee-b6e7-5ada9ed31f42"
        },
        "item": {
          "id": "363e32c7-7cb7-4995-93d0-624103384ffc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8f768b51-67d3-4217-810a-ffcfc04f40cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bfe277-70a3-4494-9c43-dd2bdca545bf",
        "cursor": {
          "ref": "311f7c0c-ea1c-4233-8e85-60ebf7939dc8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "4b8261ee-8a59-4742-b334-66d00b159d4f"
        },
        "item": {
          "id": "23bfe277-70a3-4494-9c43-dd2bdca545bf",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "32805512-9849-49c6-941e-932daa289ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6125189-adef-4292-a703-a4321c1d4ed5",
        "cursor": {
          "ref": "2a76dfd6-53e3-4d4d-a8ba-81710b96aa0c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "030ab6a9-80e7-49b0-b716-564d3586531f"
        },
        "item": {
          "id": "d6125189-adef-4292-a703-a4321c1d4ed5",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ddadab8f-e0b2-41cd-a2d1-c1eeb09af1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400df024-2f01-469a-a1b0-d6fc3e7664db",
        "cursor": {
          "ref": "3959b576-e22d-4ce8-ad6f-81b787a93cb2",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e869a482-f086-4c7d-bd3f-43c5e6e49328"
        },
        "item": {
          "id": "400df024-2f01-469a-a1b0-d6fc3e7664db",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1e1cea60-2d6b-4606-9fda-3b20198a7fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1deae0-b262-4c81-8aad-b188cc81d9fa",
        "cursor": {
          "ref": "6db8fe9d-80af-4870-8d5d-0e06533ef55d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "175ceda4-d1c7-443e-80d0-60a72c9d2839"
        },
        "item": {
          "id": "1f1deae0-b262-4c81-8aad-b188cc81d9fa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9adf2a61-62b8-473b-96d0-5e3d0cda3248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b11ae-bfca-46c6-88b6-768a6f1f6884",
        "cursor": {
          "ref": "530a2c06-5457-478c-8e18-f6187ee97714",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fd79320d-fa88-418c-8d8a-d8412431b70e"
        },
        "item": {
          "id": "294b11ae-bfca-46c6-88b6-768a6f1f6884",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea1297e8-360e-42b2-a334-cc81a55cd009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a7adc0-e628-42f2-b922-f15ec4c8d323",
        "cursor": {
          "ref": "dc706243-fa27-489e-a811-2035e40d5996",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b3af4400-ec9d-4eff-82e7-93ec69bfad9a"
        },
        "item": {
          "id": "77a7adc0-e628-42f2-b922-f15ec4c8d323",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cb13645c-3779-4ac6-b35b-6399bbe45ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160f57bc-ce25-4598-bb79-ac85eb72d531",
        "cursor": {
          "ref": "df660b52-7812-4332-bb7f-601ab5232582",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3acac0c4-a447-4575-acd5-e8311fe910f1"
        },
        "item": {
          "id": "160f57bc-ce25-4598-bb79-ac85eb72d531",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c824576d-9a41-4b20-abd2-96d7115b2de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc3cdd9-86de-44ff-8ff1-bf259f4b482f",
        "cursor": {
          "ref": "034811eb-3b3e-4666-9e67-9ddad7d83260",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3e7072e1-f49c-4048-8aef-b53d52caf501"
        },
        "item": {
          "id": "2fc3cdd9-86de-44ff-8ff1-bf259f4b482f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e958aca1-eb95-48e3-b562-428ebf01871c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9b8feb-bc14-46fc-9464-79129153d5f0",
        "cursor": {
          "ref": "b4954a04-0ad6-41ea-b221-ea615b97dd77",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5a5f8bf1-ec91-4a54-92ec-95c2ffbb714d"
        },
        "item": {
          "id": "bc9b8feb-bc14-46fc-9464-79129153d5f0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "05749bef-4429-4e63-ad2c-b83296ba733b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7953cfe4-fa07-4c9d-8e78-178222ce6b15",
        "cursor": {
          "ref": "3291d4a2-05b5-4057-940c-c74e0fa6412e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2639ea0f-7386-4e32-badd-8d90d8134278"
        },
        "item": {
          "id": "7953cfe4-fa07-4c9d-8e78-178222ce6b15",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "08457793-ba60-4099-a733-3b079453e39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e63d5b0-8cad-4569-8847-74874bc11f83",
        "cursor": {
          "ref": "23056a2d-5fee-4ee3-9938-a1a0d5d10416",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "9e1ae148-f0cd-41fd-b202-bbb79f98a0be"
        },
        "item": {
          "id": "0e63d5b0-8cad-4569-8847-74874bc11f83",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5ef027b-b8a9-4565-a492-75595f77ecab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c278361a-5f51-4ed8-a8d7-34e314ff1c9a",
        "cursor": {
          "ref": "17c97346-f896-4da2-93e1-1a76bda256d9",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d97317a5-45e2-4dcc-9c68-2f269e45a641"
        },
        "item": {
          "id": "c278361a-5f51-4ed8-a8d7-34e314ff1c9a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d068d8e-9abe-47c3-9449-7ee885ef2b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca54875-dcf2-452a-8edf-2923816d2902",
        "cursor": {
          "ref": "6f4aada9-37df-4c91-a1af-72903a81204f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e193d462-8cd9-46f3-a59c-9fa4ad6c21a5"
        },
        "item": {
          "id": "eca54875-dcf2-452a-8edf-2923816d2902",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c172316e-8187-48bd-a907-54db822f0df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880e7efb-a072-4c94-83ff-248b8c9a8659",
        "cursor": {
          "ref": "cb27a2a4-3e76-4915-a86d-0eaacfe4cb40",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5f1a9d60-e577-48c2-89ac-8d2063fbd199"
        },
        "item": {
          "id": "880e7efb-a072-4c94-83ff-248b8c9a8659",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8ed90e07-97c8-4278-8154-376c37a00ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00f4158-f8a5-4b98-8673-77ab3979ce4f",
        "cursor": {
          "ref": "6b43c9d8-ce3a-4468-b996-65a82c0966da",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1459b6b3-7d91-4627-9f3c-0eabb333fa32"
        },
        "item": {
          "id": "e00f4158-f8a5-4b98-8673-77ab3979ce4f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "056f473d-afe0-4ecc-a1d7-7f8fa6e5ed36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e1ec97-9a6e-4b19-a909-6680fc9c35b4",
        "cursor": {
          "ref": "bb3cc96d-c686-4e30-9244-89bfd186ab9f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d4746049-9d6a-46a8-98f9-a0ba39ed7fb6"
        },
        "item": {
          "id": "46e1ec97-9a6e-4b19-a909-6680fc9c35b4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6f4d92c5-98c1-4a01-97e8-ea9dd2fc202e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e8700-a644-457d-b3bc-42d07093789f",
        "cursor": {
          "ref": "2f9b59ff-8c81-4312-847c-e791cfe61832",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "8da6bec3-f808-49a0-b8d3-efae8f193f09"
        },
        "item": {
          "id": "479e8700-a644-457d-b3bc-42d07093789f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "715ab761-851a-4b45-bf66-38a60e6dfa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11febf-da11-49d7-b05d-9b5422fd2d27",
        "cursor": {
          "ref": "6dde4d8d-251b-483d-967c-b85a2a977079",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "713e2600-e1fe-4992-a523-f18f65483d41"
        },
        "item": {
          "id": "db11febf-da11-49d7-b05d-9b5422fd2d27",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3913cc0d-dfd2-4a1d-bddf-a155d8ba0214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c8b311-a892-4874-b3d1-acd7cb2185f3",
        "cursor": {
          "ref": "25b15981-d66b-4e9a-ac64-c7a02ff63ecd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "562e70f1-cf37-4cdf-ab00-7a72d59aea7a"
        },
        "item": {
          "id": "d8c8b311-a892-4874-b3d1-acd7cb2185f3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c52b8cef-95ba-4184-b1f8-9f5055705a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc54b30-1e1b-4867-a9b6-2a00d2a84d0a",
        "cursor": {
          "ref": "a96ff9be-93f3-402a-8f0a-9b7942d05f73",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "39580f0b-b52e-45c8-896d-767301d045a8"
        },
        "item": {
          "id": "8dc54b30-1e1b-4867-a9b6-2a00d2a84d0a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9c1685ef-a2b9-4783-8497-2fece1b710f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4c13b-5997-4661-80a0-2a88197e1938",
        "cursor": {
          "ref": "cfa501df-71e3-44cf-a950-fa3e82e9631f",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "759deec6-5d48-41be-9f60-527501daf93a"
        },
        "item": {
          "id": "86e4c13b-5997-4661-80a0-2a88197e1938",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c58b731c-d722-4f10-928d-a1800112f4e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdcc5ea-0110-4852-b523-d806640529ca",
        "cursor": {
          "ref": "4ad66fe5-cb61-4df8-947f-c3487652c43f",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1a355399-fa65-4b67-8e17-ee70203ced33"
        },
        "item": {
          "id": "0fdcc5ea-0110-4852-b523-d806640529ca",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bdc5c58a-0db8-4764-86a4-fe1dd0873d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "434c64c3-ccad-41b8-ae6e-2e59e99c6838",
        "cursor": {
          "ref": "b3e3fa81-3ab0-433c-8e25-b0a944de72e0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2d9b79f9-18e6-4fa9-b4bf-a37f6e8339d8"
        },
        "item": {
          "id": "434c64c3-ccad-41b8-ae6e-2e59e99c6838",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "76308e91-1807-498b-b0e6-c4c5f3208d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e81617-e82b-49f7-a332-29d8d7f654a8",
        "cursor": {
          "ref": "b98539e9-fd41-4eda-828e-7ccf5e0e88ce",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0058d837-5a37-4771-a848-3cab4e4e8408"
        },
        "item": {
          "id": "c5e81617-e82b-49f7-a332-29d8d7f654a8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5f358924-61e2-4480-8c86-d18ac313a1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e98452-3843-48df-b6db-4bf0f7ca6fe6",
        "cursor": {
          "ref": "f6c061ae-facd-4be1-8d6d-4e4ae1a4938e",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c0427759-d440-4d99-9246-1c616e6d6695"
        },
        "item": {
          "id": "05e98452-3843-48df-b6db-4bf0f7ca6fe6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c1a18691-b757-408d-9eee-a5fdae307e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6c5e59-0e0b-429a-a266-c7dffcf79ba3",
        "cursor": {
          "ref": "7e68b379-6ba8-4c30-b2dc-b190d6dc2ff1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "01ffcc92-dd9d-4f42-9df2-33228e8c03f0"
        },
        "item": {
          "id": "ad6c5e59-0e0b-429a-a266-c7dffcf79ba3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "361e1888-f118-4312-bc47-58140b4cd914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10b9c7d-c5b0-4493-8f72-4be08108d02d",
        "cursor": {
          "ref": "f95727df-9758-4ee4-ab8e-3f55e5a34a57",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "fce9ec19-4052-48c4-a6ce-ce99fad7533c"
        },
        "item": {
          "id": "d10b9c7d-c5b0-4493-8f72-4be08108d02d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "baf03c76-0efc-4c3a-b83f-41798208ae1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2921ebc3-954d-41a1-8873-18320b2ec09d",
        "cursor": {
          "ref": "19318804-43ea-4fa3-a506-40d50ebeb113",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "29f5b1b3-f71c-4d42-95d8-9bae9cfbff18"
        },
        "item": {
          "id": "2921ebc3-954d-41a1-8873-18320b2ec09d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3c82df79-9102-4927-a9ea-fb81110d0bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d103aff7-029d-4608-814e-399c3046e527",
        "cursor": {
          "ref": "f0fbde27-b2c1-47a7-8779-4690aa786396",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "58da8b53-a4dd-4208-8b07-c61276b9759a"
        },
        "item": {
          "id": "d103aff7-029d-4608-814e-399c3046e527",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f912facc-8206-4f18-8b2a-62f1d17cd76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7d98c2-8a12-4430-bdc5-62c1e1272003",
        "cursor": {
          "ref": "2728cc92-1cd3-480c-8a47-49445361b58e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0bd96a89-0fad-410c-8076-faa596826d5c"
        },
        "item": {
          "id": "1f7d98c2-8a12-4430-bdc5-62c1e1272003",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d7ebea31-b892-4069-b3f8-aab6aec2ad33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d778993b-3e97-4e13-a354-a125e20ff3d0",
        "cursor": {
          "ref": "5bb664b2-1558-431f-a4ec-d65f4572f89e",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "79021916-c25e-4d07-9a1d-0b156662157d"
        },
        "item": {
          "id": "d778993b-3e97-4e13-a354-a125e20ff3d0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3d5bc19c-ffad-4882-8d11-6edd64c6e8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cec3fd0-373c-49c8-a39f-974d0ac2e417",
        "cursor": {
          "ref": "7d9b79dc-f561-4bf4-980d-216fa616c372",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e018323c-3534-4b6a-a3e1-f1661f2fd16b"
        },
        "item": {
          "id": "8cec3fd0-373c-49c8-a39f-974d0ac2e417",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8df06a75-f519-4923-a21e-754d473bd935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e00288a-9388-4c10-9f40-7c72c9c165e4",
        "cursor": {
          "ref": "43b7ea9c-99b4-4ccd-9239-a0f9c3b226fa",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "2cb5741c-9221-47c6-958d-83bcd8eee5ff"
        },
        "item": {
          "id": "2e00288a-9388-4c10-9f40-7c72c9c165e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cca15254-901c-493a-8f3f-36dcf33df0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5649554a-b8d6-4720-a832-8b9852e671c0",
        "cursor": {
          "ref": "dbd4f034-6591-4e9a-bdaf-06c179decc60",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da2fca6d-b205-4d83-a192-8853d7527b9f"
        },
        "item": {
          "id": "5649554a-b8d6-4720-a832-8b9852e671c0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1f0695f-d897-4e9f-bf94-35c0da1eaa37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df3283e-f717-4550-86f5-dcb8f0206677",
        "cursor": {
          "ref": "b2c1ac1e-c741-440c-afe4-dd74a22cdfd0",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7f9209df-e985-41d7-88e0-685411b78b0b"
        },
        "item": {
          "id": "7df3283e-f717-4550-86f5-dcb8f0206677",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "36a48093-f289-43c4-92d4-8dc8f962039e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d531b76c-2e0a-4b4e-9828-caf2e706ca6f",
        "cursor": {
          "ref": "0061724f-eb45-415f-9c7b-26b84258270a",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5a689fa5-ba3e-42ed-a318-777509e165e8"
        },
        "item": {
          "id": "d531b76c-2e0a-4b4e-9828-caf2e706ca6f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4280969-052f-4c06-9dd2-730e9508b76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050eb54e-172a-4b2b-96a1-483b90bb18ff",
        "cursor": {
          "ref": "aed2040e-edc3-4e72-b3f8-04309bf91850",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "980c0abb-4c5e-4865-b312-c27339e35720"
        },
        "item": {
          "id": "050eb54e-172a-4b2b-96a1-483b90bb18ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ba249f36-0d1b-4e47-8f08-615310294601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940896c4-f36c-4e66-b464-d72655e3184e",
        "cursor": {
          "ref": "fc3d36f0-bc1b-45fb-8978-f08008c8f5a4",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5b9d21ed-a42d-4c18-be6d-c894cc651d79"
        },
        "item": {
          "id": "940896c4-f36c-4e66-b464-d72655e3184e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2d94a547-f3bc-4d8e-9ed3-dfd66d416f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30c021d-8703-4307-9f87-892923bff2a1",
        "cursor": {
          "ref": "dc415552-b130-4021-9a6f-06b18da1caca",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "97e54c06-b9b2-4eec-a8bb-529d029bf1ca"
        },
        "item": {
          "id": "b30c021d-8703-4307-9f87-892923bff2a1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bf0af5d2-8f3c-41e0-ad29-dbcfaf3dad2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113b492a-49d6-4092-af35-49baa9c864ec",
        "cursor": {
          "ref": "ebbad3a9-aebe-48ee-a971-46a05cac353b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e0d69970-e388-4592-b503-d933d8fd94d2"
        },
        "item": {
          "id": "113b492a-49d6-4092-af35-49baa9c864ec",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "231d6bd0-4182-4331-b097-98a7e4e28f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5df67d-e4a2-44b1-b595-c1c6cb3494a6",
        "cursor": {
          "ref": "2bc34015-ca35-4f51-b952-322d1f5e5bc1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "56b0f128-e6b1-4349-9369-71cf2b32a84a"
        },
        "item": {
          "id": "ba5df67d-e4a2-44b1-b595-c1c6cb3494a6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a54a8e71-089d-45fd-a96b-8de4f7dbe107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1fc330c-232d-4f55-9a70-5a0d6fba7573",
        "cursor": {
          "ref": "fe7f84ab-ace6-4800-84b8-9d94178928f6",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "48a9d9e6-db19-4bf4-9175-c47adb38d4c2"
        },
        "item": {
          "id": "f1fc330c-232d-4f55-9a70-5a0d6fba7573",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d0395035-b376-413a-95bd-ad0b62d5f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824125c6-f8bb-46e9-91c2-b477478f5c6a",
        "cursor": {
          "ref": "1ad06c32-0ec4-4c29-8312-7124689bbca6",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "98b4bc9d-2968-475a-ac86-49c89000f69e"
        },
        "item": {
          "id": "824125c6-f8bb-46e9-91c2-b477478f5c6a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "95fadf03-d86e-4aaf-8888-8c3cbc70cb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173c38f2-ecc5-4926-a131-ffb7a0f929dc",
        "cursor": {
          "ref": "142dc24b-fabb-4ece-bc0a-59aa719f08e1",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "eec67ae9-1101-4ebe-85df-3dfed64f4eef"
        },
        "item": {
          "id": "173c38f2-ecc5-4926-a131-ffb7a0f929dc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "66aa9c1d-0004-4de3-b53b-f5ab91284bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c264d2-ca8d-408b-bcc1-86390cd0ac7e",
        "cursor": {
          "ref": "5c69e6b2-4b2a-4546-92cf-f81aba790452",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4718ced6-9a0a-4974-ad85-fcaa1e952257"
        },
        "item": {
          "id": "d4c264d2-ca8d-408b-bcc1-86390cd0ac7e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "04f6d691-3345-4c4d-9c6f-2f7a832747b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd8895b-834a-4b7b-bdb2-d4a1970360ba",
        "cursor": {
          "ref": "2177fd34-1dd3-4331-99bc-ac7af2399b98",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a4bdd8a0-d580-443a-a97b-de2b25f2f0fe"
        },
        "item": {
          "id": "5cd8895b-834a-4b7b-bdb2-d4a1970360ba",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "89997bb2-ff44-42f8-ae2f-3b31a6d2adb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e77aa8-4ba2-4973-be26-118253794f71",
        "cursor": {
          "ref": "f3b712ca-474d-497c-9414-1bdedb66a739",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2faf7ef7-bf4f-4c74-b964-6bbcfa0c17ef"
        },
        "item": {
          "id": "f1e77aa8-4ba2-4973-be26-118253794f71",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ce6a7211-563b-4e2a-abb4-0e9ecd0ebfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7db4f12-faed-4887-acb4-a2d9a826fdfa",
        "cursor": {
          "ref": "63f0e46c-8075-41a0-9901-935f2e9cecd5",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b379b7d5-453c-4ce1-a141-51c44a7fcf5b"
        },
        "item": {
          "id": "c7db4f12-faed-4887-acb4-a2d9a826fdfa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d9309a24-d2cf-450b-ac6d-a1af3c752c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2540a3c-9a1c-48cd-b4cd-12780e900823",
        "cursor": {
          "ref": "cae2a46b-7268-43b1-b4a9-1c29a97dc2d8",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "082c48f3-e1dc-4ea7-bec0-f0ec719b7f40"
        },
        "item": {
          "id": "c2540a3c-9a1c-48cd-b4cd-12780e900823",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2be23edb-1408-433c-9483-2e6e768a076a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56015861-6cba-40be-9aaf-556594cf7e9f",
        "cursor": {
          "ref": "82c12e13-4ff0-440f-89bd-f0b3c02d269b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e4b3c7d5-fc0b-4ab5-aae2-e8b48a350c6d"
        },
        "item": {
          "id": "56015861-6cba-40be-9aaf-556594cf7e9f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6273d9ef-2133-4776-bada-0d3860ceb00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e82d19-b0ca-45d3-9755-cbbdbe9358ae",
        "cursor": {
          "ref": "6d826e55-4f70-43c2-8457-358ae6993dfb",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6990abf5-bafc-4cf3-860b-955300b4b168"
        },
        "item": {
          "id": "72e82d19-b0ca-45d3-9755-cbbdbe9358ae",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0fdb18be-b424-4929-b17d-ce33e127f91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3adfdab-4243-4eb8-b40b-6852017deed6",
        "cursor": {
          "ref": "3304817f-a52a-44d2-bbf8-e5c6ca375f77",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c1dda2d9-e606-4ea5-a578-eced584b9273"
        },
        "item": {
          "id": "d3adfdab-4243-4eb8-b40b-6852017deed6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c01fd878-0fe9-467e-a873-93e79325b461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4eb8944-e759-4fb7-95a8-66c22e407b1b",
        "cursor": {
          "ref": "89dd72c2-8dce-4833-9de1-fc1f6c077aa6",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4944ec6a-7be6-48de-b2cc-e6673c9ae993"
        },
        "item": {
          "id": "c4eb8944-e759-4fb7-95a8-66c22e407b1b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "67429a8f-635b-42e7-8c95-da2d4ae8557b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab20b5c-103e-4cbf-ba79-b9b9032090ea",
        "cursor": {
          "ref": "a81aa306-f152-461a-beba-eff40c2cd566",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5790a4b3-60b8-4617-852e-e9c0274099eb"
        },
        "item": {
          "id": "2ab20b5c-103e-4cbf-ba79-b9b9032090ea",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7122457f-16bf-407c-8062-1efd5a01c766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c556f4cc-0e27-41ed-a243-129c8f7d57d6",
        "cursor": {
          "ref": "6ff5be1e-ff8b-44d6-a833-6bc2f3a00129",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "548eb369-6fba-44f6-b0b6-1ab490c22efe"
        },
        "item": {
          "id": "c556f4cc-0e27-41ed-a243-129c8f7d57d6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0cd4db93-8696-48a3-8e5a-b6029e121899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b1111d-abca-41d6-9681-ebdb9fde633a",
        "cursor": {
          "ref": "657af174-5522-45e9-abc5-62833407861c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8e2452e1-40c6-4257-bde0-1d0c31be6e20"
        },
        "item": {
          "id": "82b1111d-abca-41d6-9681-ebdb9fde633a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cef045b2-a204-4e32-93e4-e4fdd4870ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a9747c-1977-42d2-a80e-ab1d0fbbd75b",
        "cursor": {
          "ref": "b3940590-59cc-4eb8-b9a9-44b036c64a87",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "73ca0b47-89b1-4ed3-9fb7-021daf7ab890"
        },
        "item": {
          "id": "d4a9747c-1977-42d2-a80e-ab1d0fbbd75b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "54c5bbac-b5b1-40b0-9a95-d6a59eb31b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914f8c8d-16b3-4b0e-a0cf-61acfd7831e8",
        "cursor": {
          "ref": "a2aa00b8-419a-457a-bdd6-15fe706f7b67",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0ff40a5e-ace4-4245-99ec-85209bcb744b"
        },
        "item": {
          "id": "914f8c8d-16b3-4b0e-a0cf-61acfd7831e8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6d661a41-387a-48d4-a383-62a828d3a456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34141f5b-7013-465c-8270-fd82ee1accd0",
        "cursor": {
          "ref": "df49b7f5-4e77-4862-ab83-b5a7fd3c1e37",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1a8c4107-d7de-4493-ac1d-34e9da8047ff"
        },
        "item": {
          "id": "34141f5b-7013-465c-8270-fd82ee1accd0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a707a7d1-fe03-400d-8c34-f69ccff5667b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9232abc-3754-4332-8569-e939c2ab42f4",
        "cursor": {
          "ref": "2bc14680-d93c-4601-9fcc-d0ab691eb215",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a40d083f-1f70-460a-bf21-3ebcfca0e1da"
        },
        "item": {
          "id": "a9232abc-3754-4332-8569-e939c2ab42f4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a73cf7bb-d1dc-47c5-ab8e-53779f3e8806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421f5eab-7d79-48e1-94f7-802f181ec94b",
        "cursor": {
          "ref": "77321a72-20d6-49a9-95e5-7ecf5e78bc31",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "91e703d6-8551-490e-bf29-8d999a8c1adb"
        },
        "item": {
          "id": "421f5eab-7d79-48e1-94f7-802f181ec94b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a7021a4-a354-437d-81c9-ef052bc993f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639e8b64-e002-4a71-afa1-16e4030b3133",
        "cursor": {
          "ref": "460025e5-f379-49c0-a5db-6100c28606c8",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "33f1da07-0f5c-4430-a3ff-f32cb53f8d79"
        },
        "item": {
          "id": "639e8b64-e002-4a71-afa1-16e4030b3133",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a734e2c-e1c8-437f-924e-04512ddc77c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123b19f7-c479-4b09-aa8a-220c8db84b80",
        "cursor": {
          "ref": "fe21a600-88c8-4326-88ee-9d0e5128b712",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "41324dd3-42c7-45c1-97ec-4a76d1f0ac56"
        },
        "item": {
          "id": "123b19f7-c479-4b09-aa8a-220c8db84b80",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "412c62b2-3ced-4a42-9b93-289da141bf52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa741c2-53a1-4dc6-91e7-a116945c8641",
        "cursor": {
          "ref": "9871c320-9f8a-4694-a137-1c5009e06208",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9a70a063-f289-455d-b830-ec981214c7f5"
        },
        "item": {
          "id": "faa741c2-53a1-4dc6-91e7-a116945c8641",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "963c99e8-0cdf-4aac-af21-a2d485b7be8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0eebb6-2f2c-4ced-989b-442c7ae1b579",
        "cursor": {
          "ref": "dbea5dfb-02b9-4fa8-95eb-e6f6be4b696b",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b5ec1711-2595-4fcf-bb17-d8e4a9736ca6"
        },
        "item": {
          "id": "ff0eebb6-2f2c-4ced-989b-442c7ae1b579",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c84a3b6e-1392-4e7e-9c3d-07ef567c0ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2692282a-25b0-42c9-8021-a53f0f86b061",
        "cursor": {
          "ref": "ca151bc9-7c65-4f07-ba93-9367566bc93f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6771bb04-1472-4157-a72d-2e2ff9525380"
        },
        "item": {
          "id": "2692282a-25b0-42c9-8021-a53f0f86b061",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e8eb99ac-79c1-4aa6-b3ee-d04c36f93449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0cba5c3-b697-42a8-bc65-16b64a7f1aa5",
        "cursor": {
          "ref": "a2ab3cc6-0eae-44ec-8ec5-560f75e3d0ae",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4e861f96-15a2-47bc-b852-0c861be39e9b"
        },
        "item": {
          "id": "a0cba5c3-b697-42a8-bc65-16b64a7f1aa5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5a8a38ad-30aa-42ad-b148-0301492802a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11261d87-4084-4a53-9327-7de459021c51",
        "cursor": {
          "ref": "0cc44747-c06d-42d0-9713-6cee796c0310",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2898b70-7fb4-4f23-bd64-d11e13f0a897"
        },
        "item": {
          "id": "11261d87-4084-4a53-9327-7de459021c51",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5461692e-e87a-4053-b642-7a683020f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56f371d-e754-42e9-9ddf-bdefc8586fd0",
        "cursor": {
          "ref": "3c123c7c-ab01-472d-9a91-9ac6bffb9da2",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1dd227f7-4bc7-42e7-bf5b-6fcb8edf13d5"
        },
        "item": {
          "id": "e56f371d-e754-42e9-9ddf-bdefc8586fd0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "54990f26-e7b3-48d9-b2b5-92a2aa8dbd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ba5146-5b3d-4770-9877-017ad1de3996",
        "cursor": {
          "ref": "8d463f62-0b28-4476-892a-fbcfb130fb91",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2212fd67-b2fb-42f5-be85-9a7784ae21dc"
        },
        "item": {
          "id": "20ba5146-5b3d-4770-9877-017ad1de3996",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ea8b647e-dd90-4186-9e7c-8ad8ea85e35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d72fc8-6015-41bd-ae80-a4a13e6df6ef",
        "cursor": {
          "ref": "4db46d44-74c3-4771-b0a4-79a5da67b9f9",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1e8a734d-696c-4472-83f6-22151a56c7f8"
        },
        "item": {
          "id": "d1d72fc8-6015-41bd-ae80-a4a13e6df6ef",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "053e6871-cd1b-4386-a598-8fea3eb6db91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4625fe0-14ad-491f-82cd-0e6dcf5d7125",
        "cursor": {
          "ref": "821b574c-bdf2-45b6-8f29-eb91c16e1f4a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "04c3f644-7469-48d3-8b07-51b312f26abd"
        },
        "item": {
          "id": "b4625fe0-14ad-491f-82cd-0e6dcf5d7125",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0bd1153e-0f7b-4c8d-ac27-410d15b10ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e793c924-9bd0-4792-9430-066af9f1c499",
        "cursor": {
          "ref": "972f100e-2d31-46d7-9d2b-cc39f1dec0b7",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "532da12f-c8e9-42e3-98dd-fe28333f1139"
        },
        "item": {
          "id": "e793c924-9bd0-4792-9430-066af9f1c499",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1b5aadcb-953c-461e-a086-549d8f5c9bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67698ad3-7322-4c03-b23b-da353ed09b93",
        "cursor": {
          "ref": "f99bf03e-56cc-401e-9cab-1c9191367db5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "087cdc02-8e4b-40d9-99e5-55e662df66bc"
        },
        "item": {
          "id": "67698ad3-7322-4c03-b23b-da353ed09b93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c666a87d-aa54-48cd-9a3a-65f479b7edb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e688110-bff6-4b44-b2a9-c7d47bd3527c",
        "cursor": {
          "ref": "a4a85f04-358a-4c17-a347-356c3faef3b3",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f3d0403b-f016-43d1-87cd-a4a402476319"
        },
        "item": {
          "id": "7e688110-bff6-4b44-b2a9-c7d47bd3527c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "27017e76-1c9a-4373-a341-27fe60ffd7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56485fa9-eff1-4152-a539-56c626090f3b",
        "cursor": {
          "ref": "b5d348b4-81da-4529-b7b0-d76e37356715",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8e742f20-6285-42b3-9482-0670d9033f77"
        },
        "item": {
          "id": "56485fa9-eff1-4152-a539-56c626090f3b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ce0d22f3-1911-49c2-8155-8b5c722afb93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79491689-2487-4b5b-9057-62c82265b7f5",
        "cursor": {
          "ref": "99170fc6-3bc6-4730-9b56-a811f449fa11",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "05cca21b-22ac-4fc9-9949-133538cf4dc1"
        },
        "item": {
          "id": "79491689-2487-4b5b-9057-62c82265b7f5",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f04ff485-0dd6-479a-b07e-bd0dad10f888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a15e12e-0962-4bea-a45d-28be9d3a0299",
        "cursor": {
          "ref": "204e67ef-5e50-4f53-a05a-806b91758da0",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a7bb4ce3-5608-42cb-9d8c-f246b5020671"
        },
        "item": {
          "id": "9a15e12e-0962-4bea-a45d-28be9d3a0299",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5a9d8c9b-97c8-4a62-a079-8353735c5786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df73cf7-2ce4-4866-a914-826ec200209a",
        "cursor": {
          "ref": "4f107c94-3b72-4423-ba00-420d8b1236d9",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6aa8460e-fd44-41ee-931d-0684f994ed88"
        },
        "item": {
          "id": "9df73cf7-2ce4-4866-a914-826ec200209a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "438614cd-6186-4239-8bb6-25298517c3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906bf878-e0aa-4ed7-b670-2e2d29a4e246",
        "cursor": {
          "ref": "7eaa8c7a-8600-4a43-8aea-8b137a0b72a7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5eaa20a9-dfd4-40eb-ba79-907fa0584bbf"
        },
        "item": {
          "id": "906bf878-e0aa-4ed7-b670-2e2d29a4e246",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "fc8a4e67-cbc2-4301-8cf4-eaedbc3bb689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd8c429a-6ab1-4f1d-8c4b-19204eb8587c",
        "cursor": {
          "ref": "c18d0e5e-b8ab-4aed-8bf5-557928d86e2c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4ea5d621-79ea-4ea1-a0d2-0b526ebe883e"
        },
        "item": {
          "id": "cd8c429a-6ab1-4f1d-8c4b-19204eb8587c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "389f3184-5be7-40b3-b5bc-31b9965d9809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b271f2-4a97-4cff-9bdf-a6f3bd852672",
        "cursor": {
          "ref": "81b3f35b-d924-4928-a4a8-b654dbb7fc90",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "101fc369-911e-47ac-bc08-7b0f36c597b4"
        },
        "item": {
          "id": "57b271f2-4a97-4cff-9bdf-a6f3bd852672",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6b0cb262-63b9-4eff-bacd-d12b64aaf63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb7eae7-2d0a-41bf-aefe-211f4a10af59",
        "cursor": {
          "ref": "dca0c55d-235b-44b3-bea6-4321df388ade",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "38d8957c-29fb-49ee-8e0a-ad001db35b65"
        },
        "item": {
          "id": "afb7eae7-2d0a-41bf-aefe-211f4a10af59",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "27a45b29-4617-4d30-b138-6d34aa031628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca4c24f-7a74-4c0a-9479-bed51b7cb0d7",
        "cursor": {
          "ref": "664b143a-fc0e-48b1-ad8c-10d9b2fbb99f",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bb7307d0-da4b-4fc5-8618-d72a1d56dcae"
        },
        "item": {
          "id": "fca4c24f-7a74-4c0a-9479-bed51b7cb0d7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8b74bc40-901f-492a-978d-a9e6baf27f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6d5a36-1d7a-4446-a143-020364969d69",
        "cursor": {
          "ref": "e87df6c3-38d6-4035-8346-daf66f9531d5",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "93806161-ef7b-428c-8e8b-6085c50860e6"
        },
        "item": {
          "id": "7c6d5a36-1d7a-4446-a143-020364969d69",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "58f61f11-7c9a-47f2-8b37-9b88e3887b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43f558f-3b0f-4925-80d7-035bae3b6bd9",
        "cursor": {
          "ref": "25a12b93-7a5b-4ee5-8d11-92a87fd50311",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e00c7807-cdfc-43e8-ab5d-863b24f1925b"
        },
        "item": {
          "id": "f43f558f-3b0f-4925-80d7-035bae3b6bd9",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9ac39e92-52f3-4057-9e4f-293ba5f0acea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b77c4b-f44f-4ec9-a724-28f86e54e930",
        "cursor": {
          "ref": "14dc525d-7997-4f53-979d-8ab5f1ba5fad",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "269a5fdb-deb4-4f78-b282-738f599dc028"
        },
        "item": {
          "id": "d7b77c4b-f44f-4ec9-a724-28f86e54e930",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a14b687-240c-4f80-8f70-929a00368a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb1a5dc-31ae-4950-8915-55c1ddc33309",
        "cursor": {
          "ref": "eb9f48f4-2e49-4322-8ff0-0b380f85cd05",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cce56554-dd24-44e1-b6e8-6845f33392d9"
        },
        "item": {
          "id": "4eb1a5dc-31ae-4950-8915-55c1ddc33309",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "36f6c458-e521-404f-95aa-9545bc5cef7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01bbbfd-5762-43aa-8433-e99697f1c844",
        "cursor": {
          "ref": "65ce748e-e18f-4b7f-928d-7e5d0cbdd1dd",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4e9bc574-1a6b-44c8-ab1d-4c793470e24c"
        },
        "item": {
          "id": "b01bbbfd-5762-43aa-8433-e99697f1c844",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "02878f72-ae66-401f-9aa2-0c1f7d12f178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db33339-d7dd-432e-b5d3-6b3bc4480b81",
        "cursor": {
          "ref": "7ed12b88-9aa5-4d31-8452-e3ef650c1e82",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "22fce07a-681c-4db1-b9b8-d8a1e6c2e214"
        },
        "item": {
          "id": "0db33339-d7dd-432e-b5d3-6b3bc4480b81",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8272d690-6250-49de-8085-397f6066775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f597321b-741c-48f7-ba1b-1afbbc91b5cc",
        "cursor": {
          "ref": "7b09206a-d805-42f2-a4da-9cc6e2e6614e",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cbe0b3b8-409c-4895-95d1-d98c1fbc3488"
        },
        "item": {
          "id": "f597321b-741c-48f7-ba1b-1afbbc91b5cc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "67066d29-3479-428d-ac1f-799f80e372ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c03f662-1bfe-44e0-880a-46322ba4eff9",
        "cursor": {
          "ref": "c8be623c-abcb-4cbd-ab56-a0681a80bcaa",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "501032d1-60e8-41d3-bcf6-ace4c40013ed"
        },
        "item": {
          "id": "9c03f662-1bfe-44e0-880a-46322ba4eff9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0cec10fc-2097-40c3-9bbb-bacb49f1ea0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9d1591-e730-432b-906b-c7d22ae186ca",
        "cursor": {
          "ref": "96dc9e1d-06dd-4182-983d-19d2e970e8c9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "55d9e02c-c1bd-4e8d-8a1c-087bdbd78e11"
        },
        "item": {
          "id": "3e9d1591-e730-432b-906b-c7d22ae186ca",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "604cce1b-49f2-410b-aaf4-aa288287bfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0490b81-e3df-45df-bfbd-904b86a0f66b",
        "cursor": {
          "ref": "cf7b330b-6294-4799-92bd-bbade6d8b78a",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c8ac5929-0e67-49b8-a25c-8a19976487ae"
        },
        "item": {
          "id": "c0490b81-e3df-45df-bfbd-904b86a0f66b",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ae691a32-cbe6-4ccd-82dd-560d5a5e61bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b2650-dd9d-4d23-99a6-0beb16416c3a",
        "cursor": {
          "ref": "01145700-6dbb-491b-ad1d-e648e36a07dd",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cfc25404-22ca-49d8-a80c-78c06d73f511"
        },
        "item": {
          "id": "9d0b2650-dd9d-4d23-99a6-0beb16416c3a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9bd476b5-84ee-42f1-8102-39f51c135cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26adfcc7-ccd0-4805-afd3-5998dd46cb34",
        "cursor": {
          "ref": "68f18492-be2f-4dd8-9060-208ae6641565",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "04813b06-c4f4-4fcd-b24e-be5b498c23fa"
        },
        "item": {
          "id": "26adfcc7-ccd0-4805-afd3-5998dd46cb34",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27d54184-00f6-43b7-b0f1-7f44e739aa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440b8365-66fb-441d-b888-bec07b4cb830",
        "cursor": {
          "ref": "633af7a2-9337-436b-b065-d142c5fb962d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8fe78073-df61-4add-a8e3-17a30fa31b88"
        },
        "item": {
          "id": "440b8365-66fb-441d-b888-bec07b4cb830",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8b7aa405-80c8-4151-8ec8-6af830f52516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917fdb9f-afb6-4e48-a21f-03de44a62ef5",
        "cursor": {
          "ref": "94267b26-3e19-41bc-aeb9-1e1a5e7475b6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f306ced1-16e9-4d13-979b-59443e58d20b"
        },
        "item": {
          "id": "917fdb9f-afb6-4e48-a21f-03de44a62ef5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "558e38b8-0abf-4e47-bd82-2004dc101ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72df8dd7-961b-4ef2-b145-988055c59de2",
        "cursor": {
          "ref": "e1a908fe-09ae-481e-921e-83ba650740b3",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4ed4882e-1eeb-4782-8868-afb1632054f8"
        },
        "item": {
          "id": "72df8dd7-961b-4ef2-b145-988055c59de2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2d559945-b15a-45c6-b69e-084465fac446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0900790-e4b4-44a6-a858-206a74b5534c",
        "cursor": {
          "ref": "4537fbe9-b2d6-4ba0-8d8f-cb2de19fb3ae",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ee57d7b9-4b2d-4a3f-8cd1-5ffecd9362ed"
        },
        "item": {
          "id": "e0900790-e4b4-44a6-a858-206a74b5534c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3d96fb79-7387-47bb-bf69-55dc1a0ca9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6112b26a-679c-43c0-8656-5ff574f74f46",
        "cursor": {
          "ref": "f79b2dfd-17ec-462c-a44b-85a3a40a8689",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cde45b7e-32ea-40de-b655-e5266a2ebd94"
        },
        "item": {
          "id": "6112b26a-679c-43c0-8656-5ff574f74f46",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7f710761-4bde-4aa0-b574-0a6c4fa4e06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc15a3d-0b0c-4187-b885-63acf19edf21",
        "cursor": {
          "ref": "058e18ad-f9f4-45f0-9135-aa8c8be50044",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f637b425-daf0-43a5-b26e-967aad68dc76"
        },
        "item": {
          "id": "acc15a3d-0b0c-4187-b885-63acf19edf21",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5169e129-4d22-4eae-950c-126d0a076bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c6c565-ddf8-4ecd-99db-b7640d039dce",
        "cursor": {
          "ref": "911da60e-7e06-4042-b519-e86fa8b39b5b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "5fa58e55-dfb6-405d-9ef7-218c8d86c7d0"
        },
        "item": {
          "id": "a0c6c565-ddf8-4ecd-99db-b7640d039dce",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2e69cd58-010d-43fd-b19c-a966caccd8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f0105ee-e330-464c-9ec6-9de69fa55f51",
        "cursor": {
          "ref": "f1adf7f4-a43d-471b-b1ef-bb3be046f6b9",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0594ff72-ca2a-47bb-9a07-c0419dc74c4b"
        },
        "item": {
          "id": "2f0105ee-e330-464c-9ec6-9de69fa55f51",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ac547ae4-9bd2-4ae0-a9c7-db66b4db9126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f05301-6473-4990-ad2e-d9699af3fd9e",
        "cursor": {
          "ref": "4bee10c1-1e55-4b78-b9a6-cad221896e3f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eed85458-b5c4-4d2f-ad18-a85f833666d8"
        },
        "item": {
          "id": "30f05301-6473-4990-ad2e-d9699af3fd9e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3cab2fd4-a340-45bb-9561-02fb967fe848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd600ad-d51b-4487-80db-1916ea4d4c7a",
        "cursor": {
          "ref": "ea1d2625-d1da-46a4-8c6c-302df0567c24",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c55d7cda-6ce5-46fb-bbe5-979dc9486c4e"
        },
        "item": {
          "id": "9cd600ad-d51b-4487-80db-1916ea4d4c7a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7d88e9de-2419-4627-99c8-00022af24a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de346c-1a34-4cfb-a5f5-0cad425febc0",
        "cursor": {
          "ref": "9db6af7d-eb4e-4d5c-b210-79ae1c37c2b1",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4a26e1a2-adf6-4189-9761-c1cbbbd9fd84"
        },
        "item": {
          "id": "35de346c-1a34-4cfb-a5f5-0cad425febc0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2cccac39-3b0d-4ef6-8597-7670ad309bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67c0c4c-e17f-47e5-9406-788a26de9674",
        "cursor": {
          "ref": "ac43fe66-14d9-4bb6-838c-039d11927915",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40edfb43-e6bd-4690-b69d-81b4d901de7b"
        },
        "item": {
          "id": "a67c0c4c-e17f-47e5-9406-788a26de9674",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3b3f89cd-7232-451b-a452-26e6b00be1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e1db38-6116-4887-8bcf-9b47a4e69903",
        "cursor": {
          "ref": "7c87b631-2251-48ab-b355-5f5f5d04114a",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b794cfa6-3162-4175-815b-6b2a2788e63a"
        },
        "item": {
          "id": "f3e1db38-6116-4887-8bcf-9b47a4e69903",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0e7b2864-4b0b-41f8-a364-b4c66e5ef85d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781d7d80-07cb-4fc8-a026-d056a0450d0c",
        "cursor": {
          "ref": "bc263971-2df8-4a9f-9fb5-5136f2125b02",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "23650378-0a4d-4f3c-b73e-3021cc244978"
        },
        "item": {
          "id": "781d7d80-07cb-4fc8-a026-d056a0450d0c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "78f2a395-6160-4c41-9d07-d332079d7885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b12c0f5-f863-4737-949b-2aac24ffb9c4",
        "cursor": {
          "ref": "c639afef-a32b-491c-aa98-d67f4d4fd822",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "232f72ad-dfca-4b56-a3ff-3c3cb182326d"
        },
        "item": {
          "id": "1b12c0f5-f863-4737-949b-2aac24ffb9c4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6aabae46-02cf-4258-92f9-bc539000b5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7786b71-051f-4036-a4e6-84f769133f36",
        "cursor": {
          "ref": "dc3338ca-bcc3-426e-ba30-036f996546ce",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a544c7bf-15ea-4bdf-abcf-6a2c6c014ebe"
        },
        "item": {
          "id": "e7786b71-051f-4036-a4e6-84f769133f36",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "826f4ae4-cae1-4e81-b72b-de7338fa3fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b66592e-d71e-43c3-b5c1-dc13608afa8f",
        "cursor": {
          "ref": "328c5bf5-05e3-4b4d-90be-a571b32fc9a5",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac47c7f1-0726-4d62-87f7-af7aaf41426a"
        },
        "item": {
          "id": "6b66592e-d71e-43c3-b5c1-dc13608afa8f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e612dec7-0abb-4550-8bf0-016c7ae029da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079d14ef-cb11-483e-9ab5-29bd73ff758f",
        "cursor": {
          "ref": "a26c58fd-90bc-42ce-b076-15476e8c613f",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d6d42f4b-3b03-4e69-aea9-bb4ce97a9d4b"
        },
        "item": {
          "id": "079d14ef-cb11-483e-9ab5-29bd73ff758f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0a23b866-9512-417d-94c6-ba129c5e1719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24227434-8e27-4e30-9221-6eb9eb386740",
        "cursor": {
          "ref": "2b1b0ea2-e05d-4706-b2c7-449a053fc98e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0fb90edb-ca5c-4dbd-94ea-4a5168199b5d"
        },
        "item": {
          "id": "24227434-8e27-4e30-9221-6eb9eb386740",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a5f6baa7-e098-47f3-a008-636fb98307dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3484a014-5380-4408-9259-1e3b87ae6b90",
        "cursor": {
          "ref": "f006aa73-8cc9-4c25-9c65-fb341a7303b2",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2db57b82-be0f-4485-aa5c-f3167d7c3e83"
        },
        "item": {
          "id": "3484a014-5380-4408-9259-1e3b87ae6b90",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "81fd87da-d8ab-4426-baad-7baf9413be6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550876c9-e6b9-4dee-a06a-0eb3ea28bb54",
        "cursor": {
          "ref": "0630870d-526b-4ec0-9454-5a2c117f8a20",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c7a7805b-8b2c-491b-b45c-d6cc8b2a7500"
        },
        "item": {
          "id": "550876c9-e6b9-4dee-a06a-0eb3ea28bb54",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "59307824-5b5b-4ba7-a9f0-44a6f0ca1caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f49aa3-6f00-45db-96da-1faedb5568ce",
        "cursor": {
          "ref": "20de6d22-110a-49e9-8918-cb2424562d01",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "91e39936-6a08-4c92-bbd1-e56b0f35063e"
        },
        "item": {
          "id": "48f49aa3-6f00-45db-96da-1faedb5568ce",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f13617c6-d7a6-4844-9aad-8e12871f2293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4554b4c-9123-431d-b8f6-2cd1a20b227e",
        "cursor": {
          "ref": "4e09e43e-5c57-4ae0-b7e1-7eb4a45ed3b4",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "64457427-5696-4ef2-b77f-8638632217a5"
        },
        "item": {
          "id": "b4554b4c-9123-431d-b8f6-2cd1a20b227e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a93bf1af-e51e-424f-ab5e-7c726045938e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7cfc19-69f1-4b6d-8458-c126124b235f",
        "cursor": {
          "ref": "4e6fb518-95cc-4c23-8390-9ec6c645a196",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "beb4077b-7d5b-41d9-9045-d9dae17f3eae"
        },
        "item": {
          "id": "ea7cfc19-69f1-4b6d-8458-c126124b235f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "587c1206-80af-46d7-9e52-f5ae2205bc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e469f82a-3540-48e5-8402-7cf84707df32",
        "cursor": {
          "ref": "a12432be-b2ad-4d8b-bac7-2a3608163a7f",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e40b8340-43f8-4ed6-84b1-9addf735b67c"
        },
        "item": {
          "id": "e469f82a-3540-48e5-8402-7cf84707df32",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9fc3e754-f242-42f9-a7ec-2e2139daf163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72a9e5a-a898-4ded-8c1d-71f54bc1dfdc",
        "cursor": {
          "ref": "333c78db-9c8f-46bb-9cff-735b430762d6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "236ffaa1-c09c-4c94-9317-da6dddec7d8f"
        },
        "item": {
          "id": "e72a9e5a-a898-4ded-8c1d-71f54bc1dfdc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c852656b-846a-4bc1-9f7d-02a6f099d6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "026b82f8-c707-4c2e-93b4-5895d6e78974",
        "cursor": {
          "ref": "7bfb6cad-ad27-4e74-9753-f72993e785c3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e3d922e5-8376-48b3-a9b2-9ec9f070b860"
        },
        "item": {
          "id": "026b82f8-c707-4c2e-93b4-5895d6e78974",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9548de5b-58b9-4a53-a98d-950fec50f6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0e723d-31a5-410a-a4c5-81e2332a0865",
        "cursor": {
          "ref": "192de3d3-35fe-4da1-a5dc-23192e88a908",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b9be2a3c-6ad6-4d06-88a9-eb9ad7215ddc"
        },
        "item": {
          "id": "5b0e723d-31a5-410a-a4c5-81e2332a0865",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b2d10355-9436-42f5-ada1-05d31b6075c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856efa37-e18b-4c09-aa9e-7446f9d2d1a7",
        "cursor": {
          "ref": "53b4c51c-3a40-4d52-a124-54552095d55f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e0daaf7-4755-4985-a22f-456cd9070142"
        },
        "item": {
          "id": "856efa37-e18b-4c09-aa9e-7446f9d2d1a7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2130b0ba-5c7b-49fb-b4c6-508acce62604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c02000-5fea-45ea-b856-e5b949df660f",
        "cursor": {
          "ref": "c46d9cfc-8b65-4207-a107-6cc4260d8b4b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ed245b56-a200-4511-bbad-615e6197f849"
        },
        "item": {
          "id": "14c02000-5fea-45ea-b856-e5b949df660f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "313314fe-2510-4ea7-abec-d7b779358661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdcc14d-3192-48ef-8d80-1780755277c7",
        "cursor": {
          "ref": "0693fe32-362b-4df0-b62a-92ff88818c78",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a6c8d90-1156-40d1-95c9-8b2dade45c00"
        },
        "item": {
          "id": "2fdcc14d-3192-48ef-8d80-1780755277c7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7197b23e-d849-4155-9bae-92c0fc065954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db92cf84-14ce-4ad2-9cb5-9c9bef6430f5",
        "cursor": {
          "ref": "33c6ee4d-55be-401a-bc2b-0d5d77fa057b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ba0d69b3-fe68-4418-a587-5ce1248657f9"
        },
        "item": {
          "id": "db92cf84-14ce-4ad2-9cb5-9c9bef6430f5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cf0f886c-96c1-4f7d-babf-0c2480302d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa177b7a-061c-4629-9080-8e54ba3310f7",
        "cursor": {
          "ref": "8d8266a8-cf37-46a0-b119-d1111d6d236a",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c159673e-e3f7-4a97-aad2-81daa04ed19c"
        },
        "item": {
          "id": "fa177b7a-061c-4629-9080-8e54ba3310f7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5f48f9a0-0b1a-4cbd-91ae-ada18c8b328c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad3363a-7fa7-4803-8b72-ff00bce54b83",
        "cursor": {
          "ref": "bea139a8-fca2-4121-aa0e-3a73c75c537b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3b43560b-9de3-4709-8129-111f9ea476ae"
        },
        "item": {
          "id": "5ad3363a-7fa7-4803-8b72-ff00bce54b83",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4a98d684-efee-47b4-9215-e250c7376c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3fe7e5-fbe8-4668-b24b-0ebe7ea3fd04",
        "cursor": {
          "ref": "b40eebb5-7855-42ba-b906-d505b0c89a6f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "152379c0-8c83-48e6-8304-335a288d304d"
        },
        "item": {
          "id": "cf3fe7e5-fbe8-4668-b24b-0ebe7ea3fd04",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a0244859-6734-45fc-aa95-a0d915f7e3bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a956f5fb-7e79-46aa-979e-e84460d3d1f2",
        "cursor": {
          "ref": "a9e6a4a9-6beb-45f9-9aa2-62efc1499e02",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fd2e9e93-f40b-46aa-a391-bee8b05169dd"
        },
        "item": {
          "id": "a956f5fb-7e79-46aa-979e-e84460d3d1f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "34c7756f-b664-45c7-b4bd-3eb6e1bb9174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf76e1f6-1b7e-401f-895c-b792bd64c04d",
        "cursor": {
          "ref": "90994a21-73ac-4a76-a498-7ced7d92bb42",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "877c7009-b757-4600-bb5d-aac6125989f4"
        },
        "item": {
          "id": "bf76e1f6-1b7e-401f-895c-b792bd64c04d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f15b9758-9658-4669-96fc-4be79c08f4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb3af42-6392-4e8f-b486-37fc12f9cdce",
        "cursor": {
          "ref": "00479050-bc82-4dc6-9723-d716f78a66ce",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "20845287-7f12-4e41-9161-7e94703dc246"
        },
        "item": {
          "id": "beb3af42-6392-4e8f-b486-37fc12f9cdce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b9e8c583-a29f-4682-8b08-807456db6d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f776799-f71e-49b7-814f-699402dc0cd4",
        "cursor": {
          "ref": "5ea1a8f0-0bee-42c0-951f-c211e561149b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6db5c276-5c2e-4b80-a562-c94d1b14e734"
        },
        "item": {
          "id": "2f776799-f71e-49b7-814f-699402dc0cd4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "11036ad4-7736-4bef-93e0-d43cb0b826ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c831e9-7beb-4a48-b36c-4863cba087a8",
        "cursor": {
          "ref": "20a9e9bc-e654-473c-af13-853c074e90ed",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "73b1f34a-7d29-4962-aa99-3f8ef8eb3c1e"
        },
        "item": {
          "id": "b4c831e9-7beb-4a48-b36c-4863cba087a8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e71ed653-0520-4713-89c6-b4eb11fd2ebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558240c5-93b3-4494-8385-523e59cfff67",
        "cursor": {
          "ref": "f83346f6-90bc-406c-a2e4-e7497a3a1cd2",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2cc61312-03d1-47bb-bf28-a741afcb640e"
        },
        "item": {
          "id": "558240c5-93b3-4494-8385-523e59cfff67",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7ad151c5-77ef-4329-b8b3-e52b8974c6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f19a75-0f05-4359-b1c8-3de8a512fcc9",
        "cursor": {
          "ref": "32d01316-e961-4a84-a514-3a9bdc78ddc2",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a9dbf11a-ffc4-4075-b346-efa0066cd704"
        },
        "item": {
          "id": "06f19a75-0f05-4359-b1c8-3de8a512fcc9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5f7bc0c4-6414-4af8-b7a9-d158dfa02d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf96ca7-a35f-4641-8a3c-b9d74f3bc626",
        "cursor": {
          "ref": "96af7adb-da75-41c0-a06e-14618ddc0761",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b02d2063-cc6c-4305-9cfc-7ced6fde3612"
        },
        "item": {
          "id": "5bf96ca7-a35f-4641-8a3c-b9d74f3bc626",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d28a1b56-9efa-437f-985d-089b16bbaeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bc1ce2-86d0-40d7-ae0e-3f7f0eee89ab",
        "cursor": {
          "ref": "b318c7db-9de1-4305-bf2b-2ca68d361a09",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "052d69fc-5414-4b23-b143-80d447822ff1"
        },
        "item": {
          "id": "95bc1ce2-86d0-40d7-ae0e-3f7f0eee89ab",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "878cb19a-5701-4644-86be-d2a7d1c51651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d67a4d-0f4c-4784-b27c-9a32326cf2f6",
        "cursor": {
          "ref": "fe59fa62-e15f-4a05-8463-e8708d4f2d2a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "65ee781e-9be5-403f-9caf-0503077d4338"
        },
        "item": {
          "id": "16d67a4d-0f4c-4784-b27c-9a32326cf2f6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6cfa164f-2261-4071-ba47-fa9d4a0b0b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadddf37-784e-4fd8-9990-9e7c8b1ced8c",
        "cursor": {
          "ref": "a1e2e387-953f-4a3c-baef-e3e65d9bdfd7",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7022bf26-eaa6-4f3e-a8c5-2e5d9fd3593f"
        },
        "item": {
          "id": "dadddf37-784e-4fd8-9990-9e7c8b1ced8c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03f378bc-2d9b-4dcb-9648-a00b1ba4a356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d7f38a-16fc-401d-944b-a6930a6aee5a",
        "cursor": {
          "ref": "2f8e1af1-e933-46e4-8463-77966d6cf777",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "776e48fc-3b80-4e29-aab1-62c874d774a9"
        },
        "item": {
          "id": "42d7f38a-16fc-401d-944b-a6930a6aee5a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aec2a53b-2b4d-42dd-8e25-7a28d2474bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87dda4a1-a129-4f39-918d-65cf8bf5169c",
        "cursor": {
          "ref": "987940cd-0aba-4236-a258-a795800dd227",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "03021370-f79c-4c8b-ae35-3008c19b5ca8"
        },
        "item": {
          "id": "87dda4a1-a129-4f39-918d-65cf8bf5169c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7649ac19-bbdc-42a8-9f33-1a354e105751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef083d5-91b8-48a5-b74c-eafadade7fa4",
        "cursor": {
          "ref": "4ede97ce-4d0e-4624-97f2-bc680cba9129",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bfeb8dbd-8a63-45b6-a9b2-ccb4186c75e1"
        },
        "item": {
          "id": "6ef083d5-91b8-48a5-b74c-eafadade7fa4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "72ea5072-565c-48f7-b1af-d99cfb5f537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ae443-27ac-4e26-a11b-b9666a3b862d",
        "cursor": {
          "ref": "b90c5517-c587-4ed0-a050-f007ec52b522",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f0bea1c3-2b78-40c9-96fc-b03749d7c351"
        },
        "item": {
          "id": "782ae443-27ac-4e26-a11b-b9666a3b862d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8ae229c2-ab72-4b04-a2d7-0947802548ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82327f02-c260-48f3-98a3-2d3ecb86346e",
        "cursor": {
          "ref": "2407f30a-d8cc-4e45-86b3-9217de7c3e05",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4a221b1c-5cf9-496c-b19b-61085a53ad9f"
        },
        "item": {
          "id": "82327f02-c260-48f3-98a3-2d3ecb86346e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "511bee3f-976d-433a-ac66-8d1dff86febf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac790cb-27bb-4434-8e33-a8ec377cb21d",
        "cursor": {
          "ref": "79e65e41-b40b-4b32-a27e-29bff4dc2bea",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a3c8c0ec-aee8-4db6-b09b-279e436c6153"
        },
        "item": {
          "id": "cac790cb-27bb-4434-8e33-a8ec377cb21d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "80fb9186-d800-4b36-8579-0e5afab2299f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e05972-b078-49ab-93d5-71e506a2bc4f",
        "cursor": {
          "ref": "e106c6fb-e935-4b7f-a6b4-fa01769f257c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1298c734-ac4b-4e1b-924b-a421b4705f92"
        },
        "item": {
          "id": "63e05972-b078-49ab-93d5-71e506a2bc4f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "00ccedd5-30d3-49cf-b7fa-b4a3274b0512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d940fc39-368e-482f-a6b3-4f94872ada1a",
        "cursor": {
          "ref": "d4c70cd8-0140-4e6d-bfac-c8efd3e6534a",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2b920e20-67dd-43f3-b8f6-2d6f5cb1309c"
        },
        "item": {
          "id": "d940fc39-368e-482f-a6b3-4f94872ada1a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "731f3a45-2d61-4f31-b0c4-8ce4b932d5f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1c0372-5442-4626-92a3-78a61ba36d6c",
        "cursor": {
          "ref": "b47d38a9-ceeb-43e2-a166-a8835712acd8",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ebf1a9c0-0a28-4b2a-8fac-094b9faa22b1"
        },
        "item": {
          "id": "4c1c0372-5442-4626-92a3-78a61ba36d6c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e0c81bb4-3ca7-4d85-93f9-daf2b7519793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6abcbc-2a8b-4c64-8e79-8dd9cd859eff",
        "cursor": {
          "ref": "3a4c67c5-875a-4291-ade6-7aff5f994fea",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f1f63344-29db-4c4a-903b-0ea7dce7b434"
        },
        "item": {
          "id": "9c6abcbc-2a8b-4c64-8e79-8dd9cd859eff",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "89e29456-9831-48e5-9caf-22d8fd9be260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8359d1b8-91ff-4533-8a52-f4f687aba246",
        "cursor": {
          "ref": "7aea2788-fc5d-4e5f-8ba2-0958e1926927",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a4dbc612-ea00-4be8-99ba-173e91697341"
        },
        "item": {
          "id": "8359d1b8-91ff-4533-8a52-f4f687aba246",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "475ea0cb-184c-4bd0-800a-b0ef722c89dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30575b82-aad3-48de-9d0c-ae9628aa21f9",
        "cursor": {
          "ref": "795f1cbc-2664-4afa-b152-58c55a420591",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "95c53f0a-2d26-44df-9219-d65c68f75c8b"
        },
        "item": {
          "id": "30575b82-aad3-48de-9d0c-ae9628aa21f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6d3ff7c4-669a-46d9-b61c-4522c5e6146e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcc78c3-92e3-4f85-991b-f8afbbe60556",
        "cursor": {
          "ref": "52ccb315-74cc-4178-9d9c-283d799d6dc5",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "210aeb7d-4e16-4d14-83f8-787554ea9fa9"
        },
        "item": {
          "id": "5bcc78c3-92e3-4f85-991b-f8afbbe60556",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5e6f92f4-b5ea-4b13-9e63-baf65207a8b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0bc149-b32b-4be4-9fd4-a6f4c4a1ae54",
        "cursor": {
          "ref": "8bdbb820-bd45-4221-854c-76d354d7ed09",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6df72675-adc3-4d10-b18a-46bf54fbe67f"
        },
        "item": {
          "id": "dc0bc149-b32b-4be4-9fd4-a6f4c4a1ae54",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "04e59802-0e76-4b37-a1dd-d528e99dc9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75754279-d90c-4ddd-9146-f8b10756ba79",
        "cursor": {
          "ref": "269290c6-5b43-479c-a1d0-8eb8466a28d1",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bfbe723b-7ea9-47f9-b759-3fd873cbaff3"
        },
        "item": {
          "id": "75754279-d90c-4ddd-9146-f8b10756ba79",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "113b5fce-07f6-4014-852a-a86cae90fa0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c790893-4ed4-4d64-8121-863188727cd0",
        "cursor": {
          "ref": "e7ce9aea-9af1-4d59-bd88-941d946d5ab5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c3377794-edab-4c08-a1da-02afa83d01fd"
        },
        "item": {
          "id": "2c790893-4ed4-4d64-8121-863188727cd0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2e7e0364-0e09-40d2-a749-04eeaded0cbb",
          "status": "OK",
          "code": 200,
          "responseTime": 154,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "82cc4d39-269b-4044-86f8-9285e2209774",
        "cursor": {
          "ref": "ab2d66af-e121-4cdd-8d2e-86e721f8557e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7f10a42f-e78e-4e19-8a30-26390ea117c3"
        },
        "item": {
          "id": "82cc4d39-269b-4044-86f8-9285e2209774",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c3fc3551-f1be-46d9-893c-8e9c8ffbcd35",
          "status": "OK",
          "code": 200,
          "responseTime": 1849,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1adf8d5-31aa-403f-8f59-1a5d7e17a5e9",
        "cursor": {
          "ref": "5b4a1d6c-5836-40ad-958a-3d2c120585df",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "823cd4ca-3cf0-4fd1-bb9d-84462c06940a"
        },
        "item": {
          "id": "d1adf8d5-31aa-403f-8f59-1a5d7e17a5e9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "da121902-c517-4e50-b4a9-f11399545fae",
          "status": "OK",
          "code": 200,
          "responseTime": 1542,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f10ba-d6c2-4a24-a53f-7ea537b9973c",
        "cursor": {
          "ref": "5abc97ea-827e-4dad-b6f4-1b20b84313ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "967ec055-1a63-44da-8e14-ba6184dea20e"
        },
        "item": {
          "id": "1f4f10ba-d6c2-4a24-a53f-7ea537b9973c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d565d9f-5ded-484f-8077-3b5aae6ad608",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f10ba-d6c2-4a24-a53f-7ea537b9973c",
        "cursor": {
          "ref": "5abc97ea-827e-4dad-b6f4-1b20b84313ac",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "967ec055-1a63-44da-8e14-ba6184dea20e"
        },
        "item": {
          "id": "1f4f10ba-d6c2-4a24-a53f-7ea537b9973c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2d565d9f-5ded-484f-8077-3b5aae6ad608",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eed6f42-290b-43fe-965a-b29e675332e3",
        "cursor": {
          "ref": "7af4d433-2b3c-460b-b864-2e827e2f59d1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cba7b4cc-b18b-4e8f-833f-907420aa67ff"
        },
        "item": {
          "id": "0eed6f42-290b-43fe-965a-b29e675332e3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "44e126c5-012f-4da6-917e-1ffb2304db55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac60649-9adc-4047-9000-880edea4da4a",
        "cursor": {
          "ref": "0ff1cfc5-8388-4213-94f2-8dfb93cfc38d",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b3512cb9-ea6b-4da0-96ca-22e337457ff2"
        },
        "item": {
          "id": "cac60649-9adc-4047-9000-880edea4da4a",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "309eb6ae-238e-483a-8ae1-ebf0b49d6d9f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}