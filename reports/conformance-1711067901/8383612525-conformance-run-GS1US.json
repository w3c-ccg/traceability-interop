{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "179dba3e-c77f-4eb1-a268-7cee7ac54690",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6ce4b516-cf49-43c5-8fa4-bba531ca8246",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a471b3d0-a35b-4521-8495-d884eefd1c56",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5e019ed7-2731-478e-ad6d-ed7045ea3278"
                }
              }
            ]
          },
          {
            "id": "5e5b83ea-871c-454c-a3cb-8097b5e002e6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a10549e6-4067-4897-ad09-a163b1e670a5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d872fac3-ebec-49b1-9f38-7069e1afb17a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e800055c-5733-4649-b94f-6f7eaf9daa41",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "54a84dbf-6cb0-40ab-9822-780a3ace6d53",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2998e7fe-b9a7-4691-834a-27704341e6b7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "48d99291-c088-43b4-b579-44d41c6a5d2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fcf8d0f-236c-41c6-93b3-5e15436ebde9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dcb4e449-272f-490b-8b31-2c789e143d71",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fb904955-9770-4ea6-99ff-04dbabe4e424"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c08ef56-7cec-481d-9d9e-877612bccbf4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cc73b70-c51a-4606-825d-04f5b6a06c7e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba6d9254-80b5-452e-b2d4-ee2d779da1e4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2b4eb642-57dd-411f-9e4b-1e1115de18c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "158cf4ce-9ad6-4400-bb8f-60b3afbd09a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "702c93bb-5f54-40dd-8d49-0c694e8c6822"
            }
          }
        ]
      },
      {
        "id": "2d2dbefc-2577-460f-82b1-b3236c18b882",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6273b44e-da79-47d7-8abb-e5da5a75ed50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01cf1e89-e4f3-4bfd-be1d-6696479a7255",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "053a5e35-9d3c-4fc4-9bb0-f6fd2a3f6724",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2f0bcb-682a-46c3-8dc4-a869151bbec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5a95e824-8edf-41e8-a483-e64c6bf10b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb11fae-f227-436e-9329-2634e98aacb8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6ea607-1741-4fe5-9205-440ba4f42750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bf362fd-de6a-4823-88e0-02ad22463f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a368eefc-a1f4-4dfb-a4bb-cabba85f7f84",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65a2cc4-5e5a-4b07-a0ea-0c4376aab1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "671f656a-103c-4084-8fcc-588b8fa4aae9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "91ff4c63-34fd-46bd-aae2-64fab3b3d03c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f1552746-b1eb-461e-8e56-3fe1d82a1b70",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b6d341-8295-4b51-8b29-0ae445c7398c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "992a6a8a-bf96-4472-a448-e59b4cad30b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dad3b1b-f9f8-4ecf-8c53-d94a180a96e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab3d73b-5613-4044-86c5-6e582942b0a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fbc38467-18cd-4015-a036-10c12c24608a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "35e4b134-a2f2-4f5f-be1e-3a43016424f0",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9801a432-3248-440c-9697-0ff9d30c1936",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "4acc4dcc-7781-47c7-b6c7-28b8cb11ab68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "690b0b6e-202d-4b07-8cfc-187fa5c20e07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "1d52ab6d-ae39-4f7c-be31-95bb2abe699e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93b28b81-802b-43ad-b573-029f5125a513",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f41f69d-1d9c-4c50-b875-0f4a1b7bf258"
            }
          }
        ]
      },
      {
        "id": "3c5af8be-6fd2-468f-a522-a030a426a8f9",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b30256d9-ff60-49a7-97db-3a04405eb4cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8d3c678-d711-41d2-9718-9f9832a282b2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b65241cc-4e66-4744-bda2-3843a4703896",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de88e73-87bd-488a-9689-12fc020cb6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72494ab3-2b8d-489a-8696-c557e55f6bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3498a11-536a-4467-a035-62f3131c4b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d12295-c29c-4a73-9b93-fcca9ab79b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e6010e-b146-4827-8c2d-7ec3fc89eb3e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdad7289-c872-4926-a168-22a974ddd631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4887c6-0599-4502-8045-fdd23fb13006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfc251e-9d16-4403-b33c-3de6c985785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97dd319a-3e3a-48f5-b59c-d8286314272f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27497d4b-d85a-4a71-b260-e2769c4d78f3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a37353-5ed8-4d39-ac5e-5eb6f8ef31e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90277121-7d86-489a-b3fa-546e654a5b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe89b80d-0723-47aa-9e7b-ecfa703e45cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11e93b4f-b62e-4980-80fd-8edf384d1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf30783-87bb-4c73-a25d-70fa8c00d61a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42009f06-ae3b-427d-ac26-e00424848608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c801b5b-81b4-40a3-bba6-7bfb35eb585d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52cd6ef0-162e-4b0f-9da1-29cad1aacde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c47dfac-a7d9-4867-b500-059492f8a56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed0d420b-852c-48a1-a6c6-6cedc60cb937",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850a85c0-8f67-43c4-87ca-0fce3a13f642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30d1f126-186b-411e-8480-9281c610ef7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556cb9f3-980a-474e-8db7-2a651ff5584c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cae8b87-3436-4a11-aa8f-156c8d33a65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6862e67d-de27-4db0-b223-6e09dc501ea3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6e214a-a7b0-470c-8975-7f730d4bceaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c699975c-db44-4d1c-ac3f-b590b1dd2a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c987e4-5ace-4853-a0cb-aa0113e81c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63de64c0-684d-48e9-bbd8-a6ee09f0c563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c9d2de-26a3-4a61-ba85-da5c4b2afc1c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301705c5-7724-478d-8fe3-d93a79118a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e27fed2-c24c-4ca6-94de-ce25f6f03c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b4009-df3b-49dd-807e-dceda58bea02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bed27789-bdd2-472e-b33c-e4c595ea46c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fd9514-26fe-43a4-8569-1e6867105a27",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ea0deb-3c4b-4de5-910d-06fe41e61cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4916ae0d-6018-4d40-acf9-61dfd2582fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d494db75-bcc7-43b3-9446-f2f35efcc6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47b3bc60-eb3a-4177-8363-339a871fdeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2ed21d-1b3a-461e-9bca-e5849c0ff1fb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686705b9-c4bb-409c-a7e8-071f7f80bd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a19c435-c05f-4e03-9798-8a22ce8df8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45a4c46-1990-43be-920b-81ad09c1cc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a33782a-7faf-4c1f-a018-b3c661751c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d00687c-3ea5-4d45-9368-1463d42589a7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad29f3f0-ef93-44f9-ba75-f0e06a3085ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64dedcc6-62ae-44dd-877b-ef94c7dd71ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6662fe-c3ca-4ca7-b34c-b797d525c7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ebc344c5-3405-4c08-8ba9-f3b364112175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2084716e-9320-4f28-8722-9cceb6b6daef",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ec765d-05a7-42d3-b45a-14f52f4000e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b921e3d-7ad6-4bea-a92a-0a501c56b5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7184bd92-9655-49f8-b8f0-a9c6594811ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9ce64cf-9bd9-4cd1-9d6e-7b13c7041cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4587f202-f401-49ea-b096-18d72bd3ae01",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5afa3d3-090f-4029-b9e1-3e25ff1052ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74879ced-2392-46b0-bd49-dc829b518e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d81a39-c886-44e9-8a72-9ea5cf13c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d885a22b-1169-4aa1-ad28-1a0897daf504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b3b37b-795d-450d-b663-edb3e13b7578",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75da3bc4-24b4-4ec1-96c0-e8e48a66e1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d71161a-3b5b-4a39-8986-0cc90cd9054d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8c7ff-60d0-456f-82a7-242cb621b09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6afe8268-e17f-419f-ac57-381a0c7015fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba5e1ad-5fff-48b2-8ad3-821f42ee5ef7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3200d49-cdc8-43a9-8311-3ced9daf02fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efca6559-a844-4aea-8811-743183ec9b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2c6bbf-e518-4407-9090-a6ec5b171a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23fd09bb-e19e-45e6-aa50-2611c0692296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5c8bfe-c3dd-4f14-8678-a4332a50e6ee",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b73bd7d-c1c7-42ef-ba5e-30f17c96ac78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a83caa2-03b6-45bd-94a2-108932ac5764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383ca4d3-2318-498d-af6e-7cd71e75d4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0f9eb4f-e179-47ab-99d3-3981f113db50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6c54ae-0e9b-464a-b49a-adcb78664937",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4890b8-d59f-4244-a12a-240f4e135431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07d8c6f-82f4-4a42-b39b-edf1fdd296a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abbe987-11a4-4fd9-a85f-76b863afc486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "766570e8-2914-4e46-9bca-41cb5795816c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59328610-030a-4882-8b9e-023053ddc0f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc372fe-ce2a-4879-ad87-9aca1fbc638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b0914c-d9cf-49a6-b0e4-1bd532370f13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1664c32-dc13-4adc-af73-44506c2e77ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0266f607-1e0a-4d92-a6a2-dcbd2feb1e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eff660-44bd-4f76-a4a1-c2fb9240b9c3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedcc06b-f7b6-4884-a5b4-564d5cbd10e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc23d13-cf31-4648-8526-ea3d56bb97db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3347fc6-ffb5-4384-b556-cc57a52840b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5464cb9f-e2e1-4c8b-b69d-69b24540f934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d57a14c-8619-49b6-ac8a-6a162cef1984",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88a8c02-47e0-4a12-96e9-748862548501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b24f7b-344e-4669-828e-bcb15448c978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e55a27c-124c-4059-91f0-cef8ae5fd510",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44f49532-6334-4669-b235-f9d5200e09d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945c9188-85cd-4828-bc9a-a88d7702f109",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dcb3bd3-de8b-43c9-99ca-45cadc35ead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1d6bc2-293c-4b39-868d-4b6fb7c2b8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8f4542-072d-4a47-9814-d600ef6a3b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "933ddc84-3938-4be0-b8c2-5fabeb3b911c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e47f81-c682-42a5-85da-3a4edc97a68b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ebc65b-d1b3-4860-8e09-807d61da8e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efbdee2-3c2d-492b-9960-caac76dbfc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f74c83-a470-4d25-845c-a6d2e0b6720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e14dc0-7a4f-4c24-b494-9f98bbba9fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddacfbfa-5454-45e8-ba16-85e1406390e8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ea588b-20da-4a19-8714-4780c8d3ceb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74dcf4d2-27d4-4b01-b40b-62ed8dab9514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c326eb-6ca3-42b4-a6af-7c7c7060cad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "596af2db-44aa-4f3f-8f41-94ca2a937ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d784b09c-5795-4d5a-b553-611b2fe323b7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b32b07-d4fd-41fb-b3f3-ec46f577b8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4882a148-59f4-4b76-a6ce-6baca18a31f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655d1ffb-f975-4cd6-9d7d-3f6e1cffde75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72f3f680-5a3c-4f63-a7e1-4e71d113e29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19969830-4957-499a-ba0f-48f1537b691a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c37ec32-0e25-4323-9753-ac3d534cf250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c50e15c-b2d6-4cd9-a700-d6bd840eef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134d4f1d-1bc0-4f0b-904c-8eb94482352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2c4c8f-cd5b-4be5-bb24-a7c5db266d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee83a71-2bf9-448e-92a5-7e7a86b36a84",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c6b8ed-166f-4e68-95d0-068f39d57043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bec1090-493f-4bda-a815-4e760f54e0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf29c78e-dc64-48d3-8f2d-7b8adabace62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eba1d56-dd19-43ba-9100-09759a475438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf929ff-c251-42e6-aac2-c8ffce337204",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f05d1b-d96b-42c2-b265-6519be715614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c71c3c2-c581-4e34-96a6-21ee3992910d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fceea496-3520-4fb5-9bf4-ce47f8920a4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee6ae3d-1ef7-4a59-a39b-5889032cf3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aac287-75fd-4c04-8f8b-9f7bc3e7e80d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6674c005-433e-420f-ba6b-1be5c6f83d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ea936f-b459-4332-be5a-e1771f8433f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453f01cb-38f4-463b-baa6-a3173d72f96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6356f4-4e00-49ff-a70f-45173b80cb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d3d353-cd47-49b2-ace5-13b4e28fa3a0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25bd9c0-5c89-433b-8f0c-db343e5156ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692b9df2-b8a5-4046-9f63-6a045abd97d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d1e1a4-5c28-4e68-bfcf-23c7b54a7f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6fd0a8-2c4d-4c70-995e-baa345af7cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3631259f-dbc3-4c3d-a28c-621af787cf5a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1943a47a-b8d8-4766-a2b6-d4ccabc19718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c460cff-a9aa-4b38-bde4-463d4f44a3cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c45d9f-d2df-41cd-bc4e-544c9c4bbb64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc405b8-5278-4939-9a7d-ef8117d96418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ebc198-764d-432c-951f-2debe8c0f6f7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9215e0d4-593a-496b-8565-71a2e85b768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "992d32e8-8de9-4d98-88f8-f7b974a2d34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff01eac-f807-4909-a30c-874e96d33205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "91068cfe-76ad-4c2f-bab3-ea8c4ea32c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2646cbe0-5022-4b51-b916-d34fbb544eda",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14db24c-3c70-4b3b-a8f7-1fc542c245c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19800b51-6c52-4d2c-b7e4-7747d15618b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768e863e-8354-4377-bf87-44bfe150b223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01b4d8d-c07f-49c1-bd2d-aad64f17dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29475141-e623-417a-be80-146a78fbbf72",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e103a362-af5b-476f-8712-2eb1df89bfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "093632ec-ab12-44b0-8198-a7d7d7bb7c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab463a6-b0cb-4369-ae81-4a3ff14b3f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e3de914-b006-4078-9b81-955f066b2e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a58b74-de2a-4cf8-96f3-1cfc7ef8bfc4",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2466d133-5d4a-40fa-aae7-00e00eb135cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec33b21-d454-4799-9aac-f82bfbcfc5af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd32590-f8eb-4164-96ee-9d35b750e53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2f6b55-36c9-4f8c-8f89-60e5655884a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f63349be-f792-497c-ab26-905d14a27f88",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9ad022-3ce2-4e2b-b44d-c91e2a733060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cae8743-578f-4213-b91f-2fc7e10a2599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb81969f-16f2-419a-abf4-695e02ba27fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad2bdde2-8725-410c-87e1-478e04e4a9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c69242a-a7c2-451b-b156-da5b037ae1a4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59193c8d-23e9-449b-9e17-0bf6a4686fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06fdf8a-33ad-436a-90c2-10f0b658cc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cb72dc-b2d1-49c0-b899-8c53e95438b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab6f05e-b2dd-4266-8f87-0063bd4091ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c4b5e4-fdd4-460c-8eee-5f0f29d3454e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dda1263-4304-4867-9bbc-048ff46131df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5fb783a-0422-4daa-ab07-df4a9d4f3e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d960d36d-1719-42a6-8077-93a1ee4948e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2af589-2d06-4c23-81bd-500b00955a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3166ac-1efd-4556-8847-5303c6d5f35f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7806fefc-9bc8-4a00-a1ae-c2a8de325fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16261d38-200e-4ef1-b43a-1ef29dedd258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c113d4f-331c-475e-ba7c-9d056baf9814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "972e6c09-0a19-457a-bdcd-28ebbf1fbb56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca7d15-daef-4e30-8c01-b8a246e7d436",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c3db4b-cc5c-45d8-a6df-521760c56d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a49b5f-2a5a-429f-9b60-b509580362f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14da754-bbcd-485f-982a-459f71fdc7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5995db8b-0169-4499-a6df-1f3f8475b72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed0efc4-2959-4c8e-8a4f-36cacda1f5e5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aa4fb2-b336-46b4-9854-0e1ae0c739f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793efdcc-ae66-4b33-8c4e-53e75b6580a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4097c6a1-421a-40ac-a893-d3e33b26815d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4870fc2c-2652-46ed-aaae-9f9923b3ccc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01833b00-1c9e-4d55-95df-b8a900f7f99f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d412ed-babd-49c0-a402-475eb555fc86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33976ee5-f3fc-48dd-815b-345cc3fd98b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb753729-3d50-4df8-af76-59a5aae2a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e491c16-e84b-4999-9c74-12ee762f96d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214e732d-33a3-4ea7-a2c8-f972658215a0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a915c4-ff2c-4f89-b419-66e19f0e142a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198ca38b-0a55-4632-9289-df92b203d3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d02a6e2-eff0-47e5-a0cf-94c441b45846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6df3453-6e75-444d-83fc-0fd54d8dbb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeef8bb-0775-45ac-b588-a059d6927a48",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398e431c-1bd5-4b65-bcf8-d22c184f8ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb935e3b-65cc-47c3-a6f8-32564e869902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1cbc830-88ee-4591-9222-50c455d440e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9b92a6-74f1-405e-9669-086391429786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93cab46-3f39-492e-8ce3-bbae3d430209",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f8c70f-c05e-465e-b38d-44a3ef2dc73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b88e207-091d-44ad-80c9-d4cdcb33079d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6bae75-ccc2-47bd-83da-a31e65ea95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78b09465-acb7-48c4-8b87-1dc7bd8cd917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0724b0c-24d8-4033-8065-3b0ac3483aab",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2683c0dd-a8d9-4154-bbd8-e2786640cec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caee2b4-015a-4fa2-963d-a4da1ace100a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bea9b4e-a72e-4273-820b-ca9ac63a2947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f184ffc3-8577-481a-bb3b-0f079b2eaa54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0af8d872-9415-4c60-87a2-0b751f1ffd2c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390dd284-ec6a-4919-bb10-ffe8d03911bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dff1c9b-56bf-4a4d-b142-ef4fa3b96dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907ef6dc-f340-4c3d-87d2-9e84aca936e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "423a8bd0-7204-4dda-bdab-7fd7b9d69868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46874739-82dc-4ec7-9be1-6aff528f998a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ce284f-589c-4fd1-9dd3-a5a81ddc8db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f734316-5e0e-4a92-8021-5b02e9fd5ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e553ee8-940f-4515-a33c-20b175a1a02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e88225a-95c9-4e1d-a8aa-cc34ac34c4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96491cf-b5f6-40ee-aa5f-fff5dd3242d6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce15660-aed1-4a4d-a3ea-617a00899965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8497c184-6911-4f3a-89c5-ce927b00ab37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059f130f-fb55-4556-9773-93420349659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee5bec8-537f-4e24-81e1-225aca9c0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a197c0dd-d91c-4442-964f-70260ca0a1c4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9452580c-83ca-4789-8d11-c7fd2c3e33ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a470808b-197a-40e7-bfcf-382fa4cac4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41521c95-7fac-4fa2-8e46-bf60ab34915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5af4a1-9c09-4d25-8c23-ba55e4a9a42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fdfddb-7aa6-4b2f-bd7c-3be6104dd5fb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fe79c3-fc7c-4b34-9efa-586ea4f35ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39b693b-28f6-4fea-88d9-4edfdc81262e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91437c05-ec07-4255-91c3-aeb7b091383a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97e06079-9973-45f8-b685-1dd4afbc3cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd7cc60-94a9-4742-aea0-a99b94d1bbe3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acffa8a0-0f58-440a-9cd7-a57d0d5b1f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a260845-8c71-42db-8f8a-69d569d4b65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35389220-7202-4db0-a368-9986539f7e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67945c05-d716-4ce6-979c-3ec51d535760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c67886-cfe3-4f60-998f-62daefdc52de",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba82037-c710-498a-b257-5cf7a7fc1586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8159541-39c8-4b02-a721-ec29c2825f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4be690c-06e0-455e-badc-33dfde416fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e6f2798-689c-40bc-98ce-a9f5b62b1b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d75a62-46a4-44f3-a614-ee80265978fc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0b3b5a-7b8e-4ec0-b9f9-8a344557dede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3d80c35-4456-4aaa-bdd7-ac18433d8129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8b5c89-b260-42c5-a217-6463175d6ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aad638b-e11c-4133-9caa-9ac04481e1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d465bf9a-75b1-4223-880b-3f3c13225d98",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed66c578-b370-4d16-8f16-393deae262ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0277f02-c8a7-417d-a842-789cc762bc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9093ba-664c-41a3-a024-3eb4ba2780d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c74f224-7e6b-4673-a8d9-7f4432312ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e498e7-3bfc-4390-bdfa-5233339e5d89",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf74660-4322-454c-afe6-bbf1e4a96f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6b76b1-44b2-47a7-9aac-7bce7b10bbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621306e5-a83d-4425-84f4-5358a0174577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4891aa-775b-461d-9141-4269386c5bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ec5de8-6e0a-45cf-a05d-93c04a88bd87",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8017576-e416-496b-9453-370bab025ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3ef9973-89c0-4421-9c48-a57d28bd65ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26167df3-bdbe-4ae6-9b4c-5cea6b8a4c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49014d73-0b11-4fac-8384-f311f5a45b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a60c3f-fedc-4791-8133-46e980a49cab",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab539aba-b8c7-4710-b8f6-8596330638bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859f9e43-3e4c-46cc-84ad-cf970f0d0b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59979247-c702-4d42-8350-237b243b81d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "92e91776-2e52-43f0-8943-396347c4b204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ece4c6e-5081-45f0-bcf1-6928d2eff996",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca0f340-b4d8-4563-9a1c-a4a6a0d48bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aa3dc9-7cf8-4666-af5b-c8d6df445c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f9b032-30d3-41b6-af7c-fd9e564bc6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4e1f28-5b34-450a-a14c-1e429064172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b104369-eb2d-44da-bd25-ce56017cff57",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133bb38-7213-4272-a871-dfed4e286269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14099e69-6d4b-465e-a76f-168a3961d491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d7d5e7-0597-4e6c-b6f4-bcaf25c5b8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25e2ef8f-9dae-490b-b028-e0f2c44191bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908b5397-405b-4baa-b732-bc8b2c6e9546",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811f14ed-fb57-4b45-bba0-1773b134d12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b968561d-6a6e-414a-9f69-6801f2908edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9da4204-3f56-4e63-98b8-23e6c9689f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2719dc90-26c6-4735-a982-84f43813d5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a79cb3-d5f2-41a7-b4e3-3a81bdf179ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abd9abd-85dc-4be1-92dd-aab02298da30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e3407f-154e-4e7c-84b6-9daff9359f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d5b2f-c869-4342-8976-34dc619ec417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "966203cf-958a-45da-aa12-8524b12fc84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd4ae94-2a55-4bd6-97c7-e03a38a87491",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "275f60de-d714-4f5d-82ca-0a7b6a3c6739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05530e54-65ab-45d5-a3f8-5d503114a72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0e4d99-1edf-4f37-8037-c27bfed14aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "199dcf21-a2fd-4e51-8eb2-1a1adf6c4484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fc0207-7cf2-416b-8abe-b389795324f7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44deab39-7197-467e-850d-7d212075e8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e3b04b-7667-4fbf-ac2a-c40295308941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a686ee2-20ea-41bc-9d16-513a85bae4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba07970-5796-47b9-aaa1-63eed1d5e37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc10a8a-6c0f-4aad-a6e2-5c04d7df57fa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2220a7-0013-43b1-9396-a2b804f28d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901ef68b-5935-4989-96a0-09c4de8c64b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9773ade6-1cf0-48d6-b5ba-3dd48818a621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8be323-ed03-44ad-8ce7-982b336a6e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c064eb-5d09-4182-a3dc-cf7f23d4ef2c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16baf0b-6173-43be-bffa-cdf6bc49442c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2defb145-dd12-442b-acf9-e15c47aa3f3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0065e6c2-48d3-4a48-a9de-225fdb2778de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cf02be-eb36-411f-8501-dd43702d7052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9290de6f-8104-4093-b304-5421819ff19c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f476bd7-5832-4492-98ec-f378b3752a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787c390d-9d11-48bc-b1e8-724ed00a6b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d47e2af-36bf-41c7-9f57-e61d9fccb8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3602c8f4-8c5d-4a21-b777-b87bd64dae97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7011d4c-7571-4e0f-8a72-002c06ed0f8f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4a2966-b5b4-4f35-b242-2b8d37ff4319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "466ae4bc-8714-4106-9390-8130375d3eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a29212-92cc-4e20-a91b-68997e5c0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1338ce3-f157-4338-a248-8c79bb80f01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a805cd4-894b-4900-9b54-76825b246a95",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa476b67-76e8-4591-be54-fbda93279db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863aba6c-1c5d-4713-84a3-e288cdda9525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6ef6ff-b7b7-400b-b2d8-edb19664931f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0587bcc-c3fc-4159-819d-fd976a3bcade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e3dcb5-1208-4d8f-825b-9bd8f712c336",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d162e21e-0fef-4ffb-95b9-498f6a135ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b446100c-c71f-42c1-a101-f4e94d443f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49470043-e26e-4073-bda3-fc3ccbafb68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5bc660-a468-42cb-8154-b84f23a3bb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbf7209-7a9d-4778-95b0-ad1c2dec238b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "572c204f-0fef-4a3a-8ce0-2379dcda210d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9e790b-0e3c-4f8b-ba8b-6bb6bf14ce22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0f475f-f557-4590-8a2e-b127126c136d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff35234-2293-483e-8582-63b4d07a2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a0fd43-abb7-45f5-a352-a0d04f50aed7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe5ddad-b5c6-4b53-871b-d8cd20341b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fb9f36-6d7a-436d-ab69-e33ee23d5483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a0a871-6481-4768-881c-5911cfb29a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d67a3b-2001-4ebe-9fcf-06ea35fbe0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6a21db-34aa-4aa6-b05f-ecd4f707bfe7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febab7e0-4af7-4345-9123-f1105e571f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c107e84d-f32b-4715-bc7d-03f9b3016f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df74a79-b9fe-457b-9903-d76565804530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa06c010-6f69-4af9-84a8-bf45857fb295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bb80ba-5c4b-413c-84fe-d558b09f7539",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ab446b-7f65-4a6d-bb97-7458d91aa055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8abe9cc-e097-4e2b-ab8f-74284625fc44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496e857d-745a-42a7-a0f5-dc7a8e61b219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6876cc-08e8-4024-b6dd-2e66ac7501a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667b6c11-ddad-4a82-9a35-7d8ecec61ce7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a967ae2d-218c-4956-b3a7-e3c87c9f0bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46351c0-e604-4e3e-a46e-5f5b8c5c5b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3488bf-01a7-438e-b76a-10c29e08dab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18becd79-ec7a-4f00-9af0-031a2bcb4b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40bdb95-fef0-4462-9336-40b678df17ac",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa595b8-8bc7-4933-9a49-0885eefd477d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1917d09-e3dd-47e2-ae7a-fb0153c42fd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46f20055-71de-4b34-ae17-f901fda28d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "130e2c31-e219-4d32-9b8d-f063560c5807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698dff81-b677-441d-be59-4ae530fe17df",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44f66755-6648-4a33-a7a8-7a4e1cc511f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12c68e1d-5441-45e7-ab3e-12e6c96f84b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c74a3d-b89c-426f-b9b6-2d68dbb114b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f12e69dc-6497-49f9-9d02-a471e3cdb1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b725c7db-35fa-47c5-b842-1ee9f38dfec6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d081b372-b50d-4141-bb47-4000107cbd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5829a8b5-1553-4f22-8854-9970487ef5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1e24a8-6595-4ba9-9ed8-2096733cd696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "721575c7-2df2-46a9-ae1f-37d09fe782a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90ea088-0588-479f-beaf-31a8a8b8c672",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e039a0fd-b184-44cb-9d86-d462776c0ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf49c275-8934-468a-9e80-bd591ba11b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06461ec7-51fb-48be-a0e8-7c0dae39ab51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1edaaa8-ef52-4bb4-a8bb-ca0a3058b032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e10ec9-0ab5-4117-aabb-5950c3a618ba",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43196c9-d5b1-4e90-a355-5e6c4183b17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45cc982a-a4ef-4677-9405-9cbc3763c75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ade77e-6aab-4336-a2d1-7bd617d44988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d76126de-387e-45c0-86ad-589b19b74e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5354455-6a8c-4d32-8507-bad46fb4338a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524bb38f-1ee0-487f-9560-b08323b8fae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72b92fd2-3758-4148-8e55-c04583b1670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4f4891-9d3f-467d-bf1d-885f3f64c1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e5c463a-fc57-4857-8d17-93187cc44050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ab60a7-4131-4f37-acca-059adfef61cb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8b9ad0-281d-4bc7-8106-e22e5786c280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "482dafc0-f8a2-4c64-adf1-10bd1adee7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c442079-4ed3-4362-bf02-6a915b75445a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe9e31d-de79-4ed9-bf23-b9c0c6e6ce1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a906aa87-b927-4f2a-9ce7-a05a85200b47",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaef8787-96dc-4d97-b8a3-1b98def3ac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8e5a7a-f9c8-409f-8c35-401b5214ba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38749e80-1688-4fea-982c-e952f96918b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea8c5668-95ff-4001-b0b5-c948cbbcf930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a29f7a8-20b7-448b-9824-a674e94b418e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "553cd7fb-fb90-4ec4-8e03-55f85986d6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078b33f0-a397-4475-a0f4-b98bc69b3460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fe9f25-37b3-4fbe-b415-966fc01a10e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c93cd0-c7ac-4daa-94ec-efa0abc6d592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39b2c02-b9c3-467a-9b54-7961c8a31f0b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9094bbb-c046-41d5-bca8-7df19ad82559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47793a51-790e-491c-8b6a-6c48d3879ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749557ec-0b8d-4921-aa87-0f2e402f235b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3d4e91-f808-4b05-ab37-d04caee487f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1622cb9-8a69-458b-a3ec-65e5a856e27c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9aa9c9-6e92-417f-bf90-200d8da46fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5edd794-1d3a-47ea-a43e-4ab28c335913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc36ed6-76a9-498f-b922-0415ebc81a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f4d02e-4aa5-454f-ba12-b6f76675f618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21102e92-f739-4e3d-a54d-83606ba3f69c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d52d830-366f-4365-946a-4ab9723c6308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed9a774-d4e9-44ab-91c2-9b828e4524c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a0c000-34f7-4a03-b067-972f1c443bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa11de53-a621-4562-8ff8-ef363fd7c48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be57c3e-9c0e-432f-bebe-edad9d6b6c38",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7e14ba-68f2-4074-84ab-2f713ed5c63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41841c15-9d5c-492d-90c6-31fbc2fdac53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9995550b-41a2-49a7-84a3-d2bb9de11283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f30325df-47a5-46c9-9240-96a98002dede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3cdb42-9364-429f-87c3-48405113932f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f65b63e-7970-4455-895b-944ee860daed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "584cb244-0043-4242-88ff-15b6e261be65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "452b6cce-d068-4d14-be4b-615d6b40ba65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e338a6d6-4d72-420c-92a5-f4fecaa6bc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32cfd011-0876-4b8a-adc3-6b0dae9e48b4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "647731b8-f60e-4e9a-83fc-660d50aa9182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d547b216-bbd2-4a56-b967-5eddda245d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb5e4a-f35e-456d-ad86-72a3630504a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63535f23-8e29-402f-8031-be9a59703f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a1f527-1ecc-4f7c-80d3-46a5dcf41e86",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82df79a7-202d-4eb8-820d-531ba98198da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1640b77-4139-43b1-ad55-680f05e3cb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096c18bc-46ff-4ad8-af6e-320d60e21190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "396d9123-2d8f-40d5-a631-c5fbc56f94c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2d2d4f-86d1-4efb-bfe7-ca0747cdb9bb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2c4ecd-6b68-4281-af9d-51fdd2be8c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906189f2-e0c8-44ed-a8d2-1bf93d7e1f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8bcac7-c9ff-4569-8c7b-b8b4b668c1cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad142108-b306-418a-8165-cddef1ded975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237a876d-a8db-4aa7-ad4a-281bfa08a599",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "080507f5-f20d-4b5e-a765-c057bda295fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57340147-6b79-441c-974b-3ffc057605d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f731620b-239d-4857-90be-04f5b9ebf77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8e4fbf-c082-46d3-83da-5c8e352ea215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5a2240-c487-473f-8d9b-e5b12216850d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eeba54-e29d-44a7-90c7-2904e0fc3e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b9039f80-beee-4419-9fb6-9b69374a4f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c582d0-04dd-4326-94c1-01a954b929a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad43a61d-0e0a-4ffd-a679-d5024546a600"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "859084cb-2751-405a-9dff-e798e6ef6111",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d2790410-a14a-44a6-9c24-a1cb5524b8c7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd35b012-c405-4e60-bd27-815236e246b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "184e7765-349e-4dd5-aad3-9c24ccc79246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114c851-1825-47aa-8cb0-b422e643331a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4130c6b3-c06f-4a82-8fe3-4e7dd0bbf9c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5de47afa-a6fe-4976-a45d-43b46429b3a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdacec0c-69d2-4b6b-a2c6-bb95f788c650"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51df7ae5-edea-43c2-a134-8ef39e7a92a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87d987c1-b1f8-41bc-821c-714824d198af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "990b4bee-764f-4796-bd2e-564ca850b6b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b8f0dea4-ce63-454f-a2b6-75aa70d57370"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b666482a-3719-4ae3-a789-64f70fdf9958",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "236704f7-3e83-463f-a534-4702901a2d78"
                }
              }
            ]
          },
          {
            "id": "9709bf4d-f834-4d4f-8cf0-68530ce43fac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f18fc76-7436-405e-8f9d-8a9a648df234",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2d44dafc-cae9-4972-9a02-4e23cc56ca59",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c383cc-f535-4338-b1db-5ae26a4e73e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e24ddc65-f72f-41f5-b262-9677cba02e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b67289-6217-4f30-a4aa-691af522f5c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ccbc4e0-8486-47ae-ba07-caa79630a51d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2248319a-a81a-4d13-8d01-c02a098fe958",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1c21bf3-4220-49b1-b5cb-d94b772c4338",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c364695a-2ea4-4524-b177-3dfc4c4a8e2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34b0e9a6-326e-4838-9ea1-7c55bfbf1adc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c95e86c-994d-44d1-8a4e-a56ed5ad8f5c"
                    }
                  }
                ]
              },
              {
                "id": "66024754-0d05-4084-b99a-d7a4b4fc4581",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4be57a9-61d7-4bba-8f2d-0fa7e6607304",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34e25b0a-e196-41f0-a700-334a2a424252"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c282030e-ff34-4bf8-acd8-9c9195b2d7ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d642a991-ffac-4cc6-b2cf-34579abb03fa"
                    }
                  }
                ]
              },
              {
                "id": "d24d1076-c9e4-44e7-9345-d0eefaaece2a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c920e0-55cd-4003-8508-d48abc7dbcbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8afd2d5c-6c45-44b6-853e-96b45e0da5ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc6bc75-651f-4af9-9796-9458e2059e30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0024781-cac9-4737-846d-06da033de85f"
                    }
                  }
                ]
              },
              {
                "id": "b46e8b32-3766-4a99-9164-455ea5a577b8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07872222-3824-487f-8352-32944edf9051",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8324e4da-4961-4024-a2b2-b5c16246ce79"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59546937-0da1-4516-8c03-bc22983b09ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d59496a1-ce8a-416f-938f-1ab03c666698"
                    }
                  }
                ]
              },
              {
                "id": "6d3d5e03-e97a-4e14-b913-4fd945508f17",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78c3f36a-b7ce-46eb-8903-8c8d2bb4f494",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b423239d-beff-4383-ac89-483a2c96116b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6acf4d65-a8ca-4426-a6fa-707659b9a8c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4d10664f-a865-4c4d-9a3c-f2aa554c2d9f"
                    }
                  }
                ]
              },
              {
                "id": "c24e71d9-ae93-4f4e-abba-aad1b5de9bb1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b75bc79-5b7d-44a1-9c23-5e0bf5b83c08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37e99dd5-9723-432c-a43d-4f92093dc67c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47ff31a1-2757-411b-99c0-b0bf608be382",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cbff96c8-83d3-4318-b743-ed5e36608062"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "592b48bb-cd4a-48d9-881b-77c1f93cde40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3c74d761-8ba2-4fc8-881b-40ca992a063d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b37c969c-745a-428a-96e1-646e15a0b771",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f5ef2099-8d4b-41ba-8264-9cb6bc578134"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c759e718-539f-4371-ae48-9b3468b3c41f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "39d0b17c-4ba9-4d33-bbfb-0ad5ae3cd889"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d692a52-0779-47c9-9eb0-c4b0748d9e35",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f84f7ab-94d8-494e-8f78-037dfa59feaa"
            }
          }
        ]
      },
      {
        "id": "6188ba1c-b947-4b3d-92ea-1209e680957b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3f24bfaa-3471-4653-93a5-33400c877577",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4c1a987-2809-46af-b487-68d879862114",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c6b1c92e-5e00-4465-8adc-4eb0afbb230e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d0b76-47b7-4752-8009-e67d4081dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35904fa9-473d-4df0-93c4-cbace6f8b923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31ed200-d35f-4f47-9442-854e68d53241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "774f5469-4593-461c-b403-90f0a87a5f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db625185-854a-487d-81ce-8036c24fbcef",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46b63a3-491f-48c3-81a5-16998aa37b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b71f168-ade3-47ea-9b20-2f1c927c2599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0cb73a-8fee-46c7-8bf8-223c3b5b848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d15ff44b-cf29-4435-9e11-8965057c2fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d17b8f-1fbf-4bad-a37c-0d854a90e562",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679aeac4-c43f-4271-969e-afac1fa03e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64683f20-8655-4d0e-95aa-8e64b114e27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e9018e-71e6-460e-b6fd-da63f9164e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42fca11f-dd51-45df-9ff7-e1ef8966c061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75b106f-db31-4c51-969d-e3e4b6fa7a19",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7b420f-43c5-438a-abd0-9c3420034dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669535f7-69d2-4a76-9c83-bd3574db7997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27f3bc1-de69-4c34-b915-d54d74540abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9887778-f289-4703-81cf-6764d09e922a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895146c1-6b66-44a1-8f16-0d38653c044b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609b4ec0-3b89-46e2-9bf7-a5d0a41eae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd09666f-e648-48b4-a1d7-c3942a988f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72983b6-4bb6-4d5e-9e9e-a5d70c300552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d077eabe-c537-43e0-b9a1-2bf4f1cc5b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c412970-57d7-451c-88f9-5a27b7df653f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc171b4-d1ea-464c-9655-172f8c349cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8912d3c6-9480-44b4-aa05-d1226fe8dd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efd37d6-e31c-48a2-beae-b9f7efd9eb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8607581c-9bde-4ff8-92a7-6d9b5948b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dcb370-fa0a-4c97-b266-2623126a60a7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6360c60-dfec-4659-941f-b56b84ba66a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356f1a4a-b80d-4b18-85ee-58de53fa23b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8633db-a3ee-4299-8c1e-274c415d1776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1057eea7-ad37-4926-8297-9c7df08ba2e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f849229d-bb6e-4755-a9e1-f16f4fa01003",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da234761-68b7-45b5-8ce2-b35f6dbe31cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90c4e09e-709f-4ffc-8be0-8a0ebdaae64b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3afa343-78ab-4a6f-9183-aa17b4d3c384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab78e72-bdac-494c-b168-0c23a9d8fbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd9208a-3308-4ecc-8621-f313669c8795",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5b0384-f80b-49a4-8a52-59bf2221f3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60a1faf-00ed-4564-a270-35a189a24c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1faf48e1-fc48-4412-a838-64ae5c2e8f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a059fb9-1a93-4c2a-a2a6-1167687d3544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bd485e-ced0-49a4-ae54-a8446e6d3837",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc4801d-bbf3-4d3d-be3c-3ec5c6db187e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70cc89e7-aaf1-4990-b304-96d57d8c6bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d558b0a6-422b-462c-ab3f-352f4d11b335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08d71586-c229-4cdc-812d-eadf8b5d5d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbdd321-a45c-4201-a2bc-22d2f272ad1c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab2dbd-a44e-4240-83e4-5642588eb09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c6c01be-1887-4eca-8ab3-a65295d512c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382e5b08-c74a-4214-800c-5e0008d4528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee618f7-40c2-44ef-a5ad-4ffc7ae6e4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31dd3ec3-477a-4701-b844-bc71f6715353",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bd66a2-5688-4e16-8e18-85cdc4f0b1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4667d502-418a-48b2-8803-c2a8c643590c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c7649e-3050-4f74-87d0-7f36cf900f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "326c36aa-910d-427f-a192-05ba02033994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6895f2-3688-43f2-b558-e8dd30d90019",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0630d96c-eab1-4bc3-9350-983af4158e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25f0768-f2f0-4a36-89bb-6aca64527c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c466fca-0251-4d73-a992-1623c0dca152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c343c5-f753-4354-a2d6-48718b83f50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27882de-af73-4591-a610-259cc5c4a432",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741a24e0-d9e9-4a61-beb8-165b6e2fc8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0d3f36-2604-404b-bc57-da29e7ccaeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47251181-bc93-472d-b628-26b0edccd341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "df11537d-8458-492c-acf2-da42bd0f50e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd013a-67d4-449f-a37b-5f805d4ef300",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f72baa-457e-42d2-99ab-c68aa17f9853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8beb7d43-d169-45d0-8f4e-a22b544ac4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a084c9c-63d3-45c2-8a62-b3128c1ede3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e37e2204-9c41-4b5b-8255-8014dbdd7a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfd7b5b-199f-4df8-9cce-3e835b699db9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c47c3b8-b0d9-42f0-8d37-d4c86bccd348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950e8bbc-7349-4f95-be04-7535de6d2378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4500d524-44cd-4dd4-8c49-27eb77523de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "673caf89-e372-41dc-8923-26766c37aac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34f6e1c-8813-43f9-99b8-c477a129b43f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2406a9f-b5a6-461d-87f7-72d377ef8b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bbd97d-c4c3-4f75-8061-7ab0f117ab98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe74f59d-3bda-4ee8-a98c-61f30078cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7314b3dd-f011-4b69-bfc2-e5643e74e57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c62477-d418-41b9-a1f5-b00c58eafa21",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71be7d9d-b95f-41ad-8670-37d1dfbfa349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6af854-ba54-48bc-8d00-9ef761a54b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748b0334-4ad7-4453-a7d7-424cccea9cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d95fec48-685d-4fd0-9052-833a4cf7ba0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fde9cf-ba02-4ed0-88c0-9b2298107fbc",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe7a1eb-07ba-4eec-8e1a-a19005047086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e1ac52-eb64-4a1e-9f77-3238b80eabf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f746fe-78e1-4e65-b63b-0bda5d02ef7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33f4e3d2-b0a7-4d93-8c52-23f19630aa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53071e2d-0baf-4e87-8552-764ac175c9a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e5e313-9673-4b59-b4ef-6eb0dbf083de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c582b4a-555e-4ee3-8fd5-3400636c1554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cba2b69-587d-4837-bee6-b70e1382390e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3979b4b-ee8d-4325-9973-63088da7d6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd348de-9afb-4bd2-849a-980f42ec298c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd2e9f1-b89f-4e5f-be04-6c2d7221b8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d005053-40ec-4012-8f41-d25f00f00f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3308883c-0127-4ff6-9253-ffd75f829986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3868ea-57dd-45e8-8918-fd49241837a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03350c1-3106-4b9d-b81b-cf581069c445",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7dd7a4-797f-4ab3-b4b9-a0b68aaf5426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b45aed-49fa-4fc4-b6bc-475ea3ca6100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbd86d3-c8bd-4fac-a600-e54e3cf84c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0a7c71-e8d6-478e-b9ad-950d4c7f75d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be19239-26da-4dac-9538-9c579035e78f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6abf97e4-b188-4cbd-9da0-8d441fff50b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802a6788-1f53-413d-8702-556e7b0fb646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162204e8-1d95-4cce-9cd2-8960ec4a1f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb72015-6a3e-487e-913c-3a4bb761706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e446936d-a320-4908-b392-606ff10822db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66941935-76f9-4930-bd14-2b7dce2c8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c6d2e6-c057-4cd5-9e0d-bf13fa628a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b744679-44c8-4820-8f2f-99aa8829d8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eb6ef6-623e-4b2c-a3cc-d776a46c8a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53736537-9aad-4ed1-9b48-2da760acc8e5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b150e2-998c-4ad7-8850-d1bac5c35804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abb364b-f8c0-4ed3-8726-7e98f5a49baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd680673-ba28-4bac-ba23-1d23c6376e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11212c86-3a16-4f63-95af-76989ae88fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfafa64-08ed-41c3-a38f-a79e11e7412b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac811b1-29bc-4ae7-b7ed-cc5fa44613d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5c3c40-b8d2-43bb-987d-96af3d78e1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e934fae8-751b-441b-9a01-bebb84b56cc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc33239-5089-40fa-842c-1b8f8478dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b85846c-217c-4d53-89ea-cf13856caf0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "624c8c48-57d3-454d-9855-1dcaa7d4c15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2542b2cb-22ea-4db1-8a23-1f832f822fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59564ae4-f803-4f83-a8c6-0d715e6dc80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd709caf-21c4-4a07-b609-6b3d3eafa112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec920a65-6959-4d5d-907d-1f57eef0e499",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbb4767-53c9-49c7-90bd-4ceafa8310a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86abc0d5-f53e-4ca4-aff1-e0492ce396b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9940f5b7-73a6-41f2-bce8-1208667c862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4989634f-7403-4ebb-936b-fbebb2590675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6343da45-960b-4bf9-a305-d45fd85143dc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c4dc03-aedd-4516-b034-c97f82c8d0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2bb973f-c5db-44f0-9dc2-7e340d4a7c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f41a42-8968-463a-893b-343285c1d06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7c201c-4259-4c26-85ab-5edf82d774dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb93609-e8e1-4a64-9209-1e15bfc3553d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63fb8cf-a09a-4bf6-8499-22cbdb110492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0603b813-623b-4e2c-bb24-024ff93d0e01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d149dc1a-04f1-49f1-8294-a1a25b815602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa263e9-0013-4536-9e3b-c1fba8943886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17b8119-6eec-4d53-bd53-ed585e2bc47c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd1be29-263e-41f5-a064-990a148c8550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73011daf-7625-45e7-933e-a7726af6d9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5dfca6-0541-4ef8-9985-767d6fb624c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445d44a3-b315-4c86-b73f-fc6ae4496b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f88467-fef2-4679-9e32-6ffed97cb1a1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e514c983-38d5-4fc7-a462-ffbde841ed87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ed2903-c0b3-45f4-9c91-e682f77eec0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85032b2b-fad0-43f2-98b7-d33e95264621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab28afd-eafb-43a5-84a5-1aef51653e16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2adad726-0044-4ad8-89a2-645f489e41ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "005566ba-24eb-4905-b557-c41da36e6bf1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07b5502-de78-4df0-9d99-6c36a6d4b34d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "62b26d92-75f6-475d-8f7c-212d68022614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d75150-f2b9-47f4-b9a8-b5b0636b1465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7ef72f4-cfc0-4e41-877d-62c34c61137f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72de9809-386a-416c-8ea4-fcc833d11580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89543d34-d14d-479e-930b-a86eb1919949"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "493cea0e-67cb-4a01-9eec-069daef23007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1ca709f-6e9a-4459-a51a-4a054dc95bd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12377597-a559-4843-a0a4-ef3e2efb0f58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "40a175c3-d8db-47f8-8986-1675ff2b1633"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa057c05-72e5-46b7-9edf-fa12b87c351e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66b408cf-3049-428b-831a-a7bf0e901514"
            }
          }
        ]
      },
      {
        "id": "f23dacc0-42db-43a3-9dee-0e2b40cb15e2",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "498513fd-45ed-438b-9be9-7723ffa6a983",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b623c25b-2740-4334-8248-39bbaeb74a3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5cdfc937-f177-4ab3-99f9-0e6f76d3a79e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41d0d8c-a02b-4217-9730-6c5c499cdada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861c5fce-2b9e-4eb3-8f3b-f35ae0dc6ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948790c8-a691-42aa-ae5a-427d3e461c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca9cac3-3ca9-432a-ad3c-226fecdfb9e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af652a3-6e67-48b3-894a-4bbef526a1c0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a4aecb-4665-4953-bcb1-e863272b7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce2c4e2-aef8-4431-8b05-9d1fd4151b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0afcc34b-66d7-4762-8a68-642c0919b14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3fb07e8-f983-4d6e-9388-fd84dd6b4ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5e8d70-3719-435d-abc2-797b526016b2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c1500c-d599-4e30-88f5-856e5e1903f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3560af9f-dfb4-4a7b-af8e-d713cae61fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afda450f-899e-49a3-acb5-78fb84281b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea59417-d95a-49ae-8360-7b483825cc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c48c743-229d-4b04-b264-dbaf9b3f8645",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6696e7-baed-4c0b-869e-0759603a9718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53ac57f-63e7-4cef-94c8-36a57d04e02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfac999-2aed-4ca4-9533-078c7b4ff5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba59fda-05a7-4fd3-bc3d-73da4003617d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff2ecc7-ce15-49d9-b81b-512cc7e139ae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb79f660-28ff-464a-967e-90e4778f7a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3097f0-4cfd-42dd-888b-79e5946aff22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da39868b-4b19-4d03-813e-8928888798a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9f4ddca-730f-4707-9a27-b6be54207d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5a88aa-689b-47a4-b772-8363056107fc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ea2431-824b-4ec2-af99-f6d3e9d78439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93394bd4-a769-46a5-9d43-797cd1246efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cde586-7629-4816-89ce-8e12374ce16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "048e2f77-c276-4d1e-9fd3-0a8093f3350c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c7ca76-02d6-49ab-bdf2-1e469241a8d7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c722f7-1529-43b8-a620-04e80acf161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda778a6-a9ef-4bb0-a026-ffd7a9d64db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d06c18-e4d4-4c04-a1e8-ff68358dfc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4718ad9-4838-4ddb-bd86-e01b928e1b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76796dd-a76d-40be-b9ce-ab0714164940",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d241fe-59b4-4051-b1c3-88779eba866d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a468676-355d-4e35-b3fc-0e3753665aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b39c63a-b04e-454e-906e-46d4f0c3b15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9476c4-54da-48f0-a43f-7fd2d77d7a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc8d1c9-8b1f-4d04-b2dd-45e7eeeb8090",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b816d83-1ce5-4e9f-b142-10f82a15d1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959b93f3-6dce-4ce4-9ce0-51c7f50f6c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2042ed4-a1f0-47c5-aca2-4524e417d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff4c624-e5d8-4c23-841c-a989cd55ac1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68f8fe28-192e-485b-8a7e-ee74ff41b522",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aca907-937b-46b8-b903-ce3b23f460ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435c055f-10e0-45d1-9e07-d7afd6ebc380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d939a3bc-259b-43cb-98f7-ccfa7200dd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f8d9ba0-829f-4e00-b18c-a944b43a99e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358b584c-4b36-4851-964f-8e4a8c3c1291",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc6cd79-fa48-4135-a25d-ba7a30470e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75df949-f8f6-4de5-96ca-483ca08b3466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b682aeb-0aeb-463e-b433-367065fa7641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6e20921e-a9cc-4bf0-b67d-c863f0a41fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648a23f8-a7ce-4445-b420-928124a5f3e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66630ab2-2d2b-4cf4-89f7-1fba91c7430a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d061cdf8-6719-40a7-ba60-32ca60d0c1c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc400b2e-526f-4718-a88d-fe5de243ae44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a180a1b-4e49-47fb-8209-de21cd69247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe691db5-819b-41a6-a3c7-fde08516fcb9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66dbdc6d-2a50-49ec-a09b-aa9e8d649ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "674b0a91-56a3-4f4e-9803-d182fd493bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadc6e2e-2bf7-4726-ab71-c3b6a7486f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7ab80c-9b69-4e6b-b0c8-bfadddf403b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f218c6-063f-47b9-b42c-ec7620ca6aa3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd72055e-2bcb-419b-ba7c-85a7f79a9aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd7d81f-a4df-4721-9152-d444aa730cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f057b4-f5cd-4631-9428-06420de47b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b357a6f5-81a5-4a57-b696-754b9a9c1978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c266e9-fab3-4028-a238-20904b5a7120",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f4e3fe-1f3b-46c9-80f9-ff94253364e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9112d850-700a-4e31-98e6-6c647610126e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5fb96d-e867-4dae-8768-95439d22491f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "26dbbf70-c98b-4cc3-a9d4-b00c4b292030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd76fcf5-61d0-40ec-b28b-e6a592293d6f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ebc4e9-d94b-4b6a-89ea-c72b501bac34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a4b1c8-9a04-40e4-b2d8-70bc995de057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314ac50e-c196-404b-96af-a15c50f0aa9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9108361e-0337-4c29-b217-82c7dd89fe39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883938bd-e9b6-4e7e-952b-a48e74ea2238",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b942c30-4935-4780-98c6-aa29c0c87c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c5d9be-8da2-4746-a4c3-9d3e6a3fcefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae8eb6d-1a4d-4594-87be-38657bbccc13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb08984-553c-48e8-9370-3e353f0dae17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b0b3c4-b76d-44b3-b707-9511ab7ac67d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7bd238-ed78-40da-86b1-4ee632d7a368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f86948-1c40-42ae-a1df-2be4ad9f6c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac7adfa-21c0-486a-b8b4-d9b65d378dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "844b5182-4a38-4eee-9e10-1d47dc69c393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbe0bb7-65c5-47ce-baa4-d55f0765e299",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05997e18-2226-4340-bddc-656cdb6af784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c169c853-8c8c-460b-922a-daf9df2923fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f94f50-46a0-4298-be05-27bbe2c46237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aeb4d04-9b47-4f97-ad7e-a34d4ce11797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4c64bb-c1dc-4d37-a7b1-0eec1b4ef5ec",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738beadd-d375-483a-a0c1-1335332bf8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c5e23b-c081-4f49-bb88-ed27ffc1a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce513ad-2d6e-4b59-9ebc-6690c51089d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac579b5d-5d95-4eb4-a948-060e671e4768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fe2f8c-34db-4985-b942-db216911527e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a54db0-ee60-4284-bde8-8bd2b5bdd775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12bf9244-3202-4f96-9cf7-8eece0e9f6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6157ce5c-7dc6-4421-9455-48faeea91d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e360fc73-9605-47f8-8dc8-ee81ffbf3454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a1c5d2-8eac-4a54-a70e-8f1745fc5a0b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d962085-f1db-40aa-bb7c-5f0c0998375c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ade0870-00c0-4446-ae01-dbb480e2a851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499d2244-d81f-4ab2-b048-4bed9b045378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df09bf9b-d59e-4076-a10e-ad1455d4c799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbacfdc-03e1-4648-85e3-1460596cfa0b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec56762-0155-4155-8c39-fb42f66a0c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4528d2-d6ff-4be7-b175-98a37932492e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a60ca5-fd1f-4638-8ed1-f22ae185bf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6da3f934-0373-4706-a5c6-4d93280362b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7d768b-6d48-4d21-acd1-5ad123daea7f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1302056-0a93-4f30-b175-1e9dc39f8244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b637ef46-c800-4588-a95f-846c79e7558d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d79c77b-09e6-4e9b-a38d-c1e18e243694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa95a94a-d5e3-41e0-9de6-70fae5a9d391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a31a4b3-237c-4ff9-b7cf-4c5f19e7bb4a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90e123-ebc4-4e66-a65d-175470050e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d819673-f186-45bc-9f3b-47443b22e7b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1779b814-8d86-4cf9-a90a-d0c974e6c1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "220ba0e4-c4ba-48cc-aef6-1cd88c4cc04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2a242c-d254-4667-a47c-42653a8278d8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acced71-0053-43aa-812d-aca7f2b354e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce68fb9c-d665-4203-819e-bd5d0e7d8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9040a9-44b9-4f75-ae06-5188b7e420ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1909ea-50b1-436a-afb1-be80b34d68c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16539c8c-a437-4d25-b31a-d43c2f1ae353",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc95e71a-e882-4793-a690-9af16ccbc5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c44204-4291-444b-aa37-0af9a5bafb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b42425-5391-4fcb-ac92-a6f9707fcf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ae12c6-a230-4ba8-b5f3-1540682bb906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d563381-2a22-4233-ae56-b8ce9567234d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc76c2c-9699-4802-8186-e77fa4475ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e37d3d8-9efb-4550-ba1b-be21cc137852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d47356-fbce-4a0f-afe7-6bff2263c2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e930cc5-352c-419f-a0c8-a3032112cdad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97fd9bb-fc02-4f4a-a8de-c065ae33f781",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030bb574-4623-41f7-a9b1-d80ac2336a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e0e28e-b32f-426e-b67c-593cb2b70678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7bc024-05f6-4a6b-aae7-2a260b72cbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e301443a-c41f-4ab0-8dec-73915780b532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614066bd-7016-4f21-8c73-098a4ac07622",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32906df-2633-4085-80e1-2678d185a0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70104b5a-ba58-4c79-bd99-a89c7700c236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c4309b-0186-46e1-bf03-2a829d318aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe3f961-e447-4384-bb28-ac2e3d69015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935c2a1e-9b12-4631-a3ce-8c13eff73fe5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83168069-a568-42ba-9490-26b56e205899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace0b96d-5372-4920-a212-1500d0c7a5c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449ceb93-be96-4df6-9de2-5c7d56544b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8546a587-e6a4-419c-b2e0-daa3ff2c436b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeb50a2-8412-4232-99d6-0e636d76652b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e605972-234a-498b-9594-070795aeb9ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038f88ef-2dc4-4983-8806-3f23c473b1a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80156180-2506-4e66-9448-861bbe558392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9ff1c0-619f-4e35-b0df-4a0cd507f3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b1fbc9-d4ca-4a26-b668-60a42f69f1c5",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577b4350-3211-4860-bfdc-0eb7e2e4e0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1047414-ff50-4d95-bae3-47f9e199b66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f7f6aa-c7f4-4df5-9d1d-fb8975e55da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d6fa6b-a784-4183-be8a-244ebb758a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145fb522-040d-4113-a7d9-f3a8b42e953a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940798e1-a20b-452f-bcc1-a382dbbd07ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c150c896-9b5f-40dc-86b6-40fc2621af1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9982e9-52b3-4bcb-9baa-3939c3638f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82bf8856-e4c8-4560-b420-f4c2597ae89b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21ec997-3391-45ce-bb12-cda6d70299d7",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedc8d66-1c06-4a09-ab2b-a542104564d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5dfe42-174b-445d-942e-173250ba2997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69608901-76c4-4d5b-8b21-b1051fc606ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c7a86c-fcfb-4adc-b214-4eab88b55406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd20d08-3e22-4749-b458-ed87d38651c5",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88100d13-588f-4011-b7c7-c57f65bfcd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0f5d32-a186-4e68-a558-a7719e53e19e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb4643a-1bd7-41d4-904d-eaa6d1259f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0584b3c0-ba83-44e7-b515-390e971abd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea2cac1-56e4-4388-bfba-738f028c907b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de7f02e-2bf1-434a-9ee3-facec99886b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc721fbc-7a37-4036-adf3-bcc63149fbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b203c83-b224-42c8-8c1e-c68728e44dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb3d4b3-5892-4022-8613-8fa4fba0139d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a6dd3b0-120b-48c7-a31a-d82c8a8a9414",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "02fbd409-a6db-463a-a5a0-615818d3b9c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7397bc15-8b7b-4197-8bb9-187cad729530",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "37d7a3e0-8f65-4bfd-ad01-c1ae8d566558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4632cd42-8cb1-4ccb-981e-89f33dc80467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd883f88-a658-4a9b-bd68-d85b6c7f2a3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31be9640-677a-40f3-adde-81dccd553e60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f89ae6bf-1749-497b-a9a4-0ec9f6a63ef8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7da60a54-ede5-4002-88cd-c16b98759355",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1a452b9-2ac3-4384-bb5d-5af6cfbd4f62"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ecb8d1e9-f0f1-4b8a-b05f-cb9437d3d2a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c14f30b2-8b6a-4a14-a351-a27cd8fb1e47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0acfd50f-2df0-4690-aa1a-db50f062f8f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70660b75-66f3-4aa5-bc70-f209fd145359"
            }
          }
        ]
      },
      {
        "id": "4ff233b5-7800-4243-88d5-d8301b2fc0ea",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e2a548f3-6f2f-4436-bebb-79e6efe08379",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b723df66-b823-48ee-8a5e-5caf309f29e3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abca0385-7bbc-4c2b-a081-dc8fe6ebe2a1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c967d7a-ee6b-4b19-b88a-3fbd1dba1b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f889790-463e-4a17-9646-0e735eaeb208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa9af5-090f-4499-b3ef-b1c322f69c66",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18c51c8-b258-4884-921b-93892f6f5cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3ad1ec-3dab-4d93-995d-2219d8f1932c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d8a00e-4d55-4b43-bfff-2877ace38201",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8eb546-f45c-49d8-88a5-bda1e63fd8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47f9460-8d4c-49a1-a2a5-3f88ab0aad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24dbb5a-b177-4968-8893-e7390c912219",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f58ba07-7f3a-4bba-bf52-a651aac65e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78803c0e-b4c3-4cb0-b22e-a36dabcdf1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ee6c7a-9d4b-41f7-ba20-1fc806f039b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce22f06c-c7c7-434b-9e42-192478771982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9e0e3b-b8ff-42bf-9e29-f6f501ca7deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5ddafd-4652-4bcf-bfec-2de85fc5b422",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea7f182-ea22-435a-9fb5-0adb52b13e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a792cc-76c7-437b-8f1c-3ec4bceb3436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdf5c5a-363a-4c9e-8558-cf2fa5ae86c1",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6ef652-c7b2-48b3-aa1f-2132ad55702c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c63a669c-96ae-4607-b258-b41e62951ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad424ef5-1499-497a-89e1-3b60df67fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa450038-383d-444f-b202-002d28f995cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb70f272-7266-425b-ad22-bcd763bee88a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68143ea5-710a-4b03-b41f-76e6b92dbac8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf1bc25c-cec0-4c0e-a6d7-cb5c6b4c7b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a9200d1-b144-4a60-94ed-cce500d3bdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff904ca2-de8d-4d99-a750-9bd537c7de26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6fe5f6-2c7c-44df-a730-280b2e64f5b3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb607fb-256b-4f47-a9c1-96cec31088d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8758cc-97ed-47fe-8fb7-f266d7b0e2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de37aee5-e378-4743-afc5-3a8b3d6ebdda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4555e0ef-0e7b-4fa8-bb01-0139f8301085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca382a10-4a1b-42c5-8d38-e1d26aab147a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09fb88c-b979-4e2c-abd7-aaabb520a860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636894b8-772b-4e94-8758-9e5b2240c8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b9bfa2-7163-4891-ba3e-34183a6642bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd494ea-320e-48c6-a725-ad3711c2ac77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea68058-6625-4a4a-a224-fcc420ff1f87",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f841f1-80ec-4edb-897a-c7d88795012f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2265693-80eb-41c5-b989-acc405482714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d4c740-473b-4e45-bcdb-19a1bffbfead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f86a63e-a27e-4223-9177-927b18046ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b64d45-68ee-4fde-86ee-38ba51e6b6ac",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6358d6db-35e8-464a-89f9-eb417848e16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ebed6a-0d09-44de-b75e-475d76d9556d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a4fd2e-c44e-4e6f-9b35-a2aa72e790ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea3d963-197d-46ea-83b8-dd7b67aabb8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1a442d-9da4-41f3-a790-4a64b9ec6809",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcd28da-2b1c-4ec1-bba5-95901da068fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1d1ab18-8a67-467e-acca-156e3faed409"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56afaee-24cd-4063-8f6d-f885bf6e1013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7de43442-b270-4955-aa42-766dbef28263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fabed857-84e3-45a6-91df-d95fc33e25f3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cb3956-b61b-4c84-89d9-d1813db09999",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e13f392-d1d8-430f-9807-b06fa3d83af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d3792-fbac-4a62-8bb6-e183a034c1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2c8971-22af-49fe-ad34-8ed479707ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d634cb2-aa8f-41c3-822c-2439d79dcbd0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee6ea3b-947b-4e5a-98c2-164c1fe1b78d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174c5f73-0183-43bc-91e2-1707714bc86d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b898245-7d3e-484c-a64a-5ff06ce74da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a152839-5a8e-447f-ba5f-9adc9fd80237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2162816-330a-4014-80e2-db8f9614bc2b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c58dbc2-5ec9-4ef6-9c67-80821f59c93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b01566-6e4d-477c-b284-52b6af8fcf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756ba810-f351-432a-bef5-dfc9b2fbb693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da79343-8d3e-443d-91c4-3ec250cf1a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac31381-9698-4202-8616-0106c7353183",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5693575c-6ea2-4db5-9b6c-da32843be4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e67ba8-0984-46e2-90bb-feb2d50ef323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835f7b93-7210-4dba-a594-2cffd1aafda4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3ce48d-bcc9-414a-a061-8521d5c2705f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5293e8af-f355-43db-9cc4-b682a7ea92ba",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1281905f-4aa7-4f94-b0d2-6c7f3e76bb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7e5b4c7-8439-45a8-848f-8279c5e15cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f0eb4-15b8-4731-8951-d3331178004e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd697d28-773e-4927-8d5c-8e4b8a654a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf15116-b117-489c-9922-74c7e09acff1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cece2956-882b-4e8d-9996-2d761a9f1729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30288a42-9242-44e1-b3b7-307abbc31db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95ad6769-0ecb-4ea8-8909-af71c7f6844f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d164ec-086f-4433-b6fd-7af6a09054d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d21de9ec-795a-4ea5-a795-df6095e3e2ac",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9043f6-f3df-4a31-ae85-b4ab1e7547ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf7582e-887b-415b-a89b-ffbeaf258674"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd015e46-6b4e-4cb7-89f3-1e7c3cc400f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0d68a8-b1d7-45f6-82ce-08a5a725f5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1928fe-0c16-498a-aedf-d7a64bc1f02f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984664b0-a130-4a05-9946-4e55e63f490f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e840a779-4671-4a16-9fe0-0158890da42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158091a1-a85f-4bf9-9cb2-931f860e86c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49dd9279-e5a7-4d4b-ab95-264694b89fd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db12ad6b-e613-4400-aadd-f104882b7611",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa4cfd-d71d-47e5-a902-b44b1ba95325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094a3ad5-0b35-495c-bc1a-87c85ff42c4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e32d042-a381-46fd-a339-92362405fb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7acd86d5-b315-47f0-8d0a-7f5532db926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e2c3c2-f6f4-4d81-aba7-04223fd29638",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33439cc2-f63f-4563-932a-1812873a2923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f116c6-a9db-4563-b1b5-a47c9f9a226a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aabb7ca-f041-493e-9f4a-62688bca6dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cfa9a01-c6a1-4f17-ac42-d898468e0776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163d9468-546d-41a3-ad66-e8719983af9d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afc1099-6821-4a56-baf5-605c355b395e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0057aff1-6df6-4148-865c-b0d3d1c14628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e2b2c85-315b-482b-ae68-d493fd72330e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf946a79-b1c5-47ee-8673-81177782f9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb31a587-f1df-4194-bcab-7106475f704c",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb66180-9933-4b43-93c7-781a1bffeec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f53e2d-6db5-4496-a253-0aa1fea792bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2f672c-a687-47d9-9125-4c395d1742d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a010ce8-ab72-4026-a7d6-fe79eb137974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c3ae12b-8a81-46e0-abf4-06f5c947a989",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f841e6-3741-455a-82ed-01e9cba2263d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88bd186a-ee21-447d-86fa-d56f24cc3d92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7cf20f-a558-4318-84a0-9d52390e6b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d8dc94-c4d5-48d7-a72b-209ac7eaa28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d755223b-7022-4702-8d1e-30cf48e632d2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f30b09-8bb7-451e-bec7-0deb25dfdabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09af5d78-5d87-4858-acbe-ec096800fd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0388430f-e241-41d1-9221-8d4675840973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a65406-41a4-480a-9575-8c91b9515114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0233e7a8-be7c-47ac-b67a-5c3ba03de784",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79c7adb-a227-48db-8a7a-d286ec29a5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "148795ce-4a27-476f-b8eb-6a23015aee41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb33be0-8d88-466e-be2a-f9ce261f8318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4723726-00da-490b-852e-e3b4d7445653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc13a54-83b2-432a-856a-45a8d50147bb",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98c61f4-834e-4cfb-bfc3-b03a9ef6c57d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51966014-97dd-426c-b329-fcd2da020e29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12430ba5-5475-4062-8386-36e3cd1d4700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b77c1bc-f8a2-4b14-b90d-029e5e2dd806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f6b69-7936-438b-8539-dd47ebd9972c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fadf070-8c2a-42ac-8f92-0867b9946ae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c59525-7ccc-43ae-9885-6c7e60d2bd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16225738-917b-4aa2-b6b1-72eda8efb768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "533581bd-934c-49de-8a48-b8f4e7afc9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d73309e3-48e7-4941-a9f4-d8c22889d217",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0e02d5-ca52-4ad8-a757-890a91e6961b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc1525d8-ac64-44c2-a02a-7bac71606331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d428a7-767c-45cf-9922-428dbffd4e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a3489a-bf4e-40fd-9607-6f8e42d2bb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48242163-f53b-460d-ad7a-270e3ce81d11",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1968734-c959-42d7-96b7-8fa2e88a972a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3cdac60-126e-45c4-af93-06f6544fa8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c278d5-9c3f-40f4-ac0d-b6892c65a62c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0226c1-ffac-456c-ab63-21d4347e3039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67df2483-37de-4a88-8b17-243e947966f4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8349af18-2b91-431a-80ba-4b95507adeb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3275d59-863b-4fff-88b4-b7d2ffffbb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64238e1b-6dc0-42b0-899e-d117de8be39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a444ade-87aa-44de-b68c-38f0b77e46e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12493be-272d-4838-820d-da4248dd3419",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53933fd7-e633-4f13-af8c-b9a38b70181e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0a722e-3f82-476e-81cc-adbf5dd0af15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7c1e0-643f-48a0-b23e-d20d38341aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "554bc68e-87bf-4b65-9a87-cb22ddf603dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c394cdb7-3d43-408c-8156-08a8159153c3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a77c38-8860-4cb8-aaca-aa0ba102415a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8368a66a-7ffc-4ca9-9b8f-395b87027e9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6890d2f6-af05-4514-91c4-20109d896ba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0957cdb7-b7a7-4ceb-8772-61c25d5e17de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1ababb-a71e-4f47-ad3b-6609e45d5e58",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e7a686-a1ed-4565-a1d9-a22999041949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18455ca9-1ac6-4dfa-bd33-36c6bf24f184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbbbc05-4cb5-4cd9-980a-0c6d56910019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b024d727-8d1d-4b13-ad32-5c3716ae5672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d944b3-7877-45a4-b32a-41671df8a862",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1f548f-0de9-4201-810c-e038fc9fc418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3786b00-4321-4fee-93a3-34f14fb6f98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c117395b-e8d3-4e04-96ae-cd273b1988fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c958bc-a252-4342-b62c-5d23ddd69593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6569256f-1343-45e2-ba68-96bd41c18363",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d3a371-985f-4f18-ba11-69325183aebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720d897a-9661-4667-8769-5028450d2652"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53b7eb0-0c7b-4ee5-9b62-29b7fab3b121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82353bb9-a823-476c-961a-c0dd0a942f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49ea633-9914-4d92-95b8-cb0699aba7cb",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c73b00-7abd-4693-858b-0058e623ff99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5232c9a7-d3fb-4be6-89e3-e35be429e3ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc152d58-2f6f-4dfd-a993-eb19063c09e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb50d27f-70cc-4b01-a7bb-0a3c2e8c2e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f856ae3-06a7-4d09-a469-2a89c8bb57fb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0ae1fb-2c7f-4eb2-b187-1f64e158f878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b20bda-358f-4a6e-8ca0-e939e309986c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27712e7d-9706-4faf-9e9d-97bc70db9b0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c997e097-6e3c-4f1e-aa55-adfb2410e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0d0a4c-49da-4032-aba5-62482a8788fe",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b03944-0644-4c2f-9729-7fb26f3f460f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c0b972-964f-4cad-8cfd-45ffc24043d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1eaab8-2807-4835-bae8-0d81dc58fef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7e6973-bc45-4270-bfac-4b028d03b771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2144a84-cf92-4e9f-972b-2a1d23aeb007",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23e71f3-1442-44f4-9080-9989f9af9758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bdbbe56-819b-4934-be81-ec4549ccdb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a56b1d-3f8d-4b31-9dea-1f52a622b55c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b561072-5a1b-4102-98fc-f95b4d0e146c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38573d6f-4b55-4793-9c0e-ffbf1a476c2a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b633d8-3186-4a10-b827-cb326cec185e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde3aac9-480e-468d-9300-d46d93111835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63826401-05d7-4822-9b72-4cd9cde60bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec338f3-c81c-4f7d-9873-f1f5b22610b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8f564b-2113-4c55-a053-cfa5cc23bad5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf62524-11fe-4ddd-a60b-f4f5363c8325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780a435f-6216-4e49-a5ea-43a3dafa03c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e4e015-64a1-4a70-a304-dd5586530c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae92bfb8-9e7a-496c-9ac9-cff98a123625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f682896-33a0-47e9-9902-cfcf0e669f07",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc5e6bf-1fec-4c5f-abe2-e3a361420d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7461cd36-ee2b-446d-a7da-5dd072d1bde6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7960e004-d3d6-42a3-9de3-3701e958f58a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd679789-e9d4-492b-9ce3-10a8066d776a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716186fe-2896-470d-a2f3-200f9fee564f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "149f0d4e-ac9e-43af-95c3-5d94ff23c464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b651c2-09b6-44b2-b8bb-b7429e1086ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27930f9-fe3d-4843-96e2-59b40bf20d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9231ca-ce8f-4ba5-a862-51f930a84eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81405c8a-1c4f-488d-b54e-9b6efed8de5c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc7658c-7274-4e7a-8693-7b1fe484c482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1159c386-b690-49c7-aa25-a98fe5a8996d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded83af3-591c-4ba4-b0b7-a2e63bde10df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b892e9e5-5279-4c42-b7c5-7c66b64cefc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817f85b3-eeff-4bb1-a115-33d93ed5674b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fae365-f618-4fa4-b206-d6cccfb649ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1127b6-b977-4123-a021-18e0d8e126d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacfc041-ef25-4b8f-948d-15b48b714fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4833a8af-ace8-4773-aadb-8c274e01240d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c4fe3c-ff07-4204-a9de-69fe31c3be85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ac9b61-41dc-429c-9267-8d361f586084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e52c9e-0591-4954-b8a9-fb864556c465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8cb0d54-1761-4a33-a3d9-ae6b3b89b34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f27f36-3662-418f-85c0-28f1c635329d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c920e3-9a64-424a-94ef-19be9b878f44",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f15bb9b-087e-482e-9ddc-c165d6cd770c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116ff5b3-90a0-461b-9d60-b8c974236251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0fcfe4-d5bc-4a6c-8939-2c1d93e207db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f2e73fc-a140-4d07-a27c-4e07bf286d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4958eaa4-0528-4132-a502-d51415b29542",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3d427d-d13b-4827-be6b-1d76f1024520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27702f08-35b8-49fa-939e-dc0c669b11cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa09324-7d8e-4145-8fa1-af042a7a82c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a095b4b5-1a3d-4b24-9d3b-a60571719ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd51f8cc-c025-4f4a-87e8-5f9c84f263ac",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21cc0260-2230-4f7f-8ac8-4ae4e7a4ab9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01f902d-f18f-4808-bacc-1713a40427e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fea4a7-7650-465d-a4dd-2f48ad1fd6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd68b258-c757-4940-8e52-b65bc22823d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5889ed34-f7e5-4e9f-bb22-09a5dbf21ec1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf4a285-b90e-41a7-88a5-8ded3a32c8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "448e9aed-db72-469c-9427-f390d5dd1f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "865e5e27-3353-4b20-a64f-9914101d0ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88770600-8337-4436-9471-6588b39039ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9185ad-abbb-46ad-89d6-07618743f469",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f534c5d0-99e2-4e05-b7d9-d60d17b6e017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e211ce1-8479-4214-9eef-6ce0c11ba33b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cb3652-db64-4927-8f84-5860b8384a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1573c45a-4776-4976-995a-4dcc9e0fa03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34750985-bbd9-4927-b2b3-5313b71b01a7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077a1482-701c-440d-b8ea-8a0bffba2bda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66393315-ec29-4031-af91-9db41c98d051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52483427-0d31-4c81-b7bb-a7b0bb20f345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec53e93-f651-4003-b4fe-c7768f6eaddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1415a097-c204-40d3-8fb5-472f580ce554",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e356455a-7e32-436c-b9d4-e91a047039f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a2686e-ac75-4b15-a73f-bd2b740e8ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0933a0-b4cf-4129-a24a-6aea2a15fd38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff7d7c31-a867-4be6-a482-32b4e7ee302f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbfe729-709e-4bec-ad12-127a84aa3f3d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6b25e0-1e9d-4f15-bc51-de5f68b32e6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0306232f-6cca-4665-ae9c-bd8b705ebac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd8eb95-b2d4-4e36-9466-3ae02e8f9e4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1fa0dfe-910a-4502-999b-12d5b5cf49ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a4ab6e-22e0-4b5e-ae7f-d1d93f0379f3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1264e58a-93da-436b-a642-7d130a0f6fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a654f5-7029-4779-a656-8648486c87aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd379bf9-3ffc-4bb7-b303-001f53939472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca12ddb9-9684-4a73-9b82-5bf14639dc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69089327-fe81-485b-b9c4-0dc6bc4c4c5a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb13e981-b2ac-495d-95f3-92d8aa9469fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9e63c7-a019-4ead-accf-7a21882fce41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a9ce68-26db-42ca-84db-6ffd38cd5927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ddf9f74-2c98-4c82-bb14-b88d55713d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7b6312-e46e-465e-bf1c-8d73ade038bf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bdb6e4-176c-4fc8-8905-5abd6d910c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62af2018-71bc-443a-a195-16d2651686c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9e93e9-1588-41f6-b655-fb0cb434705a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e398d76a-2d62-44d7-9d25-d6ef69e792ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1df0e8c-1a31-4787-b337-706484205af5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c03a1bd-1f9b-498c-973a-a64f38feecc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a04cd9e4-fca3-419a-a0cf-e1c994ba6208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ed8eba-d916-4d13-9e8d-b7f589f45c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56d354f-9b76-4ee5-94a5-9c74908633dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996c46ce-6930-4a33-9819-745391f3ee97",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ee3b19-8893-44c0-ba63-3f799fe0f176",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f19b8635-1a77-4016-aed2-ff04c870e384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1695a7b-de5a-4228-9be1-0c55e0d7993e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e627d780-7a50-404b-8bca-8e5d2de1de8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a705c18-6dcc-41f1-b240-e18f5869dff8",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498e5305-b2ad-44fb-bbbb-10a6724a9393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a0483b0-3f6a-468c-b770-45d108be4a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbdbe79-bfcd-4cac-add7-3e8f99962f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289e2199-064b-4eca-a406-2829c6058510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616e8bb9-f1ee-4cd8-99c7-a923f048e04f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559dd47d-150d-4025-85b6-0d381bcd0490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6afbb7e-7197-4cfd-bf98-7acf0a36ac50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb6d4dc-9cba-4145-a7ec-a0aa3d99a659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3703f122-7a48-4b84-8ce4-b80a7eca3dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350b93a7-2751-43d9-ae2f-f29e379eceb5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebe586c-59fb-450b-aa3c-12e3acd2ffc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70bf782-9fee-483c-a44f-bf87fe56e4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93672237-6060-426a-b2e9-99bd42c4e095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232aea72-cae5-4f9e-b24b-93f364110938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdec003-6c72-4776-83bb-3c40db51c4f9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75cee0f4-3674-496d-9499-028b33636fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ee398fc-fdc0-4f86-9da9-1a5a738071a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09281e9-4456-4e7e-b43f-3d3ccc36d81f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a426cd9b-3811-4726-b217-c8f3e29ab009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464cef82-ba9f-4d8d-a9dc-c5906b87582f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ef3df-88c2-41dd-b918-b1356952549a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb80e3a-7353-4ff2-babc-ebfce325f2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491e793-4a6d-4130-b52e-ca0aca1860da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372ca912-c312-4797-aeff-dcc21d88959e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08381f5-e06f-40b2-ab53-4c16c727c4c2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaef90f-5045-45c2-a20e-412b646c9f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e585e50-941c-4c29-a537-2322b78736db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3392ef-63cd-40ed-95dd-f2f23ff15cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafabcc8-c1bc-4346-b784-f81efabf72f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86206776-802b-4885-acbd-560705612938",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4087010-1a39-4b1d-b8d0-2bd7f7c8257b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8134a85-d781-4098-84f6-14a0f4603c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a07817-014b-49ba-99ae-452a75c0ea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a3f63f-78c9-487a-bf85-9f11836fe308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cc51cc-6e93-4613-9ad8-003e6447dd5b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2131d37-0cd5-4958-84a4-e6becb8d6aac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6647e64-8524-4aa4-9cee-3b33ac865452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06b7c83c-5d59-4a1e-99b4-0bafca03225c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e39611a7-8192-477e-983d-e87b484d12f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a0c9a-0fc0-4a01-8c2c-fca44cad1032",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ace72a-a148-40d4-bf05-6c7e6f8dd96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522e0f86-2845-4074-be3b-8967f7ef6184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1364e04-b36d-407b-8e63-6f1c5a8105af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181e2f57-07aa-44ea-9247-ceccf23f37cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3595d0f7-9f1b-42b2-bfa4-1579e6dc92f3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bae1dbc-4d1c-429c-8c81-d22c7639443a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d4899b-55ee-4a22-b366-10c4c10d63df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4c5905-6e7b-4f79-8d80-11ebfd003e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe96d31-d39e-4ff3-8202-c28ad0d4fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470ec320-e096-473f-90b9-77bd461c257a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267dad15-2752-46e5-ba2e-064ff97f07e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4740bd46-56f3-40dd-a9e6-09cd246600e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ddbef24-7acf-47dd-b3e0-346a122a45ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9978ca-55ef-4d15-bede-9b1f0fd36b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b22e97-5982-43f4-8704-be733e787bf5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d542ae0e-f491-48ae-a382-6705e2bbe6ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "364b8f43-25fd-491c-b258-ac933c5c70dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9c0cfe-da8f-43bc-810a-c6863ed604ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d18f20f9-fc79-4e26-9013-644ded1bed96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530f6fe2-3709-47aa-a57e-55fdaf662ea9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bcf603-99bb-4314-9898-07895523d86a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cca39d1f-d206-4ffa-a081-e7742eb1a6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb55639-6ee7-4296-babb-fbc05b379db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e649cb-7c02-4e2f-ad38-4d570b52d544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992663af-626e-4883-bf4b-23de2796d425",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ff217-ae36-4ba1-a9b8-311612b906fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622d29db-7ba2-403a-84ff-761203885321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f98e09d0-018e-48ee-a6e4-6b1afe2c6d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d388dd01-e819-4fec-9f1c-2fda52bc498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b703f950-aeaf-4048-831b-8dfaaf27c9a6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfbff92-7c19-48fe-98f3-b681e3a60259",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37311eb-ddee-47cd-8ace-0a7a96d16d9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea65800-fa20-48ea-94bb-746828e984c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2332afab-0b7a-423f-a0b9-87579ad818db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c40a8d5-2e6d-4da6-b839-d22db68b0463",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4adcd204-cf2f-4316-a73d-37dc508f22b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d4405a-0916-4d65-b1cc-96d8137fe351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245150a6-4d75-41ea-ba6c-7d52c808c4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a41737b-ffbc-4422-a9f4-f014a5f4eec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4484006-1d32-426b-91eb-bfe20ad9a02f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000b641-012f-4abc-9621-d00328b22de0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4664dfa8-f127-4ca9-830f-fdf00b44a72f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02eaaed-606c-4eef-8516-1afafe7e018f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee6018c0-28a2-4894-9e47-da77f56a9cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29847edd-30d9-45f1-999c-bda1342e77ac",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9f00de-0f28-427d-b1bf-c0065eab876d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ddbd063-9d1b-4b33-b7bf-72d77769534e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eaeb63-d72e-48e0-80f1-e336133b6ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4839a73-be32-4566-9a2e-e67041eaf42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409bd367-598c-4504-9490-42f0204548b1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17e592a-2a28-40a9-adf1-df707a463314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d5e2ae6-62f3-49ce-b687-7583f71499a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67deb2b4-bf42-4e0f-86f9-08e7b5699493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff350e52-e034-4611-897e-891dfe9f61aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f66b26-a504-4f14-9660-0e4b367e4ff8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d76a7d2-c4f0-4350-a6d8-9f7a982004f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e68f8967-b94f-4a9b-9b6c-1d73c0d5536b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211f760c-eab9-4d7b-a1da-46aa47033e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "699ba3f3-f337-4833-8815-54e2725c1d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7d2927-ba67-49bb-bd87-e241a235718c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72987580-60e9-4ff5-b2c3-4f65a3ea47c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad6ea11e-fe0c-40f5-8c50-1fb1278bd4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c96128-c528-425a-a3e3-c2c93d48701f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dbbb383-7a73-426c-8c52-bea3ab7f07cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcb35ac-f621-4e8b-8378-a983969152fc",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f242575d-55da-4e2a-8493-d30dddb1ce38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e338864-9dff-43d9-bcc3-4aacb7d3e040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5782632b-2d26-4cb4-a553-fe994d8756f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a78a43-7868-460c-8623-890422faf81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc1d9a-1568-49be-ab01-2b0c8e45ece4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e362821-b92e-4748-8e8f-ae0bd3241365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c80c8b1-7b37-4655-a94d-2cda45749809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73326e1-a47c-4d59-84ab-029da7c96939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d78f224-efba-4113-82c7-257c896b48c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efcda8b-2c69-4a27-9742-f379c3cbba34",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19604e82-fa20-492a-966f-1fd0b28d0990",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1984b14a-f3af-4a42-976e-dcdc20d5fa1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9551860-d2ec-4f85-bbf1-d59dc021a3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09ad385f-859b-4c2e-911a-8adda23e9b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8d9785-fa3c-47d2-af8d-32c87701d100",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c775b5a8-dd63-49e4-a6b1-aa1c5d39d287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d549774-7296-4501-80c0-9d5c3118155b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc7c653-bfb8-48f3-9519-f6be8c7b3c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9396dab5-4b44-4201-929a-87d90894b72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdeb3d6-4cde-4eeb-a08e-e823171b900c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b70ace2-0740-41f1-9bf3-448391812dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "879b47c3-89a1-4d3c-81f7-bd16b6ce464d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad5a18c-e166-499e-8a7e-4c185937baea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48a47b81-3d70-4d17-98bc-d664c3de9df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f412d83e-6298-4dff-aee6-fa51ddd623c5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2840e6b-f2e2-4831-9502-c82e826463d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b71008-3a48-4d86-9b6e-aad40f5ddaa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b6cbf87-d443-42fa-8e5e-b4a336825f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd569eb-ff46-4672-a389-5b146ad6d867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd715ec-01ab-4aac-8a58-26adde66fee2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af944461-abd2-4664-a09d-a5178f3baefd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a7c71ff-6648-44f1-bf13-a4ccaa500fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02264d5b-fd2c-409e-bf9e-fb3c894542b8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01bfcfa2-88bf-4af2-a4b1-060d95d77377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb201f42-4eb0-44dd-a767-097dc5cb0a52",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a757aaf-2d3a-4fd8-b132-1cb57ab44184",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f125ebb7-ce48-4b39-86a2-011a0e41e578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e1ba05-b963-448b-b0fe-fc969f404231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd743f1-557b-482f-8702-717c15c4133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb60fb94-01d2-4809-8733-a383564576cd",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800cbcc5-e313-4cbe-b707-b490433a51be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c8dc12-8377-4a60-8c6b-a845514045b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "428cfa66-4661-458d-b516-43bcfead018a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fba8b5c-c802-4be3-8322-fa67d491c53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f59d6d9-8f93-4e6f-8cbb-454122cd169b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39e6571-0faf-4b68-bdcb-a056cd49ad3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919f3f29-be85-4e48-a21b-c28add0bbb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad25a89-9103-4005-98e5-3d53e668a9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b184bd6-3aad-4927-a6e4-77f614b64c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82eb7d1-e220-41bc-a868-ada243703af7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1a6f52-27d8-4cca-a4f0-55d7b51a325a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45e3ff06-51c0-4cd6-97f7-c67c36ebf995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1849c373-3bac-42bb-8b79-9ff127d43c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccb8195-0196-44ed-857d-73d89bac363e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f35b0f3-92df-4770-8129-b7b923d1903b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b38950-ae5b-41a6-8263-e03e9ab731cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "def238ab-7943-497b-9637-2effa5771e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb7bad3-238c-47a1-8d50-3e68026bbfec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8d785a-8738-497f-838f-7b61c5b4a24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4769ecd1-2615-4bd6-bd7e-cf04a98a5ed2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d580fbbe-fbac-4e50-a864-aef1b79efec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a4cac26-6bd3-40c0-ab49-a22fa7c10221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a95843-4801-4820-9443-98be5a539719",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6628da4-dac7-4363-a973-0d668df27add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2368d0fa-f838-42d9-85c4-74ce8cfe5a9d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831ed0ca-93f7-4b98-b8ea-f838ff815040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4255573-de02-455a-9167-a41a9f6bf49c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52111fe2-4d43-43e9-ad11-b51de456a8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85c2237-70b9-4784-8797-b56ac876f78c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4623e0b3-36f9-4940-b68c-ad08cf8dc2b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9ddd3cf-b26a-4c60-a87c-97319b80d7c9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2472e99-49ac-4c8f-8280-c89ddc717674",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f21ee84c-7a48-4e69-b956-0351bd95ea00"
                    }
                  }
                ]
              },
              {
                "id": "516469dc-06e3-4e4a-b273-e3190973aa62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da6c778d-63d0-49e6-9a67-a2735902b7c2",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcc2869-8c94-4953-8824-02548dca1e7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a9457494-d24d-4ab0-a1b1-8cf7164cdb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89681f59-04c9-4ace-b491-d4d56dd92b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd51288d-cdd5-417b-9d62-82b2d74d663f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02e2fa7b-e845-481f-84f8-8c7cc40cdb90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95e5ad5e-c8ee-4d7c-9933-a9cf0132a243"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36276266-b002-4221-90e6-72c3766d9493",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "198ba09d-dd3d-4dee-a139-0d7cd17e0625"
                    }
                  }
                ]
              },
              {
                "id": "34c4008c-a19f-47db-b344-9205c6dfdd3e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cee51b94-6e10-4990-bede-e81c7fe3ecd6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8e0496-fa87-46fa-9e21-97a971c8c5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1eabf679-ea92-43d0-8d82-e1664c54930b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28a907a-3b42-4e89-a082-f19c54ad6606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0541ebad-86e7-4da3-9fa8-957b99f661a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "be5cf5ee-7365-4f80-91cb-fb8b62eedd83",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9a85c81-36e4-45e7-8126-b8bf71e4b59e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1db01c38-399d-4568-a388-baff196db872",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd37aeca-db14-40c0-a8a7-4ca128c4d6f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f531052-3a91-4379-a0a4-3e69cf209606",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b22414de-c92f-4187-ac1e-1617a4fbd3ee"
                    }
                  }
                ]
              },
              {
                "id": "420bc889-3c8a-4b57-bdc3-16f5f3bc6308",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbab7235-e29e-45e9-9160-3f5a5a73b08a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f86032ca-b61c-4fd8-a972-440ff31b2fa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4457d173-6c69-4f9e-bdd8-7c85a4f60797",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34168ff3-04c7-4c23-a049-d90285aebc70"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ed7e90c-4d3f-48fd-8a2c-c8e871a18d05",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4ec8c4ec-8f62-4ef0-a0c3-e275e8bc44bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fca56f94-fca0-41c1-ae18-04db40881da2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ff70694f-f7b1-4cb8-8e52-81ae1c0e24a6"
            }
          }
        ]
      },
      {
        "id": "084698bf-123b-4740-84ef-0855e82ae4e3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "89f36086-d3af-4fd2-9b6c-2df621a566e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9b600de-7f81-4e0c-9679-8119b7e3472d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a860ca5b-24b4-428e-9aa3-206a210c7e63",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28740ee-0ed7-40ac-a594-c6ddb7a28fd1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b54b15cc-d67f-4fb5-9a13-e3b6d74977d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb3272c-1b70-43b3-8a80-6b43aca3ba76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b75cef8-3fc6-4374-9141-37bd0d356e1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1d82063-4413-42d6-98df-a0183614df77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc4361eb-0e31-468d-a9d2-a3f64a486e2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6864f6db-5cbb-4575-a8ff-4e92def07b46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78ccee13-8193-4d30-b9ff-3bc35f78d3c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfa52cea-e6e7-40ed-b021-bec9b5d5843f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6233811b-c283-423f-99dd-3604b07122b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d43c0e2f-daf7-442f-b453-641723d690d9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb4e6dc-d26a-4d43-81bd-9d7787db57e8"
            }
          }
        ]
      },
      {
        "id": "ff9a3461-562c-4538-ad79-6fa884729016",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1e8b3b62-2c89-49f3-998c-6f9c41d1888d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7369a6fc-a9e5-4f84-a284-124d75ba845d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d097ae56-5b64-468f-a409-f709925ba78c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd32f7-a3aa-4a62-85d8-3d18ee7af6e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19e368a1-2435-4b06-b98a-a7d69e87a0fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e80609-e01e-4242-85d9-c24f13e66a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2cf15dec-5585-4672-9003-f619f9abdece"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f14263c1-0a44-4ebf-a292-a9c0c163023f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62c28ee3-b871-4fce-8386-71b796fd4408"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12c3fea2-7566-4ab1-a2f9-785666fbd130",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fe9ba41-301b-444b-be7b-cf3d53341c8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51542236-5e45-4ff0-a268-e2ade7463c1a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4de400c1-8c52-4d07-871d-40ce9b70caaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ea67f87-6b38-4513-be79-e37bc55864f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c0dc9a39-1502-4567-b942-28cb75e6df72"
            }
          }
        ]
      },
      {
        "id": "93098615-85fe-4641-a12e-7f34c568eb09",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b59cfa26-5b95-44c5-b407-93de61e366cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "212b9822-47b1-4dd0-94a1-b39e5b45c86d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f4ea1613-8b5d-4d3b-bd07-476d52e4b541",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f22724-7bb2-43c6-814d-b237eb5a7e50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1efb774c-d4ec-4458-b416-df4786236ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc8cb0d-8f95-4175-880b-bd701b75176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef2b4fcd-511d-4656-9cb9-9d4ada1596dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2093225-4647-43ac-8926-fa643d90e1d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6b4f35d-7aef-43d5-afd0-b00f61054d05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "00143d68-074e-43ee-bf07-f78adf567e23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fd2f8f0-e315-49c6-92df-b90afee578e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1342b6db-dace-48a4-a4a0-0b2c22081e6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "393ca5fd-9790-4017-ac3d-b973aa01ba33"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47490d15-2d77-4453-9acd-28f8e22fa56b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a96ee229-bdb8-4bd0-9d35-7cdc6bdb66b9"
            }
          }
        ]
      },
      {
        "id": "41630405-7960-46b7-ba44-0ffc925b2e25",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27623d60-7456-4a2f-acf9-95afe6b9ab2d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf8399bf-1c00-43d1-854e-cebc73c78294",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ce58ccad-6c21-4ceb-8088-17dfb50006df",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4be1b7ff-6d41-428f-ac06-9f05000e76af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a8caa74-2fcf-4d1d-8e8d-38a2790e2034",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 104.73684210526316,
      "responseMin": 30,
      "responseMax": 4793,
      "responseSd": 413.6359670097158,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1711067630959,
      "completed": 1711067670317
    },
    "executions": [
      {
        "id": "6ce4b516-cf49-43c5-8fa4-bba531ca8246",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2e0903a1-9bd5-4362-bae5-49bee222c233",
          "httpRequestId": "b95fdd62-fc9c-4ccf-a8f6-778309dcf752"
        },
        "item": {
          "id": "6ce4b516-cf49-43c5-8fa4-bba531ca8246",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "fc3106ce-9cbf-43ca-aa5a-e36031ab3987",
          "status": "OK",
          "code": 200,
          "responseTime": 122,
          "responseSize": 0
        }
      },
      {
        "id": "5e5b83ea-871c-454c-a3cb-8097b5e002e6",
        "cursor": {
          "ref": "8e68dcff-fc99-4704-bf22-1300c3416c0c",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1e915c5f-cd1f-4f2c-b27c-766cf73ed0d7"
        },
        "item": {
          "id": "5e5b83ea-871c-454c-a3cb-8097b5e002e6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "903fdb69-7c6e-4ac4-88f2-8e376ddf68ae",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "2998e7fe-b9a7-4691-834a-27704341e6b7",
        "cursor": {
          "ref": "d8e3386c-08eb-4bcb-99c9-5897f998299c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9064a5b4-c2e5-4972-9f21-7522427c40f2"
        },
        "item": {
          "id": "2998e7fe-b9a7-4691-834a-27704341e6b7",
          "name": "did_json"
        },
        "response": {
          "id": "a93f0a71-d960-4935-8bf7-a1c66768d1cf",
          "status": "OK",
          "code": 200,
          "responseTime": 288,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053a5e35-9d3c-4fc4-9bb0-f6fd2a3f6724",
        "cursor": {
          "ref": "8dd9a48b-784c-412a-afdd-299d9bb710d7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a9600c9-74d4-4bd7-8a89-7cfc2b4cf4b1"
        },
        "item": {
          "id": "053a5e35-9d3c-4fc4-9bb0-f6fd2a3f6724",
          "name": "did:invalid"
        },
        "response": {
          "id": "29270a0e-ff8d-4e1c-b2f6-9a960d6b5efa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 489,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053a5e35-9d3c-4fc4-9bb0-f6fd2a3f6724",
        "cursor": {
          "ref": "8dd9a48b-784c-412a-afdd-299d9bb710d7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a9600c9-74d4-4bd7-8a89-7cfc2b4cf4b1"
        },
        "item": {
          "id": "053a5e35-9d3c-4fc4-9bb0-f6fd2a3f6724",
          "name": "did:invalid"
        },
        "response": {
          "id": "29270a0e-ff8d-4e1c-b2f6-9a960d6b5efa",
          "status": "Not Found",
          "code": 404,
          "responseTime": 489,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb11fae-f227-436e-9329-2634e98aacb8",
        "cursor": {
          "ref": "163b0121-f124-49a6-9be3-6f04e63ea5ed",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d7c34c72-82d9-419a-ace1-18f9f71ebfc0"
        },
        "item": {
          "id": "9eb11fae-f227-436e-9329-2634e98aacb8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "54f652fe-27d1-4e8f-a304-3b67d2e85803",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a368eefc-a1f4-4dfb-a4bb-cabba85f7f84",
        "cursor": {
          "ref": "193434db-c030-411c-9b49-37098df2ad07",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c6a39c3a-e29a-4180-a9c9-4b7445dbc4eb"
        },
        "item": {
          "id": "a368eefc-a1f4-4dfb-a4bb-cabba85f7f84",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d05a0da1-8e9f-4ee1-bd28-d8f6f3960ab6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1552746-b1eb-461e-8e56-3fe1d82a1b70",
        "cursor": {
          "ref": "07cc0687-03dd-4593-a487-5523bc0e9c4c",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "405dd3d1-19ab-4ff1-81a7-13163b020b53"
        },
        "item": {
          "id": "f1552746-b1eb-461e-8e56-3fe1d82a1b70",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5e3715c2-458c-42fa-ac6c-94eaf36c8028",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e4b134-a2f2-4f5f-be1e-3a43016424f0",
        "cursor": {
          "ref": "3957e2c5-0586-48ef-8990-be00ad9a1c9b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31a6acda-cd00-4230-b8fc-a9bb26a7e827"
        },
        "item": {
          "id": "35e4b134-a2f2-4f5f-be1e-3a43016424f0",
          "name": "identifiers"
        },
        "response": {
          "id": "6397cd1b-b03e-4168-ab53-0894c53f0905",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65241cc-4e66-4744-bda2-3843a4703896",
        "cursor": {
          "ref": "bb8c4fa5-9a40-47b5-b3a1-1fd0abe48b43",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8d842671-acb7-42dc-b6bc-5dca9b1527cb"
        },
        "item": {
          "id": "b65241cc-4e66-4744-bda2-3843a4703896",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b8264288-0d06-4284-82ef-762dc99b8561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e6010e-b146-4827-8c2d-7ec3fc89eb3e",
        "cursor": {
          "ref": "17e98490-2903-4436-8e09-183cd951233b",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "90832d68-9773-4b32-be41-c66053381a44"
        },
        "item": {
          "id": "63e6010e-b146-4827-8c2d-7ec3fc89eb3e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "72e8e550-f82e-42bf-90c7-c164241b6c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27497d4b-d85a-4a71-b260-e2769c4d78f3",
        "cursor": {
          "ref": "15f441eb-0a1c-48e4-bcc9-253d57b121ab",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4ac048c8-7d3b-4c07-8165-93255ad2bd17"
        },
        "item": {
          "id": "27497d4b-d85a-4a71-b260-e2769c4d78f3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4a64d2c7-9149-4df1-9bf0-3b312b6d9dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf30783-87bb-4c73-a25d-70fa8c00d61a",
        "cursor": {
          "ref": "cc01a488-a8a3-4757-a3d8-35208238b884",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "40ba3440-7d4f-4f2d-91cb-d781042e7ffb"
        },
        "item": {
          "id": "1cf30783-87bb-4c73-a25d-70fa8c00d61a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "efa0c7aa-6998-4b73-8826-2c0dfe9508b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed0d420b-852c-48a1-a6c6-6cedc60cb937",
        "cursor": {
          "ref": "b668a713-0e4c-4355-b564-cc5311dd9862",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "96d299c1-f612-4c33-a653-ba4333af8e3a"
        },
        "item": {
          "id": "ed0d420b-852c-48a1-a6c6-6cedc60cb937",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7ee67ec0-1f52-40f6-b631-0ecbaa904443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6862e67d-de27-4db0-b223-6e09dc501ea3",
        "cursor": {
          "ref": "20068b1a-7a9c-4674-aa93-c3298101a9ad",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c88226c1-e47b-4068-8f12-09b958bfee66"
        },
        "item": {
          "id": "6862e67d-de27-4db0-b223-6e09dc501ea3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b30610d1-fc16-4ea8-8a46-60abd5246541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c9d2de-26a3-4a61-ba85-da5c4b2afc1c",
        "cursor": {
          "ref": "a7e3cfff-456e-445e-9b49-383c6710d779",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "459d84fe-0a3d-4fff-8214-b24d8828207e"
        },
        "item": {
          "id": "39c9d2de-26a3-4a61-ba85-da5c4b2afc1c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b2c70ef6-002a-4faf-a0b3-5d605d4ada8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fd9514-26fe-43a4-8569-1e6867105a27",
        "cursor": {
          "ref": "428f01b0-e86e-4a68-b6ae-0dbe595446bc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bf2ba569-025e-4960-ad2a-bec458358298"
        },
        "item": {
          "id": "45fd9514-26fe-43a4-8569-1e6867105a27",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "3cef8198-37f9-4dcd-9e35-62c5b4abdc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2ed21d-1b3a-461e-9bca-e5849c0ff1fb",
        "cursor": {
          "ref": "24039094-804f-4ecc-bc51-869dad075b20",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "10896410-d268-415e-afd3-0da9fe2718df"
        },
        "item": {
          "id": "0f2ed21d-1b3a-461e-9bca-e5849c0ff1fb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6e57e0f8-181d-48a7-8dee-507e665637f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d00687c-3ea5-4d45-9368-1463d42589a7",
        "cursor": {
          "ref": "f61303ff-e39e-44b6-a51d-9207f43a8f3b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "3af8c07b-b20e-413b-bff1-eaf3a5211775"
        },
        "item": {
          "id": "7d00687c-3ea5-4d45-9368-1463d42589a7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7765dc19-3d0b-4623-af2e-9f9760aa0dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2084716e-9320-4f28-8722-9cceb6b6daef",
        "cursor": {
          "ref": "ee4fe6a1-7fc8-4e07-9e0c-d4bc1ba2cd8d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1e1ffda5-cc93-4242-a5b2-d1c6a54e0e21"
        },
        "item": {
          "id": "2084716e-9320-4f28-8722-9cceb6b6daef",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "03113ef3-0de9-4694-9c18-861a54c633ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4587f202-f401-49ea-b096-18d72bd3ae01",
        "cursor": {
          "ref": "476be05f-4726-4108-9f15-0a18cc25caee",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b1c13104-9ee7-41ae-beea-9122c8430b27"
        },
        "item": {
          "id": "4587f202-f401-49ea-b096-18d72bd3ae01",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "21b43cd3-b051-4d21-aab2-ad7bb68bde68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b3b37b-795d-450d-b663-edb3e13b7578",
        "cursor": {
          "ref": "1227a7d2-7037-49d4-86e2-599ae367942b",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9903aac1-7d60-4947-9de0-ed5a714d27a2"
        },
        "item": {
          "id": "02b3b37b-795d-450d-b663-edb3e13b7578",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "979a38ed-1d87-4b1c-9bab-0a062683530c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 204,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba5e1ad-5fff-48b2-8ad3-821f42ee5ef7",
        "cursor": {
          "ref": "671bb90a-6f92-44d9-83c1-39200b267675",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aad8f4d8-91e3-49c9-b254-2b0238a98f93"
        },
        "item": {
          "id": "9ba5e1ad-5fff-48b2-8ad3-821f42ee5ef7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1d30d0b4-2440-4cce-ac0c-405ef3157aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5c8bfe-c3dd-4f14-8678-a4332a50e6ee",
        "cursor": {
          "ref": "ee7c1217-4d79-4b2e-81e5-8b9ec6c73735",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2eaed69f-5e5d-41a1-a02f-ef9ac04ca23d"
        },
        "item": {
          "id": "4a5c8bfe-c3dd-4f14-8678-a4332a50e6ee",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "41120d75-1610-4f00-b836-7844929b65f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6c54ae-0e9b-464a-b49a-adcb78664937",
        "cursor": {
          "ref": "902ee18c-250c-4811-b7ec-6dfc006342ea",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "84e7ddfe-57ed-4000-9135-a7a3daac3f08"
        },
        "item": {
          "id": "ed6c54ae-0e9b-464a-b49a-adcb78664937",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03ce0718-a0e5-4143-8601-4c84a12c8e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59328610-030a-4882-8b9e-023053ddc0f2",
        "cursor": {
          "ref": "e4b8a903-766d-4833-a1c2-66aff0346749",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "07a9c9b0-6191-4e16-b4ff-a0d9430a98dd"
        },
        "item": {
          "id": "59328610-030a-4882-8b9e-023053ddc0f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c2d682af-b9a2-4541-8f3f-021c09e233f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eff660-44bd-4f76-a4a1-c2fb9240b9c3",
        "cursor": {
          "ref": "fcf9589f-4675-4b29-a800-a6b5becfd3d1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "94cebcea-c0e2-4a50-9454-37094a5ace9b"
        },
        "item": {
          "id": "51eff660-44bd-4f76-a4a1-c2fb9240b9c3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4a37bb08-120b-4e54-ad23-7b7f2d8bd81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d57a14c-8619-49b6-ac8a-6a162cef1984",
        "cursor": {
          "ref": "d0fc59de-dceb-4642-ab27-576e27b590f3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b8959bfe-f4d5-433a-96f5-73de8f4d62e5"
        },
        "item": {
          "id": "7d57a14c-8619-49b6-ac8a-6a162cef1984",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4fd07340-0161-43d6-92c8-e5077ad171ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945c9188-85cd-4828-bc9a-a88d7702f109",
        "cursor": {
          "ref": "4ecad39c-3ad4-4ebd-9152-9050ce29d95d",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aeb7d971-000c-4d71-9815-a6ea881356b5"
        },
        "item": {
          "id": "945c9188-85cd-4828-bc9a-a88d7702f109",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ee8c189a-ea63-4c48-829c-82771e49e647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e47f81-c682-42a5-85da-3a4edc97a68b",
        "cursor": {
          "ref": "dcdb32fb-3da4-4a1f-8f0f-3eba73e34492",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9c45d4f2-6ac6-456f-be6c-206205c84a4e"
        },
        "item": {
          "id": "01e47f81-c682-42a5-85da-3a4edc97a68b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "01262142-4e1f-4dc2-b6c9-759104ae01c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddacfbfa-5454-45e8-ba16-85e1406390e8",
        "cursor": {
          "ref": "ba305ef6-5026-4f37-bebd-c201b57aa1b5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "db59504f-b886-4a94-ade6-14b6c1ea6311"
        },
        "item": {
          "id": "ddacfbfa-5454-45e8-ba16-85e1406390e8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a944fc6c-223a-4d55-9c2a-7fc4ca138e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d784b09c-5795-4d5a-b553-611b2fe323b7",
        "cursor": {
          "ref": "a07e974a-09db-4fc6-9a7a-7f57ecd5c12c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9404b4c6-5de3-475f-97f0-8896dfd75edd"
        },
        "item": {
          "id": "d784b09c-5795-4d5a-b553-611b2fe323b7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "70b4a4c4-6b07-49fd-a752-2b40ef8c48f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19969830-4957-499a-ba0f-48f1537b691a",
        "cursor": {
          "ref": "c34ede5d-c6a7-4d27-bd1b-d22810e0c92b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "79f91a5f-48a0-4c29-b795-f141fb008b4e"
        },
        "item": {
          "id": "19969830-4957-499a-ba0f-48f1537b691a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "21312f84-536a-4166-87c5-4005be652076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee83a71-2bf9-448e-92a5-7e7a86b36a84",
        "cursor": {
          "ref": "0b8a8f65-660b-4e1b-9b48-48447bba3ca9",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "86ae9046-6b1d-4466-ac31-8dffa311bca1"
        },
        "item": {
          "id": "8ee83a71-2bf9-448e-92a5-7e7a86b36a84",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d9f2c767-f3c7-457c-a2f1-45c4c383d61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf929ff-c251-42e6-aac2-c8ffce337204",
        "cursor": {
          "ref": "62c2503d-d559-410f-b709-e09e0c3c054f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "87fe2c8d-f431-4176-b004-eeacb2bef816"
        },
        "item": {
          "id": "0cf929ff-c251-42e6-aac2-c8ffce337204",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3e44e457-414d-4f37-b239-35da5b5024e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aac287-75fd-4c04-8f8b-9f7bc3e7e80d",
        "cursor": {
          "ref": "06b5655c-7bee-437b-82e4-07136f464381",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "72851b51-ade0-46e0-991f-28e69ab9a3af"
        },
        "item": {
          "id": "f5aac287-75fd-4c04-8f8b-9f7bc3e7e80d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7e08dc24-ee50-4504-b8b1-65ea62a3c4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 182,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d3d353-cd47-49b2-ace5-13b4e28fa3a0",
        "cursor": {
          "ref": "156ece40-a80e-41fb-9ad6-9600c1817eb4",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "76d7b7ab-8239-4d0f-a3c5-4e247adadfeb"
        },
        "item": {
          "id": "61d3d353-cd47-49b2-ace5-13b4e28fa3a0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1dc2e396-a8e1-4c3f-989d-d7c2a053c601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3631259f-dbc3-4c3d-a28c-621af787cf5a",
        "cursor": {
          "ref": "73803929-e4fc-44df-b2fb-52a8cf6cf167",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be21f57b-06a2-4ede-9ed6-97f467ccccd9"
        },
        "item": {
          "id": "3631259f-dbc3-4c3d-a28c-621af787cf5a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "13601313-6ced-4bf3-91a5-ab31fabf0513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 163,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ebc198-764d-432c-951f-2debe8c0f6f7",
        "cursor": {
          "ref": "8f016809-67a7-4f36-b3f3-36f2c8bb1425",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "82f2ab3d-42f6-4f44-88b8-0917a65ce8cb"
        },
        "item": {
          "id": "92ebc198-764d-432c-951f-2debe8c0f6f7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "54d44bff-2ec0-48a4-b192-0937cc8bd578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2646cbe0-5022-4b51-b916-d34fbb544eda",
        "cursor": {
          "ref": "1bf58497-e030-4443-a176-88b99b815a5c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "cae2af76-a617-41cb-8443-cd709a307c95"
        },
        "item": {
          "id": "2646cbe0-5022-4b51-b916-d34fbb544eda",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5536c30a-1c7d-43e5-8e40-b9e7bc2c3a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29475141-e623-417a-be80-146a78fbbf72",
        "cursor": {
          "ref": "3a929b93-0a53-4160-9495-7fd7296aa663",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c84b55f0-57ab-4d9c-a2e8-b54322998787"
        },
        "item": {
          "id": "29475141-e623-417a-be80-146a78fbbf72",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "99165357-d5f6-4a2f-97b9-439a736aa00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a58b74-de2a-4cf8-96f3-1cfc7ef8bfc4",
        "cursor": {
          "ref": "7d644850-c93a-4e60-95f6-b396918f6268",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "252cd455-ceba-4699-b534-8f6639a78a56"
        },
        "item": {
          "id": "78a58b74-de2a-4cf8-96f3-1cfc7ef8bfc4",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f88d1dbc-be75-4005-a841-71419312e0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f63349be-f792-497c-ab26-905d14a27f88",
        "cursor": {
          "ref": "21a0e7fe-4286-4c11-8911-24ec88b66d3d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "998eeb90-1b16-419c-9eba-ed5d3e20e9f6"
        },
        "item": {
          "id": "f63349be-f792-497c-ab26-905d14a27f88",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5f9318b0-a31f-4f3e-ad06-e97aaa09703d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c69242a-a7c2-451b-b156-da5b037ae1a4",
        "cursor": {
          "ref": "2c843af1-3fcd-4d22-9e34-b4804df3b585",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8e86714a-d371-47fa-b51a-fb34e14ff789"
        },
        "item": {
          "id": "6c69242a-a7c2-451b-b156-da5b037ae1a4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3183a08d-93f6-4568-81b9-0f33afcd0197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c4b5e4-fdd4-460c-8eee-5f0f29d3454e",
        "cursor": {
          "ref": "ab62a3f2-14fe-4564-a1a4-98e301b173e6",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5d89b983-0789-41d3-a519-6a021c6ae6c9"
        },
        "item": {
          "id": "31c4b5e4-fdd4-460c-8eee-5f0f29d3454e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "400d1573-a844-411e-a82f-a7129c2aa3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3166ac-1efd-4556-8847-5303c6d5f35f",
        "cursor": {
          "ref": "ce4561b3-4202-44fd-8135-f85225ea1afc",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7765c2fe-ab27-4476-8609-cf4fc0f7b6fe"
        },
        "item": {
          "id": "be3166ac-1efd-4556-8847-5303c6d5f35f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "81bc3ec1-dd13-46ec-a637-a1517cc141a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca7d15-daef-4e30-8c01-b8a246e7d436",
        "cursor": {
          "ref": "4565bb63-fe65-4ce8-8abf-d5443c456afc",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "64b498c4-97d0-4fb5-9e5e-b239ae9c475c"
        },
        "item": {
          "id": "70ca7d15-daef-4e30-8c01-b8a246e7d436",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e15ea91c-a412-49d9-a246-3a7b6b2eff34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed0efc4-2959-4c8e-8a4f-36cacda1f5e5",
        "cursor": {
          "ref": "05f340b1-cf5d-4483-8115-ff2c585ae062",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e56fdf35-eed8-4a71-b0f8-bf36ae6101d4"
        },
        "item": {
          "id": "1ed0efc4-2959-4c8e-8a4f-36cacda1f5e5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f09c315a-062a-483b-8325-2b1766948cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01833b00-1c9e-4d55-95df-b8a900f7f99f",
        "cursor": {
          "ref": "fda09edb-0cdf-4394-b4f0-68b9c356c757",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "beb7b583-b14a-4086-8ab3-2ded0cc45140"
        },
        "item": {
          "id": "01833b00-1c9e-4d55-95df-b8a900f7f99f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "075c536e-1932-4912-b8d4-d7d4b9f54ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214e732d-33a3-4ea7-a2c8-f972658215a0",
        "cursor": {
          "ref": "4ab7e6ea-9cce-4824-9824-3d47867c8b38",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "459c4375-0754-4165-813b-acf94be293bf"
        },
        "item": {
          "id": "214e732d-33a3-4ea7-a2c8-f972658215a0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a8b16566-ae0f-48f3-82d3-b3db1b84dbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeef8bb-0775-45ac-b588-a059d6927a48",
        "cursor": {
          "ref": "8aaffc5f-db63-4d9f-99ab-17c8844ec722",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2b638417-c4a7-4b65-baf7-8d48278373f1"
        },
        "item": {
          "id": "deeef8bb-0775-45ac-b588-a059d6927a48",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "63775b85-8420-4135-a68d-462213463b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93cab46-3f39-492e-8ce3-bbae3d430209",
        "cursor": {
          "ref": "0a6c8826-0c16-4fc2-9ecc-0ab3258de9c7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4eb3c3c0-7274-46d1-927a-7e9896f06eb1"
        },
        "item": {
          "id": "e93cab46-3f39-492e-8ce3-bbae3d430209",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c201215d-1139-453b-a946-b12594701941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0724b0c-24d8-4033-8065-3b0ac3483aab",
        "cursor": {
          "ref": "9ad8e782-4cbc-43c0-aa66-ae4ffda636a7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4a506c32-e533-4edc-9f42-fd37b2339d5c"
        },
        "item": {
          "id": "e0724b0c-24d8-4033-8065-3b0ac3483aab",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1a6fad46-7dfb-479c-bf14-dc7471cf6542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0af8d872-9415-4c60-87a2-0b751f1ffd2c",
        "cursor": {
          "ref": "b97bcc0c-fb56-4e10-8382-411ee9243753",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0a967fd3-d9bb-4218-83ec-11fe9f4d1579"
        },
        "item": {
          "id": "0af8d872-9415-4c60-87a2-0b751f1ffd2c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d740d923-b4a5-4611-a3b6-8ccacbacb7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46874739-82dc-4ec7-9be1-6aff528f998a",
        "cursor": {
          "ref": "8bcc8752-4cef-401b-8c88-7259f52cc47d",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5bec41e2-21c3-41bc-b114-d1c233e674e2"
        },
        "item": {
          "id": "46874739-82dc-4ec7-9be1-6aff528f998a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "30c55a12-f8de-4c34-957c-2e6d7c685f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96491cf-b5f6-40ee-aa5f-fff5dd3242d6",
        "cursor": {
          "ref": "68782f4d-2cd1-40e6-abaa-78e5f854171b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "68bb4abc-b617-407d-84ef-01c81929cc14"
        },
        "item": {
          "id": "f96491cf-b5f6-40ee-aa5f-fff5dd3242d6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "84184764-8a3f-48b6-816c-933dd33483df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a197c0dd-d91c-4442-964f-70260ca0a1c4",
        "cursor": {
          "ref": "85409eb5-1cf9-4d80-b4a6-6d4bf4877c79",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d555b8fb-720c-4356-b073-82604c2e978a"
        },
        "item": {
          "id": "a197c0dd-d91c-4442-964f-70260ca0a1c4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "110453b7-36c5-4c00-85d6-7f3cd6b8544b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fdfddb-7aa6-4b2f-bd7c-3be6104dd5fb",
        "cursor": {
          "ref": "72378310-98c4-443b-824a-112ad13e3e70",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "cb22e108-b0d8-4275-ba44-d77b53d55718"
        },
        "item": {
          "id": "d1fdfddb-7aa6-4b2f-bd7c-3be6104dd5fb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c271dd87-aa56-413c-a39e-60a5fc1be704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd7cc60-94a9-4742-aea0-a99b94d1bbe3",
        "cursor": {
          "ref": "2fed2b52-e9ee-4cdd-9894-8dc95a937044",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0ea3a510-9db2-4834-a4a8-ff3c0b380155"
        },
        "item": {
          "id": "0bd7cc60-94a9-4742-aea0-a99b94d1bbe3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cee9dc05-63ab-4fef-a6f5-f7f8d9ac967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c67886-cfe3-4f60-998f-62daefdc52de",
        "cursor": {
          "ref": "9d0d7d4c-b637-4645-96a1-c6d285bf2811",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f96d6930-c337-4220-9e46-256566b2b655"
        },
        "item": {
          "id": "59c67886-cfe3-4f60-998f-62daefdc52de",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "af5c95f5-8ef8-451d-8085-0492338e3d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d75a62-46a4-44f3-a614-ee80265978fc",
        "cursor": {
          "ref": "3564196d-3776-4870-9f9a-65a7b2525a1c",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "559c5328-5779-4193-8c9d-97609cfd67f6"
        },
        "item": {
          "id": "b0d75a62-46a4-44f3-a614-ee80265978fc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1afecafb-dab0-4d3e-9571-183177f21d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d465bf9a-75b1-4223-880b-3f3c13225d98",
        "cursor": {
          "ref": "b19b3aa6-39e9-410f-a857-e0a1f153e68f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c3f079c5-1bb6-40e2-ac12-5c336fb3a103"
        },
        "item": {
          "id": "d465bf9a-75b1-4223-880b-3f3c13225d98",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1df3e32f-28ac-4f31-abd4-7ae05f512e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e498e7-3bfc-4390-bdfa-5233339e5d89",
        "cursor": {
          "ref": "29850341-27f9-4fb3-9de9-26c1ac4a319b",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6325b032-f103-4cea-a8b8-901227bdcf1d"
        },
        "item": {
          "id": "d6e498e7-3bfc-4390-bdfa-5233339e5d89",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "81cc61dd-95fb-493b-9fe9-b6414f342366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ec5de8-6e0a-45cf-a05d-93c04a88bd87",
        "cursor": {
          "ref": "f4d939d3-0347-4fee-9cb7-84eeece15493",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c52da578-cd19-4f4a-b196-6cfac63e0a2f"
        },
        "item": {
          "id": "82ec5de8-6e0a-45cf-a05d-93c04a88bd87",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3123aae5-c04c-444c-9423-3e75391f9527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a60c3f-fedc-4791-8133-46e980a49cab",
        "cursor": {
          "ref": "fc231f3a-9c31-4dd1-98fc-7ef8e70a6a0c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e959c697-f6e3-416d-bccb-1f4bacf6ffa7"
        },
        "item": {
          "id": "d3a60c3f-fedc-4791-8133-46e980a49cab",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f8a980bd-f372-4e4a-a8f1-60cfec137869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ece4c6e-5081-45f0-bcf1-6928d2eff996",
        "cursor": {
          "ref": "7478dbc2-d28f-4503-a017-de01489062db",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fde744d0-954b-4d22-8759-f723b394d78a"
        },
        "item": {
          "id": "0ece4c6e-5081-45f0-bcf1-6928d2eff996",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2121443d-d337-4001-bf62-02730e159cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b104369-eb2d-44da-bd25-ce56017cff57",
        "cursor": {
          "ref": "6111c400-1a44-46ca-862a-f171626bba74",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e9fe8955-b5e2-4c2b-b673-6df7cddece53"
        },
        "item": {
          "id": "1b104369-eb2d-44da-bd25-ce56017cff57",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "841b0ba6-3610-4aa9-a35e-766d75013b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908b5397-405b-4baa-b732-bc8b2c6e9546",
        "cursor": {
          "ref": "6d250989-0937-4873-8773-88f652de357b",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "33c59d15-aee8-4383-970b-815968ce0a6a"
        },
        "item": {
          "id": "908b5397-405b-4baa-b732-bc8b2c6e9546",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4c6e94ed-6c2d-4d2b-b781-9408789c1695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a79cb3-d5f2-41a7-b4e3-3a81bdf179ad",
        "cursor": {
          "ref": "d3b44675-3680-4073-a42b-a549d3e73e61",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ecaa97ac-a99d-4208-9e04-6d78dc4bec5a"
        },
        "item": {
          "id": "09a79cb3-d5f2-41a7-b4e3-3a81bdf179ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ec74fca5-ba8a-44c0-8ca3-c441d549151d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd4ae94-2a55-4bd6-97c7-e03a38a87491",
        "cursor": {
          "ref": "d732598a-126a-48bf-bbb8-2c23ad7b2ce2",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ac42987b-3f90-4e69-aac3-d52d4fd7d3b1"
        },
        "item": {
          "id": "6bd4ae94-2a55-4bd6-97c7-e03a38a87491",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "948e4be4-13d1-4067-8366-293ffa6f934a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fc0207-7cf2-416b-8abe-b389795324f7",
        "cursor": {
          "ref": "618bc6dc-9b65-4fda-8ee6-ac8b34043cfb",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a8e5a26f-66a6-46df-9f27-d92c954bd2ff"
        },
        "item": {
          "id": "99fc0207-7cf2-416b-8abe-b389795324f7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "08bf9f78-330d-4a7c-b713-3c1277d8b7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc10a8a-6c0f-4aad-a6e2-5c04d7df57fa",
        "cursor": {
          "ref": "9732878f-5de6-4ce7-b756-86f3ee500f88",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a255b46c-4bab-4bfa-b001-8d4baabd5089"
        },
        "item": {
          "id": "0bc10a8a-6c0f-4aad-a6e2-5c04d7df57fa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "74c14b39-fe19-4b0b-840a-6335c67e39ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c064eb-5d09-4182-a3dc-cf7f23d4ef2c",
        "cursor": {
          "ref": "f95c841b-1a3b-4256-a993-c1ef2d8d74cc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "807e2062-7b88-496a-9e8a-94c1ea80b697"
        },
        "item": {
          "id": "f2c064eb-5d09-4182-a3dc-cf7f23d4ef2c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4df8bb6f-62ea-4767-9af3-5c3c870cab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9290de6f-8104-4093-b304-5421819ff19c",
        "cursor": {
          "ref": "10796fd8-54b7-4f06-ac4b-46a784b958bc",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e7a67930-58fc-4f68-9dca-31b03096bd38"
        },
        "item": {
          "id": "9290de6f-8104-4093-b304-5421819ff19c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "356647b1-c9b0-4886-8f40-406608f88cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7011d4c-7571-4e0f-8a72-002c06ed0f8f",
        "cursor": {
          "ref": "3fb558a3-e258-4bea-8625-e730465669c6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9c93cea-8ce0-4ec5-9a1b-e38b553f155f"
        },
        "item": {
          "id": "a7011d4c-7571-4e0f-8a72-002c06ed0f8f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fea35435-3769-486f-be15-364b6e66e9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a805cd4-894b-4900-9b54-76825b246a95",
        "cursor": {
          "ref": "f636a3ec-69e7-48a6-becd-85c4cdb9d26c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0fe126b5-58c8-4aec-945b-fc038543a7b5"
        },
        "item": {
          "id": "4a805cd4-894b-4900-9b54-76825b246a95",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "549aa299-d69a-4e3e-92bf-e2706c407352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e3dcb5-1208-4d8f-825b-9bd8f712c336",
        "cursor": {
          "ref": "1cb08adc-e1c2-4327-972c-8335e16b71d7",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e970384-2c0b-4c73-8d35-83a5fb7ecc96"
        },
        "item": {
          "id": "e3e3dcb5-1208-4d8f-825b-9bd8f712c336",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "032943d7-3d5c-42e4-b8b5-94d84cae6530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbf7209-7a9d-4778-95b0-ad1c2dec238b",
        "cursor": {
          "ref": "e7bb5c3d-4787-4e3a-b4d9-538be795a636",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3f67277d-7c3e-4b47-9732-9c150b47a407"
        },
        "item": {
          "id": "3dbf7209-7a9d-4778-95b0-ad1c2dec238b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c8715810-6fb2-402a-84fb-ebe1cc26c69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a0fd43-abb7-45f5-a352-a0d04f50aed7",
        "cursor": {
          "ref": "63747bed-405f-4d6c-a658-daeb13ac5cad",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "25765c6f-47b8-4694-95ef-6036008705b1"
        },
        "item": {
          "id": "27a0fd43-abb7-45f5-a352-a0d04f50aed7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c53cfc66-a7b8-4a8a-8002-5fb725883325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6a21db-34aa-4aa6-b05f-ecd4f707bfe7",
        "cursor": {
          "ref": "c257fd03-067c-4f1c-9800-1f340dc6b871",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0f75962b-534f-4234-a933-6206f47932f0"
        },
        "item": {
          "id": "bc6a21db-34aa-4aa6-b05f-ecd4f707bfe7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a3a0df56-2779-4da3-9ec1-c5b81c4e6c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bb80ba-5c4b-413c-84fe-d558b09f7539",
        "cursor": {
          "ref": "b5d7a492-ab3a-4c86-96b7-e80abe8f8456",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fbd39608-27a6-4511-b3de-cf69571f60da"
        },
        "item": {
          "id": "92bb80ba-5c4b-413c-84fe-d558b09f7539",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b21336d7-af71-45c6-8ed7-82e2921e2ed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667b6c11-ddad-4a82-9a35-7d8ecec61ce7",
        "cursor": {
          "ref": "75bf4881-4970-4763-8917-572c41833ed4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d6cbecca-fe28-43ed-8b51-84d4226b3b6f"
        },
        "item": {
          "id": "667b6c11-ddad-4a82-9a35-7d8ecec61ce7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "66d184c3-769d-4794-b266-dcbdd18b370c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40bdb95-fef0-4462-9336-40b678df17ac",
        "cursor": {
          "ref": "4bf2c4ae-e98d-41f3-8960-2b16d32a4acd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d2cbc69d-baae-4af4-bddf-0ce68bb92e80"
        },
        "item": {
          "id": "b40bdb95-fef0-4462-9336-40b678df17ac",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2d4c68dc-70e4-4f32-89cf-d22f5c126fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698dff81-b677-441d-be59-4ae530fe17df",
        "cursor": {
          "ref": "4bec1ef3-9221-4e32-927b-57f278a9ced9",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0bd871bb-7d21-451f-8910-8a22fa27ae48"
        },
        "item": {
          "id": "698dff81-b677-441d-be59-4ae530fe17df",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f15580ee-826d-4d14-844c-b911a76a8109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b725c7db-35fa-47c5-b842-1ee9f38dfec6",
        "cursor": {
          "ref": "cc7f706d-e7b8-41b8-9441-42809c633e1c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "588612b6-5335-46ac-984f-12f8a78f8813"
        },
        "item": {
          "id": "b725c7db-35fa-47c5-b842-1ee9f38dfec6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "801c2151-9576-4fd6-a32b-879d40b2f7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90ea088-0588-479f-beaf-31a8a8b8c672",
        "cursor": {
          "ref": "89d06f68-c4e9-4306-acf0-6b20d85d516f",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ebddb0e3-53e1-4440-be02-c865bcade810"
        },
        "item": {
          "id": "d90ea088-0588-479f-beaf-31a8a8b8c672",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bbb7955f-b3a3-4bf6-90d1-feaf19476c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e10ec9-0ab5-4117-aabb-5950c3a618ba",
        "cursor": {
          "ref": "b03c4efb-9b5a-46a9-9e42-0b4688b5f9fe",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "95cdebfc-65d3-4398-a9e9-a58ea80d2104"
        },
        "item": {
          "id": "59e10ec9-0ab5-4117-aabb-5950c3a618ba",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "654443e3-01a7-467e-a55c-ec3f9f985b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5354455-6a8c-4d32-8507-bad46fb4338a",
        "cursor": {
          "ref": "fbf9b081-a9f9-4f08-9faf-6c64eca080e5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "378bb725-8c73-41e9-be48-4a7bbe6e41ed"
        },
        "item": {
          "id": "e5354455-6a8c-4d32-8507-bad46fb4338a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d4fef821-e27a-4ae6-b7ec-a8b7372ecdbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ab60a7-4131-4f37-acca-059adfef61cb",
        "cursor": {
          "ref": "a7778c58-d356-4fd5-8cc7-a76eb24c5838",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "327ee0d2-6c72-4a0c-95b9-646ce62e9938"
        },
        "item": {
          "id": "79ab60a7-4131-4f37-acca-059adfef61cb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9aa342d5-1bca-47d5-ab31-833bfa64606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a906aa87-b927-4f2a-9ce7-a05a85200b47",
        "cursor": {
          "ref": "0b1c3fec-a77b-4e01-aa36-cb3fc09cb5b9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b9d27ecd-70ee-4396-9b1f-0c1603bf66ce"
        },
        "item": {
          "id": "a906aa87-b927-4f2a-9ce7-a05a85200b47",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "3cb2303b-be28-474f-86cc-3be6e5c0421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a29f7a8-20b7-448b-9824-a674e94b418e",
        "cursor": {
          "ref": "16b74e36-4c9e-4245-adbb-2d6ed03574c0",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2ddef761-c105-4e02-88f2-5ee6f347c081"
        },
        "item": {
          "id": "9a29f7a8-20b7-448b-9824-a674e94b418e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "becb8f1f-792d-4b92-8454-f96367d0a6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39b2c02-b9c3-467a-9b54-7961c8a31f0b",
        "cursor": {
          "ref": "d03daf8a-1653-473a-aff4-eb87f6dd148e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ca62c57a-a936-44a9-87b3-b3ec1672dc3c"
        },
        "item": {
          "id": "f39b2c02-b9c3-467a-9b54-7961c8a31f0b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "dd9d3ead-af40-4a3f-b5cf-1cdd8024e45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1622cb9-8a69-458b-a3ec-65e5a856e27c",
        "cursor": {
          "ref": "f190168b-314e-4e30-bd83-73611aa1f475",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "54ff384e-00f1-4021-ad81-11a615821946"
        },
        "item": {
          "id": "d1622cb9-8a69-458b-a3ec-65e5a856e27c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "597ec797-781e-464b-bb6e-7fe68f900ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21102e92-f739-4e3d-a54d-83606ba3f69c",
        "cursor": {
          "ref": "b7870514-8a0c-4e34-ab58-f9eb05aa174a",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f8d5f4e3-d34a-4ce4-ba47-c9bbbc50c93a"
        },
        "item": {
          "id": "21102e92-f739-4e3d-a54d-83606ba3f69c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5ebc9faf-0ee6-4dd1-a08b-53cb5ab879ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be57c3e-9c0e-432f-bebe-edad9d6b6c38",
        "cursor": {
          "ref": "137e0f22-2d59-4eb9-9105-dfa4dc0cd5c5",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14bed17d-6f14-4eac-b245-bb42a2597b9b"
        },
        "item": {
          "id": "4be57c3e-9c0e-432f-bebe-edad9d6b6c38",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8c37664a-4a0f-4226-bc63-d60f7751142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3cdb42-9364-429f-87c3-48405113932f",
        "cursor": {
          "ref": "fc942604-76be-4d74-9776-7a40604f5472",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "da2d5518-bf77-4a75-ad3c-e14edc8d412b"
        },
        "item": {
          "id": "5f3cdb42-9364-429f-87c3-48405113932f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9aff662c-09b6-4b49-8b89-1da9f56449d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32cfd011-0876-4b8a-adc3-6b0dae9e48b4",
        "cursor": {
          "ref": "ab7f2556-8f32-48be-b1cf-ba53327c88fd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f505ec53-8309-4700-96ec-9d0e6e704946"
        },
        "item": {
          "id": "32cfd011-0876-4b8a-adc3-6b0dae9e48b4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fd792ab4-03c3-41e5-9843-b66429b67d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a1f527-1ecc-4f7c-80d3-46a5dcf41e86",
        "cursor": {
          "ref": "b23f45d1-e2a1-45f3-907f-dfd501a4c083",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "542071f4-00dd-4e17-9181-e5a0b7907ae2"
        },
        "item": {
          "id": "09a1f527-1ecc-4f7c-80d3-46a5dcf41e86",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1e967647-581c-48e7-8a77-563f4a479aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2d2d4f-86d1-4efb-bfe7-ca0747cdb9bb",
        "cursor": {
          "ref": "579f2a8a-ae62-4adb-a186-588c117d9002",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6aa3fe72-34a3-4ab1-b6ef-b2bd9eb357fc"
        },
        "item": {
          "id": "ee2d2d4f-86d1-4efb-bfe7-ca0747cdb9bb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "34b6c1cd-742b-4ae1-91af-d13eb42f15f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237a876d-a8db-4aa7-ad4a-281bfa08a599",
        "cursor": {
          "ref": "90e6ebbf-0b4b-4b26-a367-1d426e499ae2",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a17a98fb-db6b-48cb-abf7-546d8218e3ae"
        },
        "item": {
          "id": "237a876d-a8db-4aa7-ad4a-281bfa08a599",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "016a99a4-ebe0-43e0-846a-6c7770b13ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5a2240-c487-473f-8d9b-e5b12216850d",
        "cursor": {
          "ref": "196ea402-6ca5-42b4-b32b-d8c9fcf94037",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bc5d2e5b-06f8-4371-af02-1ec41fce6528"
        },
        "item": {
          "id": "8b5a2240-c487-473f-8d9b-e5b12216850d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "37ac33a2-a788-4bb9-91d6-5ed0112bc4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 128,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2790410-a14a-44a6-9c24-a1cb5524b8c7",
        "cursor": {
          "ref": "01615d1d-3baf-42ec-856c-2878d8a6bd28",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "90dff605-2943-461f-8eab-8d8db00c87ea"
        },
        "item": {
          "id": "d2790410-a14a-44a6-9c24-a1cb5524b8c7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7bbbd475-14d2-47ec-af07-f74ba537ffe8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d44dafc-cae9-4972-9a02-4e23cc56ca59",
        "cursor": {
          "ref": "22a7e83e-d94a-458a-bf1b-f0f05737d3a9",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e89f29dc-db7a-48b2-a7a7-40bacee4abed"
        },
        "item": {
          "id": "2d44dafc-cae9-4972-9a02-4e23cc56ca59",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f26a588a-97a8-4419-8a24-13240bf0a0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2248319a-a81a-4d13-8d01-c02a098fe958",
        "cursor": {
          "ref": "03018a0d-0797-47dd-83e5-f551c622fbe0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "fe4ca50a-c2ea-44f3-af6e-cb10f2260543"
        },
        "item": {
          "id": "2248319a-a81a-4d13-8d01-c02a098fe958",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2484bcf0-be31-4f8e-b880-814211a7da1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "66024754-0d05-4084-b99a-d7a4b4fc4581",
        "cursor": {
          "ref": "c021aae2-16db-4c94-88da-16db0e742e23",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9014c5ed-5840-4eb6-90d5-bb6708911eca"
        },
        "item": {
          "id": "66024754-0d05-4084-b99a-d7a4b4fc4581",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cd3e28b6-2cf8-4644-a1c9-c0f42f63c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d24d1076-c9e4-44e7-9345-d0eefaaece2a",
        "cursor": {
          "ref": "9dba2ad8-773d-4390-ae9c-918aa12d2233",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "47ebd885-74a9-4d17-90ee-3f5ebb7e8e4f"
        },
        "item": {
          "id": "d24d1076-c9e4-44e7-9345-d0eefaaece2a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2cf66530-1470-4c22-8ced-7886b6072c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b46e8b32-3766-4a99-9164-455ea5a577b8",
        "cursor": {
          "ref": "780758bd-7363-40c0-956d-e6bff2035b7c",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6cb5595b-7616-4f00-a95a-9cd90f5b71fa"
        },
        "item": {
          "id": "b46e8b32-3766-4a99-9164-455ea5a577b8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "743d7a47-a7d3-43a0-bbe7-65b868bc613e",
          "status": "Created",
          "code": 201,
          "responseTime": 4793,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3d5e03-e97a-4e14-b913-4fd945508f17",
        "cursor": {
          "ref": "3a5fb24c-6f1c-4ff8-bc6b-dca2dfeea904",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7cf88a00-34be-4706-b989-65e22c675fcb"
        },
        "item": {
          "id": "6d3d5e03-e97a-4e14-b913-4fd945508f17",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8d51409d-7cf2-47d7-9e4a-e6c1f9b63bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c24e71d9-ae93-4f4e-abba-aad1b5de9bb1",
        "cursor": {
          "ref": "74fa9ede-b311-4335-aedc-71873b432310",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f87f6da6-8bb1-4a0e-8d2a-e989a275c303"
        },
        "item": {
          "id": "c24e71d9-ae93-4f4e-abba-aad1b5de9bb1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3cc61ae-972d-4372-9ac9-b2ebf746e4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c6b1c92e-5e00-4465-8adc-4eb0afbb230e",
        "cursor": {
          "ref": "a69f64c0-f590-4ebe-9b51-b66e41253699",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d6020f4e-3e41-4eb1-8a2e-e4897552b3d0"
        },
        "item": {
          "id": "c6b1c92e-5e00-4465-8adc-4eb0afbb230e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "55baf9fb-49cc-4a8e-b411-bc6517cfd9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db625185-854a-487d-81ce-8036c24fbcef",
        "cursor": {
          "ref": "5c42be03-f310-4ad2-b419-52e6e421eb25",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "59beb74c-6a75-4b56-bf8c-8cffab983a77"
        },
        "item": {
          "id": "db625185-854a-487d-81ce-8036c24fbcef",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "67bd0c3c-6aa7-456c-942e-295b09d99d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d17b8f-1fbf-4bad-a37c-0d854a90e562",
        "cursor": {
          "ref": "877ebac0-5df8-4e85-a6f8-27a992f7d2e6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3d2996a6-c8de-4b1e-a912-8755d0c91664"
        },
        "item": {
          "id": "34d17b8f-1fbf-4bad-a37c-0d854a90e562",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d8c7c62c-190e-41aa-9de1-a250e95b1250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75b106f-db31-4c51-969d-e3e4b6fa7a19",
        "cursor": {
          "ref": "9af32467-49c1-4467-a093-04633149f367",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "05a0c4d8-4fe5-4771-8c03-ebe54849ef4d"
        },
        "item": {
          "id": "d75b106f-db31-4c51-969d-e3e4b6fa7a19",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b01ba055-5f51-4447-b040-2ca205d7a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895146c1-6b66-44a1-8f16-0d38653c044b",
        "cursor": {
          "ref": "55680999-3c4c-40f5-8b9b-e924221dac7d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bf59db36-94c3-4492-9e73-3e0ecda4f521"
        },
        "item": {
          "id": "895146c1-6b66-44a1-8f16-0d38653c044b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ae02ff69-f523-45a5-a8fa-9f111793a306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c412970-57d7-451c-88f9-5a27b7df653f",
        "cursor": {
          "ref": "d4b56a30-502d-46bc-87a0-a8d3a315c6d2",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "00984871-f483-49b4-8e28-6025c2e7a9d4"
        },
        "item": {
          "id": "5c412970-57d7-451c-88f9-5a27b7df653f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2726804f-2540-4a0d-b5fe-d8089a50cf0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dcb370-fa0a-4c97-b266-2623126a60a7",
        "cursor": {
          "ref": "b45f7b48-33f5-4bd1-b229-423b97f8cb00",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a7ebd0d3-89bc-4155-a93b-6d990bed8893"
        },
        "item": {
          "id": "a1dcb370-fa0a-4c97-b266-2623126a60a7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "65bdf248-a63a-4e25-9abb-6d4139247d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f849229d-bb6e-4755-a9e1-f16f4fa01003",
        "cursor": {
          "ref": "79b038d7-5741-4af2-9b87-f4d0e5ddd649",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fee2add7-1f37-4b9a-a91f-0a2d5cb0b287"
        },
        "item": {
          "id": "f849229d-bb6e-4755-a9e1-f16f4fa01003",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bff3f3a5-aa03-4d8b-8c8a-596e91479188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd9208a-3308-4ecc-8621-f313669c8795",
        "cursor": {
          "ref": "9c0fc7f0-d555-48c6-b859-96cf428a2c83",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e60cbaa8-cfbc-459f-b1e7-d3ad1be960ec"
        },
        "item": {
          "id": "dcd9208a-3308-4ecc-8621-f313669c8795",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bcdd4327-0238-45bc-8f5c-a4c3506a0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bd485e-ced0-49a4-ae54-a8446e6d3837",
        "cursor": {
          "ref": "44df3305-e71f-4bd7-8278-f179d44192c9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "77faa423-8788-4ac0-ab89-e3fc83d2a074"
        },
        "item": {
          "id": "c4bd485e-ced0-49a4-ae54-a8446e6d3837",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "763df6bb-9696-417d-bdd7-e4807e31c475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbdd321-a45c-4201-a2bc-22d2f272ad1c",
        "cursor": {
          "ref": "bd975158-77fd-4725-8fd8-77a06588920e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "59e328be-ea74-4857-b4bf-a7541541e2e4"
        },
        "item": {
          "id": "0cbdd321-a45c-4201-a2bc-22d2f272ad1c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b8645e5c-152c-42d9-bc9c-7f92b8ce62cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31dd3ec3-477a-4701-b844-bc71f6715353",
        "cursor": {
          "ref": "4af6fd8c-aff5-45d7-927d-b60ecfd63148",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "10351bce-c69a-4bd5-bffd-967f8c3c3888"
        },
        "item": {
          "id": "31dd3ec3-477a-4701-b844-bc71f6715353",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c6566b8f-e661-4c2e-98e8-d2a3196b530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6895f2-3688-43f2-b558-e8dd30d90019",
        "cursor": {
          "ref": "82fe0581-428c-4a3c-ae35-0fe2d31aa683",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d0a94bb4-6953-4415-9595-bf5a337a2da0"
        },
        "item": {
          "id": "da6895f2-3688-43f2-b558-e8dd30d90019",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "86a3829e-17ba-4ca7-9e21-32fa5780c7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27882de-af73-4591-a610-259cc5c4a432",
        "cursor": {
          "ref": "13279f80-2a41-48bd-8db3-2979088d9c45",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a5829729-ef72-4cf4-89a4-65f1fb7e7747"
        },
        "item": {
          "id": "c27882de-af73-4591-a610-259cc5c4a432",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0d96c965-8858-405c-a330-52e6dd4107a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd013a-67d4-449f-a37b-5f805d4ef300",
        "cursor": {
          "ref": "b5a964e6-95bc-4ab5-8f2a-fb62a15d1e70",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "27b8a3ed-dd7e-4884-bbb5-f0c8508548a6"
        },
        "item": {
          "id": "efdd013a-67d4-449f-a37b-5f805d4ef300",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b280a51-d2fc-4b4f-9d90-e508086216b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfd7b5b-199f-4df8-9cce-3e835b699db9",
        "cursor": {
          "ref": "4b80d12e-de9b-47ba-87b7-4e3d5cfbc7c2",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "08e91de8-1198-4cbc-b866-4f37a282e836"
        },
        "item": {
          "id": "bdfd7b5b-199f-4df8-9cce-3e835b699db9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f52e8ce5-c5b3-455f-aba5-2dda457593f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34f6e1c-8813-43f9-99b8-c477a129b43f",
        "cursor": {
          "ref": "14e5b052-5b79-423a-9c8d-40e1b81c3204",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "90524ffa-5bac-4468-9950-a02fa6a9264c"
        },
        "item": {
          "id": "c34f6e1c-8813-43f9-99b8-c477a129b43f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "59c1c255-f698-4039-a770-b212c4a6d458",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "e7c62477-d418-41b9-a1f5-b00c58eafa21",
        "cursor": {
          "ref": "9c12a2c2-0a5a-40ec-9cf3-eb0f29ffda99",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "120bd506-67e3-4105-b201-2018078398f9"
        },
        "item": {
          "id": "e7c62477-d418-41b9-a1f5-b00c58eafa21",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "11e30396-9077-4aae-ae87-93f2fd60d7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fde9cf-ba02-4ed0-88c0-9b2298107fbc",
        "cursor": {
          "ref": "0ce3016d-8565-44bf-b450-53bea3c94db2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "03509add-4c2d-4945-b1eb-6e007453c544"
        },
        "item": {
          "id": "e3fde9cf-ba02-4ed0-88c0-9b2298107fbc",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b81d9003-1d75-4f23-9916-80811833b112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53071e2d-0baf-4e87-8552-764ac175c9a1",
        "cursor": {
          "ref": "2b24bc47-13de-4ec3-9f08-cd849af32aca",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "51972fc3-bacd-45cb-95d4-9c1ff8c68cc5"
        },
        "item": {
          "id": "53071e2d-0baf-4e87-8552-764ac175c9a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b420a0ff-5b75-46b2-b350-ce4d881d882f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd348de-9afb-4bd2-849a-980f42ec298c",
        "cursor": {
          "ref": "8d484056-bd3e-4fa5-9bb1-3ade3a52b071",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3d992959-2720-4170-b0d5-cd3a3dcffe88"
        },
        "item": {
          "id": "dbd348de-9afb-4bd2-849a-980f42ec298c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "346889c8-1342-44ad-82a0-27a4840d1cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03350c1-3106-4b9d-b81b-cf581069c445",
        "cursor": {
          "ref": "153cc975-1617-4041-ac07-05dfddd9295d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "41370ee3-4cad-4c6b-83cd-652b98487d57"
        },
        "item": {
          "id": "b03350c1-3106-4b9d-b81b-cf581069c445",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6984e0ef-eb71-4b97-9114-1c18870b6ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be19239-26da-4dac-9538-9c579035e78f",
        "cursor": {
          "ref": "6fc0fbd9-2227-48f6-aee0-5b208a28fcfe",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "24dcd2b0-1ead-4ef2-a3e4-f4ecbc3d21d5"
        },
        "item": {
          "id": "0be19239-26da-4dac-9538-9c579035e78f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0ce8f281-412a-4f66-9928-46eb8878311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e446936d-a320-4908-b392-606ff10822db",
        "cursor": {
          "ref": "c8ff3571-dd5d-4c69-91a4-d2e52be20f59",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5bfced85-18bb-4ef1-a51a-ceec7068c6eb"
        },
        "item": {
          "id": "e446936d-a320-4908-b392-606ff10822db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "72aaa9ab-841e-4b5e-8793-8bb666849128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53736537-9aad-4ed1-9b48-2da760acc8e5",
        "cursor": {
          "ref": "e58c2d32-65e0-42d2-a582-314215ca1a7a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a28099c9-0fb9-43f0-9ae8-3088e909ed3a"
        },
        "item": {
          "id": "53736537-9aad-4ed1-9b48-2da760acc8e5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2f49ba0a-d8f3-436f-8cfe-dbce242ea488",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8bfafa64-08ed-41c3-a38f-a79e11e7412b",
        "cursor": {
          "ref": "113306bf-83e2-4d59-9f05-b0a1fca5f589",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d2b1fb12-128e-4de2-87a8-20f2063379df"
        },
        "item": {
          "id": "8bfafa64-08ed-41c3-a38f-a79e11e7412b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "33872370-b1dc-4bd0-a9f1-7f4dac6d241b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b85846c-217c-4d53-89ea-cf13856caf0c",
        "cursor": {
          "ref": "72897d3e-8977-4126-bc9a-12a368309001",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "af6ecd42-2f4e-4566-aaae-2837903d870e"
        },
        "item": {
          "id": "6b85846c-217c-4d53-89ea-cf13856caf0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f869d675-ae58-4bab-b2b6-55e089d9b34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec920a65-6959-4d5d-907d-1f57eef0e499",
        "cursor": {
          "ref": "e8dc6c57-003a-443c-9555-e2da8139b2ce",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7eaa191c-6fe1-4a88-b4d1-648266eb78ec"
        },
        "item": {
          "id": "ec920a65-6959-4d5d-907d-1f57eef0e499",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8b38534c-9218-4cf5-a56e-fe816349ce5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343da45-960b-4bf9-a305-d45fd85143dc",
        "cursor": {
          "ref": "4c24e9b3-3d34-4b6f-88f4-0c1b10d1e616",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b6623a6-a389-44de-93f3-6fe2ed7e5f7b"
        },
        "item": {
          "id": "6343da45-960b-4bf9-a305-d45fd85143dc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "79a0ee0e-03b8-4247-9129-5dbd819e9b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb93609-e8e1-4a64-9209-1e15bfc3553d",
        "cursor": {
          "ref": "01e482e9-3895-4b69-ad3d-fac520f4220d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c42429ac-4a4c-4619-9797-b01c4d34a229"
        },
        "item": {
          "id": "fcb93609-e8e1-4a64-9209-1e15bfc3553d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "326c5109-0ece-4aaa-b7b3-e7764564ba76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17b8119-6eec-4d53-bd53-ed585e2bc47c",
        "cursor": {
          "ref": "c575b9d9-1e7c-4019-a687-01e0de06bc1e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0e68bbf3-8e58-42d1-a5ba-1e823d022ab3"
        },
        "item": {
          "id": "a17b8119-6eec-4d53-bd53-ed585e2bc47c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "04a89482-a853-490d-a55d-fc3bffb67388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f88467-fef2-4679-9e32-6ffed97cb1a1",
        "cursor": {
          "ref": "402a5ad2-bc5a-4594-940a-d4c54d531a3c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "99956e73-0429-45b1-a9be-1c6aa6cdf886"
        },
        "item": {
          "id": "b4f88467-fef2-4679-9e32-6ffed97cb1a1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fa5a1e83-a600-4caa-90f3-97049c6a638f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 98,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "005566ba-24eb-4905-b557-c41da36e6bf1",
        "cursor": {
          "ref": "25ee0017-10e7-4866-aeb8-5e0b21183ae3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2c5f1c53-ee7b-44e9-9f6a-3b5d6ad9f765"
        },
        "item": {
          "id": "005566ba-24eb-4905-b557-c41da36e6bf1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c6341b7a-62b7-4057-8eca-0e7825e63e10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdfc937-f177-4ab3-99f9-0e6f76d3a79e",
        "cursor": {
          "ref": "ff61c524-8e6a-4a4f-86e4-60a0568ac823",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "212a1521-fe0a-4538-ba74-c4bddfb49e95"
        },
        "item": {
          "id": "5cdfc937-f177-4ab3-99f9-0e6f76d3a79e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "24c0d995-5961-49ee-913e-5153edfb51d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af652a3-6e67-48b3-894a-4bbef526a1c0",
        "cursor": {
          "ref": "63e517e7-179f-4c8b-8e2c-02143a712062",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "401fff9d-dcde-401f-bd53-4ad0dbcfbdb7"
        },
        "item": {
          "id": "4af652a3-6e67-48b3-894a-4bbef526a1c0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c4001b97-b323-47c7-a523-45bec8f66f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5e8d70-3719-435d-abc2-797b526016b2",
        "cursor": {
          "ref": "c95dfc1e-811a-4b0a-97d6-a0e2102b590b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "314f9b3f-8997-4ce9-9d9c-74a6ac328d5a"
        },
        "item": {
          "id": "ac5e8d70-3719-435d-abc2-797b526016b2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a33a29a0-fdf4-4469-a37d-5316a69bd0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c48c743-229d-4b04-b264-dbaf9b3f8645",
        "cursor": {
          "ref": "78b98153-f7a5-4eb5-a2b4-229b6179608a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a4c1df1b-f24d-4236-9679-41e009ef9f33"
        },
        "item": {
          "id": "4c48c743-229d-4b04-b264-dbaf9b3f8645",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "162d424c-36d9-4928-82e2-9c90c39fd56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff2ecc7-ce15-49d9-b81b-512cc7e139ae",
        "cursor": {
          "ref": "8763d7bc-12d0-45c3-80d6-0f4e4e675645",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "86f60ce3-2b17-4e15-a1c5-03baec0b15a5"
        },
        "item": {
          "id": "dff2ecc7-ce15-49d9-b81b-512cc7e139ae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "31e78c5b-afa5-4703-af12-405c0426821b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5a88aa-689b-47a4-b772-8363056107fc",
        "cursor": {
          "ref": "a60dc581-96bc-4ea9-9028-3e23801d168a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8fc3fc26-9210-4803-90b9-c736ef5fb79b"
        },
        "item": {
          "id": "5a5a88aa-689b-47a4-b772-8363056107fc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e285e90-9851-4743-863f-18f35ee1bd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c7ca76-02d6-49ab-bdf2-1e469241a8d7",
        "cursor": {
          "ref": "0173080b-c079-4d0a-b816-d497a4aca3c4",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "138c56f7-e92f-4106-a785-ab28dbf16b23"
        },
        "item": {
          "id": "52c7ca76-02d6-49ab-bdf2-1e469241a8d7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9313f835-15e8-4834-8376-2521e68e7405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76796dd-a76d-40be-b9ce-ab0714164940",
        "cursor": {
          "ref": "80fda210-40b4-45d5-82d4-721f523b5549",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "2fe2c209-add4-4a6f-92cb-99ccc2c4f2e3"
        },
        "item": {
          "id": "b76796dd-a76d-40be-b9ce-ab0714164940",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9b2b9ddc-6328-497f-b5e6-383228d56452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc8d1c9-8b1f-4d04-b2dd-45e7eeeb8090",
        "cursor": {
          "ref": "8728becc-3cea-4eae-aebf-6fdebb6e7c18",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f0e22006-6325-4eac-9ede-bab11eb260ab"
        },
        "item": {
          "id": "cbc8d1c9-8b1f-4d04-b2dd-45e7eeeb8090",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "59eafd76-43fc-450b-98db-3f6033ace695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f8fe28-192e-485b-8a7e-ee74ff41b522",
        "cursor": {
          "ref": "42ea37c2-8609-43dc-9346-f88422a10b4a",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fafc5a7b-3805-44ba-90a2-7ac9e3531598"
        },
        "item": {
          "id": "68f8fe28-192e-485b-8a7e-ee74ff41b522",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "01511824-ebac-4da0-b007-23ec2f10573f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358b584c-4b36-4851-964f-8e4a8c3c1291",
        "cursor": {
          "ref": "c7fcdb33-58b2-49d2-8471-8678aaa363c0",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "692690e2-d11c-4ffe-8567-2eb1b64497fd"
        },
        "item": {
          "id": "358b584c-4b36-4851-964f-8e4a8c3c1291",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5a58e627-265e-4e5d-97a2-cfe6039784aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648a23f8-a7ce-4445-b420-928124a5f3e8",
        "cursor": {
          "ref": "5895480b-df06-410f-ab13-004727abd659",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4b7deacd-3eb3-4991-86cd-f3c82014ebfc"
        },
        "item": {
          "id": "648a23f8-a7ce-4445-b420-928124a5f3e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b4ef8f65-7f55-48e6-a23b-b6e825f4c74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe691db5-819b-41a6-a3c7-fde08516fcb9",
        "cursor": {
          "ref": "a516497a-bca7-46b8-a9b9-d482b5a0b49f",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9835f66e-abdc-41b3-be9b-03f7bfc50cf3"
        },
        "item": {
          "id": "fe691db5-819b-41a6-a3c7-fde08516fcb9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f6a4bc52-8b68-4c1f-ae1d-a698e11d4b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f218c6-063f-47b9-b42c-ec7620ca6aa3",
        "cursor": {
          "ref": "70d4bcfc-a81e-4377-aff4-49da7cdacb8d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a269b22f-ddef-41fd-9d02-d1cc0629f920"
        },
        "item": {
          "id": "74f218c6-063f-47b9-b42c-ec7620ca6aa3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "547ce439-4fcf-451b-bed4-b0e40201d0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c266e9-fab3-4028-a238-20904b5a7120",
        "cursor": {
          "ref": "4d30999e-781c-4d9a-a150-2d771f331f95",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ac9b8181-9b44-4df7-8b90-de14cd603301"
        },
        "item": {
          "id": "87c266e9-fab3-4028-a238-20904b5a7120",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "894e7bcb-5e44-4be7-9665-f758ba223ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd76fcf5-61d0-40ec-b28b-e6a592293d6f",
        "cursor": {
          "ref": "bf1f1af3-49a8-45c1-9b53-fd8e4e4ba59a",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "de64dde1-6958-4de5-b779-ad4e89902c54"
        },
        "item": {
          "id": "fd76fcf5-61d0-40ec-b28b-e6a592293d6f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "acc5ca48-0f52-4434-9458-13347a77a061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883938bd-e9b6-4e7e-952b-a48e74ea2238",
        "cursor": {
          "ref": "caaa04f8-e5ee-4fab-9a3b-57a5f6b35e78",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8fcebf71-25fb-4547-a5fa-521d3f9c81bc"
        },
        "item": {
          "id": "883938bd-e9b6-4e7e-952b-a48e74ea2238",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5213743d-7dd5-4a14-983d-6780815e6eb9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "c0b0b3c4-b76d-44b3-b707-9511ab7ac67d",
        "cursor": {
          "ref": "32b0da7a-9abc-447d-a3a4-66e2d97d8e94",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e8ebb5ad-9b53-4e75-ac38-90e73d52fd71"
        },
        "item": {
          "id": "c0b0b3c4-b76d-44b3-b707-9511ab7ac67d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f1c7e399-98d1-44bd-926c-b87d0587d019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbe0bb7-65c5-47ce-baa4-d55f0765e299",
        "cursor": {
          "ref": "62485d92-89c4-410b-860d-64ba131a4b96",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bd3b04b4-0a14-43cb-a84b-7a35f66ae47e"
        },
        "item": {
          "id": "6bbe0bb7-65c5-47ce-baa4-d55f0765e299",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "896858cb-6c9c-40af-9021-8d5563ea4d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4c64bb-c1dc-4d37-a7b1-0eec1b4ef5ec",
        "cursor": {
          "ref": "7c3097c9-1609-42a2-a80c-ed5265f78c2b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ef492cb-1b36-41d5-85a6-e97bef67a8b9"
        },
        "item": {
          "id": "0d4c64bb-c1dc-4d37-a7b1-0eec1b4ef5ec",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b9570a57-3cb3-4842-ac54-e7712a18c1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fe2f8c-34db-4985-b942-db216911527e",
        "cursor": {
          "ref": "4ce435de-1dee-4131-bc88-e058179fee44",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8508fb01-8530-4314-897b-86d215d0b740"
        },
        "item": {
          "id": "50fe2f8c-34db-4985-b942-db216911527e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b0fff51-3cb3-4dd5-aae6-b1314efe6703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a1c5d2-8eac-4a54-a70e-8f1745fc5a0b",
        "cursor": {
          "ref": "ff8d3e04-599a-4a91-9ae8-0c9ab1ee81bc",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1ec75600-33f4-4ff3-9cf7-be0c50734911"
        },
        "item": {
          "id": "c7a1c5d2-8eac-4a54-a70e-8f1745fc5a0b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "451d805d-4dba-45c9-b604-f848a75ef84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbacfdc-03e1-4648-85e3-1460596cfa0b",
        "cursor": {
          "ref": "9a4c85ff-5ad4-40cc-a334-267b82b1667c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cc5db67f-95df-47d6-954c-ce8ffa7fd5b0"
        },
        "item": {
          "id": "dbbacfdc-03e1-4648-85e3-1460596cfa0b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ba74ccee-3f61-4005-b1f3-761f1635a31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7d768b-6d48-4d21-acd1-5ad123daea7f",
        "cursor": {
          "ref": "26d38f0c-47b8-499d-80be-3fd593f8dfec",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e5b4f577-a8c1-4a04-96ef-d357406974c7"
        },
        "item": {
          "id": "ac7d768b-6d48-4d21-acd1-5ad123daea7f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "da6dd0e4-47d4-406d-8656-e76aeca16c9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a31a4b3-237c-4ff9-b7cf-4c5f19e7bb4a",
        "cursor": {
          "ref": "a0647bc8-adc5-4cc9-8b9a-a4a45a3ff087",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b852f206-7f9f-46f4-bd8e-56c52f568c56"
        },
        "item": {
          "id": "6a31a4b3-237c-4ff9-b7cf-4c5f19e7bb4a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ae618f1d-21f9-4eea-873d-68ba47102b22",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "4d2a242c-d254-4667-a47c-42653a8278d8",
        "cursor": {
          "ref": "cedc12fa-3a9b-4cb9-977e-81f13d466aea",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dcbb905b-fcd8-49c5-880e-7c412b58e1d0"
        },
        "item": {
          "id": "4d2a242c-d254-4667-a47c-42653a8278d8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a6485cf7-b3fb-45d9-a2d4-5421c42c9ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16539c8c-a437-4d25-b31a-d43c2f1ae353",
        "cursor": {
          "ref": "be05f574-2a18-4818-98d8-31df97386d7c",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "ce289e82-e0a2-4df7-892e-461863327408"
        },
        "item": {
          "id": "16539c8c-a437-4d25-b31a-d43c2f1ae353",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c4d1bf4b-20ad-456e-a5ca-67c2d3c66759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d563381-2a22-4233-ae56-b8ce9567234d",
        "cursor": {
          "ref": "8a4fe32d-fe0b-45ab-8b6e-9db890dda10e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "602c9a56-4e08-41cc-8eb3-f8bb119b3ef0"
        },
        "item": {
          "id": "9d563381-2a22-4233-ae56-b8ce9567234d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cda25922-7709-4b90-a287-5a4c1b817d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97fd9bb-fc02-4f4a-a8de-c065ae33f781",
        "cursor": {
          "ref": "7932a6b6-c8ff-4ba6-b6e1-1463ff368e26",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "065131d3-fb33-4338-b703-c537d4c801c4"
        },
        "item": {
          "id": "a97fd9bb-fc02-4f4a-a8de-c065ae33f781",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5bea52be-91ee-463b-9097-67c52f388d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614066bd-7016-4f21-8c73-098a4ac07622",
        "cursor": {
          "ref": "6651b890-764d-4522-8912-bb8e8519de7f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d7d22bf3-4abf-4e8b-8ac1-8d9b556ae60c"
        },
        "item": {
          "id": "614066bd-7016-4f21-8c73-098a4ac07622",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "45848ca6-b4d9-4c1e-86ae-930ae806782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935c2a1e-9b12-4631-a3ce-8c13eff73fe5",
        "cursor": {
          "ref": "8bd094a8-b850-4b33-8193-bc863ed800be",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b8385881-474b-4c5a-a3c6-f0dec701f0c3"
        },
        "item": {
          "id": "935c2a1e-9b12-4631-a3ce-8c13eff73fe5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8dd4f758-303e-49e8-bd64-bee08973025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeb50a2-8412-4232-99d6-0e636d76652b",
        "cursor": {
          "ref": "3bfe179f-61a7-4a98-aa4b-6cdba1ac28c2",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "14291bb6-69be-4eb6-afbf-da881999bb11"
        },
        "item": {
          "id": "bdeb50a2-8412-4232-99d6-0e636d76652b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ef9f5bd0-1b8b-42fb-a864-c1dd933313de",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 53,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "a0b1fbc9-d4ca-4a26-b668-60a42f69f1c5",
        "cursor": {
          "ref": "b9d008df-a8fe-410e-96e2-6e791c89ece0",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "368cc5d3-4c53-43f2-aa29-ce9d17d454c9"
        },
        "item": {
          "id": "a0b1fbc9-d4ca-4a26-b668-60a42f69f1c5",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ba3160db-7913-4692-a51a-a3ca7496dba1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "145fb522-040d-4113-a7d9-f3a8b42e953a",
        "cursor": {
          "ref": "1513561e-8a96-4c25-bee8-ec6b0e03d362",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f4050a8f-c2a7-461b-9612-00b189efb6cf"
        },
        "item": {
          "id": "145fb522-040d-4113-a7d9-f3a8b42e953a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fa9899ca-f26e-4c7a-9b04-336cbb1d830f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 46,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "b21ec997-3391-45ce-bb12-cda6d70299d7",
        "cursor": {
          "ref": "a48af830-2db4-4b80-bb71-734609f1a5ea",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f743910d-cf8a-425e-b7c1-738788c018a0"
        },
        "item": {
          "id": "b21ec997-3391-45ce-bb12-cda6d70299d7",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a3c5c86a-0ada-4ef1-9b8a-e97758073330",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 48,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "4cd20d08-3e22-4749-b458-ed87d38651c5",
        "cursor": {
          "ref": "eb906731-d89f-466a-883d-06578a1ef3f5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "53a0e379-d1e6-4a89-9ac9-1c66ea2cc508"
        },
        "item": {
          "id": "4cd20d08-3e22-4749-b458-ed87d38651c5",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5b970f20-ce9a-4fa2-bec9-2cb28871a886",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "1ea2cac1-56e4-4388-bfba-738f028c907b",
        "cursor": {
          "ref": "fd17a1e7-3202-4923-8650-e92917d62268",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "797636fa-8e62-4095-b10f-680e2e9d2164"
        },
        "item": {
          "id": "1ea2cac1-56e4-4388-bfba-738f028c907b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e9ec2f57-22fb-4e14-ab9d-c0913a698565",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 51,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "02fbd409-a6db-463a-a5a0-615818d3b9c2",
        "cursor": {
          "ref": "764af8d5-53eb-4b3d-8672-cafe09daf3e0",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4849364e-b6a5-4b7e-a12c-24f5cd74b256"
        },
        "item": {
          "id": "02fbd409-a6db-463a-a5a0-615818d3b9c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "497f3548-d0b7-4440-8e24-7da81d253586",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abca0385-7bbc-4c2b-a081-dc8fe6ebe2a1",
        "cursor": {
          "ref": "f19fa9b6-433d-4d82-9173-c9b00e3ef0d9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b1a4a2f7-3475-47b8-9ca7-9895b17fa5bb"
        },
        "item": {
          "id": "abca0385-7bbc-4c2b-a081-dc8fe6ebe2a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2b7a7547-5c2d-465d-abef-263c09b71122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa9af5-090f-4499-b3ef-b1c322f69c66",
        "cursor": {
          "ref": "e3bec05f-35bf-4ab7-a895-822b4cbc5ddd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "a6ed04ea-7068-4695-b567-9f028e2ad296"
        },
        "item": {
          "id": "bbfa9af5-090f-4499-b3ef-b1c322f69c66",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b619a87b-7507-4835-b5f2-ac4f56338723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d8a00e-4d55-4b43-bfff-2877ace38201",
        "cursor": {
          "ref": "391e42f9-6026-4671-bb63-65364019979f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cb922c4f-c224-4527-bf92-8a1d267f0eb8"
        },
        "item": {
          "id": "36d8a00e-4d55-4b43-bfff-2877ace38201",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "77b14043-7a84-45b1-ab91-420fd029e0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24dbb5a-b177-4968-8893-e7390c912219",
        "cursor": {
          "ref": "a53ed06d-71aa-4b75-8a61-5a34b8585fbd",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "232e2f68-23e6-4433-8d38-9df151dbcb01"
        },
        "item": {
          "id": "b24dbb5a-b177-4968-8893-e7390c912219",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "80eb50f5-cf68-4a1c-9491-a0087324f449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ee6c7a-9d4b-41f7-ba20-1fc806f039b3",
        "cursor": {
          "ref": "43d5b9b4-dbd5-4284-9ec5-d74044bcd8d3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e76d0066-08e7-4554-b32c-74d862662d96"
        },
        "item": {
          "id": "96ee6c7a-9d4b-41f7-ba20-1fc806f039b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0dad8af5-bb68-4166-9cd8-fc5ee8303d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5ddafd-4652-4bcf-bfec-2de85fc5b422",
        "cursor": {
          "ref": "414cca02-e902-4f08-981f-d834b3cc84be",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d4cba476-defd-429d-8a87-9723d2e03cfd"
        },
        "item": {
          "id": "8d5ddafd-4652-4bcf-bfec-2de85fc5b422",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "86646b8e-bc4e-474d-83e8-b63e76e97906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdf5c5a-363a-4c9e-8558-cf2fa5ae86c1",
        "cursor": {
          "ref": "88edd9f3-dded-4855-84d8-4004f7d8c459",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2ddd20bc-864f-4a17-9b11-9602f6ce921b"
        },
        "item": {
          "id": "abdf5c5a-363a-4c9e-8558-cf2fa5ae86c1",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e7a14026-2f72-4b78-8590-83e35ebaf497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb70f272-7266-425b-ad22-bcd763bee88a",
        "cursor": {
          "ref": "b5fa4c8a-3152-4ede-9519-a7412805b68c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6dd2b32d-7fc9-44d1-9880-bb427e5f262f"
        },
        "item": {
          "id": "fb70f272-7266-425b-ad22-bcd763bee88a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "efd058c6-9439-4c62-a4c2-a45d47c1803e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6fe5f6-2c7c-44df-a730-280b2e64f5b3",
        "cursor": {
          "ref": "2ffa5e36-5743-4f3b-bc16-7779b61c6a15",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2e54a2fe-3b5b-4855-b5f5-3575eba652b1"
        },
        "item": {
          "id": "9a6fe5f6-2c7c-44df-a730-280b2e64f5b3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c2181544-9ebc-44f9-a257-87744219c5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca382a10-4a1b-42c5-8d38-e1d26aab147a",
        "cursor": {
          "ref": "3319c22c-f135-4a72-983c-6860b1cb181f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "befccf63-e95e-4778-8f2b-132b2ddee636"
        },
        "item": {
          "id": "ca382a10-4a1b-42c5-8d38-e1d26aab147a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c07e2abd-64ea-4e2d-a6d1-b0fea31d12be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea68058-6625-4a4a-a224-fcc420ff1f87",
        "cursor": {
          "ref": "6e5f8c72-ec0c-460e-87df-eec9dbeb3621",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e5aa8711-75cb-455a-a468-d03ae2cfa754"
        },
        "item": {
          "id": "bea68058-6625-4a4a-a224-fcc420ff1f87",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8af1cb2f-4d8b-430a-a648-f84c8daa7da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b64d45-68ee-4fde-86ee-38ba51e6b6ac",
        "cursor": {
          "ref": "70944eb3-3498-4d69-a0a1-288e57683c36",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f73edb1b-b438-46c5-938a-1d40efe74a7a"
        },
        "item": {
          "id": "f0b64d45-68ee-4fde-86ee-38ba51e6b6ac",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fd61776c-089b-4857-8316-d286bd8d9217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1a442d-9da4-41f3-a790-4a64b9ec6809",
        "cursor": {
          "ref": "efa0a9df-1513-4066-a2aa-fdffbaff9a5c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c7666e6b-0a3d-499d-8355-06c0e2f265d5"
        },
        "item": {
          "id": "4e1a442d-9da4-41f3-a790-4a64b9ec6809",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3b4adc16-75da-4c6e-bd85-3c213ced629a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fabed857-84e3-45a6-91df-d95fc33e25f3",
        "cursor": {
          "ref": "c88e438e-1bec-45f0-ad98-6e73d25de40e",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b0e692d7-25a0-4332-adc3-d6b8d6a0a09a"
        },
        "item": {
          "id": "fabed857-84e3-45a6-91df-d95fc33e25f3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "afdcb836-755f-42fb-8605-72b166b41adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d634cb2-aa8f-41c3-822c-2439d79dcbd0",
        "cursor": {
          "ref": "c1c60ed6-ce3e-471b-b807-da8ac1f25cc7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c3a1713d-2083-41b0-b04e-cb61f8e11c67"
        },
        "item": {
          "id": "7d634cb2-aa8f-41c3-822c-2439d79dcbd0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8be0fd27-f330-4aec-a707-53c108f94f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2162816-330a-4014-80e2-db8f9614bc2b",
        "cursor": {
          "ref": "d0a334be-89af-46ba-9725-98fa8fb19bc5",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0b643f39-166c-42be-b004-726a64c41210"
        },
        "item": {
          "id": "e2162816-330a-4014-80e2-db8f9614bc2b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c76e11bd-c7b0-4c93-8974-621b1d1378e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac31381-9698-4202-8616-0106c7353183",
        "cursor": {
          "ref": "c83204ab-ac52-4837-8b86-c79fb22a0635",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "073b07ff-6dce-4a5f-b98a-9279cd3d92d8"
        },
        "item": {
          "id": "dac31381-9698-4202-8616-0106c7353183",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8b1fdd70-2281-49f6-a34a-b54dfdcd406c",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "5293e8af-f355-43db-9cc4-b682a7ea92ba",
        "cursor": {
          "ref": "ad8983a1-fa2a-44d2-8659-112fcf69b43b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ef6de828-7b3d-4544-80c7-3ec7adff9ad8"
        },
        "item": {
          "id": "5293e8af-f355-43db-9cc4-b682a7ea92ba",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1bf986aa-63e1-41f0-b962-8340a705f236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf15116-b117-489c-9922-74c7e09acff1",
        "cursor": {
          "ref": "777f3c94-546d-46ba-9212-b47bb38773ee",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5f4591af-f4ef-4f0a-aa73-6ea185e848c7"
        },
        "item": {
          "id": "4bf15116-b117-489c-9922-74c7e09acff1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "91bc1d5c-6c44-4665-aa51-2336056a8eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d21de9ec-795a-4ea5-a795-df6095e3e2ac",
        "cursor": {
          "ref": "cda8d670-cbda-4ea3-a66c-0edc267fc6f4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a989e733-002c-4606-ba6c-5bcffb429086"
        },
        "item": {
          "id": "d21de9ec-795a-4ea5-a795-df6095e3e2ac",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4e94bcfc-3b5b-4b85-8581-539f4a4fbd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1928fe-0c16-498a-aedf-d7a64bc1f02f",
        "cursor": {
          "ref": "5cea4e27-3cd7-4d4f-af11-8e517c3edbe2",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6a66b277-80e2-40e9-afba-8baa1355eaa2"
        },
        "item": {
          "id": "db1928fe-0c16-498a-aedf-d7a64bc1f02f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d4688742-d5b1-4e16-b928-d875d69593c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db12ad6b-e613-4400-aadd-f104882b7611",
        "cursor": {
          "ref": "5a0c8b76-c6e2-4910-a4eb-7d375b31cbe2",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9d910f96-632a-4074-a7d3-22e119a2fcba"
        },
        "item": {
          "id": "db12ad6b-e613-4400-aadd-f104882b7611",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "828792e1-7fdc-488f-b803-6da6f388d3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e2c3c2-f6f4-4d81-aba7-04223fd29638",
        "cursor": {
          "ref": "c3ce9ccb-efe5-475c-ae49-16a8479d80ff",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e9a06135-7e77-4729-a29a-813aff1ff5ff"
        },
        "item": {
          "id": "58e2c3c2-f6f4-4d81-aba7-04223fd29638",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ffc7a9a4-df31-4aa0-a4cf-368ace451640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163d9468-546d-41a3-ad66-e8719983af9d",
        "cursor": {
          "ref": "8da44cbb-a843-43df-be77-0b208f2db957",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "88c64b8e-1d75-4fb6-80f7-83f30ba57fd9"
        },
        "item": {
          "id": "163d9468-546d-41a3-ad66-e8719983af9d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "63ff2cda-b5fc-42dc-8d97-0306284aa619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb31a587-f1df-4194-bcab-7106475f704c",
        "cursor": {
          "ref": "6dd4555b-09c7-49e9-b475-1877972d63f0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f2df9331-2769-435b-b361-fb9b96cb8888"
        },
        "item": {
          "id": "cb31a587-f1df-4194-bcab-7106475f704c",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "96c3c3c0-4b32-4d77-bfac-d7d4e79599d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c3ae12b-8a81-46e0-abf4-06f5c947a989",
        "cursor": {
          "ref": "751c8b82-5bce-4e5b-9aa7-1de37eb527f5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e77617e3-47be-4fc3-b586-6d40f8245a27"
        },
        "item": {
          "id": "0c3ae12b-8a81-46e0-abf4-06f5c947a989",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "13fb3268-f8a6-4041-b6f1-a693c89797bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d755223b-7022-4702-8d1e-30cf48e632d2",
        "cursor": {
          "ref": "ca8327a7-ab4b-42cf-8a7f-c35f925babaa",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dafadee9-99f5-4023-af0c-4ebb7208da1c"
        },
        "item": {
          "id": "d755223b-7022-4702-8d1e-30cf48e632d2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bcfd8f70-1ffa-43b8-84a7-a72f98ffbf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0233e7a8-be7c-47ac-b67a-5c3ba03de784",
        "cursor": {
          "ref": "04ab3797-1b31-4d02-a102-e4749cfd0d0a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d8978596-ceb8-4714-856c-bba48601983f"
        },
        "item": {
          "id": "0233e7a8-be7c-47ac-b67a-5c3ba03de784",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "afb23dbf-7af1-4faf-bab2-44f37b2b20f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc13a54-83b2-432a-856a-45a8d50147bb",
        "cursor": {
          "ref": "1fd6380e-c049-40cd-aac0-39dbd814a8f5",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "34f4f02d-3740-4866-8348-750170813bea"
        },
        "item": {
          "id": "edc13a54-83b2-432a-856a-45a8d50147bb",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "37129baa-45f1-4147-ae3e-b58b874a28fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f6b69-7936-438b-8539-dd47ebd9972c",
        "cursor": {
          "ref": "03b627ff-0b74-4bd1-8928-546f768b3dc4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9b2fd878-5b02-4dfe-b2df-a558121facac"
        },
        "item": {
          "id": "4c7f6b69-7936-438b-8539-dd47ebd9972c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9c2a66c5-b2a2-439c-b862-81e27d2e2948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d73309e3-48e7-4941-a9f4-d8c22889d217",
        "cursor": {
          "ref": "2abfab33-ed8a-431a-8cd8-28630380daa9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c84f5295-fff4-4955-9abe-9223ec5a5580"
        },
        "item": {
          "id": "d73309e3-48e7-4941-a9f4-d8c22889d217",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f08c945c-353c-428d-966b-8c324bf0db43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48242163-f53b-460d-ad7a-270e3ce81d11",
        "cursor": {
          "ref": "4b13cb2c-a751-4055-8bc6-ac760e4b283e",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c5e78e2a-24cf-418e-bd18-3055ea3c67af"
        },
        "item": {
          "id": "48242163-f53b-460d-ad7a-270e3ce81d11",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "50d09293-732a-41a6-b666-e32695e25348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67df2483-37de-4a88-8b17-243e947966f4",
        "cursor": {
          "ref": "0f0f6464-d5e7-47af-9831-642dde8bce0a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5480d84c-d255-48b7-b301-cd57c34eba53"
        },
        "item": {
          "id": "67df2483-37de-4a88-8b17-243e947966f4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3403f48c-bfb6-48f1-9c3a-6466fbff1d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12493be-272d-4838-820d-da4248dd3419",
        "cursor": {
          "ref": "5e1592d3-8599-495c-a34f-6240b235bdbf",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "25efe3cd-f260-42d5-ae69-f27236506949"
        },
        "item": {
          "id": "e12493be-272d-4838-820d-da4248dd3419",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8e31e7cc-2721-40c4-b889-c0714d6a44bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c394cdb7-3d43-408c-8156-08a8159153c3",
        "cursor": {
          "ref": "9b8a1b47-b85b-443b-978c-2d80b92157e2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "837410e0-ddbc-4505-9050-c1a18f0db067"
        },
        "item": {
          "id": "c394cdb7-3d43-408c-8156-08a8159153c3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "60939674-b610-46f0-83c7-21339dc3e22d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1ababb-a71e-4f47-ad3b-6609e45d5e58",
        "cursor": {
          "ref": "06c97d4f-09aa-4f2e-a259-7f56394a3dfb",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "261e78c9-1e10-4151-8833-50441d962356"
        },
        "item": {
          "id": "ac1ababb-a71e-4f47-ad3b-6609e45d5e58",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1cb97434-be63-42fe-b496-781bf7a0fd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d944b3-7877-45a4-b32a-41671df8a862",
        "cursor": {
          "ref": "aea95dd9-8ed9-47f5-81e8-9462c74a6314",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cc1506c0-852a-4145-afbd-2569d177c231"
        },
        "item": {
          "id": "74d944b3-7877-45a4-b32a-41671df8a862",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d9be4d57-b143-4876-8887-d54a2ccb6b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6569256f-1343-45e2-ba68-96bd41c18363",
        "cursor": {
          "ref": "3c9c249e-978d-452d-a2b9-45e0e8985838",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "860f0ebf-5479-462d-b5a6-94cd6db44e83"
        },
        "item": {
          "id": "6569256f-1343-45e2-ba68-96bd41c18363",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "83efff59-0439-4236-910b-647863f6868d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49ea633-9914-4d92-95b8-cb0699aba7cb",
        "cursor": {
          "ref": "bf3984a6-52ef-4668-8872-92f78df3d186",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4cb95a3d-96db-4bac-9ebe-a3eb3dd3429a"
        },
        "item": {
          "id": "d49ea633-9914-4d92-95b8-cb0699aba7cb",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "71f26c0a-5968-4121-87f3-c44195c05cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f856ae3-06a7-4d09-a469-2a89c8bb57fb",
        "cursor": {
          "ref": "1609527a-b295-4711-be3d-b04e181d0733",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "efc67a75-a29b-4f88-89a7-527cec3e7614"
        },
        "item": {
          "id": "1f856ae3-06a7-4d09-a469-2a89c8bb57fb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b216ca46-3621-4b00-8245-c6f85463c6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0d0a4c-49da-4032-aba5-62482a8788fe",
        "cursor": {
          "ref": "1ad1739e-7dff-4648-89ac-fb7a197dea97",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "87be2284-351b-47b4-b4b0-e366d4b1257b"
        },
        "item": {
          "id": "5b0d0a4c-49da-4032-aba5-62482a8788fe",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6c228340-913f-4010-b73f-439d2b926408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2144a84-cf92-4e9f-972b-2a1d23aeb007",
        "cursor": {
          "ref": "945c267f-4401-49d7-96c5-07c8665ad184",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e9734b71-78c9-491c-b763-e35631bd0b3b"
        },
        "item": {
          "id": "b2144a84-cf92-4e9f-972b-2a1d23aeb007",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "03565b26-428d-424d-97f7-3f3d93303321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38573d6f-4b55-4793-9c0e-ffbf1a476c2a",
        "cursor": {
          "ref": "01b7918b-8102-46e8-ab69-65aee7e16b33",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "36c24404-b425-4338-8ffb-594adbb49496"
        },
        "item": {
          "id": "38573d6f-4b55-4793-9c0e-ffbf1a476c2a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d27db729-a038-4487-90f8-92e93990121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8f564b-2113-4c55-a053-cfa5cc23bad5",
        "cursor": {
          "ref": "be05bfe2-8ce7-48e0-92ce-0c42ab5217ad",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "eb1c06c0-aaf2-498b-8e99-6f3bea75960d"
        },
        "item": {
          "id": "5d8f564b-2113-4c55-a053-cfa5cc23bad5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "160f0e36-c668-45f1-bd09-4f7949bcbf6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f682896-33a0-47e9-9902-cfcf0e669f07",
        "cursor": {
          "ref": "da1275be-12c6-45ef-bb83-ab0ddc3a886d",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2139897d-16a4-4464-9b27-3d8e92ad967c"
        },
        "item": {
          "id": "9f682896-33a0-47e9-9902-cfcf0e669f07",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "88feb7cb-a3a6-4933-95b4-da23b3146f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716186fe-2896-470d-a2f3-200f9fee564f",
        "cursor": {
          "ref": "f6ed54d4-409d-45d4-bede-ef6884dbab8c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6b2a9dab-9fbe-4e4c-ba39-7905ade3921c"
        },
        "item": {
          "id": "716186fe-2896-470d-a2f3-200f9fee564f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0744ffac-ba30-458c-8473-44eea1bdc1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81405c8a-1c4f-488d-b54e-9b6efed8de5c",
        "cursor": {
          "ref": "3713fdf4-7653-43d5-9b3c-76649bcdf730",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4e0bf1a3-2257-4ce2-bc87-fd666940cf33"
        },
        "item": {
          "id": "81405c8a-1c4f-488d-b54e-9b6efed8de5c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a30c1c36-fb79-4101-a6c6-40c311655cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817f85b3-eeff-4bb1-a115-33d93ed5674b",
        "cursor": {
          "ref": "a2862b36-96e5-48bc-85f4-6464a59fc038",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a15ebd26-6e33-4fde-bffa-1d461b3e2ab0"
        },
        "item": {
          "id": "817f85b3-eeff-4bb1-a115-33d93ed5674b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4ea386a5-35aa-49c5-8677-695fff74b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c4fe3c-ff07-4204-a9de-69fe31c3be85",
        "cursor": {
          "ref": "529b118a-b309-414a-822d-35d58237eddb",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c61fa98b-5b1e-4c73-b8a5-ec56e30d345e"
        },
        "item": {
          "id": "68c4fe3c-ff07-4204-a9de-69fe31c3be85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "219056de-fcf5-4adf-86db-4de739999c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c920e3-9a64-424a-94ef-19be9b878f44",
        "cursor": {
          "ref": "3709e00a-8133-4d6b-bde7-d0be0181f78a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "40e81612-baf0-4f8b-be1d-608a2464b078"
        },
        "item": {
          "id": "86c920e3-9a64-424a-94ef-19be9b878f44",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28b7537c-22ad-4798-a0fb-1d772a48dad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4958eaa4-0528-4132-a502-d51415b29542",
        "cursor": {
          "ref": "e604e3e0-7f38-4b3b-b3d0-27cc03dab842",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "5a3b5d5f-f471-41d6-9ddf-f495abe42b89"
        },
        "item": {
          "id": "4958eaa4-0528-4132-a502-d51415b29542",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e7ec43b2-a86c-42fb-9874-c8e20953aab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd51f8cc-c025-4f4a-87e8-5f9c84f263ac",
        "cursor": {
          "ref": "4720566f-f071-49d9-bc1f-4eb37cf35b49",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d4286c40-fd63-44be-b72c-d1128dec8a9c"
        },
        "item": {
          "id": "fd51f8cc-c025-4f4a-87e8-5f9c84f263ac",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2986b618-40ec-48f8-b185-c9154d67a1b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5889ed34-f7e5-4e9f-bb22-09a5dbf21ec1",
        "cursor": {
          "ref": "7fe1ca67-d7da-4dfb-9a1c-64dae2aba9cd",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8314fc12-43c5-46f2-be68-5ef5bc9e9d76"
        },
        "item": {
          "id": "5889ed34-f7e5-4e9f-bb22-09a5dbf21ec1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1c789608-01e3-46fd-aac4-2ae64b01e2ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9185ad-abbb-46ad-89d6-07618743f469",
        "cursor": {
          "ref": "79a84135-9696-4308-a344-db23dad394fe",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c4c55d2-cb9f-4cbc-9735-c0a474f08403"
        },
        "item": {
          "id": "0c9185ad-abbb-46ad-89d6-07618743f469",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4446c54b-6697-4f16-9309-6f16bb6d1b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34750985-bbd9-4927-b2b3-5313b71b01a7",
        "cursor": {
          "ref": "d3c73d46-2ccb-44cf-8c00-acd78731d400",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "64c0b686-73e0-4842-9547-65049f625080"
        },
        "item": {
          "id": "34750985-bbd9-4927-b2b3-5313b71b01a7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "41514abc-3d46-41dc-9c8d-e48dcf734eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1415a097-c204-40d3-8fb5-472f580ce554",
        "cursor": {
          "ref": "6fbdb182-bb58-4a76-b088-c919ae780d5c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b0f69297-f499-42f2-aadb-6506fde1992c"
        },
        "item": {
          "id": "1415a097-c204-40d3-8fb5-472f580ce554",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af83d60f-f576-4c5f-978a-fc075988de79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbfe729-709e-4bec-ad12-127a84aa3f3d",
        "cursor": {
          "ref": "341f4e58-ec35-4b1a-b66d-d1d173b9d5c6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e94762e6-b814-457b-b100-045125255644"
        },
        "item": {
          "id": "5bbfe729-709e-4bec-ad12-127a84aa3f3d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "979faf6f-0a81-4fe6-95ed-3160cc6d60b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a4ab6e-22e0-4b5e-ae7f-d1d93f0379f3",
        "cursor": {
          "ref": "3ac64eae-2bdd-4b29-bb33-0c82a80320bb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d54ff4c6-e4da-466d-be5d-3cb014be87f6"
        },
        "item": {
          "id": "a4a4ab6e-22e0-4b5e-ae7f-d1d93f0379f3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f07162a7-2070-41f1-88f5-d5e08b47502e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69089327-fe81-485b-b9c4-0dc6bc4c4c5a",
        "cursor": {
          "ref": "ebaea0c2-6f5c-4b15-9bcb-5342063f50cb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "de4aefae-6c2e-4ba6-97ff-e034f8138900"
        },
        "item": {
          "id": "69089327-fe81-485b-b9c4-0dc6bc4c4c5a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a53b1781-9b2b-41a5-8eff-866e91bb6718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7b6312-e46e-465e-bf1c-8d73ade038bf",
        "cursor": {
          "ref": "f1b4eb29-4793-4448-8df2-eb0148fff749",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1108e7e7-650e-45e7-a41f-95809ff7eb96"
        },
        "item": {
          "id": "dd7b6312-e46e-465e-bf1c-8d73ade038bf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d6a4dc00-4ba8-4486-ae51-d5a03468b654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1df0e8c-1a31-4787-b337-706484205af5",
        "cursor": {
          "ref": "cb3b47bb-617a-4ec1-b834-462a5f41c8aa",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "78be9ff7-1eb2-4815-accc-4df49dec329e"
        },
        "item": {
          "id": "e1df0e8c-1a31-4787-b337-706484205af5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "36065e2f-656a-4311-ae41-b9082a2374e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996c46ce-6930-4a33-9819-745391f3ee97",
        "cursor": {
          "ref": "c145fdba-04ed-4133-bb2b-73a0ecdec864",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b1446ff7-d79d-447e-96c8-41aa94f46027"
        },
        "item": {
          "id": "996c46ce-6930-4a33-9819-745391f3ee97",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "64c16673-5c3e-4c51-89bd-fc5030d2be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a705c18-6dcc-41f1-b240-e18f5869dff8",
        "cursor": {
          "ref": "9ec5f00b-f221-40e0-b271-c8ebcb4f405f",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a07f71fb-75da-4fec-9d2f-a5cdf7fa4f15"
        },
        "item": {
          "id": "9a705c18-6dcc-41f1-b240-e18f5869dff8",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dbc6336e-6bcf-410b-8887-e58b73ffb7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616e8bb9-f1ee-4cd8-99c7-a923f048e04f",
        "cursor": {
          "ref": "18964b9b-f4ec-4543-b760-d3cea22df50e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "638fadf6-bb78-4d7c-9f91-708384330352"
        },
        "item": {
          "id": "616e8bb9-f1ee-4cd8-99c7-a923f048e04f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bebe9c82-fb7b-4711-8959-d70020056853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350b93a7-2751-43d9-ae2f-f29e379eceb5",
        "cursor": {
          "ref": "4123ee31-deb0-4dd2-89b6-2013da81ba29",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a526362b-87c8-4f70-adb4-89b144b50986"
        },
        "item": {
          "id": "350b93a7-2751-43d9-ae2f-f29e379eceb5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b5191a6e-748d-44f7-9276-303981145714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdec003-6c72-4776-83bb-3c40db51c4f9",
        "cursor": {
          "ref": "eeff84d4-a793-47b1-bce9-2860d6ce3e1d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02c9d3d1-ad4c-4f0a-a7c5-c778ee4272a0"
        },
        "item": {
          "id": "6cdec003-6c72-4776-83bb-3c40db51c4f9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cd26e04d-932c-4a3d-83f3-c2be37dc5f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464cef82-ba9f-4d8d-a9dc-c5906b87582f",
        "cursor": {
          "ref": "84e80906-f1d6-4908-896d-13db275c440a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7c3ffedf-7ca0-43e2-9ebe-718f2e45a352"
        },
        "item": {
          "id": "464cef82-ba9f-4d8d-a9dc-c5906b87582f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a9f92f0-1baf-4a9f-b15e-00eb79addbb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08381f5-e06f-40b2-ab53-4c16c727c4c2",
        "cursor": {
          "ref": "f6b1796e-16c6-48ba-87c0-f2f79b66ad5f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c8bde1f1-10b5-44e4-b47b-59b823d26200"
        },
        "item": {
          "id": "d08381f5-e06f-40b2-ab53-4c16c727c4c2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "589f299e-6f67-47dc-aa82-cfbd8926e9b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86206776-802b-4885-acbd-560705612938",
        "cursor": {
          "ref": "8fe48590-c660-463d-b948-641617ff1b44",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b8fe038d-5bd5-449d-ba63-82f2be5bcf98"
        },
        "item": {
          "id": "86206776-802b-4885-acbd-560705612938",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c74f840e-5eb1-45dc-8687-701d4bcb1b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cc51cc-6e93-4613-9ad8-003e6447dd5b",
        "cursor": {
          "ref": "c9aaef78-f468-48f6-a55b-4382153e5693",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9dc6c416-235d-4bd2-9992-904aa7c8ce2a"
        },
        "item": {
          "id": "37cc51cc-6e93-4613-9ad8-003e6447dd5b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d5cd82a3-6fab-40ff-ac03-a97246b93a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a0c9a-0fc0-4a01-8c2c-fca44cad1032",
        "cursor": {
          "ref": "e72f05e3-138c-45ab-add0-16c01db1687f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30fff4e8-c403-4366-9b1b-3014ce92b2b0"
        },
        "item": {
          "id": "f58a0c9a-0fc0-4a01-8c2c-fca44cad1032",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "af615507-1759-468e-a1d6-867c84519358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3595d0f7-9f1b-42b2-bfa4-1579e6dc92f3",
        "cursor": {
          "ref": "57dd79c6-cbde-47a2-83e2-5870e55cc462",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d51132a4-aa9e-4d11-8015-20800462741c"
        },
        "item": {
          "id": "3595d0f7-9f1b-42b2-bfa4-1579e6dc92f3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "72e0aa71-240b-4f2f-a77e-72b43738f5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470ec320-e096-473f-90b9-77bd461c257a",
        "cursor": {
          "ref": "f6ac78ff-b6e1-4acf-a0f3-7ae322f2ff56",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c3cfda17-db01-4eb1-9022-777072863037"
        },
        "item": {
          "id": "470ec320-e096-473f-90b9-77bd461c257a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4fd22b12-3453-4389-b767-b67b559fa1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b22e97-5982-43f4-8704-be733e787bf5",
        "cursor": {
          "ref": "0353fda2-a49e-4815-a232-1388a43fbd12",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4f27d207-8a5d-4c0b-bda9-858f850f1bca"
        },
        "item": {
          "id": "b9b22e97-5982-43f4-8704-be733e787bf5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9c06c9f7-4a2a-4cd9-b5ec-4cc5539b978a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530f6fe2-3709-47aa-a57e-55fdaf662ea9",
        "cursor": {
          "ref": "34b0dd78-6446-4ce8-821e-543a49f5581c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d5b4e2cb-6ded-4fdd-b0a0-78d8d4926c6e"
        },
        "item": {
          "id": "530f6fe2-3709-47aa-a57e-55fdaf662ea9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "356d501c-f6cf-4915-973f-d3ba84d19e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992663af-626e-4883-bf4b-23de2796d425",
        "cursor": {
          "ref": "5c4ccccd-c12e-4acc-9075-ee085cf6d8ad",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e550d71e-b2df-4e39-b639-c926946e1021"
        },
        "item": {
          "id": "992663af-626e-4883-bf4b-23de2796d425",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b85587cf-4d67-41a8-ba63-7a7aeafc2356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b703f950-aeaf-4048-831b-8dfaaf27c9a6",
        "cursor": {
          "ref": "d32b25bf-d8f4-4a2c-8a1c-bc135af7a068",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e7f71849-acce-43f5-832a-cbb29a14c50b"
        },
        "item": {
          "id": "b703f950-aeaf-4048-831b-8dfaaf27c9a6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b1a0b6b5-e846-4a66-a9da-3a5c70e9c608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c40a8d5-2e6d-4da6-b839-d22db68b0463",
        "cursor": {
          "ref": "11842c93-3779-4935-8c86-838275de8452",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "7ba4fb5a-d1b4-4994-b764-017caa268d2d"
        },
        "item": {
          "id": "1c40a8d5-2e6d-4da6-b839-d22db68b0463",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ab40b95-2d6b-4b29-85b2-604bf03fbe1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4484006-1d32-426b-91eb-bfe20ad9a02f",
        "cursor": {
          "ref": "c192f30b-b892-4595-8456-2c03d694395b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c2f20e63-cd3a-47c9-a93c-e090e756667c"
        },
        "item": {
          "id": "b4484006-1d32-426b-91eb-bfe20ad9a02f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e4fe5a15-a5ec-4778-82a8-86c10e5a69fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29847edd-30d9-45f1-999c-bda1342e77ac",
        "cursor": {
          "ref": "29f1107a-63b1-4fb1-9d80-f621abfb4410",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b6681667-1787-44fd-9813-dd21e28cd921"
        },
        "item": {
          "id": "29847edd-30d9-45f1-999c-bda1342e77ac",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "65dc1069-002f-4410-86a4-0caf61e27c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409bd367-598c-4504-9490-42f0204548b1",
        "cursor": {
          "ref": "e855baaa-fd76-4f66-a010-b6f76ca18120",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "27b16b45-47f2-417d-9fec-95c713cfd85a"
        },
        "item": {
          "id": "409bd367-598c-4504-9490-42f0204548b1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b3eed52f-5bf5-4e69-859e-902568eb2509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f66b26-a504-4f14-9660-0e4b367e4ff8",
        "cursor": {
          "ref": "5291478a-99ca-49a3-9c26-9889a196ebab",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4e796b58-0c1b-4a03-b9ba-4ddc99deabc9"
        },
        "item": {
          "id": "08f66b26-a504-4f14-9660-0e4b367e4ff8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0afcef4c-4dc8-4cfa-9ab7-01bdd9efc9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7d2927-ba67-49bb-bd87-e241a235718c",
        "cursor": {
          "ref": "a6ecf243-9414-4878-9672-0b784b0b0b67",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "f6d0187b-64c0-4917-b629-4c457bbf1e38"
        },
        "item": {
          "id": "fe7d2927-ba67-49bb-bd87-e241a235718c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e78d9c90-f314-4052-91ae-1fb04fada865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcb35ac-f621-4e8b-8378-a983969152fc",
        "cursor": {
          "ref": "e3dbfd16-df66-4f07-a70e-1a9b9a076184",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "6da72911-e193-4aa0-ac24-3809ad8a2c2b"
        },
        "item": {
          "id": "4dcb35ac-f621-4e8b-8378-a983969152fc",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fcbde4a8-7105-4825-a666-93fdebd7405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc1d9a-1568-49be-ab01-2b0c8e45ece4",
        "cursor": {
          "ref": "48cbddbc-36eb-4145-9db9-419421f072dc",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5fbc6c0c-6763-427f-a6a0-1829cbad38de"
        },
        "item": {
          "id": "58cc1d9a-1568-49be-ab01-2b0c8e45ece4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "43169e73-63ec-4de6-a5b3-e41594b652f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efcda8b-2c69-4a27-9742-f379c3cbba34",
        "cursor": {
          "ref": "cab391d3-40b8-45b1-ad21-8b8ec3fac79b",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d410e31f-589a-4ead-8490-323b9d4a26f7"
        },
        "item": {
          "id": "5efcda8b-2c69-4a27-9742-f379c3cbba34",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6d8c10b2-f53b-40b5-8fbc-a9cac768c811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8d9785-fa3c-47d2-af8d-32c87701d100",
        "cursor": {
          "ref": "6b5db5d5-b3de-445c-9d89-5737a2c2e423",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f616ebd0-e404-4c6b-a7aa-b8e33385dee4"
        },
        "item": {
          "id": "9f8d9785-fa3c-47d2-af8d-32c87701d100",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1a5fc5f0-3ca9-4154-b238-3702ea11b79d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdeb3d6-4cde-4eeb-a08e-e823171b900c",
        "cursor": {
          "ref": "e445eb5c-6a71-4ae2-aa55-4252ddea6dd5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "110ea24d-2939-4dfa-a4e2-990ba76d3536"
        },
        "item": {
          "id": "dbdeb3d6-4cde-4eeb-a08e-e823171b900c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3dd2b30e-38d2-4784-9dd8-24a3edc25bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f412d83e-6298-4dff-aee6-fa51ddd623c5",
        "cursor": {
          "ref": "300a6ba9-16f8-47fb-8f18-991a074a852a",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "9208bfe6-9726-489a-995c-f047370593e1"
        },
        "item": {
          "id": "f412d83e-6298-4dff-aee6-fa51ddd623c5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e48ca22d-5ae3-48a7-91f7-75cd61bdda97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd715ec-01ab-4aac-8a58-26adde66fee2",
        "cursor": {
          "ref": "84ce1366-550d-48aa-bd86-a16515138cb0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9446a16f-548a-41b1-8e90-e0743f4e6d1a"
        },
        "item": {
          "id": "4dd715ec-01ab-4aac-8a58-26adde66fee2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9d09c0bf-9481-49ba-ae06-bd7a1af8da0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb201f42-4eb0-44dd-a767-097dc5cb0a52",
        "cursor": {
          "ref": "982caed3-9c36-4206-ab19-547ede2b12ff",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "229c29fc-72ad-4161-a190-7960e78ff2e4"
        },
        "item": {
          "id": "cb201f42-4eb0-44dd-a767-097dc5cb0a52",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9ee8c130-147e-4992-b3ad-8ce322d3e42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb60fb94-01d2-4809-8733-a383564576cd",
        "cursor": {
          "ref": "185a5bb1-e0ae-4a0b-9e01-d54cb8b1c003",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "847b743a-8c41-4967-aa11-67a17ef4c76e"
        },
        "item": {
          "id": "eb60fb94-01d2-4809-8733-a383564576cd",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4f7e3950-a197-4d56-ae88-57d56907af25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f59d6d9-8f93-4e6f-8cbb-454122cd169b",
        "cursor": {
          "ref": "56abaefb-c21b-4d27-8536-8a5ec6ea42c0",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4430a6a9-00bf-4305-8e08-52c5d2853076"
        },
        "item": {
          "id": "1f59d6d9-8f93-4e6f-8cbb-454122cd169b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5adb3ff3-8c4e-4afb-980d-254eb2d447c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82eb7d1-e220-41bc-a868-ada243703af7",
        "cursor": {
          "ref": "203748bf-a4fe-4c0c-b418-a31a07469efe",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b27c4be3-8921-4649-940a-3a9a6cf09287"
        },
        "item": {
          "id": "a82eb7d1-e220-41bc-a868-ada243703af7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "895215be-03d7-41e4-a708-f48bc86a9e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f35b0f3-92df-4770-8129-b7b923d1903b",
        "cursor": {
          "ref": "215bc861-9caa-4eba-b291-d71e3e672fd6",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7c63c153-8dc3-46d8-9a23-952ca60f7bd7"
        },
        "item": {
          "id": "9f35b0f3-92df-4770-8129-b7b923d1903b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ff6096f9-e87e-4019-8eba-03c72a180739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4769ecd1-2615-4bd6-bd7e-cf04a98a5ed2",
        "cursor": {
          "ref": "e4bad963-d4a4-4012-93d4-3948752c1ab6",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "307a7e07-a75e-4cd5-95c0-3648eb004741"
        },
        "item": {
          "id": "4769ecd1-2615-4bd6-bd7e-cf04a98a5ed2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c248d8f7-d80e-4751-85c0-87e7dfa0d1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2368d0fa-f838-42d9-85c4-74ce8cfe5a9d",
        "cursor": {
          "ref": "6adda08b-ee81-4fc1-b47b-f6ea0d025009",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "14be4fb6-eec5-45f0-b9d7-af8c93b7628a"
        },
        "item": {
          "id": "2368d0fa-f838-42d9-85c4-74ce8cfe5a9d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "52b4e6a9-ebf1-444d-9429-ab3784864995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6c778d-63d0-49e6-9a67-a2735902b7c2",
        "cursor": {
          "ref": "aa6c2e78-1145-4c8c-945a-5280db67ba96",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "e94f7b67-e02f-43bb-b2bb-2219004fd641"
        },
        "item": {
          "id": "da6c778d-63d0-49e6-9a67-a2735902b7c2",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ffab02c6-b661-4b91-8cdb-a65c90b0f1c1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee51b94-6e10-4990-bede-e81c7fe3ecd6",
        "cursor": {
          "ref": "072106b5-f00d-4564-8a87-7cedcd87901c",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b9bcced0-b995-4a71-b69b-88315adaf6d7"
        },
        "item": {
          "id": "cee51b94-6e10-4990-bede-e81c7fe3ecd6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "77a9597b-3146-4fcb-bc4b-f2b23d47292a",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a85c81-36e4-45e7-8126-b8bf71e4b59e",
        "cursor": {
          "ref": "d8085b85-9b28-43f3-86fd-8536d2198a5b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "6b01250b-68d1-4d32-ab74-be4adb45c5bf"
        },
        "item": {
          "id": "f9a85c81-36e4-45e7-8126-b8bf71e4b59e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "225bbd44-8d97-4fed-8f22-0415dd716dcb",
          "status": "OK",
          "code": 200,
          "responseTime": 4100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "420bc889-3c8a-4b57-bdc3-16f5f3bc6308",
        "cursor": {
          "ref": "67193297-2bd4-48da-a784-7a39fe7a447e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "10eabfc8-cc6e-47ed-90ed-4764557d310f"
        },
        "item": {
          "id": "420bc889-3c8a-4b57-bdc3-16f5f3bc6308",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "19dc1e62-8d8b-4c3a-9f94-5e1a1fc21cfe",
          "status": "OK",
          "code": 200,
          "responseTime": 3040,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860ca5b-24b4-428e-9aa3-206a210c7e63",
        "cursor": {
          "ref": "f582a1ea-b508-4490-9394-6b440b4deb2b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a2c8c006-6290-4d22-97eb-fa868a8df116"
        },
        "item": {
          "id": "a860ca5b-24b4-428e-9aa3-206a210c7e63",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41270701-8de7-46ab-aa57-8ea859c6278c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a860ca5b-24b4-428e-9aa3-206a210c7e63",
        "cursor": {
          "ref": "f582a1ea-b508-4490-9394-6b440b4deb2b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a2c8c006-6290-4d22-97eb-fa868a8df116"
        },
        "item": {
          "id": "a860ca5b-24b4-428e-9aa3-206a210c7e63",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "41270701-8de7-46ab-aa57-8ea859c6278c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d097ae56-5b64-468f-a409-f709925ba78c",
        "cursor": {
          "ref": "e5a17853-92b2-4031-b9bb-cd841ca537ed",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9a55fe6e-153f-40f0-99fc-86e751c0b30d"
        },
        "item": {
          "id": "d097ae56-5b64-468f-a409-f709925ba78c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "221385ea-8467-4df3-804c-77632aabccfd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ea1613-8b5d-4d3b-bd07-476d52e4b541",
        "cursor": {
          "ref": "fe298431-f8a3-47fe-9b02-0e1e00664ac7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "82fe173b-9bc6-44e5-8856-678432bec60d"
        },
        "item": {
          "id": "f4ea1613-8b5d-4d3b-bd07-476d52e4b541",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1cce0b96-5194-43ab-89cc-a0848654d25a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}