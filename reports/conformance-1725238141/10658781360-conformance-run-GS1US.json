{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4314775b-ef3c-4dbb-b72d-e9d205936aad",
        "name": "Clear Cache",
        "item": [
          {
            "id": "859a63ae-6cb4-4321-80d0-d8e7d387dd23",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "09aa55ff-4c30-416c-973a-bdaad9949216",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "69060698-b0c6-4c08-82fa-fc9bbb6e0670"
                }
              }
            ]
          },
          {
            "id": "5e97c6e2-cf4f-4b3f-93ed-2c722ca5e38c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05a79012-b38d-42a3-ae7f-a36acdea19f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "983f9dd5-e0fc-4fc5-ae31-c8fc610d0eb9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bbd1334a-cab5-43da-833d-246a78405793",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "50ebbbbe-324b-4039-adf6-29fad0dd9585",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8278fdaa-fbda-4448-81c5-4bda985bf257",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aea2c6f7-ef37-455c-a754-0c9322df1b28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "af8b398e-12aa-4ed0-8402-878b32bd50dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c773bde-4585-4ae2-b628-d287ac0d2488",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28c98d04-45a6-4c86-ac9b-0c459652a55b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd5e8a97-3046-465a-8a29-af5071bcd19a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6dfb4561-ea4c-478a-b0cd-77a822b35f5c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac043624-43a2-4a17-9aeb-82d383b1229d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "271f057e-981d-40c1-af1e-745ac24a0492"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d8ca21d-c269-4f3f-a873-3359e7acd784",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fd58ca6-3adb-4bef-ab5a-6305e932c1a9"
            }
          }
        ]
      },
      {
        "id": "a1fc8505-34c1-463c-a94e-c3ccc69fdb2f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bb5ad04b-44f0-48c4-8cc8-cafe90a461f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74bf5fe3-db91-4285-8c45-9a348401e880",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2d72a370-b4fa-48c7-a393-6ccfa87d8bb8",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd060ef-1c6b-466e-a72b-8b397c01e57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2640405-d59d-4a85-9797-eec2b36525e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a9b75e-4edb-418b-85c7-8e910a1ef2ae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f14282-b289-405a-955b-9c630afdb583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd198bcf-2d3a-4d65-ad8f-82651bac21eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b1174-3c91-4464-8c53-81fd4539161f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f007ca59-48dc-4d7a-bf10-8ccdac24e0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bb3c8f5-1413-41e7-a44c-e369160239aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ecebee01-47d0-4b89-9f78-ac7869530fe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2f97f53-dd8c-4a9d-aadb-0ebabe192548",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889865e2-b943-43e1-9c36-50f787a671ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9cdb52d-bb14-434e-8254-854161140d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb46b143-d3e6-4842-8fb7-7c34e5e68204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee13744b-9299-4714-9a52-dfa721bc419a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "32db9671-530b-4816-b2b9-b4e64a1b0ca6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4774f0a6-b76c-4a50-890f-f2095b0c99fb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69cf9545-2bdf-45f9-b97d-fa491752d395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6bc5b166-65d1-4c8f-82e8-e02eece08566"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7d5b744e-c858-4bb0-9679-7b3eb9c3ff2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "8ef69459-226b-4dfe-9a5b-f0fcfa6ccf3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d57e82d8-bf95-4e48-9bf3-f5b27e4d0fa9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9fe1aca0-78d9-474f-91f1-75dd57995def"
            }
          }
        ]
      },
      {
        "id": "b4685f44-2f87-4579-9b1f-d441cd7a4631",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e5a7e614-6047-424b-96eb-4f5c46444d18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5dd6bee2-d9a4-4b2c-b14d-087e435c2aa3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "515106bd-c94b-442f-b8e2-9119d94c155d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5ec5de-0413-4d7f-b682-faf4cf5c6b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49a33da6-355b-4bd3-b00f-b6708d0dff2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d05bed-3842-48c0-9ff7-90aee22530d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd44dd9e-7d65-47ec-930f-bcaba7bd0dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931b8644-3376-4ea9-aa0e-496b0015fc91",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644662c8-36d4-4c4b-96ec-51f05421fd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fa9481-2c3d-411c-8fad-cb2dea873d47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6026971a-7110-4a90-bb63-a170544f9abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3539f745-8cf6-455d-9fbc-09016ffd81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386b2ffa-12a0-4653-87da-916cd7815d62",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f74d92-63ab-45f7-b20b-f0d7ac63fe8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630bb77b-4379-4a2d-9398-3b913187e869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b8a3f6-ae6c-4da5-bbe3-ca0c74e58789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18b8a2a8-3574-4a3b-abc6-6c175e37583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d3d356-b46b-484a-82b4-e4d058604ec0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37009765-07ed-45fb-836b-f0eb1849e438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b9a2f2-caaf-43db-8735-37f4988be852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393d4c1b-6534-4886-b4f8-1ec6501918af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40986220-8c01-463b-aed8-8d118855ec4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10fbb00-fa57-4b73-a967-cbbdc69a7be9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde8aea5-72c9-47d1-97e1-1ec8595f1904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94dddcde-e00c-404b-a77b-6ff0a24fcdcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49c3214-84a6-46a9-ac4a-8ef6d7419679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eb0db06-2ef1-4a70-a096-c0ec8bae9cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b5605e-165b-42d3-8a10-26da655ac9aa",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15551e58-a5cd-463d-bc76-a3668b8c9a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fea6fa0-f101-407d-94cd-adf8993efcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d239b7b-07d6-4c76-8d01-668d53b745e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e714599-272f-4962-a53d-72554a7b1281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1821ba-3b1c-4642-8848-1761d7e21870",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461cc487-d4c0-4c3b-827c-6b8d65fef56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d1cd205-a8ee-4edb-bf59-06540c87c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766bdfa0-e13a-4d5a-b9dd-404fbfca3e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a48d34eb-fe1f-4212-83bd-f12f7195833a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0eecf2-e0e6-4ca2-aca8-a9617aba5098",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29422c2-c854-4c3c-a3cc-3084418ba980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6ac25e-b57a-4c4f-b4b2-2a10b3873955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1795f89b-f264-464e-9a2b-be4cc225c910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e1312e9-0493-416b-a1a5-62c859a38569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7fb498-080a-46fc-8ce9-e2dc556d8348",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531bf708-048a-49d5-8ed3-6bebe3aa1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1695531-9147-4e43-8e2d-554dd66a6a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faed52b1-6835-42b9-8820-51d802abfe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84383ac7-cc43-4928-a156-a0d13a1603c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06b9e4d2-8630-4239-a1d0-55d4506b5e6e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b2f741-91cf-42cf-b78e-1ef36cec995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a74bd97-a8db-4b4a-9f5c-6c59ec7e7670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391e752b-f2b0-4eed-bdc8-15e9d5977a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbcbcf8e-5f48-4b5d-93ec-b590821fc16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84622bb-bb15-4416-bfca-1205edbd683b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa336662-486d-4fee-9b45-d71f7b66455d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "973c9c9d-1f4b-4446-969d-384151b41744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3280a4-dd96-4337-8959-03804cf269b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ce49940-2a3d-4111-9015-42732b398df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7c27af-49f7-4e77-8024-b7ebc7075b8e",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b7ffcf-1817-4e51-824d-99113501b8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf89257-d181-4e09-a50d-0d20ac544e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4263964-250b-4d10-8777-05177956d08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a0d3930-062d-41df-b53d-facbda0e62b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b77e3-9bf7-4c70-b8e4-d8ed4947d2c7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00a4084-3710-4e76-8e9a-cd6bb37b9d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa4e4c9-1f74-48b8-aae5-dcf0cb2f7405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ccd089-de78-4640-b3a2-81edd9a05cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f8fea2c-8eea-4b06-b817-c313ac87a18f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2e8296-7003-471b-a968-c44c6c36fe18",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46af453-d492-4da7-9aaf-19d6b47253f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a392d4c-3fd4-4ebc-95db-658a5edda86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5f6848-140e-4dce-af38-d8d577b2380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b234f93b-00f0-48f9-876d-b5140f282a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55de63d9-6e79-4806-b01c-99ab0e0f3246",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0c60ca-8d88-4c5b-baf2-adab9deabf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89cbb0dc-a514-4140-b412-aadf6bccaea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0e12df-ac5e-4ae5-be53-3ba487e2ef26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61a1ea8f-d60c-484f-9a7b-a711d47f4bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c779199f-4e9c-4189-9436-d6a550132a47",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025e5be0-4d9a-4cea-b316-f1eeadba29e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310aba75-d3a4-4d47-9679-0c73442538ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ac8061-71a7-434d-adb3-355af70e25fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "52d70c88-ad6c-4f19-a2b0-70f63dfe4ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13677992-6276-4ca1-9beb-885ccd6c57db",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89eaaae-d7b7-4d69-bf3f-39c524af56fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38168028-f64e-46e1-a22e-12028a207e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2553d1-bfac-41c1-b763-6e785f00013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "739fbf6a-3a4e-47f8-ac84-e898df90abbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd704136-fa17-4060-abf4-2803bf704b1f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae575d65-4122-4fde-87e6-411d4a5cb959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa2fcb5-0745-430f-9753-fcf1d1f676bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2a3bb0-0d08-42ca-9ea8-90f937c4e2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ae4ea9-282f-4a4e-a8e6-65f697b953ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fe186e-05c5-40d0-bddc-234c996f9c65",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dabce13-d3f8-4ba9-9144-b4cf32a170ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635fe71f-55f1-4e76-9b34-eefc6b054648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93fbc9b-1fa8-4839-ad06-af45b20f5b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74503532-98ba-4045-bb65-c73301481cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc008f5f-cc8d-413c-8610-b2d2512585cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c5053d-b201-4249-b750-3abbc800f2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef136f4-e825-4957-9c4e-3e3edd1900df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc59e6f1-3e2c-4bce-80c9-e71a9fccdb6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf37722-8120-479a-8f56-3f426baca318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f36f7a0-0451-48f6-a68a-ea1008f9d70e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5097befd-53a0-456a-ae52-39ddc8ece491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa912d60-f953-4b75-8861-bfa9c59b0308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d98b99-9944-4892-b757-6ada0be84778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03539a1-73a6-4aa4-8f31-17862458e15e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b08ab2-a787-4d1f-a55a-e53cf89497ac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0d7329-74b6-4f28-a17f-219e2cab1916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab6851d6-139f-4ca2-b587-09a5386ca494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b72969ef-3646-42ac-ba54-45f9f1009973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "583782a9-590c-4312-a5eb-4e049d07e206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f7799-8e92-4d56-ac1c-a7b0d359d9f2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "819fdb9e-0285-4bb4-b60f-bed51d672aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e22846-b82a-4157-b0e0-205d19af3121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70caa83a-503f-46c6-908d-34fa4b9a9350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a376397-f8d5-4bef-bec6-5758efeb8924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85841ff-f65b-49f5-925d-ebae286e913f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb384e68-9e79-421e-937f-c0e671b19b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467808f5-d50b-4a03-b90e-f469129633a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9551d913-bb30-4c9c-b8c3-7b4b4c577456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7120c26f-fef8-42dd-8a1d-f3feeb043bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2ed744-0a62-4e71-854c-ff5dddba4fcf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d08e12e-dc02-42c4-91c5-55a8dd1ed66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e325f84-1f03-4b34-bb83-9e0886d36ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f99b4ce-28df-4a49-b88c-802c52ca0915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a45d7683-8b9f-4cd6-8dec-5864107f4ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cee369-2c61-442f-8d7d-be69f4152583",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90466d3-9621-488d-abb5-31c5bcef5c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05c5c4e-b8fa-4fe2-a0f3-e73f150aaf7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81869607-06ae-41ff-bac8-4933b9ad27b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d23599-36ee-47a7-b9f1-ac63f25030d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891e0dd6-3840-4c3c-bb32-c834887b12c1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae2ab68e-bbd2-42de-a290-5c9f3e2dd86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7929f7-e915-4d99-99cb-96971bc8b8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10ee1ef-f138-4b9d-b16b-178cc6ecd5b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34e6a2f4-f8c8-44ec-90fa-3518175d037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d707911-1f50-4c76-81ed-189e1d37adae",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a191cd82-7d84-4044-b83a-ee9845b62caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db853c31-8170-40eb-b188-e4b5e0db4971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702d51e4-137d-4b0f-92f7-c9151baa5f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a44a6e91-05be-449d-810e-d665803569d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cef4cad-9b43-4eca-9765-efb5a598a252",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb8ab96d-c48b-4a22-9a2f-3937b7c983e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab31935-e8c9-45b2-bbba-5c46db520a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2349be-d689-414b-9706-ef85f81d9d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "964ab07c-1625-482a-af44-64ec680189f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a630c8b3-f9eb-4636-809d-1ad33a5a3473",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c14ca71-668e-4d0d-83b1-fbcce9800024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e408a0df-c0a9-4474-86d3-021d6fd4b357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab59f1f-327e-476a-b834-66a04704c7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0c9ff2-25be-4cbf-8a18-ab220b517054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e1cc37-3eaa-4a20-9743-02864202f7ba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad50872-fc57-48fe-b21c-40d215be2286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb7d4ee-c4b2-4cc1-8eba-dd57117226ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3693f8f3-a938-40fe-a5cf-1e0e66aedc63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd3a379-2f98-405a-a7ca-6aa4d820d56b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455d98fd-48cf-4856-ba36-d13d9c834d50",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a21199-29d6-4937-97ae-50581d692407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080e2daf-1634-4e2c-9d62-5bee9d0259cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122c60b3-c234-49de-99bc-e6aaeb358726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a05416b3-4605-49fc-921f-56e688648da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d26de5-b0f3-487f-9aef-dceb2fa7ae0d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c860773-4328-46ab-86c7-d015216a227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f90081-72b6-49a6-bd56-c5e4de5082c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13765646-29a9-4a93-bb69-61da8afe8c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c7ac247-2d3f-41e7-b96b-c58ed1701584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58fd4e4-27f8-4b07-922c-6d1608d2b05b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f95f57-732e-4ff5-8b77-e4252ce8889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d40fb2-2b7b-4cf4-93a0-ef7c57c68b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d187a67f-ca54-4b0c-a5c4-dfa6e37cddad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "391c99f8-6099-4a65-83dd-9a54c8217f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73195457-7fc3-4650-b332-c12faf530b41",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3e6a35-8948-4eb2-9f11-29b642f7af40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7446470-cf05-4dc3-a98d-3a300e7778fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fcf1f3-61b4-4f51-824e-475e0d6b3509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a350d6d0-da8a-44c5-b9ab-069ffc4dac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220664a8-c4b9-4496-9868-e4a67d894aa3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ce0908-a76e-467d-b6c8-b8c9b91245f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4dcc305a-be47-490a-99cd-c12dfe91532f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db68260-ee6b-4dff-8879-d6a17900136f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "389a1164-e0eb-41bc-ace6-83feadfbab31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f55ca3f-1122-40be-9d5b-8755c355540e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd3efe2-02fe-44ec-8443-01f86ea34841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81438500-094a-4e21-95c8-953102191426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3e9325-1248-437a-b559-38d8012b0c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "16115400-4934-415b-a754-49cf571267e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cea69ad-22da-4cac-a968-d9ec3addd126",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3597d931-f45c-4277-9ce0-fe159d6428cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6668f71d-1592-4be2-85ad-754328b4917a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91122b-d1de-4635-937e-2c7b8dcccfe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e22cfd57-bc90-474e-b3d7-73b9cca79a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e71588-0059-426b-b109-d62f4bd1febe",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f946ca1-114d-493e-8eef-9ea9e94f189d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2723e175-eca7-41e0-99bd-bd4996dfbb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a768758-ab2a-40a8-9bc6-f9d4ae0729c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "69d1e20c-3a14-487c-8181-ece38d4bc4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a2d147-81ae-4f28-9523-c9a141e1fea0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47d63f2-ca28-402e-b140-cc413969a923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc3ed6e-1f95-476e-97b4-d7be0f090b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818e4f6b-a7ce-436b-beef-2e485f2bb141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6e6925-7f50-41c7-96dd-ddccc0515a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2e243e-6c94-42cc-a9c7-d6b874901943",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e270b3d0-cd4f-4ec8-bb6b-1d5ecfd36a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6379619-91bd-4ec8-a410-b4338b088c78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10f0e6c-46da-4765-adb5-754908965b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29947834-cd46-4e85-9c9e-ebe3ab399869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45321c94-1b2b-43d3-9148-120c5eae9888",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0477a254-9da2-43a3-b8e5-f72971749d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ef0b49-fca8-4b68-a56f-ceb043add3a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ffb9a-9af1-4fb1-b90e-155da03835cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2381cf61-eec3-4e2c-b351-1bc98bb840e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066fd6cd-9037-4aa2-af32-1e0fc73b0a9b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac6feb2-8842-4e67-b598-880272395027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f60878-eb5b-4717-aa23-f3e0a5c34176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f570b608-7ca7-41ed-ad5d-4881958a1dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "48c39e0c-8d6a-4574-8b15-59c49706e90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b34f7b-1671-42c6-aa8d-a4a9211f9a99",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a16778-87ea-456d-be32-09468b18a301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13605c16-84dc-4340-940e-e39d1bb1d8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f3e952-685d-45e4-9f05-a473bf57fd56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f3d5a6-0278-4469-a5e7-82a37f3c928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9bbe15-f095-45fc-a1af-642f97c47bb2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e13e03-1eb2-458b-a905-9fecfee95e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b711ac1-6f7c-48fa-b9db-e4f487b910cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd759278-8534-4ff3-a3ee-abbd35b8bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa6be0f-d1e1-4e2f-bbd8-0f852532d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d35521-e447-4623-8c2d-c31815f0d6b0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99dc1b25-4b92-423e-94c0-81b03a4f72a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90215c5-5cc0-4030-ab89-dec27ae0c716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dba384d-5906-46f9-9c9c-0553d427e021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e90410ac-d8ba-4703-b0b6-e2bc6e5aebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6be2d8-ae94-4fd6-a3a0-d43c821d7a29",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d4ad2-bc6d-4dde-9ffd-12e4d070caa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c330baa-cdaf-4fcb-a695-76d091ffe4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc233c6-daaf-40a4-9e3f-790ff2b8c6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f28b4cf1-f171-455b-90ce-9350d51259bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfafa55-0521-4272-9006-900ea0d1edb9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4388e37-b87c-4b4a-beb3-25c7723e1aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80c79f6-bf6f-49e2-a665-6c5db71aad28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5a0e28-b094-49c9-9b64-5caaf9b2a955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff427124-e10f-4ebd-95bb-b19620b2e5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e7c832-f0a4-4175-90d8-c00254530582",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548270d5-41c2-4866-a2fb-4592046e562d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7225cb9-566a-41b5-b08c-2b0131208a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7810a9d2-409c-47f3-a6cd-906191cdc7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee7736f-8095-433d-8ee0-8c09fc9da265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeb8d96-d3f3-43f8-bfd1-a7eb504c6897",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642c2f31-7227-419e-bde7-925936a9f0da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0a2cfc-febb-4057-aa1e-e3d87a63fdf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd48523d-997a-45fe-aaf5-9c62d2a156bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "52cee615-07cc-49ce-8dc8-b49444c093a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1d0034-857f-402b-bf07-a78870daeb76",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f745852-dc83-492f-bb99-a2a665c4e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8830a783-1cdf-4610-abc5-fca174933d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7400aa68-e374-4717-8920-52b5604e6bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "da9d96a8-5c6a-4ac5-a6d7-6a29529825f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3313a34-5bd6-41f9-9d79-3599621e0598",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fdf127-367b-476e-951a-7f5bad03c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4325790-f705-49ac-9213-c26033c32484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d24a673-e014-41fe-bfd8-04aede92d844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eed1e95-46af-4bfb-9d0f-dd89721a5695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c018b3-5960-49e3-a4d8-b4b9df97949b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd5feec-f034-4d33-9d04-b54b3b8e7860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5b7dfb-4bf2-4508-94fe-3f5c7592d1c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84458773-2a22-44f5-87dc-8390afa432b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4d5e7a-d21d-42fe-ba5d-34be561adc35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b555fd9c-807d-421b-969c-ffe1d895555f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0af89b-99cc-4a7d-890c-75b0b4d9bfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "490a057d-ee6f-452c-84d6-11a5077c5513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc925b76-80b9-453e-ac53-7db5a27b36b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc52c9b1-435c-4ca4-934a-bc70f4610937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb02a62-881f-4d09-991f-ec2625477f4e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b386b123-51aa-4ccf-bd74-41b3633a0516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca0b143-7c7a-4835-9923-0df07e634f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd188bc5-a7b7-41f6-b881-4c147bd72389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "40e04716-9126-417a-abc7-09a7e78f1a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b70bf74-fc7d-4f5b-995e-5a381a5ccfd8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40508a52-1fb7-4479-bcdc-c2936a1f1294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de5efa5-e6b6-4ce0-bba6-425a65c98f24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7b70c2-1429-4d9d-a836-9aa9a3e7503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "63a05da1-4596-49d4-a1aa-95beff1efcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceebc374-06ad-419c-b6c3-5fa258efcfc8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66cebd1-cdd1-43b0-9953-5b5b90323258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfccb7b1-d81b-4957-9a0a-074d56c3d333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0cafe8-719f-4de2-b119-279c1ab1483e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "346e2aea-dc72-472b-a3c1-371036a44193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da33a86-ca5c-4ac7-ab69-c298fab7a5ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf715de-f14d-4f3e-a849-29900fa38b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e535d72c-a13a-48f7-b272-5b4674247102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b3c6b5-c3d7-483d-8f43-05044af822c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae80e14-6305-43d1-bdd7-3d37ec3abdbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f385599-b204-44d0-b2a3-3df660b8aad1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03d64a1-0c2d-4b19-a49a-7bb4a48d9f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40af94d3-1f87-4e6b-a540-6739f79ec154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a964a49-bdfe-4186-9041-17874508d3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7192d16-887d-4345-9823-edb5579da09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2185903e-e23a-457f-957c-be6b97772906",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1c8596-7bb6-45e2-a681-a769a59d9a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d99708-bc15-401c-b6e1-3e8294c05949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb930aa0-4493-4497-b1c6-d51111920784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b32b138d-0a7e-4b25-b5ea-7304c06555a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7100c7-84ed-4b98-943f-34ed2301c327",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39813899-79a3-4d1a-b7eb-c300547cd625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7394c96-5cbf-49e3-b117-cf87221b0c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "590e533a-dca0-4b5d-a8e6-44b165cc6e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88afcd2b-5b6c-46d5-aa93-e42c6f0668cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a575c4-38f7-450a-a43e-e2628aacbffd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa1010c-2b5f-4f8c-a7f2-027bbe159314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d721472-dea9-4157-9b84-0f7a3cf709b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc55bfe-7c9f-4813-b9ae-3cbc9e3a97a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed432751-babd-48fd-9b5f-bf02c7afa2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb22a32-50af-4ac6-9cb9-9752fcd31818",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76413dd-7b9b-4e1c-8a01-1911378ea4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23bc1a8-72d0-4ab5-bb05-c2c2cec32810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dae0680-37a9-4935-aa98-77a7a7498115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "114f4f0d-cd05-4301-ad79-682a4a436196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39859f49-7a8b-45c2-8cf1-c6571455cd18",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fab3464-4ede-4b26-acaa-f2f22c3f7f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd98a2a-7d54-48f3-8858-bcc46bf1bc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb6b67f-0aad-4f85-afb4-beec5c4529c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cba78dcc-d4f4-4adb-857b-614cb51ca1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a709c-f1a7-47fc-9236-39bc1ecc73ee",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f662be8-cf1a-4d70-b6c5-d274c642d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b81703b3-7c7a-46c9-a436-885e8788cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042a4d40-b8ad-4a4f-8acb-624ac0b06c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a995fe-9fb7-4100-942e-0288ac771422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762ed572-83cd-416b-ab9d-5212679c2682",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a647146c-9822-4609-9a50-40cd10a2440b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "298baf0d-19ea-4c4f-a604-1116c9c6b712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb484de-a4e7-43a4-8e66-7bf267e63ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62b187c5-60fa-47f1-a5c6-2575724b65a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c85d147-2cf9-4a5a-b84a-74107a4ad5e8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c65a35-b819-4322-aca3-a25b89702d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f681b4f7-e9ea-4e27-b485-2d1aa4809156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544a828e-2699-48ff-8f12-3ed75b310bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed31f1a-6879-4f94-9bc7-c43b008367e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b99a3bc-c759-4caa-b096-3e3f63fcdb88",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d7e94e-7d27-499c-9d95-b2001ab084b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfff8a6-8c59-4856-9c2e-764bc8087feb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16066efa-ef87-4c85-a1fd-dd33c04cd3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d4bd3b-ea89-43af-8bc5-855a4633d5b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264215ec-2216-4907-ac86-cab2e00ebd45",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfaf22f1-9138-47d1-974f-810cc0871f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae27a62-3b02-499b-9953-ab2752c6593b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b27f8d-2c8d-408e-ab04-e515414a6a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e64b778-f723-43fd-a130-cb3dfa5da28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52df93ae-7c87-47af-8dc0-6a61d4e8e643",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd76e76-25b1-43a9-83da-66a75462ca5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d8bd6a-8691-4b80-9e5b-e8adddc5a5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc46e65f-92f7-457b-8f18-3fcf2ec0c079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1345e8-d985-4caf-8799-99d26ff46de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b0620a-1a89-4124-b5d9-325f527e981f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b859edcf-a478-4053-8917-1f717d2d8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23310c09-1fbd-4d40-a1cd-24d6ab2be68d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea9e937-fc0d-4aae-a1be-6dd4bc4b76da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c15f58-3c30-409d-8c4b-437aee452704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd777ff-2fd3-435c-aa6e-cdb073db55d1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efedfe56-e1dc-4dd5-acd6-4aaa4d76b5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb22efb-6b1a-42cd-b34b-6ee8bd481fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f8ec5-8859-49f3-be5a-bc78dbb9d71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39572820-9cf8-4664-a05c-8e1724224d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc09183-5872-47aa-a3d9-a3235ae4aeb2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1d41ae-46f2-4ec0-aaa1-48918470da96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d73f2b4-1c16-4d83-8e60-4d7a9dd2cbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25fd3279-d877-4a3f-8eca-cff58327fbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c6550c-3ea2-403f-8106-3c438d5f4918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aafd645-8a25-4ef9-afb5-f966190160e9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0dc2dc7-cfdc-4772-9a0b-6368de424c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8630d7-2ea8-4995-8f2a-f5be0ae70947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d6087-b094-4754-9c0b-db8d253547b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e09a778-ed23-4e6f-98b0-204a1eda7c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4884b239-7b12-4b2d-a965-d46cdad95127",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37beedbf-f26f-478a-a089-53bb654be2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fc86c9-4673-454a-b339-a5a7e3a7f386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82fa69c-70c2-4681-bc8c-82d5cae6fb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b85fafcb-368f-4534-8fdb-07cf581629c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba88bdcb-c2d5-4863-8405-b1e4d3befe3d",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe418675-347e-410d-afa0-3137f924fe06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb6d875-e071-42b2-9ecd-220715668207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837b2c50-4537-4b8a-8373-0fc2074d39a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7ea6c4-8982-4a3d-b309-eaa8cc8f4233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588f5235-6edb-42a4-b1c7-df85a6966a89",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1c1731-f0d7-4f1e-bcf6-a3da48f55001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d63110-fb6c-45e4-aa46-17eceee970c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfca8c56-4fa9-4a12-85ff-6fb60d0d4931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4926e9-ca11-4bfd-bf93-73949d6e57c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b4ee24-f65a-4bbc-85ad-00adbf247203",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110645a4-2648-46a4-8a9a-ba1dece71b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34ed5e4-f101-4c79-8d47-9aff81efab41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3e74ff-5a31-4349-9dca-0e06bdbe0e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "020ec891-e925-495a-8c65-86c1f6b2c274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fa06ac-f061-4447-90b7-1a667e17ec18",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cd3fc7-2867-4ee5-8380-5e87e9011568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e72004-edc2-44b5-b7c1-f97bbcdd8899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ed931c-c912-4664-9504-523ca66738d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "516396ba-c101-4668-964b-9d69e0c37bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d7f850-2ebb-4b22-ba7a-8f2a6105edf6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722ac0a4-b90d-49fd-8b8c-1b73a2aa64c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd18ceed-c56a-4068-afd8-c9c19a9eaa60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50659d73-09de-47ec-915e-02a44be8a4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41f2df41-1c18-4134-801c-8b7b1c902c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aafc278-97dd-47ef-ad1f-c0f95bdc8517",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d025a956-6c01-4dfa-9ab2-99388a3a81b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a604698-1315-4819-973a-a6d6c254a88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8c00e-ef49-4258-9774-aa01a20be516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bcc01b0-8a96-41af-a1ec-6d7a04b05300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b6011b-d3f0-4535-91e2-3cd5e929c5bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69049b21-52a0-4589-9604-9a2b7ee5798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76cb030-a963-41ab-82e3-ba8a000e1e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb2e208-dabb-4ab1-859e-80ed1fc35a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68d2e3b5-f090-4090-b5c2-089abc95ff91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89890cd-86b0-4a3a-8a48-4b33c99d1289",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1358c6cd-bc43-4660-b4d8-059f7824ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb2c30a5-84b1-4714-a5ed-f4b4e9166298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723cccfe-c2fe-414d-a72a-176868d8ed0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "441d76f5-3b7d-492d-ae87-d7a7ec071030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a64ad1-6825-408f-b666-1d8ea0d1dc40",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3b1695-4052-494c-8e97-04e56b46ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9348b7-3303-4789-bf8a-80f1d1ec51b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbe02b4-37c2-448c-b24b-dcc3baa5026f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b160ac-45f4-4349-b902-2a4dd8d5246a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ecdac1-73c5-41df-af9f-20374cabc2b2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cb0c82-e204-4aee-8f51-48aee6799687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6dd9df-dac7-460d-814e-7fda5e356e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870d0a90-f37a-49fd-bad1-5687cb6f5345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a954cbb3-3eab-4492-b658-05e43ec87822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be96da1d-e353-4c3e-b6ec-16cfd81f6e1f",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c3080b-63c5-47a2-8415-0927f317aedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776d8002-99b5-4c32-b14e-192a870db588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc302174-47fa-4f7a-9dc2-3a378f7cce93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d59861b8-e4a7-43a2-8ea3-c66abe2ae79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0642a3b3-d22d-4673-b28c-e484740b1a72",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6a635e-86af-4e43-a8d1-e4f8dc77088d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009dbf9e-7332-422e-9e40-22dd63529d92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851f6803-b039-4adc-b876-662013acefbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffcaa6b-647f-42ee-97e8-f2776140414c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ec7032-0043-4705-a754-3f09d52f957a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b249b2ad-6767-4988-a288-27d4ab2e9c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7852a4-2d1a-45a0-af18-6219feb9ba53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7479c42-a1e2-4b1f-aca3-971268212ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "09ff7b9b-4179-427b-8719-f2c0038d6c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8121540-f251-421f-b6a9-ab4b86cb992d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3981c49e-a17c-4b1f-873f-141e9456be3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbe7d55-5211-468e-883b-16eef34d4e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c9c36c-ec81-4cd1-b506-4b322e2e3333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce6b7f3-fee8-4d2a-9126-115b1ffa24bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d50e41-1039-41e0-94b9-f987c082d231",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba7e6b-42c5-4e31-868c-845496da4b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016b1c6b-72c8-4e76-b7e1-e2b58b944896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839f3dc6-8816-46ae-af6c-6a913d5b127d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f98255-3b64-4e40-b7be-1c354104db2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c3edf0-fe81-461f-920e-3e1579da283a",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc40f92-9e69-4820-8f2a-de248f498707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913e7f2c-5b5c-4546-9267-5c88625db4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f031d0-ecfe-430b-8f1f-0128d67112a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f454096-7e1d-4827-90b8-4890080ed9f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c98a9b5-c644-4da0-b440-a112d2ee305e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0cff31-f781-4405-a692-dbc5432fe9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8f952b46-6909-4043-bf6a-1a4ba231a617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36db4d2b-de66-4cf1-ac13-10d93578de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f58de95-8244-48d8-9770-b02a86934d4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2ac6c02-5fb6-40dd-a6b5-5db3f591477a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d0f284e-6d47-4efb-9b3a-fe49776417f4",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac7585e-987e-40a3-9896-214c64ce2a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3b365a2f-fc20-47fd-a56e-eb0b8875f988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97a8123-2243-4b75-a142-7e4b52679460",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f212a0d1-8500-4717-94c7-9c8096591b73"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98500c19-15bb-4399-9a19-337441aa9683",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3144ef8e-e5ef-4449-b0d7-5a9e722fd55e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97da4454-f6a2-4a35-8cc4-41be45737cf4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f33785b-2a81-4eb0-b88f-6cc65894bea7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ee9829b-c779-44ba-9fa5-167b807db285",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "de22d296-05b5-4c23-aa93-022782974782"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5a08c0bf-5c9c-493a-9619-fe2af0901b50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86496352-2fd5-4c4b-9940-14977f12a20e"
                }
              }
            ]
          },
          {
            "id": "171368fb-8d8c-40fe-868f-3c359c9d0921",
            "name": "Positive Testing",
            "item": [
              {
                "id": "55c2cf51-b93c-4a6e-9127-900c1b401089",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a64f37af-07f1-4ab8-9494-8cab5883b43b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16ba859-6e3b-4905-99ca-33231501bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b4405b4c-6b66-4d02-a807-060caad366d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d684d33d-3a01-49e0-8b4b-324975a51426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b36e09-adc9-4435-8c51-7ff138febe49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e804526-110f-4e68-85a6-e1d6ccfb4cd0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccb16f3d-b871-4e3f-a00f-ad8c7fb4fca3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37582c51-ef5f-46c2-87cd-b6f366b715b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "44d31946-6b0f-48ce-bc4a-f24e7ffd07ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2f6646c3-5f3d-4b22-ba55-c35978b53244"
                    }
                  }
                ]
              },
              {
                "id": "07bf5b34-e58f-4c40-9864-f32123ec9f46",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b73fbc9-23b1-4f71-8023-471041396c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86848c94-5cb8-494d-8ecc-ca8d0e8dd04b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d867ead-c5fe-4394-b33c-b4ce953dbdde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65a8c35f-266f-4a80-b266-69aa76bdef01"
                    }
                  }
                ]
              },
              {
                "id": "bea87295-1dba-4956-8784-8c5b3d532970",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "206dae36-25ae-4d9a-adf1-445201ac7ae0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6eff27a-d174-4a26-a2ce-385e7519c1ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ab9a27f-b5c4-4e62-9dd1-fcf9935bf290",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "15cdd5f1-ce3b-4748-abab-19c4ded852b6"
                    }
                  }
                ]
              },
              {
                "id": "ccf3c87a-bfce-4f43-91d1-7391d6aba3bb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae5e387b-eea5-49f1-a2ab-69a7350d4020",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a3ff602c-4314-4537-8db0-2ff14eecb73e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3453ad2-300c-4c02-8cfe-87f143218f2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b569994e-3a3c-4a9e-b147-e41a8b8f59c3"
                    }
                  }
                ]
              },
              {
                "id": "e1d7225f-7de7-49b3-a1ee-6035b8fd84a6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7235fd5e-bd24-467a-8dd2-54cf782ac66c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9306d495-11ac-4b13-8f69-f8f581c49677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5393c57f-53b8-424a-ad7a-b7d91a770f27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "20f22614-236a-45f3-b8e9-46758fd86430"
                    }
                  }
                ]
              },
              {
                "id": "08f5a6b6-339f-40ea-82dd-d546cb4fb6fc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0b1357-72e2-433e-862f-98439905c5f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "138d41b8-28bd-4e0b-9115-4983a7d65e27"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c78b3858-7ba9-419d-a0a2-3aa1e78c2d65",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bf8d2969-092e-47db-8851-05f5fb8a97ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2c48b31-578f-477e-9d7c-de9a02ff11bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50117482-ab1c-4b16-8411-dce8d6124735"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f89103a1-0303-4bd7-8c77-37ac10bff166",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2678c809-e4c3-4e3b-973b-e60e9206db59"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "27eac4dc-a665-4085-b8b2-31d2423d1aec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5f4f1794-cf81-49c8-a67e-c7810d2911bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec5d4cef-53fe-4546-8d78-6b8a9b4b8b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed4096d1-ca54-49d1-8a26-79448cc15eca"
            }
          }
        ]
      },
      {
        "id": "5b90590d-8936-4a87-ac32-8dc9b048a4e6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4b2ac02d-3c87-4f92-8e98-12e7db063c0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34cee053-0388-4ac0-8b76-85c875093626",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4effb351-5b81-46e8-a0b0-e6cef5b8c9dd",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3e8124-9fdc-4952-ab2a-33dc3062d529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a41c2a3d-7d6a-450e-8fcf-ef077dc4b2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31611b1d-ce6c-4740-adff-c8850ad2f470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "30f80105-bbcc-4dee-a10c-8dc866780704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f2558a-aae5-4ed5-b453-97aacaf0db19",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a42c16-3350-4830-88a9-466b594503bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d37f4c-ce2b-4d45-bbff-e0563e42f486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bfbcb6-838d-4757-b62b-2298d326f483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0189f065-70c5-4eba-809f-65404c59546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56788d2-461e-44d8-ada1-d28ecc0d168d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896a301a-df8b-4501-ba59-22b330279083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f620b001-5e82-4e22-a706-31443bc5ba61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86560bb4-f689-434a-87d2-d5fadec2a8d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16cebdfe-e2c4-4cd4-b1cf-294492a99381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc204bf-f8e1-4695-80c8-a31766d489a4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c891323e-a635-44de-b363-c4f9c4987a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f534f179-de56-44bc-8e2a-438b9f756f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639f7bc7-45df-4953-9157-abce6a4e7582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f76f3cf-5dae-4e86-8edc-68f15211ea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1e4934-3fc2-4e2f-8ce0-a3d727fbb683",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1bd597-8959-441a-b825-3da91ff89f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d934b2-a6f9-4da9-9f29-f1a955f294b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bd8f1e-3eeb-4b2a-bb32-97f1f2ada282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "066a8ea7-d760-4d7b-ae12-1397f2deb0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a9bbb5-9019-48fb-9bb0-4c74eacfc40f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddaa792-b504-4829-a7e9-dbc2b383b09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9076aead-185f-4912-82c9-ff58a8427114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53231a5-e537-40a7-bfe2-e51130f843cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2a860-4b99-40e8-bb64-50b0155524f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b84fe1c-cdc4-434b-91c0-22143182981c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b604e904-e70d-4a46-a37d-19daa921271c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c1b491-c4ec-4243-9435-c8dce79e77e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c48f080-8aeb-4954-b46e-5ec7eb7a344a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6d8c50-31f7-467a-bbb5-284745b21c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "883038ce-0832-43ff-9bf2-fd240485d5c6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfda723-30f1-4c6a-aa36-799c360cd924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcd0f5b-56b0-4092-a92a-96ac4730b660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13dbc834-2c4c-4080-bb78-b286ade89e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68039f32-9dd9-4e91-b9fd-45a5435753f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0efb7-1f2c-4774-80cf-8f6e36fc6b1a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f9e41e-1807-4693-ad2e-cb493f09155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56766cb4-2a3b-4ef5-9441-31fa002c34e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b717cd-f044-4696-ae9d-c8ec3f639370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "26689152-59c1-40ae-b2d9-9d9220403b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d463e01c-31fc-4e6d-8f50-89d89dabaa97",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e4fba0-f5d4-4205-a31c-1a6109df1ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef2de87-ad81-4a70-8aaa-047c71a6e486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d091b1a-2688-4b72-b40e-269a8c02dc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d3494f7-065d-46df-be9e-a5af6ef332e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0271b78e-54d8-4786-a4cf-824de848d778",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdb8019-f058-4f4d-83ca-74284862c3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad9d86a-2288-429e-9b2e-727623679f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4698f21c-dd94-44e7-a976-9f1a54d05056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "82d375d5-9250-4f83-bdbb-8e9554cd236e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd768ef-b537-44f4-accc-a54a1e14ba59",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df3ce6c-e8ec-4f6a-80a7-875303fccab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6461e0f6-a14a-48ec-a7b9-d433876e7126"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54e7e39-108d-4a69-9e99-8cf5d34ac8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f332f0f6-e1d0-49e3-8ed9-3277d8710533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd46bbf-8843-4025-ae15-06dbb4960d0b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa26445c-8bae-4ec1-9261-c880e22cd3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016d970a-78c5-42ab-ba08-e88c699c28c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9233845-14fa-4fa0-a52d-241cf7332777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f05a4060-7295-4ffc-9e58-a96615dd8a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfecf5a1-4294-4e48-a146-8717cc4f996a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81fe933a-4c12-4ee8-83df-e502aa21e854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40a22ea6-a8bc-4435-8d6e-eb16b9c332cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d0cebc-ea80-4fe2-954e-9399fa48ea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f68b515-7ff9-4467-9e18-21be7f495e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1676b18-74ce-4025-a0b4-a60fa742361b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ccfe9d-1285-4c6e-850c-6c206ba2c8c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11a2955-a453-49cf-8b5f-0ccd9bc4eff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785a4c03-17d5-4169-aa48-9feab82ddb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "07658a76-58de-4f09-9d7b-b48e4f4ce1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5acbcd7-5d30-4efa-a609-70ea061fe807",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efe8d35-980a-460f-bd27-9d017be0fe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d601fe-7d69-471c-9db9-2e8698caffb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3bccdf-0788-4125-8c43-c43add3ee374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d65f5afd-e013-492c-941b-1d773986ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc74337-4db1-4fb6-aaf4-ab23234fc6f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ef428d-2c49-42c4-abf7-66373e6996c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2b8376-5108-4545-82e1-e53385b49949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcae8021-66d6-4255-b1d6-62c0b274f57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e340db75-b772-4ebf-a535-3d4ea62013dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "224dc9c3-e475-42af-9787-9e4f0b1293ea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cbda73-3eb4-4f8f-8ef4-f408a9f86eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab9d19d-be5f-4f54-a1b1-b46de16519dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b37d3d-18f4-41ca-8dfe-0ca63f13e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa66e36c-4e93-462a-870b-52612ad4d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39867bca-a734-4e6d-9085-5d526b6f2d4e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643e30d7-d9c8-45ed-9f1e-c41adab765d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052fa942-6819-49ce-ba28-883ba70931ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5b0e5-a789-42df-86cd-a615cd043aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce234f0-c02c-45cd-9476-d13aa380179d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41590c45-33f5-487b-92d2-2b2d1ff77c9f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccc7a34-cf9c-4e6c-b015-ad87bba0ffb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b62ae66-f6af-4103-b83f-070f2ab56fa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d687f3e-53d7-479e-8420-a73324108317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0e366f-8da0-4e91-abf4-85c215299d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2ab997-4913-44b1-9833-a4b4758c7070",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "840f96d0-05d3-4861-9557-81ae49a9a30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86f3d4f6-7a48-4043-b3a9-ff66b040a87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b601e5b0-8c06-4ac7-827e-dfbd58bfdee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b78e3723-dc56-4c28-8e5c-c903ce3cbad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc57d25-7167-4731-aa35-d17379c279b2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6feaf88-ea2d-41c2-b59f-dd0652dbbcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d806ba4e-9804-4a90-9a9a-cc0fd4018786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b53a63-6975-4c18-8464-1b4e25689c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ad92b79-ea11-4c1f-900d-626d30d31bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d4bdee-8964-49cf-acad-77e53317875b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7198a48d-e4da-4750-972d-c83f457d1e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa36721-817f-4a62-8e9d-ca024e6a9f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b9f8c1-7bd1-4b81-856f-a0a140dcda4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9c39fd-8636-4d36-97f0-7b865f579415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44239e02-4007-4a01-86e3-3b05f7bb5df4",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602afdc7-5602-4342-bac3-7b568c9151cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b22cd5ef-443a-43b3-bb29-9c1a133f95d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07628131-1eaf-45a3-ac31-9b368581f79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8871ff-d531-4486-a8f6-46071625404d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06302cac-ef1f-48a8-80bf-91d8ada4774d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a25004c-91f4-455b-87dd-871d78a88e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310db299-e37e-4be8-af66-147128baceba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c509645-db87-4d2b-9d8e-e878dc7a282f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55df0bac-f2bf-4f39-9571-945420db7f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb8b404-3b09-4e19-9d13-a449907e2ee6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ceb268-a494-4f4f-b861-8440b9d37324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7508b7d-8aeb-4bcc-9d70-e19055c7d482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ea175c-a31e-4e53-bd2d-9527e0db1844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b52d965c-816f-4b1a-bab7-dcb520e72562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033fdda3-985f-454c-97a4-cf2a98c85b6c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bbaf16e-a1cd-46d6-bf08-44f0fc5c1989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db3c20d-9162-45e9-9817-5a212bb21cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2f1852-f8fa-4a1d-a0e6-89101f5b2edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "391eb705-ff20-499b-8d3d-536de00146b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9069d67d-6d25-4cb8-80db-a059c72b16ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7a2ccd-eba5-4ea3-995d-013da159922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30f73b96-0f9b-40aa-a252-24ac1fc6403a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5300d52e-7863-4405-ae4f-cc06efbe82eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "667746ca-de2a-44dc-926f-95beb77f7bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96955dfe-d5a7-4f4d-93a9-4f0a62a72cc6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e6c01e-f609-4687-960a-c1a6755696de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cf9b08-1889-4f59-8ba2-a9130f510188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dc6c86-fabd-4185-957d-9878244ba1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a689b23-9ed3-4507-8499-184e34288add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da1e32a-e868-4aab-a141-8b0078a1e222",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cf0b24-d722-43e6-9626-48de18ad749f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95e7500-0ede-4744-9b4a-14916c5836e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6208476b-0972-4e9b-9dc7-59219dd20434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5409d00e-6802-4c7e-8722-e443f43a2cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34faae20-dcbd-4501-a70c-ee087495872b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e45d6a-7ff0-4efe-ae85-39afb49523fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff3fabe-3481-4265-b72c-7d9896028aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedfe047-a1ff-4709-89ef-f7da9a666fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f4835c6-3dd4-48cc-aa89-bd6e50e9f716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ecb3c3-8295-4dde-83a0-4f196c91d02b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b1b9c4-4a6f-409e-b969-75d861faec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e37af95-aede-49b1-9bd7-c0c5516ea90f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508e9e34-5d3e-4743-aa2b-21b4a68ee0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f47047eb-964c-4c2b-b4e6-78538eb50565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ddbcff-922a-4af0-a681-8327f4074277",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b316b243-0fa3-4142-8f95-edf87a15fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68b4cc1-e21a-46ea-a70c-6ee8840376c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b51ea8-638a-49a1-bc6b-0c9a1d20d475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d22dc9c-955d-451e-bb5c-1879bde5f49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b137a7-a40d-45be-9c75-e3357b60941c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ed34f9-b189-4404-b8de-6486a0ea6beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5357632-38d6-471b-967c-bd546fab1fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98acbb28-acd4-408e-8dd6-4d3806312446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce598ec1-5827-4703-9255-7ce3f82875cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18502547-7c72-4d6e-bd50-3329c1881b23",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00682e82-b4d0-4d43-9531-2001194fb19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce61209-1a61-4291-ab75-82191dbb5fbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c258335-81f7-4d52-a33e-abc350b36a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07d39f31-b46d-4063-9b1b-45c2397b1257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce4b8805-0d54-48f0-b96c-46d3bceb5eb1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e52ae2-2021-4863-ae84-7fcc2b4306a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e7e51d-66ff-47e5-a9ce-e544bc6d930e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a632564a-f8b2-45dc-8e57-9dba5ff9df15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83a09828-1fb2-48b6-aebe-e39239eca6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921cf813-c139-4816-b208-fac28c246650",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da752d47-3fdc-4a2b-bd6b-4bc5d33ecc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ca083dd-4a6f-4e00-8e43-78ef393eb897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f85696b-cbaa-44ba-b648-b2f14dfd84d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab18db04-2444-47b6-bace-57e3a9a09315"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a26de24-c590-4f76-8c48-083b05b9f443",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14ebbfdf-0e25-49b8-95a3-c5ee29130283",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff78008-8b3e-46c2-974b-12ee94a15a3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad64f0b-ac14-4771-ac73-d4b7bec3b1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8911df-ec99-4401-aba0-7ba9a75d2189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0568c52-0e4c-4d42-9996-3ba4dfa6a027"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "675ea77d-d858-4fd0-8b5e-f6db41e63c20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ebd0c940-a8bb-42d3-a514-11c6655254d4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d837ac31-ed0e-41ef-8862-ea4ade9bb89b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0062b7b-1534-42da-a12b-621310a9d904"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5d26adb-2d20-454c-8300-dd5cdf4e8070",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e44e4bff-1306-4bdb-a642-301e34ff1d9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed2d9bfc-2b3a-4784-9ea6-147fd626aa96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d179f3e-d122-4744-b99d-ed4fe023cb4f"
            }
          }
        ]
      },
      {
        "id": "72de3d2f-e89e-4219-8fcb-582e533b7c5d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4c1aa16a-491a-4663-9738-5a63bd7d8c9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c3e7e58-d7c7-416b-83d7-8b9fce4cba6d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06e6ee69-cd70-4153-8c30-87394fe4482a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0cd668-5797-43d6-9b3e-850e9647b0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225cdc3f-869f-4082-973f-3eeefd50e25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064ccdd5-eea9-4b5b-86d2-569752e00ed1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fa6d47-2dd1-4ce6-94ae-f72d151bc7f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ddce0a0-eabc-44ed-975b-c040e260dbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19029740-5be4-48f5-bb30-3e524c89d438",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd98e0c1-4b95-470e-b978-7c4c459a63d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c83f98a-18e0-49c7-9516-e9b702e0d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37269258-c3c1-481e-852c-03f921faca8a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f6e30b-bd00-466b-b894-f45746d0d0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385b30a5-589f-481e-8462-a8f7eaf28756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a158460c-559a-4ee9-8c28-2652f0c344bb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabb1f5e-58a8-4903-88e0-801cc3ae78a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a316679-c277-414c-9d6f-08bee17dcf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ae8955-7d02-4337-94f3-18cf2eaab829",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029dc53c-e8ad-4296-a09a-11c2119954b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7cd91c0-a8b6-4e94-912a-bc8968a58da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae373696-e0af-436e-a513-5785c2a5444f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd3ad3d-1065-440f-b299-ef6b98c3f8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba582936-0964-4c34-8329-70486c45021d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "457f1d3f-c08d-496e-ae6b-5ad4ae7944b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3065d71e-0665-4295-99e4-9b6078f747b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e8b0c-04b8-46ab-8cf7-f83d76815fa7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea84ca3-5fef-4f7a-b9eb-ce7c1c4ba82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f58a519-af2e-45b2-9d3b-96ccd5bf9b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed736ccf-27a0-4531-8cc2-3662c4440180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b50a3790-9977-4413-a863-214a485d1aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4908d03c-8f43-4246-a35d-16177dc0ee5e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e50eb8-388b-42ee-948d-ac315a28f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "954bed7c-9fde-4d0b-b92c-a90433ec69bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "080465b6-ec5d-4407-9c23-efa14b0b88ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5704c48b-c60d-4ee6-995b-7d963bc3359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc60948-7068-4758-a262-02f472bbc464",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "106e14e7-4a6a-4ade-bde1-f009b0d40b05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "133313de-0019-454a-b755-fc26e7671fa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61ccba0-2801-4afe-b7b2-e127af3c09ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f798064-72fc-48e0-9bb3-6be63c0de990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe00f0e6-44d5-4bd4-80e6-4b2794a8c770",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167069bb-c3f3-4f47-b3d8-adb12dc2c567",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8cf669-c822-4ba8-889d-260f541d5ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20cdd3a2-1578-44c7-9829-ec9be733575b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5bc7bf-f80a-4be3-87e4-7e1224da9db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce69abd6-c529-41de-b00f-a37813abd492",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d30f6a-eb49-465e-8814-99e27fdd8390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03002c0-0fef-48ce-a918-853cc22974cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f7c509-b338-4128-9d04-a17c6653f2b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94a424d-8537-4444-b6eb-22aa9017a91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8281905-fa24-4620-be83-c72263098198",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e310e79f-b0b4-49f6-b804-253febb536e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1345d935-baac-4cff-ae09-b36ec18920b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f0a5a0-0980-474e-a8b1-ce5e29c952b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d42e1b0-3bb1-46d5-adf1-f3ab28e2c582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b5e467-5dde-42ad-915b-fc8f00a85ac1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797d542d-1ddd-4cd1-97d6-3e158ced2cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01c338ab-826b-4097-8e38-8b1aa4ad3546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbbd07ba-0655-47d5-ae03-3e1449e1706d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7327ec7c-ee53-42db-be77-65af9ec6a074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8db936-0d3e-486e-8fe9-fde0fd0d2032",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee6b89e-eff5-4f94-987a-63bc18cd6edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f06ee4e-f514-42f3-bec5-de01b0490dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397aaa99-87bc-4ea4-a33c-2e90ed07d4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1729ee7-bbb5-4a09-9fee-e4469e1f8c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd9948c-ce41-4464-adfc-9d71b36c8991",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955950d8-648a-4a02-beac-29000df847de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce4359a-1044-44b3-892b-3e4764808331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87e6701-22c0-4e93-8d90-4f5e9e10570f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2a8189-3b77-4a54-b73c-1f4d943f1c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72b2759-6bd5-4fed-957d-6ae4ebaad009",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e031500c-cffc-4fb4-9328-a3796756ea40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2589494-e971-48ce-9fa9-9e364bc88206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe1dde3-9bf0-45c1-b2b6-40f35881d0d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4658c798-e770-49ef-af13-dcdfd6700cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21234654-ae19-445a-bde6-96ebd428faf0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56458ad-aec7-41ed-b88b-bae444a91f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b8a5e7-5f59-455f-b38e-493b5adeaeb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110a92c5-b0c1-4cc5-9685-f3e7815dacee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa33514a-419b-4583-bd38-6068e3a04d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0776026e-b48d-4747-9883-d45adb474a73",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfc643e-766b-4dbd-bbcd-cf1525eca2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29473594-11b3-418c-ab59-a13749603140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97afe644-154a-4f99-b193-0973e44ed8c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5d5d58-7fa5-4758-b6c9-1d05d2b3a327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a08a10e-8d1d-49a6-949b-89a0565c667f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0934a4bf-c7be-471c-8fb9-856b993fbf81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd47e914-bad7-48c4-9ced-c0554951f95a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b214e7-a354-4ab0-8566-a09c269c53b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990dbfae-59c1-4a13-920d-75327282a6b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e331da-9e27-41df-b1f2-63c2fe7876b6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e0b0a6-10dc-4f0f-84f2-2f69069ac9a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a46d146-763f-45b5-a068-be887bb59367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5fdba-ac42-4e64-9b0a-09c2bc264716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd515f1a-115d-45d7-a053-96553ec8d2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafeda95-1300-4848-844b-9e17f2a91ecd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612f3626-6efc-4cb5-9e35-1d6f81b216ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54c58cb-fdb0-46c0-9aaa-c435efb0672d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc7ed17-3753-41d4-87df-4839500b1f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641be000-89c9-414a-8846-5ef6f012784b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52823bd-ea63-4b81-a792-11b18c17aaa8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765f6688-d25d-4d43-ac27-edcbfa7b07e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a6cd76e-3aae-416e-8979-94396e44475c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc7e408-6469-439d-81c2-0750f69d24cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f537a6-3e23-40d1-99b7-fab4811f18cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1efb74-7594-4588-8849-183abc662e46",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce29d5ff-5a34-4389-87a1-aec81d175c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9428f3-43ae-47fb-a31e-cff1d421d805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1dbf4c-5612-4565-9da2-6d7971961305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "121890d8-edba-45e0-b3ba-94a2a56f76b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964c9d10-112b-45b2-8f15-64759b519518",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ce1a22-3fad-4db4-9551-878ab50f2c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2b43eed-57e3-423d-88f8-4861d1382f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88528f6c-ae83-457b-82de-268d969da511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11bdd146-d945-43eb-ad3f-94db2cade95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed7bbb4-1575-4528-87f2-a668fa964d5a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4294e37-a39a-4eb2-ad9c-9b7a6f0099e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689ba254-4750-4353-8283-c83363ac4f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bffea04a-303c-465a-a955-fdeaac3f6a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83dae680-dc09-499e-9cbc-bc1f8f42ed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efaa246-c0b4-4d0a-986b-f7f7e582c32d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eedf6cd-bb2e-49bb-be07-e9f7d2a7d90a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a20d045-f6c0-4e45-8149-d61ccc2cc50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2279e701-bfff-403f-9b70-d4504ab4cfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a171088-37e3-4ce5-ae17-e1ddfcd02630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20320d7-b4f9-4332-99e2-0d35c3b6c45e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868a8a4a-2aa0-44e9-b937-b4327374b049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cc028d-1268-4349-a215-538dbd02ad7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68df9ff-9532-4d16-b304-c47402c8461e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6df6101-e687-43f4-ab5a-137c7536418c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd9cb31-9f23-41c0-b0ca-e838c86bcb84",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594497e2-ea98-4007-b7e0-0a99e7c4cd4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4edf37ab-c0ab-4c61-a908-5782361fbed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff588c99-eaa5-43d0-a094-f8f9770428d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b2e8b5-8e02-457d-8892-30659df9f5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb884aa-5c84-4970-966a-1500c913bf83",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002a066e-38d6-4f25-9225-c974b4eefcc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0955df26-b460-48d3-aa99-a546ac9ce585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb88d25-18e6-4850-85b4-9e80f040b5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "376e2894-b6ac-4e83-94e3-a8fb6ace646e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69220f13-7dff-48e0-919b-84b7a28142df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebba4ab-fa23-4cad-81fd-724d9e1c7c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea4e1a2e-69d4-4dd3-8ad4-7007467b7b09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0822468f-f2df-4805-83fb-50632bd9faf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1594c09c-bddb-45a0-b421-9d01ce18c8e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4a4b3a-be11-4e2a-bbe0-8dc97066d2a1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb87d0-0cbe-4711-9264-d46de2b7b512",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24276da1-0346-4e72-952d-3f3b5f49910f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c479fa3-493e-4927-839d-7362ed3708b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e61514-1cc8-4579-94a8-94d70ed60e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c131ea7e-bf24-428d-aa38-e525e5541f0c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a101b4f-d6ea-4f85-a55a-32ba0993f61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5aa64598-9e4b-4e62-a51b-81b1faaec05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7857cf8-1727-421e-8266-bab8cc1d2882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbf88016-372b-4520-abca-b8bcdf737247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf39eba-2350-43e6-bd28-4ba864cfd484",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba621a-c635-493a-a043-e310505397b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "147285b3-f0f0-4b38-a105-9ad7306d3540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff0b14d-f6cb-4350-9d31-f569803586df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b35aec-523b-4818-935b-2220c8731831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e238527-87a1-4498-b8b9-f5ba27b476cd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f51c50-0d94-416a-af98-b20301f5b50c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a7badf-3476-4abf-8475-3bbede2c99ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5962c0ad-3516-4398-9e58-efd0cfad6eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b543397-e280-486a-b666-2cb3ac340b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4dfbe84-1bcb-4ff1-9575-97ed7641dd23",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc0a007-1f1a-41d3-8a91-9037fae027b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edf5b7e5-064f-4cf8-a595-4248ea2ed1df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e602e74-a2e7-4805-8089-e1cbec77c6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496f4327-934c-4c07-a588-7b4ffdaf2f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bcd86fc-8a7d-416e-8607-626a63756a29",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c09551-22a0-4e1d-8cad-10d11f7e6c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10aadf0f-57dd-46f7-a544-dd556284596b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5049a5-bdc4-46c1-970b-9e6cab83fe7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8945173f-8eaf-4ade-bbc5-9497252e7c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0424233c-a951-4978-bc64-1729d26c74dc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3619abb-57e5-41dc-9186-b5bd34767313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b022a7-f61a-49b7-9cff-a1ca6c4e5c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a7cdc9-47da-4eff-bfc4-350b1bf5c5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c17633f-2fb3-42bc-8125-6cf1cc1a7706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb640764-79e0-442c-acfc-4427ee4e81a9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc4e24-7401-434d-8287-2659c3fcfe5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4655ac4d-4683-4165-a502-5f37005f7443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed068d27-d779-494a-b796-08b5a99dd9c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e77dd3-b64f-4ded-b959-78dc45ea7133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aeed631-8d78-4eff-a5e6-39c5856fff6c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ead6954-f2e0-4258-b088-4264fe5d23f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faed7c8d-3522-4fdd-a20e-9f859cf863fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "131b2659-415c-4215-94fc-83876f3ad009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc81575-cc7d-419c-b40f-9d64ba9731b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed4f10e-7576-43ca-a4f1-6bde3cb6c84a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cad41ec-9fc7-4a79-b1b5-927ca2148227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bde65f5-0337-4dbb-9400-f78898a0fe34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ee2ecc-82ca-4ea5-aaf0-8805ea3545dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ac4d3-3b74-4a00-be58-b84028df67cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562221ad-0f27-4c4a-9127-f987d8a7fa20",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc0399-4370-44dd-899f-caf36deb06b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b444b6-b714-4f9a-b7b8-55d53da5dbe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ecfd458-c7a0-4213-886a-c5b004c5b627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f0d0a-5b5c-4dc2-a685-ef4569fbd14f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bcc613-1084-4437-8fcc-9d5a837249ea",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cf1956-87b5-4676-83e6-a6c95bc5e739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71b81c8-f2c0-48d7-8797-711192079cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1eade-1f33-47b9-b6bf-987835b181c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da90ace5-5ff0-4853-8376-e8ecfd07976e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a12c013c-2aca-403d-aec2-b4182975a336",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5e3a7c-ae1c-4406-91be-ff58ef068e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5406c8d-573a-42ee-ade9-478441f7e21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcae4d9-0a0d-4cfb-a998-7242f1eaf969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d292aa68-6d04-4f14-a494-2e21c1c0b150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6acf39a2-f3d3-4f05-8c08-976e52ae5176",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b362c7eb-e800-453c-9753-29f3a3778f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71739c8-fe4f-4c7c-83c8-7bb6e031b8ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5799a7dc-4aac-4a48-8cf4-def16ebb7ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5e81b2f-b4bb-4610-84be-40908f9ccc80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aab1be9-bc1f-4c6a-ac38-3d4fc525178f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fbb105-4ffb-4304-8328-5e8e3c434d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfd150ea-2a6f-4848-a767-7827a4a05edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3972c8-e5be-40a2-89a6-6b57fad2038d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88e0451-fc5c-4ada-afef-50c670079843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808bd915-cb7f-43bd-876d-205996e328be",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df85572c-906f-47b9-ba9d-cf1a84d331b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf25c9a-589c-477f-8c09-bfb3d17e9a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af0e98-8510-4015-8fbf-6cfb30b5a4a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79286ea3-2c5b-4dcf-a615-dcd51d0deca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b8c47d-7fc3-474e-8777-e82062cae4f7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f401a-5911-40a0-906f-cbafd97194c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95513905-3ea3-4d9f-9054-3d1243705a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984a2167-d8dd-477b-8586-0c1ac1e77a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f7d497-2b73-4024-84af-ae8ee5d01bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9297106a-2375-41b5-a186-e06a1877f778",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1e78cb6-d198-48d2-957d-49ea7b1047bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6e393e-f952-41d7-9f01-41123d3f67f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab86f07-51a3-4d8c-af06-23c547ae71da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "426691be-8b6d-4d63-a764-1890b0117875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b6cc19-0c6b-4bf0-ac89-6fea6bc63f09",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f8f855-7a8d-4628-b7c4-64745fff2969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7772e1d-dd80-41d0-a9cf-1d6ec8456cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27c69ff-146c-45fe-8b47-77cbb7ede8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3c0a6a-fe8f-4be2-810f-559364db5f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247e3cf2-f3e1-4b0b-8185-813ca63a111a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5662852-15d9-47f5-b2a0-76fe9fe3e3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65cccad7-8c0c-4b0b-b612-827f40ab661d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b1b25f-c754-4a0c-a2d1-389f59f568fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ed0a26e-7cb3-45ac-82e2-80c172e3ba33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b77d960-597b-4d89-8a23-f2063aa3214f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84bd4224-fca7-4211-b168-60e9c3ceda8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a861a7e5-01e3-4840-b35d-e2ad993cc177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ffc83c-2513-47f5-918f-bcfc1bf70ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594e7b2e-a39c-4f85-8a8d-635480d28c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edcc9c0-74a0-47b7-802f-e5974f25f926",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bf031e-540d-4ed9-9e2e-54ec0f267b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcea58ac-75ff-4709-9f0d-9b52922ad18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcf5d75-5861-49be-8db2-11746241aae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878ac93d-e351-4fbc-a630-e3d1e7258713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93779f0-a6f8-4713-a91b-a0fe277d6149",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8e83a6-734a-4699-9906-7b29419bbf92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0497566b-c0bc-405a-836b-69928989d5ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8fba6b-f9f6-4bb7-8cfe-eec3fbfe7f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5939bb76-f5ee-475a-a990-783b11cefb8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1fe9a2-aae2-4831-9b6d-1c2339d1f7cd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce1a21e-5552-44a1-9691-0587c7b2b22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954c6a71-7186-484f-a9be-1eb103239036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde039b7-4f0f-48c1-aa89-fbb10a82b0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934101d1-876d-4e35-8110-1737f532a41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfd89ac-da50-436e-949e-2bdd3cebc0a9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f677fca9-f618-4951-9b3e-300dc6909836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040e4c61-3142-4bf6-9c9b-66aed61c931c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001022aa-1609-4687-8f9b-5fd8ee8fa455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97b98914-9a31-4d13-bcbf-6c721cd57325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12266413-e1db-4324-a808-0f661c2c9de2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f277b6-5799-4a48-8a36-57b364a90caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f5bd8e-254d-4a85-9b67-06f4a641eb5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d46f421-6697-4a74-b3af-c7ac55950942",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a91a9a6-9ee7-468e-b4f2-ab69f29a692e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e028f37d-ca3d-41ff-b131-2db08e78ad3b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edab1287-ad7c-48cb-89a0-d9247f744fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb63831d-05e0-4896-a02c-34b10490c064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c11609b-b5fb-47f5-82cd-1313f91a1e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba592859-2758-459d-8f94-0dc568a1ce4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c919ae96-9e69-459f-b640-d680db69ff57",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d393a0a5-bf24-432b-8097-167d24ced241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4183b7c-793a-45f7-a786-fb64f27876b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd64add-fe24-4bbc-9c39-32e290caa5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80325e7c-35fd-4a9c-b28a-b7f0b2616e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7e27b8-f9d0-4f21-a44d-e58eaabe48f3",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e494e6b-3713-4417-ada0-c4c0f4bc7867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823fa2d9-c07c-4a7a-970c-af0cd1cc74a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8155d6a9-07ad-4db9-ba88-95184d6aabe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d9e8e6-3a2b-4c2e-a056-94f8531febca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23672c02-9fae-42c9-902c-e2a63f247c60",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b247d7-79d2-4d23-9884-56586bcd64e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ae4603-383b-4faf-884c-76d069f2d5c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13416605-4d93-4cdf-bf51-d85ade4e3920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695a809e-ec45-437a-9e97-0251f3789860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb33d10-2aee-4ca5-9f3a-c02074cb4a4d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b30a92-493e-4020-a4f6-435da8054610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac2c234-a04d-4b7c-959f-0b686f7b3e50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60117a7-c9b2-4851-94d0-97f0919f3787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d91c696-1ee6-4c11-bba7-180bb050f3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38909d4-3ad6-441d-90d9-d707480debab",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb43ba5-d39a-4541-ae4b-340caddfe386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "827c00c4-a969-433d-bfe2-27c93446983d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e4d5a9-1a0e-4a0e-88f9-cd08249dd7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7f3b1b-1273-44e8-a2b6-47e95d1e11e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae21ef4b-da98-4f30-820e-b2270ce24945",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963872f5-2019-4da1-9d86-5d6af9bf9113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d64ba14-f6aa-4fc7-bdb0-2985c128873b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee48026-2bdb-4529-b88d-ea3e40b401ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca1db98-2549-40cf-9188-27638ceb1ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc65ae52-55df-4fa5-ad94-f33bf93c994d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f59ed90-b35b-4f4a-a220-d7ca89b42282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c29c4a-22e7-4da7-a600-1742a81330e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a3a01d-66df-408c-b0fe-fac40ddd1c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bc9291a-d5f3-4e6e-8026-44dfac345998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e125f-372f-4599-9896-9e0a01bb08d1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c05208-a612-4e8c-9dc3-e467b0e39298",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f41894-b3a7-4342-93eb-1f2b3adb4031"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1bd3db-2598-41cc-9841-55d4300d8616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a7b9d0-55a2-43cb-a5e7-7578084afd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94fc858d-228c-4878-8902-3c28a6cc99d6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f86e78-61c8-4f5d-ba70-c04d5c472b7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ed722e7-b40f-4f8e-a6d0-fdb065256f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "544a71b1-d673-40cf-a8a5-7b017453702c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f50fec-292a-469b-92e9-13258257f803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83edf900-b248-4930-a38d-eb58fbf34930",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbcc9f34-3bf0-4603-97ba-81d8bafd77f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e495d156-b029-45c8-843f-5a172d7e089c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5061e241-ee01-42cc-b949-6f20ebb42347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba110095-6a8c-4f25-89da-ece527090e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce61b596-0e27-4c33-b88c-6654acbc102e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4fd431-5b43-4d80-bfc8-bc880b0c2bf9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "558ccfb4-2e3f-4c1f-9da4-d9230b1b7683"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb18c3d-c7ff-4674-9f89-766914cc8c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fa56e0-1abc-4404-9311-7a92c63e2be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e039dfa-6e6f-483b-833a-dc64846fe627",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3aa92e-d906-4c39-9533-534b08996a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa23d3b7-765d-4491-b705-6fa67a32abaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb159db5-e166-44b9-81f6-4195f0b9dda9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e1105c-38a4-45be-8100-3cc523737006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66243e34-1c04-42a8-9b7b-667973e9e90c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40189a9-42bd-435c-bded-1dbf3b0fab49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86a8d1a5-08e1-4090-8ade-ff29c9a0740c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac1130-c08c-49b0-8cb6-b446d2581434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e14237-eef6-469f-ae61-6da336d5ff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376b49fc-5e40-41fc-bafe-1887d48a39b6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e6bff4-83ae-40e9-a2eb-f2307be17b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff235d8-e080-4531-bc14-270433bf9443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab7130f-7c72-4560-a395-90fdf3dddf54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "962b1045-969b-493a-ba51-b86409c5098b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a3d0d4-0760-413a-929a-39977a4164ea",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d218713c-fa37-449c-bb1e-ba9ec5b80f94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97197073-d31e-4949-8ea0-1fd3363a68a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e28e51-1c6e-4da8-a02c-857561a020c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e44b6d-cabf-48a9-a410-f904bda65d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b265c4f3-633f-4c1a-a473-758d5948edec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75548f3-3a1f-4002-aa2a-9d075a4a4572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38f20ac0-76ee-4d49-965b-09aa2ad24944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96030235-0509-4c2c-a2c2-929a71a5c0b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8839e5-5e84-4c34-895b-2834d1de8ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e393680d-13d3-42e5-81b5-a27fe0fa3212",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb898e5-2a37-4b30-8b3e-1ad89c09a491",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f43700-62e3-4142-bbf9-a5c8874602db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d26dec0-e766-46ec-896e-4ed5c8b6c3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d29eac3-360d-44d2-b710-8b414388b553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97eacb70-c8fe-4402-9954-1ee8d5dce572",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a674bd2a-f3d6-451e-8da8-d016c3a656df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d6ef32e-a460-42db-8214-65cbd692ea4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8255eb2a-ddba-42a1-8092-885fb1523153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eaadded-865d-422d-96ba-d6ba81b0d495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f476d0cd-d849-4505-91b7-6d57325c6740",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b933ec-fe3c-478b-bbde-d3a0edd997fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da28f88f-429a-42c5-b0ff-383762f3a40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fbd749-375f-470c-9d03-556bb10fbf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04af733-c14e-4f5e-bf84-8835a219df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c700a26d-77cc-4046-bb1b-42ae38800558",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feae920d-0da1-4af0-8760-09f57f0a3f24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06e09c66-bd91-4a16-9ce3-d540d39e36a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4946db-d465-411b-9704-648297790aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b64f010-066b-49c0-83f9-eb1e50ce8fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e08bb1a-a0c3-450d-9e25-235f963b7977",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bf732c-8881-4a3c-a0c8-53e51a25d339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8492fc-1585-47b3-8338-912ad49b1d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5507442-024a-4d00-919e-c68844a4bf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65d2ec8a-1c2c-4467-a863-c6041481d63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81727b90-7d37-46fd-8d1f-52421885cae5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8835a7a-2697-4fc3-a0f5-95aed55c2454",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "280741f7-98a7-4a21-b36f-17cb99809c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d529380-07f1-4df0-b32a-3181d04137c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f66658b4-82ce-4323-b5e7-4e7f999b186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500ec8d6-2cf5-4d07-a51f-dc8316d1496f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da36361-e916-4e33-a964-e739e36dcd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1664b6f5-ab8b-4a1c-9fd0-25e55cefd05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b10fde0-d7d1-456f-886e-b4b392cb6638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90e39f5-e2ab-45c8-88e9-80a20159e2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba80183-df3c-4df5-9866-ce196a357b38",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2fcbeb-c62a-40cd-ae09-b59fe21b2e37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf4740d-8464-4b00-8b20-f121d0396907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2707d0df-ec68-46ba-a1a5-8de399c51186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "973af06a-fc9f-4e19-9556-95b9df9fe444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b698a27d-534b-4d9e-b7dc-947366cef818",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b36fec-c22a-4d79-81d7-b5e2077554aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28041b72-52b4-4742-9938-6a67d3c94f2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee709f6-1e8e-4031-86fd-70944c929a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f2e1b8-e283-40c6-a167-b8006b9cd442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97710a87-cc19-448f-87de-9a425df265c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fd4cd5-41d4-4e2e-8a2d-f85e300b084b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01f261b9-4df7-4cf0-bbaf-7019cfcb4f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "529d830c-190d-46a7-a112-f01a12b15bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b85609d-4af3-4c06-b342-3c4119d83eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c091448-75db-4a82-853f-ddc634b42030",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7873948-4a42-4e5e-8068-66464e33c711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c293afe-a5c4-424e-82ab-097ef5648b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce884702-6679-4bb1-bdc1-48d86453d30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec1c1b9f-22f8-4bfb-b91b-8cad890835c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b214389b-028d-4222-a898-8e8251e6922f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691d04a6-ad6f-42d5-8fff-94299472e026",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f5bd2d9-e7d5-40c8-9d39-ae9ddc452ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2fd7610-4025-45a3-9ad7-26113f3a0d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a49016-bc71-447b-b52c-61e44468f961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb5e645-f7f5-433c-8f6d-e3ca59d1f4be",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2e7d11-429e-450f-a024-009ea9797870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19a86b9c-41a5-4db2-80d4-291413e30028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53afe9de-67f4-4c36-9abf-923331acf50e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678d003e-01e6-4669-9055-44ebcbd96be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0381dc21-3b10-4047-a984-46c1e71b1391",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eeab425-da4a-48e4-8cea-d1ac4a7c75d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9b3c183-f4bc-481d-a1e1-8f7ac2e6b170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa62f27-7093-4857-8708-5b52c9367c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5ff06f-d353-48bf-905c-52dcffb2bad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4a1747-d1bc-4404-9718-36adcb22140d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574ee861-1f44-46af-8a3b-cd7db1b2ed19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb3af5a9-bb52-45f6-8c51-1fd5c1a12d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f644df6c-140a-4d3e-ae1e-f41637094652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60acf1f1-f4ab-4c24-8128-c248e3c408e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d59900-9fed-4289-a9d5-399dbbe78b91",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb30981-b854-4ea7-b2cc-eeda38d82ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22bef823-1066-472e-97ff-c2208cdf5cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a3e7b5-1b15-4448-8fe7-a68eb3a844e3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fe3aaa-55d9-4aa1-b6d2-82a98fc7fd82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de22ee6-9a60-44df-bd34-dd012f64f76e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52518d05-837a-4f4c-8bfc-bc525c39873c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e7bfa6c-1851-497b-9b9c-201ed0c8791b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c9c86a-c256-40ff-8cea-21e63ab10266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e3e5689-06ee-4571-970b-3c7c330c029f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecb1772-2ef9-4055-8437-a394e26ea3f4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc590d3-3750-476b-9e52-eae0bdfaef44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f757a193-f3da-4dca-8f95-68d83ac495d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d92a0ab-a8bc-4260-817e-bee43423c295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa579361-c0f2-4d30-adf3-2f8023b110cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ee1a0c-656b-4e9e-9632-5bcebc2d95ba",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4ce216-2bcd-4d29-9ea4-21cc156d2eb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ae8a981-f562-4861-982f-830328037c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7748b-4c70-4509-9c9f-691be1c6a4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610cd822-cff5-4803-8037-b4ff45dd4d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b18c25-0324-4afb-98ff-c8290db5aa4c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d102fd-ceae-48f8-98d8-a75d5557d40b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9832651f-0a99-4c55-9dbe-b4f39074f466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c765a1d1-d589-4b60-aa8e-91a7ddcc0b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a5d963-44fd-4d64-9a4b-3b2bb4bc7d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607fbfe3-569f-4d28-a29f-b014dc617cd4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307c7526-3cad-475a-8a8e-e2606a5ed6d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b966a0f-0fd7-44bd-bede-33d51c81fdf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98ea57f-fe70-434e-ac93-d55c6be948bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894d2d30-f29c-45c8-aadb-161f302fedb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76743148-b9a5-43d5-a3ee-af70330e7936",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4babb54f-734d-4441-9318-632c9cee5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b49ec6-6c58-44df-b705-383182b9ed7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabfc975-d87a-4cbc-b068-0751222e566e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f56cade-b4ee-4136-9c89-484ae76849a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba9cfe8-2cbe-476a-a998-65990e3f62ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904c8800-71df-4974-9ae8-184309c2c6ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8560fa6-798a-4505-9e11-862a96bd69c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23131a4-035c-48cb-8f93-a2e023c182d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36285898-d281-4d2e-ab05-cae08cb39a3b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d951d86a-e116-480c-a667-baf631f031ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79e8365b-7a26-4e86-a337-38764fac8340"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df5a025b-8ba1-483e-a01b-d2bcd94d7761",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a767ae18-300f-4d2a-936b-84a06911244b"
                    }
                  }
                ]
              },
              {
                "id": "6223ad3e-4b02-4a29-9372-1803553050b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "525a3722-0fa3-40cc-9f6a-067766841662",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f76ae85-d9b4-4e81-a8ad-9f1ca0ce574e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "60f8e239-687b-43a0-b32f-84e25ae82b01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "056f7720-219d-418e-aa32-d3301d3a94da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ce11e8a-0d8d-43d3-9064-bce552ba49e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f582e12-84cc-4de3-a2ab-b1e2761ab173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bad93cfc-9931-47c8-9b0b-0e2fa3593ede"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f290069-a77d-449d-86bf-ed2123a74f76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11cc5e92-dbe5-4870-bab1-df57690664f8"
                    }
                  }
                ]
              },
              {
                "id": "6293e9f2-170b-4f5e-a390-f8bf28c61cbe",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "614c74ae-cccb-4c57-bb2e-29f84b0227e0",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc0eb55-0ad0-417a-8971-a12b9594ecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "95a1269b-6e7a-4f68-b42d-dc294bb40861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48a8236-5851-4a0e-bbbb-0e7332cc8dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc16b71b-34a4-462a-a257-24eb784bf693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "35c35df0-ab67-46cb-a5b0-c50f3c129790",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aafd9b9c-bca7-4136-8fb7-d420c328d8c9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ead92924-18d3-44f0-a61f-e925c4b48fc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75976533-1c38-4173-b30e-93e6403c0dfa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b08620c5-6d98-4a9e-aca2-01dd8c35c30e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12364da4-2619-40c0-96bb-a7fbc2182491"
                    }
                  }
                ]
              },
              {
                "id": "2bd5593a-a547-4590-a713-3cc0e524b8a0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd615399-6a24-449e-955a-d5b5728c16dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "42d44740-d0aa-42fb-b793-943ab2e7427f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e06ccbdb-7bf9-4bc5-bc56-923b635fa087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "948c988f-8b99-4fc6-ac57-c74fc4156478"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ff54c42-5f30-4441-b8ad-b977e1098a5d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0b90ed04-b281-49fb-a170-5ee0de062b47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d30ee20d-0db1-464e-9301-efa89b1c7912",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83440081-447b-432c-8073-58b143a50a20"
            }
          }
        ]
      },
      {
        "id": "1803ba9b-b438-480c-8170-7a79acbcdf70",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d09a9826-64be-4aa0-906a-ff1ddbbcce10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2bfce25e-c1e6-41a8-af99-09a63da0a976",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ca3ac8a5-883d-4774-a980-33e2993a952b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56badff1-a2f7-4a17-ae81-72fa517665c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2d7d9bd8-6262-4867-a265-d2b9c2c47bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24a578e-612b-47a3-9560-a2e026fab1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5dae96b-a649-460e-8e77-2a053391d12a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d1aa000-a68b-4ec2-a227-a1043125fa05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fdafd00-5fb3-4c65-ab63-c964e2f07b02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "350b1ec1-1ad2-4da7-848a-1af46f202d73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aab1bec-32f8-4c16-a7dd-bde3f768429e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64ed474e-d9ba-4727-be08-4d97445bcd62",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "75552376-a719-4fa7-8a0a-241fd9b3cbf0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0053de98-7353-4e14-ae57-6e1a20ef75a7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9548c11-fd8d-4442-aba3-c7fe99fbdfeb"
            }
          }
        ]
      },
      {
        "id": "355b09cb-ca92-451b-b68a-19c9cf72abb7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "075168cb-92f3-44f7-98d2-b017d4d64f67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9279e38d-7fea-4d70-ade6-355c6e8a58cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6e3417-f1b8-4730-9118-2258fef85f17",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11362b09-0905-47c2-b4ca-d66e52b8e8db",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b941045-cffd-443a-a3e2-d3e1044c719f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "469908be-677b-469f-8e41-1c6bc89c4783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e611a50-634e-4990-93d6-3b464bec651d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc83cf16-8bdb-406f-80a2-5cb899e62cea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b2415eb-5ccd-4b32-b910-7694476be073"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0612cff1-dbfe-409f-a83c-dd8f62ac3114",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a08ee281-5f6b-4c37-aef3-090c1b4ec3ba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4b7ffde-a9b7-4abf-8195-7f995879700f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dbb33211-4c11-4938-a135-40e513f4b961"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "483e8a8b-a5bd-466b-af2f-00abd3d65d2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26e811c4-0060-4c3d-8594-f477fb62c52d"
            }
          }
        ]
      },
      {
        "id": "bb8935e1-2e6e-4257-834c-4e27fb55fadd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9f75a383-de5c-48d2-a6af-745787d090d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df65312d-4941-412c-9cbc-e298f205c642",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e69f5e3-feab-48fe-b284-cf9810a65f19",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc123c31-f721-4bdf-8b00-16c1f5642346",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb9a0dd1-5f78-4f57-a51c-0d6dfe6950d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd2079a-14c1-4ba4-a93a-c865d537e170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d341d2e6-c101-46ad-be96-608f02486013"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ab1e7b2-26c0-4a54-9fa4-f0646c4a8687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4c3c9ef-2c79-489a-a1a1-a82753abe8a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "90b65e81-e4df-43d1-b9ef-be5efcaef4a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c7feb17-f88e-45ea-bbcb-af37de3452a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce02b3a8-1761-4371-87f3-b1f2b572af25",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a3626102-c1e0-4ed2-aa51-507e8ca7eedf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02a60374-fe52-47b0-bf40-b87707a4d30f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "575e0ede-1c53-458f-962d-3663011d1c94"
            }
          }
        ]
      },
      {
        "id": "b48d4a05-fc2d-42ce-a486-0de51cc7778d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d070fbb2-b274-4f16-994f-d371b5b9f451",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "256876df-d42e-43d3-a31a-07d00bd008e2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "888fef9e-5a94-4ac3-8f52-70a5da03c72d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c1d6b04-198e-4348-9da3-e32bfaae9510",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0955e1d-aa1e-453b-9883-bba3e1637a21",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 147.50396825396825,
      "responseMin": 13,
      "responseMax": 13796,
      "responseSd": 949.3183373030396,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725237834932,
      "completed": 1725237880394
    },
    "executions": [
      {
        "id": "859a63ae-6cb4-4321-80d0-d8e7d387dd23",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a583f112-bde2-455b-9760-5ea40352b5f9",
          "httpRequestId": "f6bf9186-26e4-45c1-acf5-3e042bd7f4ee"
        },
        "item": {
          "id": "859a63ae-6cb4-4321-80d0-d8e7d387dd23",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "efcc15b9-4491-442a-b7a5-694f5fa6be69",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "5e97c6e2-cf4f-4b3f-93ed-2c722ca5e38c",
        "cursor": {
          "ref": "11c76a55-a959-4a27-a2eb-49f77eb84a98",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ee94a0ce-7ac1-45c3-a485-925f09ef4379"
        },
        "item": {
          "id": "5e97c6e2-cf4f-4b3f-93ed-2c722ca5e38c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "62f85535-7c38-4a84-b91d-98bd9535fa8f",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "8278fdaa-fbda-4448-81c5-4bda985bf257",
        "cursor": {
          "ref": "0e8652dd-6464-4f2a-9250-a86937f77c59",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "481d65c4-7ad1-45af-a0bc-295e5c343cd4"
        },
        "item": {
          "id": "8278fdaa-fbda-4448-81c5-4bda985bf257",
          "name": "did_json"
        },
        "response": {
          "id": "2fb9ee5c-a54b-4f35-a6d4-33f3704a94c3",
          "status": "OK",
          "code": 200,
          "responseTime": 333,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d72a370-b4fa-48c7-a393-6ccfa87d8bb8",
        "cursor": {
          "ref": "493115b1-b66e-411b-acd0-3f091f7a0029",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9a7a91f-5f0a-40e8-ac97-1f596f44da58"
        },
        "item": {
          "id": "2d72a370-b4fa-48c7-a393-6ccfa87d8bb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e6471a0-11eb-4e96-8521-4e438476e594",
          "status": "Not Found",
          "code": 404,
          "responseTime": 389,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d72a370-b4fa-48c7-a393-6ccfa87d8bb8",
        "cursor": {
          "ref": "493115b1-b66e-411b-acd0-3f091f7a0029",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d9a7a91f-5f0a-40e8-ac97-1f596f44da58"
        },
        "item": {
          "id": "2d72a370-b4fa-48c7-a393-6ccfa87d8bb8",
          "name": "did:invalid"
        },
        "response": {
          "id": "1e6471a0-11eb-4e96-8521-4e438476e594",
          "status": "Not Found",
          "code": 404,
          "responseTime": 389,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a9b75e-4edb-418b-85c7-8e910a1ef2ae",
        "cursor": {
          "ref": "56b83127-c594-45f3-b7bb-b96bfbc95902",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e59b6a6d-c051-4bfc-8062-0b5b400e0f01"
        },
        "item": {
          "id": "f4a9b75e-4edb-418b-85c7-8e910a1ef2ae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b921745d-a50f-485e-94a9-6e2ad940b80d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 38,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b1174-3c91-4464-8c53-81fd4539161f",
        "cursor": {
          "ref": "87d3bd64-2d55-4e7a-9716-e2dfea365a01",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "200429a9-e20a-4376-9307-427d28ddb808"
        },
        "item": {
          "id": "e31b1174-3c91-4464-8c53-81fd4539161f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3a06f4f6-c33b-4401-afc9-1e314740db5b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f97f53-dd8c-4a9d-aadb-0ebabe192548",
        "cursor": {
          "ref": "c6a492a1-dfd8-4fdd-9e52-8044909de0ab",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e6c43b39-2258-4941-99fa-b8ff54e3101f"
        },
        "item": {
          "id": "f2f97f53-dd8c-4a9d-aadb-0ebabe192548",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "94cda22f-a7f8-4144-9cda-c9751c70f588",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4774f0a6-b76c-4a50-890f-f2095b0c99fb",
        "cursor": {
          "ref": "247b08df-9e2f-463a-acac-da806ce8b993",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "63d83c73-96ab-4e37-b4e0-42ac61eb5b56"
        },
        "item": {
          "id": "4774f0a6-b76c-4a50-890f-f2095b0c99fb",
          "name": "identifiers"
        },
        "response": {
          "id": "460d629f-0838-4dd5-9526-67303d0808ea",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515106bd-c94b-442f-b8e2-9119d94c155d",
        "cursor": {
          "ref": "1ed8ecf1-7dc0-4d24-8291-2dc0193458d0",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a6a7710-4846-442c-a4b8-7d043744f57d"
        },
        "item": {
          "id": "515106bd-c94b-442f-b8e2-9119d94c155d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "99ae67c9-0ce5-4766-ae0b-e151a73840c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931b8644-3376-4ea9-aa0e-496b0015fc91",
        "cursor": {
          "ref": "9fcecdc2-b990-418a-a731-8fd63081e8b8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2acc5d30-4221-48cb-9c44-0b54258242ef"
        },
        "item": {
          "id": "931b8644-3376-4ea9-aa0e-496b0015fc91",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bcdd0840-5d4a-4300-89d7-74b5bbfc236d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386b2ffa-12a0-4653-87da-916cd7815d62",
        "cursor": {
          "ref": "12ff6098-5904-4eae-a83c-9d72da78be28",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9d06e4bb-ab80-423f-ac14-fa6c88604bac"
        },
        "item": {
          "id": "386b2ffa-12a0-4653-87da-916cd7815d62",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "143b50d9-020f-4c25-a85b-51ada974009b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d3d356-b46b-484a-82b4-e4d058604ec0",
        "cursor": {
          "ref": "5bc76dea-ed3b-4e67-8c0e-d462ee3cf1e5",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1413a79c-c2d9-459b-8638-cd5881f639b6"
        },
        "item": {
          "id": "97d3d356-b46b-484a-82b4-e4d058604ec0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "42927b16-ef9c-4b4d-87c8-328a27d7abd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10fbb00-fa57-4b73-a967-cbbdc69a7be9",
        "cursor": {
          "ref": "b3a6d658-aacf-44c8-ad85-18b92613871d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db2c697e-20a6-424b-9fc8-bb2a22705a0b"
        },
        "item": {
          "id": "c10fbb00-fa57-4b73-a967-cbbdc69a7be9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "88197bb8-2b50-498a-915a-58b59d4221ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b5605e-165b-42d3-8a10-26da655ac9aa",
        "cursor": {
          "ref": "1147f608-6b3e-4faa-923f-98d8c70cb26b",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "35f4ed28-31db-43d9-8385-c6fdfa940122"
        },
        "item": {
          "id": "35b5605e-165b-42d3-8a10-26da655ac9aa",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4a0ed5f8-b32e-4950-8bfc-5feaff5d7b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1821ba-3b1c-4642-8848-1761d7e21870",
        "cursor": {
          "ref": "a9dccc87-37c9-4c99-9b53-f01b2168a3a1",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d5eaef1-0f3f-4e1a-a3a3-41e57020bad1"
        },
        "item": {
          "id": "4a1821ba-3b1c-4642-8848-1761d7e21870",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "bfb65a69-ce54-4476-b021-4c04eb1def26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0eecf2-e0e6-4ca2-aca8-a9617aba5098",
        "cursor": {
          "ref": "551e86bb-e253-45cb-a932-5971b069f551",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "234c7b7f-4997-4c70-9527-158c57258697"
        },
        "item": {
          "id": "3b0eecf2-e0e6-4ca2-aca8-a9617aba5098",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7aff3f88-aae7-4634-8c4f-74e73669dc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7fb498-080a-46fc-8ce9-e2dc556d8348",
        "cursor": {
          "ref": "32414e6b-7cc0-4f99-b06b-d4a5aec92df7",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2282aac-b80a-4d9a-a485-55bc232426c5"
        },
        "item": {
          "id": "8b7fb498-080a-46fc-8ce9-e2dc556d8348",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "038e0bac-1e52-4a10-b3ac-929a48af6725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06b9e4d2-8630-4239-a1d0-55d4506b5e6e",
        "cursor": {
          "ref": "c92e95dd-2631-4dc9-a9de-eb0dbd6b187b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d4ab39cd-ea60-40ab-a17e-c613ef9c4434"
        },
        "item": {
          "id": "06b9e4d2-8630-4239-a1d0-55d4506b5e6e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "86ad5533-be1d-481f-867e-2e6941528698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84622bb-bb15-4416-bfca-1205edbd683b",
        "cursor": {
          "ref": "42ac4ce2-385c-4103-ad25-85723865e996",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "2e335c85-85e3-4e03-9549-80c49e3c0e64"
        },
        "item": {
          "id": "f84622bb-bb15-4416-bfca-1205edbd683b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "65472746-abed-4b4b-b466-5d7945f532ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7c27af-49f7-4e77-8024-b7ebc7075b8e",
        "cursor": {
          "ref": "37f014fc-245a-4c3c-bb57-01d28231a1fb",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5b7b4b6e-ac09-4e2f-8c86-7c3478086302"
        },
        "item": {
          "id": "5b7c27af-49f7-4e77-8024-b7ebc7075b8e",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "883f701b-1339-48d4-848e-5b420da51f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b77e3-9bf7-4c70-b8e4-d8ed4947d2c7",
        "cursor": {
          "ref": "3b3f18b4-9a20-4180-af71-74e6736e6bb8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "56b39cbe-08fd-4a54-9358-4ac99b040a74"
        },
        "item": {
          "id": "a60b77e3-9bf7-4c70-b8e4-d8ed4947d2c7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6b1dc391-4555-4251-92ec-264a7a6b02d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2e8296-7003-471b-a968-c44c6c36fe18",
        "cursor": {
          "ref": "f04662cb-2f4a-4888-ac26-a00cbef6b3e8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ba79679-f94d-41d2-bd26-70a936e2e1f3"
        },
        "item": {
          "id": "7e2e8296-7003-471b-a968-c44c6c36fe18",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a8534c6e-fbbf-454e-a3ac-e33bc418fdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55de63d9-6e79-4806-b01c-99ab0e0f3246",
        "cursor": {
          "ref": "aff0b5ee-d177-4b9a-828a-a3b1a2c8aca2",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "71444ce0-6c16-49e2-a0ca-7a27129c8814"
        },
        "item": {
          "id": "55de63d9-6e79-4806-b01c-99ab0e0f3246",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3ae85aaa-9efb-412f-afd5-4c3a6c8fb620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c779199f-4e9c-4189-9436-d6a550132a47",
        "cursor": {
          "ref": "3e0926bb-fef7-41f7-8d23-c6501e52baae",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1cdd0ef2-eb4b-46db-98ad-e03a6a0f6308"
        },
        "item": {
          "id": "c779199f-4e9c-4189-9436-d6a550132a47",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4d58cca3-4a2e-4dc4-b529-790b8bdc050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13677992-6276-4ca1-9beb-885ccd6c57db",
        "cursor": {
          "ref": "cbc6645c-289b-4296-ab06-fe3b31a4acd2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8c0f8c9c-895e-4722-bc79-f53bd25f39dc"
        },
        "item": {
          "id": "13677992-6276-4ca1-9beb-885ccd6c57db",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f3f3a257-c6a1-40e1-b51a-17e8f92410d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd704136-fa17-4060-abf4-2803bf704b1f",
        "cursor": {
          "ref": "b8cbab78-adee-4272-a770-68632d08c6e4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8a9b5f97-7eb8-4b6a-a3e3-5216b38d28de"
        },
        "item": {
          "id": "bd704136-fa17-4060-abf4-2803bf704b1f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "03d3d8de-6ed7-4270-bc22-0b5d418efa23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fe186e-05c5-40d0-bddc-234c996f9c65",
        "cursor": {
          "ref": "d8d31178-4cb4-4240-9824-ed22843f153a",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e532e20d-f310-4149-8f14-eae775d08c53"
        },
        "item": {
          "id": "93fe186e-05c5-40d0-bddc-234c996f9c65",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9a5d7948-028b-40a5-9423-b1ee4917cfe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc008f5f-cc8d-413c-8610-b2d2512585cb",
        "cursor": {
          "ref": "b8011111-91a1-46ca-ac7b-16b08d22ebc3",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa8715e4-3e79-447d-b1a3-7a21b07fe7f3"
        },
        "item": {
          "id": "bc008f5f-cc8d-413c-8610-b2d2512585cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b69ad8f1-b601-4e4b-bfe3-9b5581aabb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f36f7a0-0451-48f6-a68a-ea1008f9d70e",
        "cursor": {
          "ref": "38eb668d-003e-4ac3-a841-dfb595a8b871",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e642dc28-a234-4233-8fd8-c1fd55d8fe97"
        },
        "item": {
          "id": "5f36f7a0-0451-48f6-a68a-ea1008f9d70e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "bd629c25-af10-4ed8-8575-35fd75ce089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b08ab2-a787-4d1f-a55a-e53cf89497ac",
        "cursor": {
          "ref": "2643e52e-d342-4fbe-8d99-237fbe955465",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8c416c53-9e78-40dd-8355-562f65a40113"
        },
        "item": {
          "id": "c4b08ab2-a787-4d1f-a55a-e53cf89497ac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "43f0444e-dc57-4850-bae2-78ae39083665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f7799-8e92-4d56-ac1c-a7b0d359d9f2",
        "cursor": {
          "ref": "40836b0b-b97b-472d-b828-483d7973ffb1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dd9afc8e-b16a-4b16-9d09-ae04f65d0f7f"
        },
        "item": {
          "id": "650f7799-8e92-4d56-ac1c-a7b0d359d9f2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1f153129-ab44-486f-b40e-ecbcbc66f464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85841ff-f65b-49f5-925d-ebae286e913f",
        "cursor": {
          "ref": "37da767b-91ed-41cf-884a-168bca935545",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a2d1a57e-b1be-44fe-ae06-9872c42728c6"
        },
        "item": {
          "id": "f85841ff-f65b-49f5-925d-ebae286e913f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9bce0e91-fe13-4f22-81fe-2b1781fb236b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2ed744-0a62-4e71-854c-ff5dddba4fcf",
        "cursor": {
          "ref": "08ec7ee3-5ea6-4018-b954-ba0678d754f1",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "9459a9d6-164e-4db0-b4b4-c5dc359f6e40"
        },
        "item": {
          "id": "4a2ed744-0a62-4e71-854c-ff5dddba4fcf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17638b00-9f50-4e93-914b-c6c0e003e594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cee369-2c61-442f-8d7d-be69f4152583",
        "cursor": {
          "ref": "6756ae98-f304-4c11-bc5d-e65bc7ddef23",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4fd5c138-9c98-460b-9dc9-ef0ae9c5b1cd"
        },
        "item": {
          "id": "06cee369-2c61-442f-8d7d-be69f4152583",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b09b0915-6528-4fbd-93c7-db5a6931cc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891e0dd6-3840-4c3c-bb32-c834887b12c1",
        "cursor": {
          "ref": "936018f7-441b-405f-aabb-e72bb1006865",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3c91836e-daa0-4efb-a02d-72a2450c40e0"
        },
        "item": {
          "id": "891e0dd6-3840-4c3c-bb32-c834887b12c1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d16fa02b-162e-4aa0-9657-4186d9074a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d707911-1f50-4c76-81ed-189e1d37adae",
        "cursor": {
          "ref": "90e1ba14-102e-4f7e-9e7e-1229c508b3ac",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "100d9fac-630c-4a5b-b900-7d8477a92c60"
        },
        "item": {
          "id": "1d707911-1f50-4c76-81ed-189e1d37adae",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "00da8cda-b367-4968-b702-8d0dfdc8d75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cef4cad-9b43-4eca-9765-efb5a598a252",
        "cursor": {
          "ref": "909fae44-a6fc-4b6f-8524-4e4dbca4aea5",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c83bd7d4-6f67-4987-9e95-9a88960cbf9d"
        },
        "item": {
          "id": "9cef4cad-9b43-4eca-9765-efb5a598a252",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ca3da0b5-c59c-4a19-8285-934e9ebb29e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a630c8b3-f9eb-4636-809d-1ad33a5a3473",
        "cursor": {
          "ref": "ca05b0c4-f97d-4fe2-8550-7c69c428beab",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2a7fe05-ada9-48ad-93c8-528a627a8117"
        },
        "item": {
          "id": "a630c8b3-f9eb-4636-809d-1ad33a5a3473",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c6cef164-f622-4927-a139-d96cd011892c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e1cc37-3eaa-4a20-9743-02864202f7ba",
        "cursor": {
          "ref": "dd1cc032-d885-4757-92ef-fe25f4ab8bbc",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "09cb5dbe-d050-42f7-9e4d-e882e292096f"
        },
        "item": {
          "id": "16e1cc37-3eaa-4a20-9743-02864202f7ba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "da1e27f9-cbad-49b9-9556-53cc80f1d4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455d98fd-48cf-4856-ba36-d13d9c834d50",
        "cursor": {
          "ref": "1cea6454-ff60-4c4d-93fb-6b82e103fcc1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "70059743-9956-48bf-bd9d-4d901953eb34"
        },
        "item": {
          "id": "455d98fd-48cf-4856-ba36-d13d9c834d50",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b47ed71d-772f-47d1-8b34-87ff5e631b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d26de5-b0f3-487f-9aef-dceb2fa7ae0d",
        "cursor": {
          "ref": "d8823ca1-da7a-4014-8684-ad28f5bc96d4",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "59920baf-fe95-4639-8219-38d838f99687"
        },
        "item": {
          "id": "b1d26de5-b0f3-487f-9aef-dceb2fa7ae0d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2fa1cb3c-2922-48c3-80c7-1e7291ebad5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58fd4e4-27f8-4b07-922c-6d1608d2b05b",
        "cursor": {
          "ref": "b83f9b00-1e72-4120-875f-46699ca7e965",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1207f688-326a-466b-a4a5-73d2fb5a4c16"
        },
        "item": {
          "id": "d58fd4e4-27f8-4b07-922c-6d1608d2b05b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a57fc5c3-566b-49fe-b825-ab04976d7e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73195457-7fc3-4650-b332-c12faf530b41",
        "cursor": {
          "ref": "8bff658e-e389-4151-b338-b71a7c1d1c0c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f55cdf50-f7c4-448e-9628-c9ca8058fbec"
        },
        "item": {
          "id": "73195457-7fc3-4650-b332-c12faf530b41",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "137d9683-42e1-4bc1-975f-8847bdf5bb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220664a8-c4b9-4496-9868-e4a67d894aa3",
        "cursor": {
          "ref": "b3c8beed-d3ff-4ac4-8bd3-064d8420c206",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "56388feb-67ee-4405-804d-284a9f64626d"
        },
        "item": {
          "id": "220664a8-c4b9-4496-9868-e4a67d894aa3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d965fc94-a35a-4319-a329-81f10cc0c8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f55ca3f-1122-40be-9d5b-8755c355540e",
        "cursor": {
          "ref": "c6a01bcb-4862-4403-a85c-60126a64e0b9",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ac6c865f-3ce6-42b3-8e12-f73f46bc9188"
        },
        "item": {
          "id": "7f55ca3f-1122-40be-9d5b-8755c355540e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "72eb553e-c0de-4797-9c1c-50a8d475a079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cea69ad-22da-4cac-a968-d9ec3addd126",
        "cursor": {
          "ref": "331edb8b-d2a0-4922-9edd-12575fc48e34",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "418b33d1-ab1c-42c1-bb58-1ac5b7e31571"
        },
        "item": {
          "id": "0cea69ad-22da-4cac-a968-d9ec3addd126",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "9888d3e0-ecc9-43c8-84f1-e755c4465413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e71588-0059-426b-b109-d62f4bd1febe",
        "cursor": {
          "ref": "f73f6c96-d9bf-4948-a024-991cc95ec417",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d9acf3dc-8dd7-47df-ae01-d63500e2784b"
        },
        "item": {
          "id": "61e71588-0059-426b-b109-d62f4bd1febe",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cba7fb9a-2b51-4337-9fc0-d8809d26c5fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a2d147-81ae-4f28-9523-c9a141e1fea0",
        "cursor": {
          "ref": "54120663-e59e-4eda-8bcf-c6f1d70026c8",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "741252d2-1ed2-47de-a517-dc577e8987c3"
        },
        "item": {
          "id": "83a2d147-81ae-4f28-9523-c9a141e1fea0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f3483d0f-38a4-4073-9281-f0c84af97847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2e243e-6c94-42cc-a9c7-d6b874901943",
        "cursor": {
          "ref": "ad9b7c45-f543-4e8c-94a8-1b57b58886f6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5b21aeb2-1324-4f24-b17f-eacd60a8211d"
        },
        "item": {
          "id": "6e2e243e-6c94-42cc-a9c7-d6b874901943",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "73fcada1-5e74-4c8a-a06f-5f3ae6d1d8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45321c94-1b2b-43d3-9148-120c5eae9888",
        "cursor": {
          "ref": "d595daf7-b5a5-4858-917f-c7053bed03af",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "19acf84c-38e2-4a4e-8c1c-c490372cfbdd"
        },
        "item": {
          "id": "45321c94-1b2b-43d3-9148-120c5eae9888",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d27c24f4-bf83-4189-8049-03f97a9587cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066fd6cd-9037-4aa2-af32-1e0fc73b0a9b",
        "cursor": {
          "ref": "5136a7bf-7603-4d9b-878e-f44b9f0bc7fb",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb9d666e-3058-42a0-a328-10787d0d25ca"
        },
        "item": {
          "id": "066fd6cd-9037-4aa2-af32-1e0fc73b0a9b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "af3b1119-5fa4-44c6-a53a-c1b6417dce4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b34f7b-1671-42c6-aa8d-a4a9211f9a99",
        "cursor": {
          "ref": "8ccce6c1-2996-45f5-b435-8276cfec52d1",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0b5e580e-46e7-43af-89ab-d6fdc5ce0b69"
        },
        "item": {
          "id": "48b34f7b-1671-42c6-aa8d-a4a9211f9a99",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7dbceebe-377e-4348-8865-7112fb29c6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 110,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9bbe15-f095-45fc-a1af-642f97c47bb2",
        "cursor": {
          "ref": "6259373e-7916-4525-9cce-c944de56ddd5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "033ac709-91c7-426a-aa8b-e7fd1ed5bc68"
        },
        "item": {
          "id": "bc9bbe15-f095-45fc-a1af-642f97c47bb2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "39d05f78-66c6-4ecc-bf27-1f915dd3c91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d35521-e447-4623-8c2d-c31815f0d6b0",
        "cursor": {
          "ref": "8c71c0b3-5fee-44c3-9c43-abd63cc68b62",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be387aea-5ce0-4c7f-af37-997895d260ab"
        },
        "item": {
          "id": "c5d35521-e447-4623-8c2d-c31815f0d6b0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "72bdd4eb-c95d-402a-b5ae-853caf021dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6be2d8-ae94-4fd6-a3a0-d43c821d7a29",
        "cursor": {
          "ref": "c13b5a6a-7731-4da7-b2bd-cba51c381b4f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "16cfbf35-1642-4e2d-bd54-1971974d50f1"
        },
        "item": {
          "id": "0d6be2d8-ae94-4fd6-a3a0-d43c821d7a29",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4169840d-ec9a-41f5-8773-5dbf43442ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfafa55-0521-4272-9006-900ea0d1edb9",
        "cursor": {
          "ref": "4cfe53b6-a316-4c1c-95f9-320dc5402a68",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40478194-f1f4-4d68-917f-cfda81222d2e"
        },
        "item": {
          "id": "0dfafa55-0521-4272-9006-900ea0d1edb9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "56e15b9c-f64a-4055-a469-7b1b6cdf3b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e7c832-f0a4-4175-90d8-c00254530582",
        "cursor": {
          "ref": "2dccbbcd-8b78-403d-a5e9-177c5e3928ce",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "deb8be26-9d22-41f7-b581-5bab02e82687"
        },
        "item": {
          "id": "b7e7c832-f0a4-4175-90d8-c00254530582",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "cd7a0a26-6605-4fb5-b24f-b5eede76608a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeb8d96-d3f3-43f8-bfd1-a7eb504c6897",
        "cursor": {
          "ref": "dc0af280-a9b7-43ee-bf69-924ce0cb512a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8556f548-31fe-47db-895c-003ccd48e22d"
        },
        "item": {
          "id": "bdeb8d96-d3f3-43f8-bfd1-a7eb504c6897",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0befd2d4-e050-4887-86e5-6782d304a5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d0034-857f-402b-bf07-a78870daeb76",
        "cursor": {
          "ref": "c0e178d8-7e59-4e25-979e-733a6b8f4b1b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "234e3105-a362-4f64-a0ed-95568a1fbf66"
        },
        "item": {
          "id": "ff1d0034-857f-402b-bf07-a78870daeb76",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "32987706-6b9a-46d4-9ae4-cf5c270d0d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3313a34-5bd6-41f9-9d79-3599621e0598",
        "cursor": {
          "ref": "21a57c2e-9bef-48c7-bbef-74c9bcd98d89",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7a54d4a3-4a8f-46c8-b59b-81942fb816e8"
        },
        "item": {
          "id": "c3313a34-5bd6-41f9-9d79-3599621e0598",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "695a7946-da31-4600-82fb-ca1f9551e5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c018b3-5960-49e3-a4d8-b4b9df97949b",
        "cursor": {
          "ref": "0f289cc1-7b34-4f3b-9599-09cc325f1dae",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b8e51136-5348-4fee-b03d-b047ab112e25"
        },
        "item": {
          "id": "e0c018b3-5960-49e3-a4d8-b4b9df97949b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "be43203c-951e-4ab3-88d8-d872734a0cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555fd9c-807d-421b-969c-ffe1d895555f",
        "cursor": {
          "ref": "b064009b-cfda-42d6-b80f-93a066cb8827",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bd48b4a9-d18c-4c8a-9d61-447b01a346cb"
        },
        "item": {
          "id": "b555fd9c-807d-421b-969c-ffe1d895555f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ec16f3ac-b1ce-48f5-b744-12078810aace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb02a62-881f-4d09-991f-ec2625477f4e",
        "cursor": {
          "ref": "9e15d23e-a09d-45a5-964e-f499ad878794",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e1066a6f-d8fb-4d24-805c-6f8fdb3fd12b"
        },
        "item": {
          "id": "adb02a62-881f-4d09-991f-ec2625477f4e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "429c2863-d343-4057-ab3f-e29baef3b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b70bf74-fc7d-4f5b-995e-5a381a5ccfd8",
        "cursor": {
          "ref": "3a0704cb-0596-440b-956c-ef697dcb9d10",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6535224e-043e-406d-85ec-9d7ee8e5e611"
        },
        "item": {
          "id": "1b70bf74-fc7d-4f5b-995e-5a381a5ccfd8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ced8b0bd-aa8d-4f41-a540-1b4deff4fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceebc374-06ad-419c-b6c3-5fa258efcfc8",
        "cursor": {
          "ref": "e23fc7d8-be33-4014-9660-7bc232c19c0b",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b5bed76-a001-4eea-91f5-7caf941fd99f"
        },
        "item": {
          "id": "ceebc374-06ad-419c-b6c3-5fa258efcfc8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "60954773-b1c7-4b4f-87f3-83aec9c317eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da33a86-ca5c-4ac7-ab69-c298fab7a5ed",
        "cursor": {
          "ref": "63d4af74-5e7a-48a2-bae0-914d7670a83e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4e2da95a-278e-4866-bdb9-fdddc56d9daf"
        },
        "item": {
          "id": "5da33a86-ca5c-4ac7-ab69-c298fab7a5ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b3509062-dd37-4b62-a329-b1b63e393e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f385599-b204-44d0-b2a3-3df660b8aad1",
        "cursor": {
          "ref": "a276f9c3-7098-441d-b4f0-afab10fd8c8f",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "024e2ad5-6c1f-478c-831c-f4986414b87a"
        },
        "item": {
          "id": "6f385599-b204-44d0-b2a3-3df660b8aad1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ac9cfabe-cb3c-4ce3-9f47-4be5a81d6e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2185903e-e23a-457f-957c-be6b97772906",
        "cursor": {
          "ref": "c44e948f-b0dc-4caf-84ea-2e2d652c3772",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0f9a507f-0ad5-425c-b2c1-46d736de89fc"
        },
        "item": {
          "id": "2185903e-e23a-457f-957c-be6b97772906",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ae4fe7f1-8c30-4224-9e8c-ab6f73cf2f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7100c7-84ed-4b98-943f-34ed2301c327",
        "cursor": {
          "ref": "00d0d7be-b30d-4156-b05f-661f87b51d80",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "de8ce3ea-8d41-40c1-9d1c-f8739a5231ee"
        },
        "item": {
          "id": "5c7100c7-84ed-4b98-943f-34ed2301c327",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dcecb265-d875-45e3-894f-fd5b10e9c3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 187,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a575c4-38f7-450a-a43e-e2628aacbffd",
        "cursor": {
          "ref": "1077247c-0b4f-4273-8dad-e77c07004ad2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0c647446-b2f6-476d-b471-ac640d2b148b"
        },
        "item": {
          "id": "e8a575c4-38f7-450a-a43e-e2628aacbffd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "30945b23-1ccd-44bf-9d8f-9ccf9a59ffa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb22a32-50af-4ac6-9cb9-9752fcd31818",
        "cursor": {
          "ref": "8a67b337-dcf6-42f1-ba98-fa922c7b4d92",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "11ca3e5a-ba1f-44f3-ae3d-1e260a7ae4fc"
        },
        "item": {
          "id": "2cb22a32-50af-4ac6-9cb9-9752fcd31818",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1dcdf806-5016-4e62-8e14-6b93433ca186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39859f49-7a8b-45c2-8cf1-c6571455cd18",
        "cursor": {
          "ref": "119232c3-9177-421a-845f-6099ebff7955",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2ad13468-88b1-4864-ad49-efac4fb6ef91"
        },
        "item": {
          "id": "39859f49-7a8b-45c2-8cf1-c6571455cd18",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4df33c49-d806-4b29-8a26-ed97a350beea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a709c-f1a7-47fc-9236-39bc1ecc73ee",
        "cursor": {
          "ref": "e63bcd6b-e22e-478f-b9ef-0b9b111ccbbc",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "bbf21c69-58c6-49e2-9fe5-20f8944f4c96"
        },
        "item": {
          "id": "746a709c-f1a7-47fc-9236-39bc1ecc73ee",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "39b090fb-c30f-494c-9452-0af4082aefa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762ed572-83cd-416b-ab9d-5212679c2682",
        "cursor": {
          "ref": "6fe6d867-a635-43ee-b09f-940e3a143a25",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d3968349-d0e6-4b16-a551-ba46424f0928"
        },
        "item": {
          "id": "762ed572-83cd-416b-ab9d-5212679c2682",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "21356d11-ffd9-40cf-80a2-aaa76b4eb518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c85d147-2cf9-4a5a-b84a-74107a4ad5e8",
        "cursor": {
          "ref": "e1d308fb-2a80-4c82-a63d-41bc4d2ca346",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "49ff5a8a-ec7e-4b4f-b833-f107913cf649"
        },
        "item": {
          "id": "1c85d147-2cf9-4a5a-b84a-74107a4ad5e8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b9f96823-9c2c-4491-b596-cd21803243ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b99a3bc-c759-4caa-b096-3e3f63fcdb88",
        "cursor": {
          "ref": "eddb1daf-0044-4dcc-b028-6ca427fe9344",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "068b38a9-0cb1-4602-a631-40c8cfe82913"
        },
        "item": {
          "id": "7b99a3bc-c759-4caa-b096-3e3f63fcdb88",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a2d7a18e-c992-4744-b825-eff0f60956c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264215ec-2216-4907-ac86-cab2e00ebd45",
        "cursor": {
          "ref": "cf3d564e-d136-46d2-881a-58bb95b4486b",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d08dbfdc-d845-436f-9a05-b5ad8f9cb44c"
        },
        "item": {
          "id": "264215ec-2216-4907-ac86-cab2e00ebd45",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b9da99e7-027d-4293-a374-bdfe907385ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52df93ae-7c87-47af-8dc0-6a61d4e8e643",
        "cursor": {
          "ref": "ae9d1fe7-b836-435f-9a31-be8b363824c7",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "29b6ff1e-8df4-4f25-b5b4-e6c5cf4375bf"
        },
        "item": {
          "id": "52df93ae-7c87-47af-8dc0-6a61d4e8e643",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "dd5f3548-70b3-4298-823f-925830b9f899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b0620a-1a89-4124-b5d9-325f527e981f",
        "cursor": {
          "ref": "5fd80735-a9d8-402f-80e9-8d0787582043",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "56bf2340-7ffd-41bf-b491-6cf796a2379e"
        },
        "item": {
          "id": "65b0620a-1a89-4124-b5d9-325f527e981f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7b5f1c30-1cd4-4796-9d63-c4a297c085bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd777ff-2fd3-435c-aa6e-cdb073db55d1",
        "cursor": {
          "ref": "44137f4a-d0ba-4e0b-8136-5c7857860978",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "091b7bc0-6ef1-402e-9e65-c293d029b0a3"
        },
        "item": {
          "id": "0cd777ff-2fd3-435c-aa6e-cdb073db55d1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "901b962a-979c-4a22-a9ef-5e9b737bc13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc09183-5872-47aa-a3d9-a3235ae4aeb2",
        "cursor": {
          "ref": "f44624ff-1b4e-421c-a695-aa5366ec7aa1",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0a87dd7-f81c-4ade-9a30-f6805143696c"
        },
        "item": {
          "id": "2bc09183-5872-47aa-a3d9-a3235ae4aeb2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ee69b668-2479-4e3c-8d40-c5421f446a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aafd645-8a25-4ef9-afb5-f966190160e9",
        "cursor": {
          "ref": "c73e93e6-8895-4f40-a457-28dc162f87b0",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ef40b668-740c-4539-9c65-5dae713efbe2"
        },
        "item": {
          "id": "8aafd645-8a25-4ef9-afb5-f966190160e9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7e43f471-9340-45f4-8e44-f3b3953ed708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4884b239-7b12-4b2d-a965-d46cdad95127",
        "cursor": {
          "ref": "828c35e8-4b18-4a33-a73d-cb925f09c4c9",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "8b635728-ec48-48cd-a88d-c1888fd39cee"
        },
        "item": {
          "id": "4884b239-7b12-4b2d-a965-d46cdad95127",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b2e4595d-6d04-4c24-9f7e-55a410fe3fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba88bdcb-c2d5-4863-8405-b1e4d3befe3d",
        "cursor": {
          "ref": "94d1cae5-fce2-419b-b3df-0aff5193adcb",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4d813ec5-d96e-41c5-b789-f496c4835ff4"
        },
        "item": {
          "id": "ba88bdcb-c2d5-4863-8405-b1e4d3befe3d",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8efe774d-4665-40be-8c9c-591ee9ff21da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588f5235-6edb-42a4-b1c7-df85a6966a89",
        "cursor": {
          "ref": "082d6c51-50c0-45f0-af53-b5934299a259",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cf09ed2b-ec7a-46e2-a483-31f7b7423be2"
        },
        "item": {
          "id": "588f5235-6edb-42a4-b1c7-df85a6966a89",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ebbc4ea5-7147-40d4-ba13-63a852168edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b4ee24-f65a-4bbc-85ad-00adbf247203",
        "cursor": {
          "ref": "d87df3a4-8e15-4b4e-b676-23e47a605c41",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9c287c0a-9018-4ea4-8755-b4106fef2d08"
        },
        "item": {
          "id": "32b4ee24-f65a-4bbc-85ad-00adbf247203",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c3d83bc8-4cc6-46d0-8c00-d3bb94d7058e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fa06ac-f061-4447-90b7-1a667e17ec18",
        "cursor": {
          "ref": "48f35671-f196-4883-847d-be9bf32fb5fb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d6cd9cbf-33c7-4965-81fd-705e2920c2d4"
        },
        "item": {
          "id": "81fa06ac-f061-4447-90b7-1a667e17ec18",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bea9ab44-7999-451c-98e4-51853ff1fd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d7f850-2ebb-4b22-ba7a-8f2a6105edf6",
        "cursor": {
          "ref": "6ddbdeb8-4ba9-412c-bb4f-7cf62f3aae0c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "454b0d18-5729-4a99-b342-89e5e3918389"
        },
        "item": {
          "id": "e6d7f850-2ebb-4b22-ba7a-8f2a6105edf6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4b7d3d21-8d63-48fe-b745-2dd19dccb97d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aafc278-97dd-47ef-ad1f-c0f95bdc8517",
        "cursor": {
          "ref": "415e71f3-7789-4429-8948-33e02140f905",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c2a1867b-afef-4c8e-b7cb-66cd8707ab8c"
        },
        "item": {
          "id": "4aafc278-97dd-47ef-ad1f-c0f95bdc8517",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "402d27ea-9f73-459b-b35b-fd6a8065ecfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b6011b-d3f0-4535-91e2-3cd5e929c5bf",
        "cursor": {
          "ref": "6f45fb92-6912-4624-9b60-d9d8338ca89a",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ea9f42b1-a73a-426a-a4ac-034b790027fb"
        },
        "item": {
          "id": "35b6011b-d3f0-4535-91e2-3cd5e929c5bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5e674af1-ce1d-4235-879c-d7ba60a7a990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89890cd-86b0-4a3a-8a48-4b33c99d1289",
        "cursor": {
          "ref": "15cf4bbd-5dfb-4bac-9141-9e55f5abda9a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "daa1341f-fe90-4d1b-82ff-3e556b2d1404"
        },
        "item": {
          "id": "c89890cd-86b0-4a3a-8a48-4b33c99d1289",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ceb272ca-711a-4eaf-8ca4-d61aa448fb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a64ad1-6825-408f-b666-1d8ea0d1dc40",
        "cursor": {
          "ref": "3038cfce-e9be-4b25-9e98-da41abd50ad5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "701f2012-c417-4076-91e1-b32ea92b72e5"
        },
        "item": {
          "id": "f4a64ad1-6825-408f-b666-1d8ea0d1dc40",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9f1e523f-3433-49e5-97d7-92239ef20298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ecdac1-73c5-41df-af9f-20374cabc2b2",
        "cursor": {
          "ref": "13099a8d-de09-4501-a651-cf38fb2b44ea",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cf4f8f22-8584-4940-9d0a-7c7284316703"
        },
        "item": {
          "id": "40ecdac1-73c5-41df-af9f-20374cabc2b2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "191c9c06-2153-4ff0-b014-50970b9f10d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be96da1d-e353-4c3e-b6ec-16cfd81f6e1f",
        "cursor": {
          "ref": "3f98f143-fe83-41b8-8c27-126ae4f30233",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "34c58544-7c0c-4309-ac7b-5783a243e6b8"
        },
        "item": {
          "id": "be96da1d-e353-4c3e-b6ec-16cfd81f6e1f",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "73e27f06-7884-48fb-9e0c-180fc966707e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0642a3b3-d22d-4673-b28c-e484740b1a72",
        "cursor": {
          "ref": "5ca1a460-c0cc-4829-b5c3-6c3eefd7a700",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "94152d69-60b9-493a-866a-97b3d44d7ed1"
        },
        "item": {
          "id": "0642a3b3-d22d-4673-b28c-e484740b1a72",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9102a2b5-2b6d-4d00-b0aa-7543b071756b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ec7032-0043-4705-a754-3f09d52f957a",
        "cursor": {
          "ref": "de3b641c-99b2-47db-8d45-852ab8f8f1c9",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c004fff6-4320-42d3-afac-8b4fd2c251ba"
        },
        "item": {
          "id": "f0ec7032-0043-4705-a754-3f09d52f957a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b141a70e-ef18-4630-884f-717ee2b4a3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8121540-f251-421f-b6a9-ab4b86cb992d",
        "cursor": {
          "ref": "8b86d48f-934d-405b-ac24-ef1c4f3439c5",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "acd074ce-28f6-4f3e-8f83-4ce3fdb6642d"
        },
        "item": {
          "id": "f8121540-f251-421f-b6a9-ab4b86cb992d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4ce7233-1657-43d1-a3ab-be6cf9d2f5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d50e41-1039-41e0-94b9-f987c082d231",
        "cursor": {
          "ref": "0ebc3816-57a2-471a-af8a-d94f63a4be53",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "09799213-da41-4673-9e3a-9d3a74d85de3"
        },
        "item": {
          "id": "43d50e41-1039-41e0-94b9-f987c082d231",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5d209c81-560d-44bb-b9d1-9c6335644593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c3edf0-fe81-461f-920e-3e1579da283a",
        "cursor": {
          "ref": "1f094d81-52ce-4a67-9ce5-730babfa3a06",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3493b1be-d31a-4372-b5a8-595a0354f698"
        },
        "item": {
          "id": "06c3edf0-fe81-461f-920e-3e1579da283a",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "31948be7-e154-4016-9690-07c01059d933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c98a9b5-c644-4da0-b440-a112d2ee305e",
        "cursor": {
          "ref": "24208422-b08f-4701-b268-2b46fb30de58",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b2ce3c9e-52d2-4a28-bc41-08c40f3903a9"
        },
        "item": {
          "id": "5c98a9b5-c644-4da0-b440-a112d2ee305e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "acaa544b-3f70-4d76-bfe2-0e0856b65fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0f284e-6d47-4efb-9b3a-fe49776417f4",
        "cursor": {
          "ref": "5787622e-e5d3-41c0-a845-98705764a387",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fe6b3e00-f4df-42f7-8e63-8a02dc9f0dca"
        },
        "item": {
          "id": "6d0f284e-6d47-4efb-9b3a-fe49776417f4",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "37b55cf4-7923-40ae-884b-19322a6ca506",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64f37af-07f1-4ab8-9494-8cab5883b43b",
        "cursor": {
          "ref": "2c0925e1-6d9c-45a0-9bd1-48a967c68bb8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4c1b91ba-5a60-40a6-b9b8-0992a88e6d75"
        },
        "item": {
          "id": "a64f37af-07f1-4ab8-9494-8cab5883b43b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "2dff52b2-e9f2-45fb-b179-ad3c4798137a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0e804526-110f-4e68-85a6-e1d6ccfb4cd0",
        "cursor": {
          "ref": "b3ca6a3e-28b0-4ff7-87c8-27abf9813931",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "53d4ad9c-a38f-47c5-90eb-d793af47b0e2"
        },
        "item": {
          "id": "0e804526-110f-4e68-85a6-e1d6ccfb4cd0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8cd83ceb-3cac-4aca-a544-8f5a217549e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "07bf5b34-e58f-4c40-9864-f32123ec9f46",
        "cursor": {
          "ref": "fd7066a4-0772-4704-b2ec-02e04a9efd2f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "01342fbe-f5da-4b0f-8174-97f85b89c155"
        },
        "item": {
          "id": "07bf5b34-e58f-4c40-9864-f32123ec9f46",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "106ab51b-fffd-480e-be55-69a52ddea96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bea87295-1dba-4956-8784-8c5b3d532970",
        "cursor": {
          "ref": "2c34afe3-e7c9-4c47-89bf-8e53208b1a81",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4cc894fd-8eb2-489c-9605-1aefe12b4499"
        },
        "item": {
          "id": "bea87295-1dba-4956-8784-8c5b3d532970",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c236a4a8-5d9f-4136-8074-643fa4ceee4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ccf3c87a-bfce-4f43-91d1-7391d6aba3bb",
        "cursor": {
          "ref": "ce858c13-40a2-441f-9e5d-6312e23b6ce9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2b434f11-9843-47e2-9581-19a52b069365"
        },
        "item": {
          "id": "ccf3c87a-bfce-4f43-91d1-7391d6aba3bb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4bfd2e39-6493-4860-ad17-fc6b64ded3cb",
          "status": "Created",
          "code": 201,
          "responseTime": 13796,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d7225f-7de7-49b3-a1ee-6035b8fd84a6",
        "cursor": {
          "ref": "3aad3548-1da4-4360-af96-570a7b28766b",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dc2b75e1-fa3f-4440-b4b2-b6fd6201a691"
        },
        "item": {
          "id": "e1d7225f-7de7-49b3-a1ee-6035b8fd84a6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ea54b900-6526-4be8-81bc-2a33a9d31ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "08f5a6b6-339f-40ea-82dd-d546cb4fb6fc",
        "cursor": {
          "ref": "f34f1598-37da-45b5-8ba1-a242fdf18d96",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b4c3adeb-e402-494c-a35b-5eac36fe6bd7"
        },
        "item": {
          "id": "08f5a6b6-339f-40ea-82dd-d546cb4fb6fc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9feba542-6411-4bd8-bece-df15568f65fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "4effb351-5b81-46e8-a0b0-e6cef5b8c9dd",
        "cursor": {
          "ref": "5e66eaf3-76cb-4ba0-b868-1ee4998d1555",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "98401506-349b-44be-b08b-04b5fc6f72fd"
        },
        "item": {
          "id": "4effb351-5b81-46e8-a0b0-e6cef5b8c9dd",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ab5b32ae-90aa-41c7-8a39-8f926e159fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f2558a-aae5-4ed5-b453-97aacaf0db19",
        "cursor": {
          "ref": "917f1073-b800-4546-83cc-392fb7351fcf",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "50cb152b-a6d5-42af-ae41-75c7164b87c1"
        },
        "item": {
          "id": "a7f2558a-aae5-4ed5-b453-97aacaf0db19",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8d458d38-fed7-442b-b66c-0aba2bd5b23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56788d2-461e-44d8-ada1-d28ecc0d168d",
        "cursor": {
          "ref": "834500a0-78be-4b10-9774-657fc1d7901e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d5977a0f-daaf-48ee-a044-32e28b3ce4e0"
        },
        "item": {
          "id": "a56788d2-461e-44d8-ada1-d28ecc0d168d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c7cdb067-e705-4665-af74-2f68420bb287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc204bf-f8e1-4695-80c8-a31766d489a4",
        "cursor": {
          "ref": "928e155d-7d2c-4090-9318-ddc83d77b437",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4bff9561-15e2-4341-8dee-073a39392969"
        },
        "item": {
          "id": "5fc204bf-f8e1-4695-80c8-a31766d489a4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7460ffeb-f4df-4f5a-9e84-ea615e25d259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1e4934-3fc2-4e2f-8ce0-a3d727fbb683",
        "cursor": {
          "ref": "6582ec21-a82c-4d45-bab9-94cf872e0d91",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "55266d97-e2a0-4399-acff-488e2f139145"
        },
        "item": {
          "id": "dc1e4934-3fc2-4e2f-8ce0-a3d727fbb683",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0534c09b-1f81-4431-ac2f-e057dee59f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a9bbb5-9019-48fb-9bb0-4c74eacfc40f",
        "cursor": {
          "ref": "7d3e8a87-8f8a-44f9-ac1b-5b7356a3537c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d5cc3666-c471-49b8-ba81-24168f7a441c"
        },
        "item": {
          "id": "f6a9bbb5-9019-48fb-9bb0-4c74eacfc40f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec64aa64-8225-4d34-9f46-44f280ab596a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b84fe1c-cdc4-434b-91c0-22143182981c",
        "cursor": {
          "ref": "145716b5-66e4-4fd3-bf3e-e8328af08dc2",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1a18e709-adfc-4c5f-9bc9-bdfe469f8be6"
        },
        "item": {
          "id": "0b84fe1c-cdc4-434b-91c0-22143182981c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "736b661b-4301-431a-aadf-febde5f0d6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "883038ce-0832-43ff-9bf2-fd240485d5c6",
        "cursor": {
          "ref": "586d4ace-da5d-42cf-b563-c7f43179559b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0969f87e-9111-4827-97ad-60aa0ab6c050"
        },
        "item": {
          "id": "883038ce-0832-43ff-9bf2-fd240485d5c6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d3ab5cc2-8722-42f5-9e19-5d6eb1bd90f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0efb7-1f2c-4774-80cf-8f6e36fc6b1a",
        "cursor": {
          "ref": "f7806240-bc2e-4c13-9556-256a1a4e6638",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af280483-5f81-43b0-994d-7141ae24d8d6"
        },
        "item": {
          "id": "d1a0efb7-1f2c-4774-80cf-8f6e36fc6b1a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d1480c1-fb32-4742-a0e8-71d3b3307b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d463e01c-31fc-4e6d-8f50-89d89dabaa97",
        "cursor": {
          "ref": "b72d61f6-d2a0-4f48-8c07-7465f9a01733",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c74b789-7f43-42e3-ac5d-0ad5db790da4"
        },
        "item": {
          "id": "d463e01c-31fc-4e6d-8f50-89d89dabaa97",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "be424726-594e-46fc-848f-a0e5c81c3942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0271b78e-54d8-4786-a4cf-824de848d778",
        "cursor": {
          "ref": "6c2fb4fb-bcb4-468d-9a6b-64176551be12",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e4206681-df03-4446-87af-a78e74c6868e"
        },
        "item": {
          "id": "0271b78e-54d8-4786-a4cf-824de848d778",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68fb1363-ef87-4a75-995d-8d629469e78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd768ef-b537-44f4-accc-a54a1e14ba59",
        "cursor": {
          "ref": "229544b0-3757-4724-bb7d-4ca4f7fb7c09",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f42fd842-c6a0-4d69-97b8-8df3da0d677e"
        },
        "item": {
          "id": "bfd768ef-b537-44f4-accc-a54a1e14ba59",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8b679390-1567-49db-b7d7-5287f873f728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd46bbf-8843-4025-ae15-06dbb4960d0b",
        "cursor": {
          "ref": "071d9b07-b519-4348-a0ad-01b23fab0732",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1e5c50bc-69a0-4fc9-8162-f2ae2d6db514"
        },
        "item": {
          "id": "1bd46bbf-8843-4025-ae15-06dbb4960d0b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8fdf6c2e-8f39-4964-bf0e-4f2c99a9fdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfecf5a1-4294-4e48-a146-8717cc4f996a",
        "cursor": {
          "ref": "ede242d7-9897-4fc3-8ef8-9ef35a047565",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "507e3e9d-0bf6-493a-80cc-ced666116ebe"
        },
        "item": {
          "id": "cfecf5a1-4294-4e48-a146-8717cc4f996a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ad4ebb0b-a1c6-427d-9a69-d6eca8f05f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1676b18-74ce-4025-a0b4-a60fa742361b",
        "cursor": {
          "ref": "334b731b-a979-46c6-bf5f-c23ecdf7f117",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0eef4d44-2a42-4c28-9e3b-59a70200fd9d"
        },
        "item": {
          "id": "b1676b18-74ce-4025-a0b4-a60fa742361b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "57d82009-6744-4d0c-ba6e-b10e32f95a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5acbcd7-5d30-4efa-a609-70ea061fe807",
        "cursor": {
          "ref": "bd30c3ce-b3cb-49f3-aef4-43d1b2307217",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "aedcaab1-8b65-46f7-a763-3ec38ae220f9"
        },
        "item": {
          "id": "a5acbcd7-5d30-4efa-a609-70ea061fe807",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "18201402-d116-44d8-938e-61ec73ac609a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc74337-4db1-4fb6-aaf4-ab23234fc6f9",
        "cursor": {
          "ref": "4280395e-7147-4011-91de-6cb877ed4794",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "95b1ae5c-87a0-4d63-a40d-c862dce07ca7"
        },
        "item": {
          "id": "4fc74337-4db1-4fb6-aaf4-ab23234fc6f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5f63ae7d-838a-4c00-be96-3bcabb317ca5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "224dc9c3-e475-42af-9787-9e4f0b1293ea",
        "cursor": {
          "ref": "9a1b8113-a0de-4d0f-8720-a9a34d7e82e6",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e9fad1de-c8f0-4147-8543-ff653acd7d26"
        },
        "item": {
          "id": "224dc9c3-e475-42af-9787-9e4f0b1293ea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30a5a7d4-8024-4b95-84db-f1a1f826d211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39867bca-a734-4e6d-9085-5d526b6f2d4e",
        "cursor": {
          "ref": "1c46fc96-7f2a-4bf8-b814-42b1dac928b2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "32cfa937-4136-4ff2-b1b6-9a88f6d49cd4"
        },
        "item": {
          "id": "39867bca-a734-4e6d-9085-5d526b6f2d4e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b7c713ef-cb1d-435a-a2b9-3dd4864c9a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41590c45-33f5-487b-92d2-2b2d1ff77c9f",
        "cursor": {
          "ref": "69d1b0ea-1e6f-4249-ab22-f63ca3e3dca1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "a44f267c-2789-49bb-9b16-5bb0ad03e2c6"
        },
        "item": {
          "id": "41590c45-33f5-487b-92d2-2b2d1ff77c9f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "da7ec3b9-3517-4c48-86aa-dcd5945508bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2ab997-4913-44b1-9833-a4b4758c7070",
        "cursor": {
          "ref": "78ad7aec-8462-4493-93ed-7b511a708c7e",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d0140dee-8c30-4a08-88aa-d97619c0f521"
        },
        "item": {
          "id": "da2ab997-4913-44b1-9833-a4b4758c7070",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ce21c08-73e1-4e3c-b99b-7a19eb161d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc57d25-7167-4731-aa35-d17379c279b2",
        "cursor": {
          "ref": "e5d67d9f-dfb2-4fe9-8443-e57a7e244713",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2de41095-c151-4046-8fe1-80bff79e1563"
        },
        "item": {
          "id": "8bc57d25-7167-4731-aa35-d17379c279b2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37c6b8ad-de60-4156-86e1-906345424fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d4bdee-8964-49cf-acad-77e53317875b",
        "cursor": {
          "ref": "92ae97f7-b28a-4a90-9190-a43f90798e77",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "94497fb7-3b6a-4431-94e1-c5708fd81b88"
        },
        "item": {
          "id": "67d4bdee-8964-49cf-acad-77e53317875b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4f72d990-fd06-49af-b660-4bb80fb331c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44239e02-4007-4a01-86e3-3b05f7bb5df4",
        "cursor": {
          "ref": "2b49ee30-1620-450f-ae71-e10e067f9006",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6e753adf-7cf4-4e62-9350-d1d780182dbf"
        },
        "item": {
          "id": "44239e02-4007-4a01-86e3-3b05f7bb5df4",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7e357fb9-4624-4208-af13-c42b393f92b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06302cac-ef1f-48a8-80bf-91d8ada4774d",
        "cursor": {
          "ref": "b534ab26-04f0-486d-8a39-bf780888e6dc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cf7123e5-936e-44ec-bbb3-600c1fc79beb"
        },
        "item": {
          "id": "06302cac-ef1f-48a8-80bf-91d8ada4774d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8f37189e-c5c7-4e93-bf57-ee1adfc8607b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 52,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3eb8b404-3b09-4e19-9d13-a449907e2ee6",
        "cursor": {
          "ref": "a1c1732f-4f3f-4c61-abac-f8120adc4035",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e06abde9-a937-4049-b6d3-0817fe790d39"
        },
        "item": {
          "id": "3eb8b404-3b09-4e19-9d13-a449907e2ee6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cae3dbd9-cfa6-4743-866f-086bf55424c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033fdda3-985f-454c-97a4-cf2a98c85b6c",
        "cursor": {
          "ref": "3588decb-b36c-4e92-be7d-e1a9768129ae",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e7e858b4-f64c-4b95-9899-8b20dd003d72"
        },
        "item": {
          "id": "033fdda3-985f-454c-97a4-cf2a98c85b6c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "258d94e8-783d-4bc8-ae2e-7e7ed930fc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9069d67d-6d25-4cb8-80db-a059c72b16ea",
        "cursor": {
          "ref": "1d9b2395-9d1a-413c-9544-5aab4dde647c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c25a308e-e4ac-4758-89c5-bbbc6e163fc8"
        },
        "item": {
          "id": "9069d67d-6d25-4cb8-80db-a059c72b16ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "86b9f1dd-8cc4-4cfe-8708-63db3ea9b138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96955dfe-d5a7-4f4d-93a9-4f0a62a72cc6",
        "cursor": {
          "ref": "e2de0d53-5bb6-42e0-b7a1-784735baf40c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "aed1c5cf-ff7c-416b-8357-011cdf0e475a"
        },
        "item": {
          "id": "96955dfe-d5a7-4f4d-93a9-4f0a62a72cc6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "83cc2b74-2484-4e59-8743-332a12740666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da1e32a-e868-4aab-a141-8b0078a1e222",
        "cursor": {
          "ref": "17da0d97-4c0c-4287-ad72-8d2ceabc0367",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "8069df69-07f3-4103-b85a-e57418dde40e"
        },
        "item": {
          "id": "7da1e32a-e868-4aab-a141-8b0078a1e222",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "44eaa748-8de5-4525-a946-3067731a6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34faae20-dcbd-4501-a70c-ee087495872b",
        "cursor": {
          "ref": "ae3dd08b-8736-4055-b69d-780a3018ff34",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f70d5c73-54ff-44eb-ba83-85ff78a08504"
        },
        "item": {
          "id": "34faae20-dcbd-4501-a70c-ee087495872b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb74bc3f-9837-4fde-b909-18544f44c6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ecb3c3-8295-4dde-83a0-4f196c91d02b",
        "cursor": {
          "ref": "b57b04c8-b310-4902-ad58-2bc7f3f77bed",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bf1c5224-ee4f-41cc-89af-5c0debc1b946"
        },
        "item": {
          "id": "f6ecb3c3-8295-4dde-83a0-4f196c91d02b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "1cb3bdf3-ce45-4101-86b5-c97912346825",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "c2ddbcff-922a-4af0-a681-8327f4074277",
        "cursor": {
          "ref": "24a64721-c2ca-4b6e-9ed2-93179cdc33ef",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "abd10fe5-012f-4959-92e3-aba095fe7a1a"
        },
        "item": {
          "id": "c2ddbcff-922a-4af0-a681-8327f4074277",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "2b12a28d-c532-4f4b-86ef-cab7e93caa04",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "c0b137a7-a40d-45be-9c75-e3357b60941c",
        "cursor": {
          "ref": "62cf7690-6191-4070-bdf5-e79295ebb4a0",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c03c79b5-ef58-4eb7-ab45-f9c02dc1cf30"
        },
        "item": {
          "id": "c0b137a7-a40d-45be-9c75-e3357b60941c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "2a35328b-b4dd-4bc4-9b3b-bea2f2f388b7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "18502547-7c72-4d6e-bd50-3329c1881b23",
        "cursor": {
          "ref": "24c2ccce-a023-4c1b-b330-dd30dc34174b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b4667711-468f-4a26-a133-be3688877375"
        },
        "item": {
          "id": "18502547-7c72-4d6e-bd50-3329c1881b23",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b50b4e0e-89b6-4a09-8f9c-a56d4f628a4d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "ce4b8805-0d54-48f0-b96c-46d3bceb5eb1",
        "cursor": {
          "ref": "76208f29-40db-4041-b402-7df783955ae7",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2ca5e53c-39cc-4c70-a53f-7a163916ed2e"
        },
        "item": {
          "id": "ce4b8805-0d54-48f0-b96c-46d3bceb5eb1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "314b1c76-2847-4d16-b057-e9139343e71b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "921cf813-c139-4816-b208-fac28c246650",
        "cursor": {
          "ref": "917f60b1-53f8-41da-b91c-a76d7f46857f",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "74466bcd-59dd-4941-bf07-8fb22fc3923f"
        },
        "item": {
          "id": "921cf813-c139-4816-b208-fac28c246650",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "37a45561-5d58-4ebf-adf4-e9e00f0353f4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "14ebbfdf-0e25-49b8-95a3-c5ee29130283",
        "cursor": {
          "ref": "8cedd3f8-743e-4f18-8713-c2d4cba95c04",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c85a1f62-d316-4a70-9f06-1b9b5d933269"
        },
        "item": {
          "id": "14ebbfdf-0e25-49b8-95a3-c5ee29130283",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9a37d851-d17c-4ba0-9712-74e927ac6415",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e6ee69-cd70-4153-8c30-87394fe4482a",
        "cursor": {
          "ref": "c9506422-9f1b-42ba-8793-c824028f8df3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b3765ecd-8fe7-4bbb-a258-2e0bccc0e58e"
        },
        "item": {
          "id": "06e6ee69-cd70-4153-8c30-87394fe4482a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fe4781d0-bd72-4649-b3e9-2a91e5f31985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ccdd5-eea9-4b5b-86d2-569752e00ed1",
        "cursor": {
          "ref": "70480221-92ee-47c7-be0e-fdd677908b2f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e89cfdaf-ce86-4742-9ce3-83e75bf3ceaf"
        },
        "item": {
          "id": "064ccdd5-eea9-4b5b-86d2-569752e00ed1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bd3c6e06-4653-43c9-83c4-3920321d78d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19029740-5be4-48f5-bb30-3e524c89d438",
        "cursor": {
          "ref": "b501debd-e971-422d-aa12-45b6d9c6cc75",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "91179d0a-860b-437a-875e-3057b059adaa"
        },
        "item": {
          "id": "19029740-5be4-48f5-bb30-3e524c89d438",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "be3f5cf6-f2a3-4def-861f-d9ec91b10287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37269258-c3c1-481e-852c-03f921faca8a",
        "cursor": {
          "ref": "2836e244-dec5-47de-854e-848241de93a8",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b181af8e-263f-4afa-869c-2ff666ff7a3a"
        },
        "item": {
          "id": "37269258-c3c1-481e-852c-03f921faca8a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1219b9ec-edc7-46bb-81ba-a06c69d1616c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a158460c-559a-4ee9-8c28-2652f0c344bb",
        "cursor": {
          "ref": "e89ccdf0-f5f5-4e9d-9426-626cedb40afe",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "684d64e2-023a-4896-bcf4-c29949da3016"
        },
        "item": {
          "id": "a158460c-559a-4ee9-8c28-2652f0c344bb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3afa3357-aeb6-408d-969a-b5372115e8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ae8955-7d02-4337-94f3-18cf2eaab829",
        "cursor": {
          "ref": "b3596786-9cf9-42f1-9d41-845970ff5bb8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "330b692c-c24e-4531-ae67-9982c3f34cd3"
        },
        "item": {
          "id": "14ae8955-7d02-4337-94f3-18cf2eaab829",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6d5b783-90a3-4994-aa9e-fc03f9817125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae373696-e0af-436e-a513-5785c2a5444f",
        "cursor": {
          "ref": "74103aab-bcc7-4f30-a5de-399f9ff285dc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "9aeb640c-35f5-436f-949b-dba85d2a867f"
        },
        "item": {
          "id": "ae373696-e0af-436e-a513-5785c2a5444f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f167ca08-1931-45d9-becd-b8aaa789cb37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e8b0c-04b8-46ab-8cf7-f83d76815fa7",
        "cursor": {
          "ref": "55880a59-3157-4363-87b7-5f5d3313170f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d2139ba0-e00c-40b2-b814-ce12c5491785"
        },
        "item": {
          "id": "888e8b0c-04b8-46ab-8cf7-f83d76815fa7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5e412fa3-92df-4379-b856-a5301edc6ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4908d03c-8f43-4246-a35d-16177dc0ee5e",
        "cursor": {
          "ref": "d6f73a40-3fa4-4f6b-8025-9c1015bf9cc9",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6cec05bc-33c9-4b7a-a6cf-fde3629853b0"
        },
        "item": {
          "id": "4908d03c-8f43-4246-a35d-16177dc0ee5e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6660320a-239d-480b-b9d8-2102c28e6442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc60948-7068-4758-a262-02f472bbc464",
        "cursor": {
          "ref": "3c412483-c19c-4414-8e6e-c5bcad2050eb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "aa7c19b3-6745-4725-b3fe-432852322780"
        },
        "item": {
          "id": "2cc60948-7068-4758-a262-02f472bbc464",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6a4919fd-abbf-462f-bd46-3d2e69d34a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe00f0e6-44d5-4bd4-80e6-4b2794a8c770",
        "cursor": {
          "ref": "f9021925-81fd-4174-b65d-bb29bdd017cc",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d2b7da9a-131f-43ae-a4f2-d6e27a833cd9"
        },
        "item": {
          "id": "fe00f0e6-44d5-4bd4-80e6-4b2794a8c770",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "988b787f-d83d-4da3-870d-e949b1696f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce69abd6-c529-41de-b00f-a37813abd492",
        "cursor": {
          "ref": "775cdccd-b057-4a74-ae56-1ab712fcb156",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d180534f-373a-40a4-8547-4f0f97f9e17e"
        },
        "item": {
          "id": "ce69abd6-c529-41de-b00f-a37813abd492",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c5a7d21a-00f0-4c87-b92d-c689bca85205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8281905-fa24-4620-be83-c72263098198",
        "cursor": {
          "ref": "63ecb251-8148-4998-aa0d-c750044b4c8a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "3631cc56-5985-492d-ad39-95bcf73fa3f5"
        },
        "item": {
          "id": "d8281905-fa24-4620-be83-c72263098198",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "266ee6fc-1017-47ad-a7ec-8801d9aad71c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b5e467-5dde-42ad-915b-fc8f00a85ac1",
        "cursor": {
          "ref": "ced63f88-88f5-44f7-ab78-cda372b30cab",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "29daf2e0-8c5c-4cdd-9cb7-0b520a767ebf"
        },
        "item": {
          "id": "57b5e467-5dde-42ad-915b-fc8f00a85ac1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4b68ef3b-3059-47ec-9166-1bb82b48364b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8db936-0d3e-486e-8fe9-fde0fd0d2032",
        "cursor": {
          "ref": "17c23454-ec12-49a2-afee-dc0d0bdc1a63",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9af14f54-1f7d-419f-abfe-bbde1cfcc8d0"
        },
        "item": {
          "id": "8f8db936-0d3e-486e-8fe9-fde0fd0d2032",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b7b66fd4-9b4b-4ea9-a154-f1f38a133a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd9948c-ce41-4464-adfc-9d71b36c8991",
        "cursor": {
          "ref": "4fa8c769-9fca-41c9-923a-1bf80d381c11",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9e59d37b-e855-4fbf-a646-01010830ec5d"
        },
        "item": {
          "id": "cbd9948c-ce41-4464-adfc-9d71b36c8991",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e5d4b0b2-795c-4baa-b122-3e1e34df3724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72b2759-6bd5-4fed-957d-6ae4ebaad009",
        "cursor": {
          "ref": "49482c64-f317-4af4-a403-ff694d93721e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99809228-69fd-42e5-9200-db7e1b9fdd8a"
        },
        "item": {
          "id": "c72b2759-6bd5-4fed-957d-6ae4ebaad009",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "417d7f8b-0e13-400f-bbcf-4e89203cb492",
          "status": "OK",
          "code": 200,
          "responseTime": 109,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "21234654-ae19-445a-bde6-96ebd428faf0",
        "cursor": {
          "ref": "392e1459-85f0-4250-89db-e73e31c5ec1f",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "aee133ff-392a-484c-bc79-a493010e8b85"
        },
        "item": {
          "id": "21234654-ae19-445a-bde6-96ebd428faf0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6c8f4d2a-9fac-4fbf-b259-6a77f73ac369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0776026e-b48d-4747-9883-d45adb474a73",
        "cursor": {
          "ref": "7a295560-0348-4eb0-b45e-2dbadbb1bf44",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "666dd016-f0ea-4f5a-b925-40d4bb879f6a"
        },
        "item": {
          "id": "0776026e-b48d-4747-9883-d45adb474a73",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7ac17792-e827-49d3-a295-d3207b8ac1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a08a10e-8d1d-49a6-949b-89a0565c667f",
        "cursor": {
          "ref": "b3fb877c-a87c-4c80-aa04-014a27bbf650",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "77306727-4cf7-4515-864d-0269630d4a46"
        },
        "item": {
          "id": "5a08a10e-8d1d-49a6-949b-89a0565c667f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8ea86aab-c37e-4992-a1b3-b874d4e95070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e331da-9e27-41df-b1f2-63c2fe7876b6",
        "cursor": {
          "ref": "58a7d2b6-dd4d-4eab-b307-c4702dd3b0d3",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3d842f41-1388-4b82-95f3-ad7af2b96622"
        },
        "item": {
          "id": "21e331da-9e27-41df-b1f2-63c2fe7876b6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5b174c2c-d36d-4238-b86d-1162d03c8b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafeda95-1300-4848-844b-9e17f2a91ecd",
        "cursor": {
          "ref": "b38b5a02-fe71-4959-9a7f-56cefbbd8160",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "999d2811-ed74-46b5-bf2a-b81ab8d51537"
        },
        "item": {
          "id": "aafeda95-1300-4848-844b-9e17f2a91ecd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ab732893-4d40-4c1f-8595-5c5190b29402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52823bd-ea63-4b81-a792-11b18c17aaa8",
        "cursor": {
          "ref": "5f3d2090-862b-4754-967e-f26d60988101",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ee014a3b-5d11-4f1b-99bd-8afb921cedae"
        },
        "item": {
          "id": "a52823bd-ea63-4b81-a792-11b18c17aaa8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ec83570-808d-4597-8bb2-abe433817a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1efb74-7594-4588-8849-183abc662e46",
        "cursor": {
          "ref": "0d14e0f0-ad74-4511-a87f-e15723624a73",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c4af1495-a2df-4566-8191-d130cee05498"
        },
        "item": {
          "id": "cb1efb74-7594-4588-8849-183abc662e46",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c4f58289-c75a-4b05-b5c3-2e1530b20061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964c9d10-112b-45b2-8f15-64759b519518",
        "cursor": {
          "ref": "47306a2c-5516-493e-8320-49b32a84eb2b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e79a9506-7982-4033-8bde-64780d43de11"
        },
        "item": {
          "id": "964c9d10-112b-45b2-8f15-64759b519518",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "476cb8b5-4d8b-4fc2-8315-b91e2527206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed7bbb4-1575-4528-87f2-a668fa964d5a",
        "cursor": {
          "ref": "4e0f0a58-84e2-45b1-abd1-2edc6fbc72c3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "31ed47c6-e21c-4596-aeb7-b2fa319d16f2"
        },
        "item": {
          "id": "fed7bbb4-1575-4528-87f2-a668fa964d5a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ed7efee1-ab54-4f8d-bc67-244203ad5882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efaa246-c0b4-4d0a-986b-f7f7e582c32d",
        "cursor": {
          "ref": "ebeff10e-d28c-4901-9485-6556e16b5bc6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e692da4f-7b86-4aa7-ac0f-2d764f025220"
        },
        "item": {
          "id": "6efaa246-c0b4-4d0a-986b-f7f7e582c32d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "550dbaa0-176d-45bb-a611-e08e9decae10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20320d7-b4f9-4332-99e2-0d35c3b6c45e",
        "cursor": {
          "ref": "7894f8d6-5318-4ef2-964a-902b63b74301",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "381ab6e9-92f8-4964-8c38-050230208f3a"
        },
        "item": {
          "id": "d20320d7-b4f9-4332-99e2-0d35c3b6c45e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0b674c6c-4f0f-4856-b14d-61e9e977ad72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd9cb31-9f23-41c0-b0ca-e838c86bcb84",
        "cursor": {
          "ref": "7becb5fb-4b72-411b-a0e7-9e3550961ede",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ef5458c7-b6ba-47be-9540-7ef3f74905d7"
        },
        "item": {
          "id": "7dd9cb31-9f23-41c0-b0ca-e838c86bcb84",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "58585d3e-56f9-417d-8e7f-42d67185e6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb884aa-5c84-4970-966a-1500c913bf83",
        "cursor": {
          "ref": "bd31ad53-75c7-4521-9a0d-7536f4e3d448",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "cc013e2e-f7ef-47d3-baa9-e74ae64ff271"
        },
        "item": {
          "id": "9fb884aa-5c84-4970-966a-1500c913bf83",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "92dcad49-a36e-4594-952f-937607397ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69220f13-7dff-48e0-919b-84b7a28142df",
        "cursor": {
          "ref": "b724c1ce-afc6-4184-bba6-70a531ef7780",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "89162b5c-94d3-4e07-a638-2608dc9b6d88"
        },
        "item": {
          "id": "69220f13-7dff-48e0-919b-84b7a28142df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1b3d3c6e-71ce-4fc3-9f85-469ee4545d66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4a4b3a-be11-4e2a-bbe0-8dc97066d2a1",
        "cursor": {
          "ref": "9ef1b76c-bfa0-45af-ba80-6d1699d34fbf",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e1150b7d-371a-43e6-ae47-95c35dff050a"
        },
        "item": {
          "id": "8d4a4b3a-be11-4e2a-bbe0-8dc97066d2a1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3bc2ac78-0a70-46f0-97fd-92f2b594420d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c131ea7e-bf24-428d-aa38-e525e5541f0c",
        "cursor": {
          "ref": "c6a1d107-ee2f-4b51-be5a-a791fbd02c24",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0d5c6aa1-5b46-46cb-8b06-f5a61acee091"
        },
        "item": {
          "id": "c131ea7e-bf24-428d-aa38-e525e5541f0c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fd39a51a-d1fe-4f58-bd7f-1610dfd3566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf39eba-2350-43e6-bd28-4ba864cfd484",
        "cursor": {
          "ref": "c02aee32-957d-4732-8bcc-36b3f3520edb",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cbfaba8f-8656-483b-8383-062541199158"
        },
        "item": {
          "id": "4cf39eba-2350-43e6-bd28-4ba864cfd484",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3a5d41ce-a706-486f-b201-d4132990af61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e238527-87a1-4498-b8b9-f5ba27b476cd",
        "cursor": {
          "ref": "370dc286-397e-49fd-8d6c-fc57105515de",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "36907358-9f24-4145-8d4e-d5c39d571181"
        },
        "item": {
          "id": "5e238527-87a1-4498-b8b9-f5ba27b476cd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "54058008-7011-4c1f-ac9f-fe010ef4f238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4dfbe84-1bcb-4ff1-9575-97ed7641dd23",
        "cursor": {
          "ref": "e0f8c97f-7622-4231-bf2f-7d0746c5d41b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "520a1e16-75f1-4c6d-b7b7-f9115b00ec72"
        },
        "item": {
          "id": "e4dfbe84-1bcb-4ff1-9575-97ed7641dd23",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fd4be6df-18d0-4d2f-9985-50f699169940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bcd86fc-8a7d-416e-8607-626a63756a29",
        "cursor": {
          "ref": "36bfb651-b5fa-4680-81f7-c9c639a5e800",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "60983456-0146-4e51-9d57-05fdc5524db3"
        },
        "item": {
          "id": "7bcd86fc-8a7d-416e-8607-626a63756a29",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1d072cb1-eea9-4e09-944c-080198ad913e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0424233c-a951-4978-bc64-1729d26c74dc",
        "cursor": {
          "ref": "76a187bc-7a8a-418d-b4e8-2704950f72a4",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "311a540f-9b45-40fd-9ee1-b059770fa7af"
        },
        "item": {
          "id": "0424233c-a951-4978-bc64-1729d26c74dc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "523cc392-62a3-4dc0-9085-7cddb0a93c4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb640764-79e0-442c-acfc-4427ee4e81a9",
        "cursor": {
          "ref": "6a3d4963-2def-4b2c-9327-d23c28c17ab5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5b7c698d-993e-47ee-b32c-894151f42982"
        },
        "item": {
          "id": "eb640764-79e0-442c-acfc-4427ee4e81a9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ab209f4b-22f8-4789-813f-16b0dd68cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aeed631-8d78-4eff-a5e6-39c5856fff6c",
        "cursor": {
          "ref": "0727b228-a219-479c-b738-a1fe63ed2e08",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3c2fe778-56ca-4572-b136-7d12b5e81d65"
        },
        "item": {
          "id": "5aeed631-8d78-4eff-a5e6-39c5856fff6c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9323c050-eda8-4510-9450-a0cffb2e92e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed4f10e-7576-43ca-a4f1-6bde3cb6c84a",
        "cursor": {
          "ref": "a4d01f8f-f05a-4371-93df-0a901ecb4bb8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c9af4e5a-cdfa-4e09-af55-e877289798f6"
        },
        "item": {
          "id": "eed4f10e-7576-43ca-a4f1-6bde3cb6c84a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "806ca8b3-bcc0-4da6-b897-904863c56a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562221ad-0f27-4c4a-9127-f987d8a7fa20",
        "cursor": {
          "ref": "5641bcc5-a674-473c-8bb0-9f4425818206",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e57417bb-03eb-454c-bd6c-ea902830f17e"
        },
        "item": {
          "id": "562221ad-0f27-4c4a-9127-f987d8a7fa20",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e5ef6bc8-9dbd-4ad8-ac92-2dd1c80d25ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bcc613-1084-4437-8fcc-9d5a837249ea",
        "cursor": {
          "ref": "01a43485-8e04-45b6-b5dc-4e0e093f53b5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c32fa1d8-4090-4e84-a874-e4505d301fe3"
        },
        "item": {
          "id": "c5bcc613-1084-4437-8fcc-9d5a837249ea",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b88dcf60-0919-41ab-ad46-83e56a4ba844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a12c013c-2aca-403d-aec2-b4182975a336",
        "cursor": {
          "ref": "0fbe1005-09f7-4ca7-a4b4-af3e05048d1f",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ead721fb-e457-4ebe-b4ba-2a402f5a6aeb"
        },
        "item": {
          "id": "a12c013c-2aca-403d-aec2-b4182975a336",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b77c4655-9657-4c4e-9c7c-80a6c2d60be6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6acf39a2-f3d3-4f05-8c08-976e52ae5176",
        "cursor": {
          "ref": "580bf9e4-faa4-4a80-a03a-25e5cbff605d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "23e7fa18-5b3c-4d63-8944-b0643451ff50"
        },
        "item": {
          "id": "6acf39a2-f3d3-4f05-8c08-976e52ae5176",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9e5d2471-a6b4-4447-847c-22c0665db86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aab1be9-bc1f-4c6a-ac38-3d4fc525178f",
        "cursor": {
          "ref": "c07090e5-60c5-4229-a51b-445f1950a993",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b43a420c-4721-41ac-ba89-783572b16e0e"
        },
        "item": {
          "id": "9aab1be9-bc1f-4c6a-ac38-3d4fc525178f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0ed4375f-732a-4eaa-81b6-d4f5703ba40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808bd915-cb7f-43bd-876d-205996e328be",
        "cursor": {
          "ref": "96aed143-03e1-449b-8b85-7b41166f818d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "1171ad41-28ed-4eba-927b-3eabbf9aebdd"
        },
        "item": {
          "id": "808bd915-cb7f-43bd-876d-205996e328be",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "70ed1b6f-38d7-4ea7-b13b-a55db264102b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b8c47d-7fc3-474e-8777-e82062cae4f7",
        "cursor": {
          "ref": "8f4d6311-746e-44d1-a9d5-8340ca29ec16",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "60521c63-4bc0-4ed1-be30-e2ce9654fa42"
        },
        "item": {
          "id": "b1b8c47d-7fc3-474e-8777-e82062cae4f7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "85c92644-e389-45e1-a534-e8f6b9c326c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9297106a-2375-41b5-a186-e06a1877f778",
        "cursor": {
          "ref": "5ebd2241-9afb-4853-9512-30056c4b26ca",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cd6a821a-03e7-4929-b4c6-2ea2e6435f3b"
        },
        "item": {
          "id": "9297106a-2375-41b5-a186-e06a1877f778",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "929aaaf0-2b6b-4316-8d20-e801d4b8842d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b6cc19-0c6b-4bf0-ac89-6fea6bc63f09",
        "cursor": {
          "ref": "e3ea94cb-6ac2-45c8-a635-1d6ccee03e2c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "894801c6-3509-4f67-addc-0a4a63811b1a"
        },
        "item": {
          "id": "a8b6cc19-0c6b-4bf0-ac89-6fea6bc63f09",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c5151072-ecc9-4072-8a27-05e439e196d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247e3cf2-f3e1-4b0b-8185-813ca63a111a",
        "cursor": {
          "ref": "a4f00da2-2fb5-4181-b673-636bb1f66f37",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "24303cf7-34aa-4ab7-959f-a253bd507d08"
        },
        "item": {
          "id": "247e3cf2-f3e1-4b0b-8185-813ca63a111a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d87836cd-d7b8-44b1-ae68-4cad1e27ca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b77d960-597b-4d89-8a23-f2063aa3214f",
        "cursor": {
          "ref": "60cf1be8-1a36-4adb-8ca2-7c158c96d16b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "bc17c157-577d-471f-bf19-d28697ec8bdb"
        },
        "item": {
          "id": "7b77d960-597b-4d89-8a23-f2063aa3214f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "78655370-663f-4792-b2e4-48322afdacd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edcc9c0-74a0-47b7-802f-e5974f25f926",
        "cursor": {
          "ref": "b6c614f1-64ac-4f07-be5f-8d21d6fdc489",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e021a863-2d97-43eb-bfcb-ac3fff810700"
        },
        "item": {
          "id": "6edcc9c0-74a0-47b7-802f-e5974f25f926",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3f7f631b-c694-4cae-a0a7-61725be1b6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93779f0-a6f8-4713-a91b-a0fe277d6149",
        "cursor": {
          "ref": "9f963f13-aee5-41f5-8bc6-b4d251df6742",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b2335946-9052-469f-aa33-3e7f9033fd38"
        },
        "item": {
          "id": "f93779f0-a6f8-4713-a91b-a0fe277d6149",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "425468fd-b375-4762-99bd-befec3177f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1fe9a2-aae2-4831-9b6d-1c2339d1f7cd",
        "cursor": {
          "ref": "ba497270-64b2-4b3a-b400-71f4dd99779a",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "396de93e-db64-455d-a6a6-8e8275c56f1c"
        },
        "item": {
          "id": "bb1fe9a2-aae2-4831-9b6d-1c2339d1f7cd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1e9359dc-195f-42ef-b643-7f8fd4efeb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfd89ac-da50-436e-949e-2bdd3cebc0a9",
        "cursor": {
          "ref": "b759e92f-962d-47de-9e93-94083db4cdb2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf7344fa-df3d-4b5c-9a60-f865433e9ef0"
        },
        "item": {
          "id": "0bfd89ac-da50-436e-949e-2bdd3cebc0a9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b8748d9-9350-414c-85f0-397941e7b055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12266413-e1db-4324-a808-0f661c2c9de2",
        "cursor": {
          "ref": "de4596a3-f046-4156-a0f7-55613b879999",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "88f388ce-b0de-4faf-b20e-76d4d98baecb"
        },
        "item": {
          "id": "12266413-e1db-4324-a808-0f661c2c9de2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e0691f6c-6f8b-425f-a45d-affa775cb178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e028f37d-ca3d-41ff-b131-2db08e78ad3b",
        "cursor": {
          "ref": "d1500ff9-ee74-4f3f-b95a-76cda3594339",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5d15aa30-05af-4403-8575-708200030c52"
        },
        "item": {
          "id": "e028f37d-ca3d-41ff-b131-2db08e78ad3b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a845ab2f-65e9-48dc-9c68-e70aaf2eddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c919ae96-9e69-459f-b640-d680db69ff57",
        "cursor": {
          "ref": "cc676a3b-5cae-4166-9b00-fde2679863e0",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1a33d369-e9b1-415b-938a-66f443c6b52e"
        },
        "item": {
          "id": "c919ae96-9e69-459f-b640-d680db69ff57",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4f402c3e-ed41-4e3f-8cb1-0c54422b9a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7e27b8-f9d0-4f21-a44d-e58eaabe48f3",
        "cursor": {
          "ref": "ce952759-7ea0-4aac-ac73-4eb1fc6940dc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4e1cd2de-beb3-49cf-a0c5-4feaa3cfb2c2"
        },
        "item": {
          "id": "8a7e27b8-f9d0-4f21-a44d-e58eaabe48f3",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "583ddec7-1013-461c-8982-9fdd2f27b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23672c02-9fae-42c9-902c-e2a63f247c60",
        "cursor": {
          "ref": "4b3b20a0-ab18-4a9f-9219-88ecda9b19fe",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d532f810-26ac-4a89-ac96-f8e29e344c1b"
        },
        "item": {
          "id": "23672c02-9fae-42c9-902c-e2a63f247c60",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13bd6911-df03-4964-acab-8c6df6a687e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb33d10-2aee-4ca5-9f3a-c02074cb4a4d",
        "cursor": {
          "ref": "0f8b24aa-121d-4904-8956-79ba003bd3e4",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e979539f-0d62-4342-9ea8-cd46c7f61c6e"
        },
        "item": {
          "id": "1cb33d10-2aee-4ca5-9f3a-c02074cb4a4d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5fcd3944-90c1-4945-a763-e4b7896c076f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38909d4-3ad6-441d-90d9-d707480debab",
        "cursor": {
          "ref": "3ae45f9e-449a-4ed8-b6d3-7d29146492dc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9190389d-feb6-4cff-851e-e3a98731d246"
        },
        "item": {
          "id": "c38909d4-3ad6-441d-90d9-d707480debab",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "60967ecf-d6ba-4b2b-aeaa-fecf164a9018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae21ef4b-da98-4f30-820e-b2270ce24945",
        "cursor": {
          "ref": "7565d040-879f-4482-8a45-a1ed1a68fd5d",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3e2bd76b-8a78-481b-8210-8a9d38e60541"
        },
        "item": {
          "id": "ae21ef4b-da98-4f30-820e-b2270ce24945",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "335cbb0a-99d8-41c1-9f60-c7034d5cc5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc65ae52-55df-4fa5-ad94-f33bf93c994d",
        "cursor": {
          "ref": "0fcf6386-21a0-4ecd-b169-6b174274e3e7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b1de8ddf-d009-43fe-97b0-984dcba00619"
        },
        "item": {
          "id": "fc65ae52-55df-4fa5-ad94-f33bf93c994d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bbfc1eec-944b-482e-ad57-6e821517f78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e125f-372f-4599-9896-9e0a01bb08d1",
        "cursor": {
          "ref": "07f2b3f5-f31c-4112-8de9-93fd1e65895c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6ab60dd2-eee1-4283-8910-5108f50d2b32"
        },
        "item": {
          "id": "dc3e125f-372f-4599-9896-9e0a01bb08d1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "986caa27-ee0f-4497-85df-62faa2f9db9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94fc858d-228c-4878-8902-3c28a6cc99d6",
        "cursor": {
          "ref": "8c952f40-9959-4276-8209-a170958d96b6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "442431b7-51b5-4324-871f-1f5412f3b17e"
        },
        "item": {
          "id": "94fc858d-228c-4878-8902-3c28a6cc99d6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e4be7ea4-e970-4901-9843-e7e639e7cbc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83edf900-b248-4930-a38d-eb58fbf34930",
        "cursor": {
          "ref": "2ef042da-180e-4bb4-bbc5-9f79d68a39ce",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a9db4c30-79ae-4bde-83fc-499091021f3f"
        },
        "item": {
          "id": "83edf900-b248-4930-a38d-eb58fbf34930",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d319435d-80ff-4cec-a787-b75a1f0d9c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce61b596-0e27-4c33-b88c-6654acbc102e",
        "cursor": {
          "ref": "b6277112-1bb8-4abe-95ba-7238e379f89f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "92fa62f1-e83d-417c-8fb9-a92c52b9909b"
        },
        "item": {
          "id": "ce61b596-0e27-4c33-b88c-6654acbc102e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7d6f0681-f2cd-417a-b32b-3441608f908e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e039dfa-6e6f-483b-833a-dc64846fe627",
        "cursor": {
          "ref": "25db831b-dcfb-430e-8de8-2bec723c6a23",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ccda8eba-e1c4-43ff-986c-2710ebbc71fb"
        },
        "item": {
          "id": "9e039dfa-6e6f-483b-833a-dc64846fe627",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1de99867-5d4f-4230-9149-7360928faddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66243e34-1c04-42a8-9b7b-667973e9e90c",
        "cursor": {
          "ref": "317c4955-ab80-4ec0-bb7c-0ad5b2c789c4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "5cc2fdba-79d5-455c-a497-7a17c9c822fb"
        },
        "item": {
          "id": "66243e34-1c04-42a8-9b7b-667973e9e90c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42d57292-58e0-40fe-b052-915868979696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376b49fc-5e40-41fc-bafe-1887d48a39b6",
        "cursor": {
          "ref": "ddd32779-762b-4ca8-b624-101d26c400ac",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d6e80b68-1235-4f0c-bc3d-affc3b508dd2"
        },
        "item": {
          "id": "376b49fc-5e40-41fc-bafe-1887d48a39b6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "19f322e3-7386-4c73-8e9a-d979a3807a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a3d0d4-0760-413a-929a-39977a4164ea",
        "cursor": {
          "ref": "b00b046a-bdf4-40e5-b07b-19a9f81275d0",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e76153c4-2fd9-4a3b-8877-401d29258ec8"
        },
        "item": {
          "id": "c5a3d0d4-0760-413a-929a-39977a4164ea",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1b7394f7-ae07-4810-82ff-1729ac424ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b265c4f3-633f-4c1a-a473-758d5948edec",
        "cursor": {
          "ref": "eafb2837-4704-4648-8ac3-2458073cd4eb",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9485d315-10e4-4330-a7e8-05f37f3bfb17"
        },
        "item": {
          "id": "b265c4f3-633f-4c1a-a473-758d5948edec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2ce654d5-0f7a-4e92-bcc8-8dceb38749e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e393680d-13d3-42e5-81b5-a27fe0fa3212",
        "cursor": {
          "ref": "c38c5145-e827-404a-b570-33e3e7579c9b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "adcee819-ddc3-4a5d-99f2-4898ea3a61ec"
        },
        "item": {
          "id": "e393680d-13d3-42e5-81b5-a27fe0fa3212",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "963a6ec0-8ac3-4627-a1df-bc4429d330c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97eacb70-c8fe-4402-9954-1ee8d5dce572",
        "cursor": {
          "ref": "684aa5e2-cce3-4018-8987-57fad88f9c07",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "870e043b-8fde-40e5-8701-4d8371ac2fff"
        },
        "item": {
          "id": "97eacb70-c8fe-4402-9954-1ee8d5dce572",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a10e5084-f683-4cff-9ac6-68c5ec77b3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f476d0cd-d849-4505-91b7-6d57325c6740",
        "cursor": {
          "ref": "ffe4f4e6-4a94-4bc0-95f3-40c4c656bb40",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "79a373be-d919-46cf-8205-12abbc79cfea"
        },
        "item": {
          "id": "f476d0cd-d849-4505-91b7-6d57325c6740",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "88bd7020-cd69-4b29-a960-86f0742424ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c700a26d-77cc-4046-bb1b-42ae38800558",
        "cursor": {
          "ref": "51ededdb-82b8-44e6-93a1-504ae743d20c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "094bd7c8-5dee-4e04-a6cc-51d10f1b2a90"
        },
        "item": {
          "id": "c700a26d-77cc-4046-bb1b-42ae38800558",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3bd618bb-1d14-413e-a5c9-3192a93e5d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e08bb1a-a0c3-450d-9e25-235f963b7977",
        "cursor": {
          "ref": "b17b0e44-4a69-4b0b-be45-3144f45d39e7",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63e41d44-26de-4075-9ec7-3bf309113693"
        },
        "item": {
          "id": "2e08bb1a-a0c3-450d-9e25-235f963b7977",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6e8be95a-d799-44a5-a27c-2b1b7ad0a6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81727b90-7d37-46fd-8d1f-52421885cae5",
        "cursor": {
          "ref": "79ff10c8-d118-48ed-a84f-c7e609f76a21",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "53e36b7d-e4b0-40ab-b3ca-3b8f59a18223"
        },
        "item": {
          "id": "81727b90-7d37-46fd-8d1f-52421885cae5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d0f0c9e7-c8bf-46c4-a0c5-a731048687c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500ec8d6-2cf5-4d07-a51f-dc8316d1496f",
        "cursor": {
          "ref": "1023715e-cd3f-4476-83a6-ca11c0109aac",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1bd6b41d-c7ec-4ebf-a19e-ffc9de7902b2"
        },
        "item": {
          "id": "500ec8d6-2cf5-4d07-a51f-dc8316d1496f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2db0a4ec-24e4-4fe3-9ec9-95f9306e3bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba80183-df3c-4df5-9866-ce196a357b38",
        "cursor": {
          "ref": "cfeef9d7-4efb-4e66-a569-15c7230b3532",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f0900f2-324d-45b7-b86d-c9b13c6c35e4"
        },
        "item": {
          "id": "eba80183-df3c-4df5-9866-ce196a357b38",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a601065-f7e1-411c-94c3-2e439a30bfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b698a27d-534b-4d9e-b7dc-947366cef818",
        "cursor": {
          "ref": "6c6b3ed7-c66e-4216-8958-579253cd63d2",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "df7fa987-f239-484d-8acc-1bd3c299e300"
        },
        "item": {
          "id": "b698a27d-534b-4d9e-b7dc-947366cef818",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "19ea5f72-9593-4b7b-8718-e21315b1a6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97710a87-cc19-448f-87de-9a425df265c1",
        "cursor": {
          "ref": "8b32cf56-c827-4d54-8ff1-83f23b4458b6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "78a6e5dc-2bd4-40ca-9b74-e7bf7394b944"
        },
        "item": {
          "id": "97710a87-cc19-448f-87de-9a425df265c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "018858de-b4d8-4fc0-8705-11ae8859d483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c091448-75db-4a82-853f-ddc634b42030",
        "cursor": {
          "ref": "2ec842bf-e56c-4b25-aa72-dc09886cfd5c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ee445197-85f3-4fdf-b85c-526a38f8ed21"
        },
        "item": {
          "id": "4c091448-75db-4a82-853f-ddc634b42030",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b2f2fe19-6f13-4b67-bc35-def0fe7693a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b214389b-028d-4222-a898-8e8251e6922f",
        "cursor": {
          "ref": "5ea1f569-5480-4464-b7f4-bb24a4fba638",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8caf5877-cf22-44d0-920c-f8aac48782f7"
        },
        "item": {
          "id": "b214389b-028d-4222-a898-8e8251e6922f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f911b1c7-0879-4f7e-b449-01824d628033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb5e645-f7f5-433c-8f6d-e3ca59d1f4be",
        "cursor": {
          "ref": "ec0c87bc-8bed-4420-926c-2f03de545958",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "31178373-e7bf-47ed-bb49-ec3d35c1f4d0"
        },
        "item": {
          "id": "6bb5e645-f7f5-433c-8f6d-e3ca59d1f4be",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "af498dc1-fe41-4e27-967f-2f749733a8d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0381dc21-3b10-4047-a984-46c1e71b1391",
        "cursor": {
          "ref": "d7fdf297-5d06-4c18-ac97-2cd69ba6da29",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fa8df808-5acc-4c24-a209-c43a5c8c392b"
        },
        "item": {
          "id": "0381dc21-3b10-4047-a984-46c1e71b1391",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a1afc477-b924-4868-808e-3b938746757c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4a1747-d1bc-4404-9718-36adcb22140d",
        "cursor": {
          "ref": "4e4738d7-b44a-40b4-ab8c-6feffe19dce4",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ae5bd1c9-9dab-49a3-9024-a172686f4ac8"
        },
        "item": {
          "id": "ed4a1747-d1bc-4404-9718-36adcb22140d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e9c33b43-c56f-4fb7-93a4-2e60bd808212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d59900-9fed-4289-a9d5-399dbbe78b91",
        "cursor": {
          "ref": "e042ac34-7963-409f-9724-4aa1a511b90b",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d400c3a3-d5df-4d59-8071-8efe2594a084"
        },
        "item": {
          "id": "c5d59900-9fed-4289-a9d5-399dbbe78b91",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36195743-052d-47ec-ac97-e003fbf5ccd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de22ee6-9a60-44df-bd34-dd012f64f76e",
        "cursor": {
          "ref": "4218c98d-f15e-4cd4-80ba-73de826de237",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "30c4559a-3d8f-4803-9a6f-a22066c473b7"
        },
        "item": {
          "id": "6de22ee6-9a60-44df-bd34-dd012f64f76e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a3f83e4f-d34d-463a-ad55-84fdd73af70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecb1772-2ef9-4055-8437-a394e26ea3f4",
        "cursor": {
          "ref": "c1956f88-c2a1-4d7f-a73e-957b854a4cdf",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82920745-806d-4b34-94da-5282b3898f65"
        },
        "item": {
          "id": "9ecb1772-2ef9-4055-8437-a394e26ea3f4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "11ebc95d-7127-4ce8-9e93-1298e549144d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ee1a0c-656b-4e9e-9632-5bcebc2d95ba",
        "cursor": {
          "ref": "fa835454-a51d-4487-8fa9-a694cc31a93d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e54e90a8-6a48-4b19-b68b-d4e13656325b"
        },
        "item": {
          "id": "d0ee1a0c-656b-4e9e-9632-5bcebc2d95ba",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "abc94abe-c830-4be8-8f21-aef207aa1528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b18c25-0324-4afb-98ff-c8290db5aa4c",
        "cursor": {
          "ref": "07e69e90-4aac-4a19-bff2-bffa21615410",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "95126cea-6e5f-40a4-832d-400c1c47ee12"
        },
        "item": {
          "id": "d3b18c25-0324-4afb-98ff-c8290db5aa4c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "38e7c641-bfab-4faa-817a-e9b21e7252ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607fbfe3-569f-4d28-a29f-b014dc617cd4",
        "cursor": {
          "ref": "cfeace53-a822-4564-a4f2-3ba6233b1d56",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "31f9af59-a6b6-4251-822e-e376922cb758"
        },
        "item": {
          "id": "607fbfe3-569f-4d28-a29f-b014dc617cd4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b355f546-0aab-433c-9fe3-aa80ab00fce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76743148-b9a5-43d5-a3ee-af70330e7936",
        "cursor": {
          "ref": "3cc19e05-1477-4ce5-a5ee-563130b35517",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb766edf-b167-4aaa-83a1-fcf576d94293"
        },
        "item": {
          "id": "76743148-b9a5-43d5-a3ee-af70330e7936",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "021c6cfb-12e1-47a8-bb2b-246a34321380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba9cfe8-2cbe-476a-a998-65990e3f62ba",
        "cursor": {
          "ref": "bd7a8ea8-3d51-4abe-93f2-94d3c392115f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cb3d1612-11bd-4598-8643-017c58f3396b"
        },
        "item": {
          "id": "6ba9cfe8-2cbe-476a-a998-65990e3f62ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b5d8d5e8-2da5-4f58-bd82-554c7f75a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "525a3722-0fa3-40cc-9f6a-067766841662",
        "cursor": {
          "ref": "4fedec6b-bbb5-4b1a-ac2e-bcc39d1dfbd1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "44f36ee0-4eb2-4637-a64b-4ba4c13459b9"
        },
        "item": {
          "id": "525a3722-0fa3-40cc-9f6a-067766841662",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8f545f96-fc23-4091-822c-360c2b0a4769",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614c74ae-cccb-4c57-bb2e-29f84b0227e0",
        "cursor": {
          "ref": "aaebfb37-58c9-4eaa-982d-ea0aede7ef6a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "679b5f66-6148-47ca-8e84-5ac3011a34c2"
        },
        "item": {
          "id": "614c74ae-cccb-4c57-bb2e-29f84b0227e0",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3c35a104-2879-4f1f-b6c1-e875d335a469",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafd9b9c-bca7-4136-8fb7-d420c328d8c9",
        "cursor": {
          "ref": "325a44f1-3586-40ff-ad03-b8d1b835da4f",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6a81340e-2c0f-4f51-83a7-09c23e4eef9f"
        },
        "item": {
          "id": "aafd9b9c-bca7-4136-8fb7-d420c328d8c9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d3ea73d5-48a9-4dc5-838c-f4aced09a277",
          "status": "OK",
          "code": 200,
          "responseTime": 2510,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd5593a-a547-4590-a713-3cc0e524b8a0",
        "cursor": {
          "ref": "fbd29170-c051-4e98-920f-5a9e995e3a6b",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6fbf165e-b43b-408c-a6cb-acc47b2e7127"
        },
        "item": {
          "id": "2bd5593a-a547-4590-a713-3cc0e524b8a0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8e7d96f8-afbb-418a-8e7e-59b55a26462a",
          "status": "OK",
          "code": 200,
          "responseTime": 5787,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ac8a5-883d-4774-a980-33e2993a952b",
        "cursor": {
          "ref": "e69c5d55-0de9-4e35-b153-053128e938ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e0848998-d21f-483e-a993-097e13530690"
        },
        "item": {
          "id": "ca3ac8a5-883d-4774-a980-33e2993a952b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc1d1254-4b5a-47b4-bb0e-d993981ff6bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ac8a5-883d-4774-a980-33e2993a952b",
        "cursor": {
          "ref": "e69c5d55-0de9-4e35-b153-053128e938ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e0848998-d21f-483e-a993-097e13530690"
        },
        "item": {
          "id": "ca3ac8a5-883d-4774-a980-33e2993a952b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "dc1d1254-4b5a-47b4-bb0e-d993981ff6bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6e3417-f1b8-4730-9118-2258fef85f17",
        "cursor": {
          "ref": "6107daaa-1c4a-4fa7-bd38-75a27931130d",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "93fe2ef3-9e8f-4966-b880-329a9eb94ea0"
        },
        "item": {
          "id": "1c6e3417-f1b8-4730-9118-2258fef85f17",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c7a79b48-03ae-4ba9-bfc0-6251c152d658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e69f5e3-feab-48fe-b284-cf9810a65f19",
        "cursor": {
          "ref": "ca2e5f52-69b4-443f-a7c4-16b0f10ce13f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c06defbf-4d23-440e-8c9b-a060a424ee17"
        },
        "item": {
          "id": "7e69f5e3-feab-48fe-b284-cf9810a65f19",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3f5915b9-9889-440c-85e7-8e46f72c1477",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}