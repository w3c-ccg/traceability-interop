{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dc009068-dbfd-45ef-a410-51c81ac26a20",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6cb50880-14ec-414c-847a-908931e0f003",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80ad88df-aa13-47b8-8d0a-ee3d0e3434d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "636caf17-91d0-4a44-962b-d8361fe74ced"
                }
              }
            ]
          },
          {
            "id": "93761976-d8c7-4cf1-b69f-9021dfdabda6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e1f8500b-f7d4-4bf1-94a5-c556ba18220c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b7b280c0-7de5-412e-9a3e-58aed75e4d6d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2174a5f0-4827-4f3d-be39-d46089752a2a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d701832b-6212-4136-9396-95f46d563498",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e708c47f-29b5-4d82-9e28-790ae1960f50",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2cd27d1-014d-497e-b1f4-c40a0370631e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce167eb1-eaeb-42bf-a829-9e01bb32cf62"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2eb2b943-66e1-4915-88c1-472a7f90849d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4dfe723-0970-4036-86eb-03704be016a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65809168-b599-4e3f-9697-cfb5ed73224e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "939fe8f2-1bea-4ad0-a2e4-e42289a2bfed"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6241ed33-8277-4aa0-8152-3af029a3617b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3537f65a-5d6b-4aba-a92a-276b33e7ccca"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6eae38af-62c9-4b83-a7fe-962895108806",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed0cda4c-9a27-4535-9875-4b2bb7373cfd"
            }
          }
        ]
      },
      {
        "id": "97a37fb4-bff8-40b1-8c2b-1f20f1540bef",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "bd3c847b-8d9a-4209-a246-565c0dbd12a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b6a08e7-7928-4d3c-a684-22ef84e6ac53",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b93c08df-16ad-43b6-8398-b014658af60f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359bebd1-30dc-4ec3-bf2d-4856b9bbdb36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a9ac170e-15c2-476c-bc77-2035d69e5e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4272270e-95ad-4278-94a0-07302a8ef75c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165c9015-11c7-40e9-bbf8-9374ff7caeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5126de38-b227-43a4-bae7-b80d5dac9c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed12f813-6ba1-4704-ac29-f27f875a5525",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f48aa-4a52-40b7-83d0-05017c914bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19ae0078-f951-4ad6-ae4d-9d4ea6e6229f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "095cdda2-5b86-4b63-83a9-f852255ece05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "133c2058-89f3-4964-bef2-68484360431c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13d522b-dce4-4af8-b385-4d36dbc855cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dab12f8-1e6c-4d34-b071-c44517391fe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3ddab6-8fa3-4186-ba6a-a623f2636ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74e927cd-5399-44e2-9257-5a23be2531af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e4557589-2737-4aeb-8077-c21cb8d8d1c0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ee03b76-9749-40b4-98e2-13bade7143d2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89486c77-0a76-4ec3-b001-e5b28739152d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8231d2f6-4422-4166-8141-e563123a5177"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da54ddd4-c74d-47b8-95e8-ca0c871d3aea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "33958675-1ca6-49f1-8de0-a22c39508e1f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e5b3887-ad00-4158-a9f5-4ba6ccfe8c8f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea87d341-4efc-4a0d-b355-48955299f537"
            }
          }
        ]
      },
      {
        "id": "652b6f6c-c149-4b1b-8c3f-d39e744981da",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a695c803-f85c-4374-b808-a2c3ba0477ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "147898d8-9949-429a-833c-3840259f4a6f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "538bb768-c4a4-411d-8c90-bde5b95d2968",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aa430a5-dd25-4dc9-ad34-6c471c972af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce483e7-ab1f-4e4d-9af7-05929140f93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "873b0bbc-4601-44b0-bb3f-ae386fdc196b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "906e70c1-6f6f-4457-b5a9-8fe04a1c009d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c23326-7670-4bf7-8b81-df9d95437101",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9ab99f-3960-4de2-9100-d8aa599c8e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1ca884-e4b4-4071-93c8-18eb063decc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31e99e0b-53a7-4def-93c0-f6522208357e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1ac0ad5-340a-455c-831c-a10d37d50f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4fcb52-e348-4cba-9939-fdc19a8b37a8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f228191-aff3-4c9a-8bda-fae925ec5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad06e50a-59e0-4ddb-83d7-60d79e975cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eadc851-88e0-49a6-9715-09f57b085573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f412225b-9a8d-4330-821f-cc4e0e9300b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe09acfc-6ed3-4df6-b75b-b9f266510b97",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cc16b9-c034-42ed-82a8-15d8d87e9252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68244377-f049-4efb-a302-d39a3a4583f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde25633-6d8b-4fd8-b8c6-7afdfe4c7980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d04869e-d388-429a-94f7-bafa66c66ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bd793f-2846-42f0-8dbe-163777e9ba00",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7b99e0-2cbe-492a-b20c-119010868f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cc233f-38ae-49ef-ae3d-ed3e8066eeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee66db3-99d7-47f1-8060-71afb632d4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf87113-31e3-4d47-9f44-204715932e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83c4721-2843-45f0-91cd-d3a1ca3003e3",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0cbb5e-69af-4c7c-a5c0-4baad03832e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d5f6d8-4ae3-46c4-9a81-d10fbf78b25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f1c114-e4e0-4b95-8a1c-9a3acf8af557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a29696fc-36cb-4fba-ab10-fbce5e19c340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb124e0-0eda-4b4b-a8f2-7deeb22ffd66",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55580b42-349a-43dc-82b4-75a4cb0a963b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70f3654d-b489-4aa3-b17f-cfd0bf2e1abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bd509c-91a4-4e37-b3aa-04ab4fe71d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c54abe5-e674-4402-b6bb-c841c9dec7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d906d6d0-3e15-486f-91ff-b6be8bded747",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5befcef-9b47-4bd6-ae47-6c81c6a70781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f724d0b3-ea5b-44cf-8644-1f15ba1bee53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec827e0-233d-47c7-b2b8-1ec2ed8ab6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a02cf79-4efb-41ba-b56e-de6a51b7446b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49bb8af5-1e03-4a1c-bdc3-1d19de2423c0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167aad46-f899-4901-804c-5d140bdfb8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9d1eac-0c4b-4bb2-baba-90b3361f5df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5b3885-8945-4ce9-bf78-6f05538484b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdf28696-3e35-4de3-94b1-fffacf6d9883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a114f6-15c6-454b-8f3b-e7964f43b2e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd1954c-39c9-4276-b18d-5b3bcc6c24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22cb2507-06ad-42f5-bf9b-fcf69672ea80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b55425-a47e-442b-a768-120af60ab089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa11af0-0910-43fa-aad3-a30c5e299ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6aef17e-be3f-4ad7-abca-a81cd8b50848",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8da11c-0641-45a0-b559-73459713254a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedeff0c-d126-4c41-a06b-73110e53a7ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16a4ddb4-9720-4bf5-8a90-cecbf0846664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a903b353-d5d2-4dbd-9975-1a4d2ae31be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafe6cff-ed2b-427e-829b-94431e9d1c3a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb7ddd6-ddd6-439d-a815-8644f0d649ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4552e1be-92e7-49ea-ad78-49c3c8815613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c624a13c-669a-414b-a9ca-21548f560518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d6b2d3f-abb8-4e81-b86b-9883c6246992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ca9971-a98a-4dad-809d-ee77f3c31eb2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a7023e-6295-4bfe-9a02-bcf79f939cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f6c4d3-90c9-449f-b8d8-ee736e0ecb28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c71a0a9-85ed-4ffc-9d58-4de106939e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2f9aef8-3e8f-4fa7-8615-5982597da3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1590c8d-df5a-4cda-b1fe-8f332c288ba3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae75aa2-f77a-4183-a6db-a39aef9a879e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402248fe-f823-4b11-820b-92b20fe03825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a340b3-f4f2-47f8-a979-42d34b946b53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3401218-4e97-4852-afce-3e4c78f9eeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cef99d0-6918-473f-82a4-5829f22deae6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cffeeb-d0f0-480a-a9a7-d15f405ada0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58219e5-64c0-4996-9bd2-0919ce7b84bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894b1236-454d-476b-b04a-638883328290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6682065-4364-4185-872f-e175060e8f3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbccc7ee-cc1a-4738-833e-0fa56e340dd5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0178942-3082-47e1-a23e-3c8fa5bb95ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873389ac-90a5-46f0-95df-d5d46ac87b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87536eb5-655b-4328-910d-e47ed43608d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "08ac3acc-9cd2-4c75-8593-8d5ea8039c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d2e182-c4b3-402b-acb8-6cd14ae04d6f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd73ba6-a220-4440-96d3-ce7e43b06095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1253dd-9cf0-4886-b4db-c3807527b24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fdbcf7-9d72-4db8-b1fc-de0cb92369f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6983782-0370-4434-822b-8725da152fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4516d8f8-e029-4225-9916-2b43d5589f86",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "582126ad-112b-43b0-bdb5-a5c5de06ea1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3397e8e-0fe0-4fa7-a728-b3ea8fb9c677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6a2f10-6595-453d-92f1-cb5cd86fbbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d69d49f4-6ed8-49eb-826e-6fd2883b7dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e01d3b-28c9-4748-8659-75a012010a9d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16aebd5-b2c5-46db-bb10-40a89664b8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806cb7ae-b78a-481c-bf51-63eaae3ca204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fa842a-c577-4d7e-991e-c77ec2dfa0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed157394-04e6-41ed-bb26-45ec53dc7b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e21cf2d-3fd7-45e2-9926-91445cd46fc3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa912d-90c3-4d5b-a695-38dbd01efebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b720ff-bc0f-4750-b3db-30df28aa1bde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec2f1bc-1784-452a-aa08-9c56d3e899cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a32dbb5f-414d-4694-b648-3a1c76e2eaac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1cf6ec-fa24-4a25-880c-751adc2605c2",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f020816a-62cc-4707-aeb7-09c1d0183f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af2584-7bd3-45c1-809b-41d7a7812819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127f5e7f-6d85-4133-a33c-1b3e94268880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "709fc4bb-3c72-4d82-80c6-e79407d0bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f41ea0-4b52-48ed-a248-c152f107223c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6089fc0a-b3a4-42a3-bdfc-5bffdfac13ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970b8dca-5237-47e8-b372-ef9ed1e2c50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2aff1f-61f2-4d41-b7b1-d1bd3f194ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7223862a-fdcb-4306-aca5-60c3cf28caac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db716004-18ca-47fc-9e51-7f42c4e22210",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b958ea0-7805-482b-97a4-3745a6931bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6487fef6-157b-495f-a9ac-bcf1e6a13092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35b985cd-b7e2-4c14-9c15-0d8dfb2caf46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80bc205c-31b9-4419-b160-0c1f59702a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75473001-47db-46f4-ba7f-f825158217c5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41868408-09b8-43fc-bb83-faf80af50f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfb8328-1c75-48f5-89f6-bec2b755355c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d1a5e4-409c-4f4a-a72e-48faa00d47af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9afc06c-dac2-4069-94fc-01eeb6d4710d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5935771-a289-4550-a815-0da10c3e06fe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b933eeae-838e-4fae-ad44-15da057abe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407af5ca-b67e-4a53-b388-d9f707783ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa11082-4219-4852-8a97-a8c4ccd3703d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a0cba12-21c0-4c6f-9fb9-c789076a2f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64577b5a-c9dc-4029-a710-e94f0c5fe249",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37ffe20-8925-4fef-882d-50f29df037e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f725021f-1ec1-4bb4-8618-46b54a51461a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ab54d9-4e75-4f7f-af58-e50c21247aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f5df6e-9e8f-4f41-9365-3241fb9e81ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f56c5f3-dcbe-4eba-b870-a42de3eac88f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e41e243-d796-49c1-9fba-409652a1ccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f9413d-e5d4-4bbb-9681-f27dbba1d0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c08cce-6476-4ef9-8f20-2e9a3bf26678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8625ba-d7bb-4a95-a7ee-b28fca7aa836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5fbff6-fb39-4963-b01c-ef3681adec4a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98b8a8c4-273c-4968-8df5-f138abaefa13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e17014-1385-4599-93b8-c21a67412d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9e59f4-f26d-4251-bd25-df4a4c9ac88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa57d32-bc78-40ed-8459-1da0822a986c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029b87ad-a0ea-4567-8e31-135741b039fc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d82ced2-e3c8-4ff2-87be-94cc0cc93d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02e419b3-28e9-4ccc-8b34-87c262d783f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d1cb2-da38-4bc9-9c49-8d9c58b29a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "662ed4ec-6fc6-48b5-9826-9b9bc4b8cfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4396cb31-1a45-4905-b0b2-6faa89b1748f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd42bd1-a552-4b0e-8a5c-a44a4e85fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475c8992-69d2-4fbd-8734-69652fc326f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9327db36-8469-4c60-a00e-6ce869e72eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b0e347-3610-4bfd-8078-2ac205c04b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae6638e-e2c7-4982-91c9-d4e1d3c56b1a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162d1d35-07b5-44ce-ac65-a4d523362793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a34938-6f9c-40e5-b023-7cf72b8d5bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59a450b-853f-4b1b-9558-dc2545c657e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59beb327-406e-4756-aade-acf1e014da79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e6ca0c-1608-4546-b95d-2dc6a9c3c5e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a6016a-b5e7-4734-b732-24a75f4198f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d54584c-c674-43c9-b177-23a54952439d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27df1a8-a540-4738-9e1e-5a0334c21d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1920f34-5ae3-4662-8805-ec8b7db5e4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3b3588-4c71-4a1a-9cef-5df9be13bf71",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daada9c9-597b-4d51-9e27-49e549e3bd4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f91639-0ead-47ad-890c-9d6a0090c75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ecf4f-f38d-4983-a5e3-98e494e6c794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a438c2c-444b-41b1-8ab7-837b585fb6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d29941b-12d1-448c-9877-c8a1734b17cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88bcf346-1ed9-4ab7-bd66-8f0b5c0e21c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815115d7-d17f-43c8-a046-d93f93bddf1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a5de19-cfdf-45cd-b1b1-ba0a5d204d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a97073e-e281-4757-b4b1-196b25b20913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b899cc3-944c-46b6-a840-d0f25ab32f9b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa27fedd-d993-45a4-8ee0-000cf8a0d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe639434-3983-4824-b4c9-85e6e00b3b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64429240-65ea-458e-943c-5876eca1704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2943daea-3613-4d82-8be9-11a0153c77e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6576d7b0-2b5f-4f1c-931b-59bcf1ea21ee",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7375d195-66d8-4863-857a-3cd0b31eff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b09c043-8dfd-406a-bb67-c58fb1211a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f64e0a-0498-43bc-a92a-d799ea465e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f54c6c-ccf1-4890-8ef6-90920cb5af49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae80a76-fffa-46c0-9274-575ffb56381b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da62df62-8bfa-45c9-951b-9839eadeb796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe03dc34-f8db-47ce-9872-54501b2f5daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ee135-eb09-4a00-a782-7ef81c397949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "195ce95d-c7f9-4371-868f-6e137a3e5a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "774f8951-982d-478f-b4f1-e282daa74dc3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8181dc9b-589f-42f8-b37b-78b96877491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116f61f0-902c-40c6-824a-0022e68c4650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0aef28-97b1-4210-b205-4dec0212c153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "400487b9-d2f3-43aa-b0d7-fd1a901a27bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d767804-07d6-40a7-a5ca-b6b3e4314609",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a897a9-1092-48b5-9238-50a6c436e0ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc6e49d-0bec-4491-8883-cdc6fd1bce54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ac6b21-f622-4c2f-a700-3d8e10a64b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "25cba96f-d03b-4704-876b-3fa4b0c05969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d736d0-9f98-4878-8aa6-29b60e86c43c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3324e7f0-c556-4966-be0e-bfda515626b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcf0fcf-9ab1-45bd-8082-cf000389131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c831aab1-d14d-4313-b25f-5d8910acf219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af2a0df4-8867-4ac9-a61f-c75ad8faebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6e17e9-038e-4bd4-b211-2a0d9e479d1c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d45fb30-52a6-4206-b17d-21c8a0a081f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15532908-1195-4455-87a5-2340b7d2da18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a2a05-24e7-4213-9ce3-a089f6f813d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24295a73-67ee-40a6-8e7b-490f7895049c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f66a52-561f-46f8-82be-3e324995788a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cd995b-6a3f-452a-b951-124ecd8338ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f9237d-39a5-440f-a941-663b5941367b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f255d1-1a70-4687-9d48-fb418d6a0dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c50caba9-f797-43e3-82f3-7885c84f2367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7464714f-75a7-45e0-97be-f6bcbe1070e4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71fedda-b3ed-49b9-a8e4-083b58302764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21e1bb1-1c96-47c3-a8d0-8498d98a360a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bad7fba-dac0-4957-ab59-afa19c3d0cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c47426b-69d0-4141-a22b-7f3442f43078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79a94ee-4b75-4830-ab15-57a1db003d26",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "549e526d-a653-414d-acf6-15a52cae021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011f41f8-1def-4f7d-92b0-7f54d437cbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e71bb00-d05a-41f9-a911-8c63db3af041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e455ede-03c1-4a15-aa42-72f3e1ed98ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e155d691-55a9-4c85-b213-68324ccebbf4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0b8e23-3779-4a01-b6bc-1aad7753e910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19647846-5236-44b6-8660-5db468b8738a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d9614e-bc96-4c5f-abb8-c554a1db7b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6986fe-2f2c-46e3-92c2-d4d7add763d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bd5aaf-17eb-4789-af3d-5046569b5d0b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe2e021-bc00-41ce-bc1a-5ea3f0d68616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ebfd05-752d-47f1-b2bd-8eec656645be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d05ec4a-2c24-48aa-b598-da41b046e3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f5a2682-fe6e-4bf4-9ce3-8ca77e732d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8280e80-4aa3-4900-bc79-b8c42ab4b550",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e044fbad-5524-4918-be81-4c628f058ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e4293b-850e-4965-a7ae-42d8051411a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c70dcd-cfef-4654-82e9-12b878f4ffe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29169370-3eed-4441-9b96-07e5fe9b869f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d850aff1-3eef-4fd9-8f03-45c110fa87ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6544fb1f-1d9a-4618-9739-79de39c845e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda68746-4f24-4eab-8ef3-e9d9864825e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8324a74d-a321-407e-b175-7cd592c406f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61bf568f-bb48-4063-bdd2-143d29351f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719d2d5e-04f1-4e1d-9ce0-c508003e678d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f36b7-4e9c-4685-94c4-19ff29392295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df48e5b8-9c8d-4b22-bcf5-660d66534001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21bdd8b-1bdd-4ff4-8861-f857d49f0a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd1a5da-7894-4814-b295-88e37c0b868d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ab276e-7881-45b4-b943-7d1b99b07c5e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac96afe9-a748-476b-b0a0-d5067ea057cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7bf8ba4-5021-446c-aabd-da5dc6d3be01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de349c1-d305-40a3-954e-f31d72983790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7a4bc6-71eb-4dfd-a346-16bfe49da241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f267b925-ade6-4204-8329-8cd0b9d1d1ab",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddac1fd-1695-41ec-985b-b15a243a1216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a1f0913-8762-43ac-b297-ab81b42c062d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cd6820-c1a5-4c2e-9cec-6dd2f8d6b5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1be25a-6aaf-4fa0-b492-3f74085856e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3e86d3-41c4-4186-bc0e-ea9c59f6ed74",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc7bac1-9801-495a-89ec-e6c91771efc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe8c1b5-c868-468a-8bbf-84eff8a18057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88962e52-2bbc-4a71-bda1-76833eb47bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7469a415-9ddc-454a-bd06-a7d1a7b50b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429adf52-3392-48d9-bedf-bf651db2090c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f7fe34-7018-4a0b-8721-a1d99b678cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fea731-3b79-494a-88cf-180721ecae91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559c2ec-1177-4abf-b39f-1cf184989b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb7f468-a1b0-4925-9a5a-51e92563457c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "639a77da-e4ab-4e05-96a1-c5af30bdf8d7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb99f3e1-72ec-40be-ad88-bc2f43fc6247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930311f5-9b43-4531-a8d8-41d9ae34e773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5064f5-4d91-4380-98fe-4a2f0374cb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7d75315-c115-4bd6-9a5a-1e7c5fecb0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c03f0e-8b48-4fa6-bd12-22821ba0fad4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583e8dfe-1d75-41ae-8742-aaca69427948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0ab7056-d464-4d85-8250-1ec0ded3abd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d246b54-44fa-4b82-b5a4-8c9383fad08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d98e913-dc14-4d48-937f-8f6158ae3c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e66852-f41a-465d-a637-c97db2143046",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542d5e56-df4f-4eaa-8e98-67c43a4624cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc9f002-1cc0-4b25-aa37-18401358aecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18ee85e-a32c-4265-a6d4-232f1d2a4b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a755e2e7-0cc9-4907-b17c-eea826e8c412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdd85e8-c223-4a2b-98a4-36e67261a118",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e259d1ee-7686-46ac-92a6-8b5bdf9dfb5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5795a186-6d94-4dea-9fe4-b5d9817d3fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d491c487-d3f8-4f44-85bd-240d7f4633ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80a2abee-8dca-400a-9377-35f251018b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b3fe71-1367-4773-9d8c-9e4dfce41a7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1816699-09fc-4bf0-9c71-b2a6aac235b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe5a34c-0411-491f-ba0d-5654cf23f2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716d74b0-0017-4e1b-bde5-9d7bdaf2fc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "874d5b5b-e043-425d-b631-17e5f2c4577d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7330647b-a181-4c81-89ab-d92af7c5095e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b38adb-7bfd-4b24-baa6-823df046b9cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fe54a9-788a-4eb6-8190-82890155334c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b35b142-3f1f-4d91-a26c-c52cbfea077d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "702ec2bf-9c6a-44a7-ad97-ddecbba8325b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46e66f1-be23-457d-a47c-5d1c5dd07b94",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb4a61b-b239-4d6f-b7e7-69d86cb230ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588d9033-8340-4d93-bc47-f8aee51ed512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef9d1bf-2203-4171-9d16-f8107afea522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c811811-1dc1-401d-9468-5ebc7f2058e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2d6b92-6a5a-447f-8322-8bb039f5e478",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "867c2b4c-b3d2-445c-89b8-73947b16404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28637494-9f95-4e92-bad7-ed6ef9dc2e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d93fd5d-3edf-450e-9ee6-9873f22f4546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc65e67-14e9-47fc-afdf-a96365a9a2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7826a5-be67-4498-904e-66f5c79b5ae6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73babb5a-045c-4f14-b9bd-1ef1a8df741e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340782ea-f6bb-42ee-be13-9220a6d29ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f50e0d-124d-4fed-838a-3243208b683a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9dedec6-1b30-439a-a511-0656b96ac4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18164acc-d5dc-408d-83a6-9d7fd7d2f01d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb152513-5d8b-4489-8423-a782f5f60197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3229ba07-b1b8-435b-896a-9c5b1bb141b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a98fbb-a20d-4db6-b82e-6948c33c117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c46f87-f93e-4e59-b15e-2677c69f6f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee353a3-2e6c-43ea-b87d-8be0b983885b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d59392-b208-46e3-a5ec-08c482aaf857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ac40ec-2908-4e39-9284-40457f0284a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2579169-a4a9-43f1-81ed-290f3a002dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a396a9-ad1a-4ee3-9601-7bc718e1daea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceff6a73-2f99-495c-9773-6f26f635abbc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93103e86-03a1-41ab-81f9-ce8813b3df5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81902b37-b6e9-4265-90ba-7a295731f630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c806b541-0565-4a55-a6ea-880a9d53c5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7667e48-4d90-4746-975c-6e1ad445f64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15875a1-62fb-40f4-936b-9b15f7931fe7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3011bad-11e9-4caf-bbc5-9310772a8fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd217906-cd83-4066-8258-9341a7358279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933cc824-c320-4185-ad9c-287883b58a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5bf1f8-badc-45cd-a7f2-4a64f9746ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb34876-311c-40ac-8433-489394faa377",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff685a4-dfd3-47d0-95f6-37912211acae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94679fce-f8ba-4cea-883a-2de1d190b4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a00a00-89d3-471f-b8ee-914198583451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7009b2cb-623c-4af1-9e0e-4b0bc0d922dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ee5b92-53c5-4c76-a6f4-7c35adc5f338",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93e1a58-d82e-4547-a56f-30b51ae46127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9998258b-cf64-48d0-b5c2-0421086bab25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35a27c8-78b8-436c-9d99-cbd0c39dad73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7efd2bc8-3f72-44ef-9347-5f8a51c4de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab1cb7d-42c9-45d7-aa35-5c8adf6197c5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee3bbd29-f315-4423-a857-f6a570dd7038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5d261f-43ee-433c-976f-8088c04fc96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff7205-7d10-41cc-b3e7-5571ac288a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a546dbd-dbe4-4b1e-bb70-1d9dc1f806e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076284c-a527-413f-93ef-2839d06598e5",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6f7f61-61cb-4983-8d90-fc8655a31e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89c3e7b-93dc-4af9-9c7d-b3d8a9c45560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c261e24e-22e2-4d31-be35-eaced15ca430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c665c96c-8956-4bbf-8005-35f8699970b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdb150df-e3ca-4d2c-91fb-2589550d7241",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e7019f-9ec3-4c0f-857b-a5d8d7430457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8275a359-5f47-41eb-aa56-93a852a7c5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82995aa6-7346-4f32-9f6f-0b2653a286e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "136909dd-64b8-47aa-bfc6-a2c37cdca6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ceeb25-17b9-46fa-9a72-751788d09ae2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f521d4-7675-4341-b985-b540cc773f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc380faf-570a-4fb1-8d8a-7497cd707ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5317eea-d601-4de0-9f96-99c098cfed76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddec9e14-6bc9-4b17-a66e-7b1b3f56ca54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81d1994-75f3-40c1-8ad8-9d75f205cc11",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfb9b4e-fbea-4c78-b53b-f808670f6336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1014887a-d007-446c-aecf-ba1e8d8172ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb2eeac-5aa7-4e4c-b9bc-48e3c2eaf145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87fff616-a180-46b7-b851-adabe16075c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb43370-d4d8-4260-b3dc-9a1029e0bbd6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9a1037-f703-4cdf-843a-ba356fcb1719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a507755-e772-4717-9c7e-77de3b392e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11572cc9-cb88-43c3-a9a9-83b6643d7e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2cfe8e53-0339-4cd4-bbae-5f687def9bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a4edd3-df55-41f0-8f67-83d62684e696",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db034f-c191-4abb-92da-1638efa89555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84aaed17-c9d1-43e4-876d-e7008f2234f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085594b0-1e06-49fe-87a8-ef74931e884c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "abd86d06-a36b-4a60-9cc2-10ceafafd604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b880b5-a961-4da8-b422-f7f4783c93d7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7d9023-ce67-49aa-9684-923322bf2397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75f6beed-3775-4217-9cd0-1ed27107b915"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8bfea5-2a36-453b-a0da-f1830b56a4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b456ea8-2d55-4fbd-8e1e-a0fbd403dfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef68722-5c82-48f2-84cb-c07939b6e7bd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b881cda-2e15-40c4-997b-160c33e60949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d458fa0-1a02-4be9-87e8-dc70040afa23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5261f2-3e63-442d-b5ba-5b894e5df720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9b1b3f-f2c5-4148-a30c-d821b3d6c01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7133c27-7bc8-4832-be60-d907779b5e41",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07b2a56-7ff7-4574-b8c2-52c24d758bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3edd3eb-6505-4c40-bacc-74132aad58a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cfefac-a39b-4b01-b790-22dcf8a7cafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91506be3-d403-4f96-ae86-af7feb338f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b604ca0b-f3f2-4dd2-8d8d-2cd3795d1ff8",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a8bc34-6c18-4fb8-bf71-13358bbf8619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bef3246-4fc8-4cab-9817-caf901f57079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6410a4c4-02e4-4d1a-837c-cded35164261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a2620c-2165-459d-b919-93c04431e8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6c8ab5-7c16-4b81-b52f-c1c0e592b989",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458613e8-1063-4664-b0b0-60ad7ce288b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de9c019-f554-4035-8272-d028a8904d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c71979-2aa1-4352-942a-1ac535ff021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "420202f4-4b82-4864-abdc-02c17e5f06d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa4c68-03a0-4d1b-9446-9db5f8458172",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2bf58b5-9406-470e-a4f0-ede728dcc8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39baf95-a9bc-4f9f-9d81-2aca34fd78c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6959d1-b64e-494c-aad7-6712c67f3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d317dced-c689-45de-8a92-3036797a7a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8531342-8ffa-4a6b-95d2-9bc62ade8ac3",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd05ef4b-7ee4-49a6-b3c1-6f54698ce4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c27e55f9-d3c8-453a-9288-480a5fff06b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91300802-e052-415e-a75a-3e6905fb1b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5276281e-bde1-4298-bbb4-dfc620b246a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b60d6a9-3764-470a-8ef0-ede4fb4292eb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e73c06-6cfd-4dff-91da-fbc415fd19b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffa41d7-3f1b-441a-aaee-e228a86d4f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ae292-0db1-4462-a5b8-e34c798eed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6afc485-897c-4934-a7a9-65f737477916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7f8ffd-5628-4e33-b249-0a00770266d2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5838c0-b8c3-49d1-aae6-b772fb20d89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e648fd-bedd-4bdf-a64d-1fe1406c48e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ba0977-d9cd-41c9-92bc-ae2c931dd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e06c93-364b-4047-9ada-6677418dadf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d080ae-8573-46aa-a143-d484683b1be3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a884821-adb5-44c7-869b-4ed1804ea524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "087ac66d-1180-41c4-9321-c766da048a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2557bd7-cd73-441d-aa90-e7fdc6593517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e60c757d-6862-4be4-9642-95af5ad1af5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db3ad02-b218-419f-b34d-74dc6b4ded15",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd724447-f4af-4ecd-8d51-b0b0ca47753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f164cf9-4a8b-470b-83a4-31e995eb69be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289dcf30-30a2-447b-8add-0770c296a9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "546d8c2b-253e-4c0c-87d7-46499070cbc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4cb032-1f6f-4cab-880b-09eb67984844",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78186d21-f256-4a9f-8830-1c9963086563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a564085e-646b-4f52-9002-2e6ae0156606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43aa12c-8ba9-406b-a869-68b78957731a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea9f9f6-8e36-4e1b-bd91-8beba8388f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a19a7ec-76f8-4772-8020-b7f6d662980a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9967a7-0c27-468b-af54-3aff7473e68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0df3ca0-8768-44e1-bbe7-0225874eb668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ca0af3-7ed2-4a7c-8b15-1ee29967beaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbdd426-1280-4aac-a5c7-b40843135656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8804b8-49fc-450e-91a2-be19d940e4d2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e91a88-c329-4082-8fa8-79414e741996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258a3f8c-7bd0-41b7-aa66-3ef395594567"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fc8219-de84-4147-ac60-cf3672e9bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "00feeb51-b388-4a15-8724-53539b086b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ef975-7194-48c8-b670-f2a8fbb490e4",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa61db01-3cd7-4bd2-a169-c297b567dcbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f0a1fc-6a71-4aea-a7aa-9c9d8aad9c14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8c50f1-5fec-454c-8fa2-a98e824cbc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6f7e01-337b-43e2-84b9-4c293d7f3f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d306100b-b95c-4536-a2ed-3c7aa0a0df14",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff6758e-a451-409d-8b8f-c8795016cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b235df5-23fd-48bb-8fbe-538a69af600d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d904dffc-2305-441b-9c37-649583d039cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac2307e3-5eef-47c3-80eb-9affb9276b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf0965-1b15-49e2-8f12-c69d32a69d6f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cded72e-add5-4f29-90a2-c69479b2c149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e5017e1c-9378-47d7-bc3a-ff9c14c99d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4c7db7b-42a3-4c89-910e-e1fcd5b21e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd733bc-593e-4f0d-b094-eeacfb9b91f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b399986-7520-413a-b1f3-b1c17ba1352b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21ef4e3e-f02e-4bf6-840c-1c7ca9ea4b22",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a7d302-70ad-41db-bf6d-2ae7882091a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12a18932-849a-4760-a838-1de956586d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c315ce01-31f0-4335-a6b4-e51463c86893",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ce2b505-1ce2-4fc7-8296-283a7346fb66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "364e9ae2-b578-4866-9a5d-671c6fdeb29a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f71b23e7-9d19-43cb-b320-8e4e965609e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4eeec8df-5f4e-411e-8e54-1a6321dcbcdc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09ab70a9-844c-40c2-ba12-b9f9ee98f72f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5747477b-53ca-4b1f-a079-b41a71cfdf02",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fdf4323-36a5-433d-a692-687129e6a1bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3c71cac8-3d8b-43b7-8bb6-e451adb3d948",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "30999771-29de-408a-a996-46d0193cc747"
                }
              }
            ]
          },
          {
            "id": "37510896-294e-42e8-bdd4-08a4f9399b82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2338cd33-a91a-4671-9b1b-bbc69d22be3f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6702cbe0-c866-4263-91fd-60cedd974fb6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add066e7-0530-446a-b87f-fc5d52ff2e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "00efab69-f70c-4bf4-9ec0-490cec552c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90757838-ee12-4f7f-99be-3138cd72889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c95765-5f74-45d3-9849-857f805bf736"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1a8ad847-1213-438d-9ffc-d7196e6e98e2",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93660f9d-8142-4bff-82c4-3d69d5896f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30894afa-0f0f-4135-85f2-b48c2eb9e6ea"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb44202c-39d4-4f55-937e-363ef39f7118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6588067e-7c55-4053-909e-d59d8a8944dc"
                    }
                  }
                ]
              },
              {
                "id": "a79708f1-1d1a-4a20-b5cd-76d5a9851716",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02fe9ced-100f-4ad4-a527-e0e9f0cd56b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c721813e-10fe-467e-bde4-a34e78d2448b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da6be201-14da-46f0-824a-2e59ceedbe8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "77dfc18c-4d5c-4a89-a46f-ce9b986813fc"
                    }
                  }
                ]
              },
              {
                "id": "bae7a415-113f-4e38-997b-c36932f65998",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "481dbefe-8f66-4f6f-87cc-e34651d58bf4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd6ea3d4-82c8-4bbc-b98f-a2e4c60aa90d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c12745fc-f12b-4000-8a0f-9f3100b070db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dc8ae1a-227e-4058-ad3f-f8d0daed8f07"
                    }
                  }
                ]
              },
              {
                "id": "a9bb06c9-a168-4376-b9d3-5f167099e73c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbbe4339-9752-4a7c-bbc1-9a999cf00105",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65f70ed2-a333-4066-898a-ecd28d663df3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "754faa2d-f7e2-4a80-ae79-74add824bc79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4876c4ac-a230-4a1e-b738-9e0bca64a038"
                    }
                  }
                ]
              },
              {
                "id": "9a364165-121f-4336-aeab-1bb21a46e663",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a75fe21-201e-4a26-be6a-591c4b54fa14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbdcf4e2-7345-4fd1-b803-34525f049d53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f39131c9-27c5-4213-927e-79855e3e4f74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a3b9d380-57bc-4786-891c-a40e2c66790b"
                    }
                  }
                ]
              },
              {
                "id": "a0acd631-79cf-4208-b767-1edd65837000",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eefc497a-eada-4c86-a179-b867ec8bd786",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "11a36a53-14a5-4a05-9c3b-a83953dd248e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbb51f81-a52d-4f64-8909-377f8e65d229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a822db5b-6a8f-4514-a877-9bd533aca55e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "97271497-b952-4e8b-9154-c8d6671ed758",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88f3750c-a160-4ce5-a917-5eee1eeafda7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38c02c8b-1e99-46e6-83ad-148d73a0f74e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "187ed472-7e3c-467c-a639-0467333d453d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb592f21-9ee5-4b18-b505-284a824e8064",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1520757a-056b-4fa0-b36b-76d23cc4b887"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba6fab9e-7e59-4647-9ed0-14992e3a7e3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6acc9796-83f0-4326-a3ba-1f84686816b6"
            }
          }
        ]
      },
      {
        "id": "42f2c363-17fe-4e39-a2aa-ea0164181097",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "22a83187-811e-4735-88c8-669c4336025d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "03c6f2a3-c240-4e2a-8564-2bbc453138e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "663fae66-5e81-459e-a1ca-e7c332c7ee3a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97245cf5-0665-4f2e-88ed-74cacd974300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d11550-6c9e-42f5-95fa-b9d387cedbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41398cf-9d24-4f94-a6e9-c508c7b2c90e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "04297267-bc07-4cd2-acde-80482bb4723d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1fc816-48ca-4507-b809-01e8f38965d2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10237c8-60aa-42e0-8ccc-6b163cd3fee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db727653-85e4-43cb-9a0f-bda20f1cb037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f21596-4968-4ae1-a600-bd08689b0d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ce107df-072f-4df3-8a28-49834ae0aa2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02e5073-c75d-4adf-a9b6-82f8c17b82b4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f73e63c-9713-42e8-ae2e-70a2f76a4172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11dfac5-209b-4945-97df-5e6ab8e4638e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b56837-ebe1-462b-8526-f8b13cdcef4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbbc23c-be1c-4e00-93cc-f17be42a6ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8814f87b-eb4f-406e-aa92-18ef983c74fb",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df214df-32e4-4005-8941-a03bdafe10ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89fcad2a-b997-47c1-aa5d-04a51cac3973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c0b341-644a-4050-b25b-c0902cadef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "648f365d-b829-4b73-aea4-d0615db75cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46addd65-68c5-4396-b883-243f65b8263a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4907ebda-984a-4082-9710-1ca1d8efee4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ba5070-3737-4da6-9d1e-27c3be2bbb13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519e3089-9e18-448c-b15d-664d9d183d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c113555-2594-4438-9819-eb94eb2d3601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf942d32-48a6-46e2-89bd-7fbd4660bcdc",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1797c849-6c5f-4d3a-bc2a-9c4eef4a6c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b01e1f-3e26-4311-8219-69fdd0032aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdfee32-ffbb-411f-a1a2-e6a534df7ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd25b32-6ffa-4fe6-b92d-9f29ffb9de82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecceb77-678f-4951-b886-0d8281499d04",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3aa1881-8e06-4e03-a117-e0323a51b388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "781cf375-635b-4a6b-9623-06727c731e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "078dab73-cfd0-4b8e-80ed-7b16c3c5d2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb02ac8-29e1-4b10-9ae7-4118102f263c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e59d3b-a065-4743-93d7-98c68f24b64a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067732e3-5932-4602-ad29-121d69a684f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8df26d-cb45-44e5-9993-73ff6917e4e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae7cba0-f340-45ab-99c6-c2b72151d429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2fd6b6-8ecd-4e15-9918-1bc841387c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02318864-ab00-4598-830e-45a2d522b2c3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b85730-f1d4-4b3b-a53d-1e463485c341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ef62cd-1e13-4294-b5f9-b070191237ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681f277e-ff5a-49c7-aead-07f435060409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "71275d1b-76ab-4cd9-8720-9cdfde7b00af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "042d190c-8c3b-4a0b-89f8-78a27aa57ed2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e77450-fba7-4817-9b0b-edb5a42af7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d6ee4b4-8a7d-4a3b-a7ca-1d28e87428df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4632957f-673f-4dab-b347-d915d64be2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65f8e2a1-bc1e-4b63-a90f-669182804df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d71e433-9954-48b1-9793-b391f7231391",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e23bc8-55b7-4e01-8d03-52cc585340f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad848d6d-4e18-4c23-9f6f-96bdff87f856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1913904a-61c0-4129-9c07-7c745235ecba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9525d1-30ab-4382-93e6-d66e2563211a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f33faf-b313-46fe-9ddf-4947996ccba6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e72635e-177b-4ece-879a-3f27437162a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bf8705-2174-4474-b5b3-f210578cfff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d41ae5e-9499-4592-a92f-a4bb990e94c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "038e9be9-5468-4eb8-9ef6-c5e253083ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc1ba3-639e-4d90-82ad-3b91b40b4b93",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f37742d-0145-44fe-aaf0-b85550f1ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef680ba-e565-49d5-b6d0-b5dfb4e2f877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288824fe-4eb8-44f8-a584-d1c7601cc57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b36b6118-16c5-4786-a4b8-d8407b1ff0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613a7452-f81e-4c7b-9eac-49b0a61d1912",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e359a0b-7daf-4545-a0ab-516e4b9aeabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b9069e-84c3-4755-ade1-3707eb47d1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9de609e-c0ff-4201-9583-4bf30f90264e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e929e5d8-3eb0-486c-84a7-e8f29632906c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a09e68-9974-4006-898f-6a64f6eb2510",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "663dad46-e481-4963-93ea-98fe8af5f4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc91f124-b862-493d-b9c6-a8b664adb9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4ede5d-5480-4f70-8e9b-55a30c598d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a13edd-679d-4bc3-a460-34b476c23340"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6643a377-9c37-4156-9fba-3eea32d7e697",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c73660-d71e-4e90-bd88-a68dd20dea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004af2c2-cfcb-49bc-858c-90e39f8bf4a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a107948-61b3-41bd-b510-a1725367ebbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "842561ce-7a49-4835-9261-cad92ac3d6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15239c0a-73fe-4141-a239-c750d3a94b8f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021b1868-f8c0-41cc-bd05-d2f355a31d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21b3fdd-1179-4071-8042-0edf5ab6d6e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0219b82f-60b1-42fa-92f1-7432835facc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d216797c-f75a-4966-b18c-926198ac672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a697e8-adf0-4da9-b5db-9e86e5b689da",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6379df66-9e3e-4102-ba39-b9597efdebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8d478d-0723-45a1-b98c-18a5dcd87c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f202386-63e7-4ac9-bfe3-c19a9c8803ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "611e685f-d408-414b-9da5-5f99456174cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0710ed-6bf1-4da5-ab86-732213085820",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3748db94-1bca-46cb-9f10-5f269a82d6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa2ca56-3662-4863-9b19-5c6a9ec64ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517c9e6d-ea88-4a1d-9a06-1548c142e822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07832519-ecbb-432e-8695-e956bccb4603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650b8f75-df69-4023-8e5b-37ebbb98a7a1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "299f231b-5689-47e8-848e-03d38b5fe495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b0fadd-0d1d-4ebe-a7fb-06202b94d7b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a51878-1ef2-4cfe-897e-ef0b4949b685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdadde2b-5579-44e0-82a4-f49ef8af1370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0036e38-907e-451b-b6f2-165b7b8331fd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303aa586-0adf-40de-8671-a14ab339acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944cbb33-26e9-4618-aa1b-e72a857ae5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f736caf4-0025-486b-9835-eea9b62573cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9185c6b9-7fd2-44fd-925e-4f60e8ac7b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff160b3-03bf-43ba-b666-64dd7366cadd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4938b5eb-7935-42d4-a9a1-0e6b213b6175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4467a0-6f8e-4538-9157-e938d6c46d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94ee352-7b3f-40f5-a368-3782422f2637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "908e615f-222a-4efc-95a7-162e85de6890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94389d05-b378-4cc8-a6ba-b1eeca1791b3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcedf2fd-6cbb-4519-9c3b-f49f5066d708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05086a4c-6f39-4073-a1b1-c9ceb48ce43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0d36000-2ca4-42bf-b4ed-5ffb45b44eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e68aff8b-dbf8-46e4-a36e-387feb0a37be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe840490-879b-4d33-bdac-ac904f0d826a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7ceef8-03bb-4374-ae0d-0e504166e3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3208e899-5b06-4346-b8b0-28d72f56c079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063bf8f3-1b99-47d6-8cdf-96b9a84812a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb39cc41-0fe1-436a-8ddf-64dba0871f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565b0487-8661-4597-8369-c0c87ba87131",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6989a5d-367c-4417-8cd8-16d7a1bf9ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bf5914-0faf-4135-9e96-485580a24e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009b6fdb-eaaf-4958-9400-ab8a27dd73ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e67856-bf92-4766-9641-017819661912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b915967f-5688-4c8e-ae84-9c2a1d2b7d9d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41e27f7-3f08-4ee8-977a-21f8e199f472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e701be2-8b02-4c71-afb8-de47df93e520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1283c35-fd0e-43b5-b2cc-9891e55526dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "713a1565-c66a-4e09-a0a8-2b815f7c4e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038ea9e5-5ec7-4119-be7c-8cb80e8df6cb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac30994-31b6-48c2-8359-364390382bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86e2624-e20f-4f71-83d1-c52a7b146b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5618fa48-95b1-43ad-ab17-261cbc886d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d473dde1-f6e1-4f8f-abef-9c712ee7ca22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f332beb8-6cbc-4d71-9ed5-4e473c1403dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3a58c5-5885-4e6c-8ad2-038714ead074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b96fa8-dbe8-4819-b160-25fab4dbce32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d64ece6-1e41-4c75-8e71-d20edc0f7063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45a4fd33-2bb1-4b38-bfdd-21fb5cae1043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19e8972-46e7-4a6a-b517-061c161bc91f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f4f90a-be82-448c-b11f-4d36ec7917ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb387776-791e-4d3a-9575-871313414f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51747ad-0ebf-415c-955e-1b7e103a107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99ef137-dae1-483f-ac96-46edeab4cdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7036dbe3-fde4-42f9-93e5-4a6879515ff0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9a3051-bbed-4190-a272-f46053651eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4093320f-5e56-4c7a-bc78-ac822a2cc820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718ce194-84d5-4d93-b61b-9d46560d8423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b1b012-c088-44a3-bb60-f33b6c03cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89591583-4ccd-4a2f-8617-6583f58cbedb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fb5592-6393-4041-a5e5-d7985f1bdafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b69c0c2-6aff-4956-a424-c4517c3be5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff39693-5d33-4c68-b1f9-bb6fa61d95bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1839bd3f-89f0-4f69-a536-05d8b99b98b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcdb1517-a4d5-424e-84e8-4a9e920f9597",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f792dd6-eff3-4805-a5d4-c26ef6700bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f4f1c7-c9f4-41bd-b566-f6962ff2ca69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d5b7ee-5308-4ce0-8f44-5298867f7fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c2119b-4af2-494a-bc66-bd681dd1e0ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "724f3291-57a8-4b3d-bf9d-fca055a3ae52",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "589ce7f1-24a2-4056-99d6-ef697dc00417",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c60f4d0-7158-4fb0-86de-001dcb9b9c9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9977a50a-748a-424b-875c-5215ef1a299b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec128a5-ca52-4732-a046-c1a253b049f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f92dc31-3acd-455e-8607-cb3ced072023"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be6c062b-dded-46b6-b721-ff20ddac8bbd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e024df32-83bc-44cd-bb42-21b5972b4d9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c198bc73-e69f-4b3b-9cdf-caf26bdfc840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ece3c05-8d03-43f9-b33e-ce9485fc5e23"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff0dfcee-31c3-4431-a04e-e259ca6e0fce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65bb93ae-1c24-4563-b28f-80f603b64bf9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e6bc0f2-aa9e-45c6-b271-eab26787149e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b3b632c-29a6-4f94-ad57-e00b4493339f"
            }
          }
        ]
      },
      {
        "id": "9e97d27a-22e5-41cb-b534-b53ac97300bd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bedb02be-da41-404a-840c-9b42828ae157",
            "name": "Negative Testing",
            "item": [
              {
                "id": "027c35e6-f419-4f13-bb80-4de966ced355",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50eaeea8-3515-49ce-9adb-8fc14dbcb9c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7decce31-f804-4638-9e7d-2f9da0d004cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cfd8d3-52dd-42ae-9a46-a5549f203d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e21a09e0-d0fc-4871-9c16-3149af3e8f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8c3125-c553-4cf9-9e77-66b40fb74530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e7a33-4b69-46a2-a44b-59d2cee03c6b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc59e15-8ce0-48d2-9dbc-77c5912c5f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2da21993-c106-49ac-a804-fcadc0760963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb92f680-ecaa-4283-9702-243ea88ee128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "07af2978-9b57-4500-a077-da53d2bd2966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7cd843-14ef-4f9d-908b-80df4e8bdff6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1a52b3-98f0-459c-9e0f-05a04bd185a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cf340f6-a5df-4fef-9b47-0eac7dfdffaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9270133-b716-4d52-a347-57e8907e9f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd07562-d8f4-4984-b19b-1c75e2abee34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ababeb82-36de-4106-9d17-e8665b222912",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1429303-999a-4c2e-ad46-14d239b22d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df3aaefd-aec7-4520-b067-8c79b0e874f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da29d38-a65c-46f9-a215-18036933c003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee76ac05-7e0a-4c48-a052-9bcef66afc6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a001e0-a0e6-4ee2-8122-932bd6caf92e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f7c529-fc1f-4f0c-aeb4-86657b9e7555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfd747f-aa90-40b0-84f7-e8105c361ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539c7407-c812-472d-b524-cae7ac33ae4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ce7d0a-b131-445a-a074-6c32bd7fdaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752ec689-d635-4c22-99fb-7c9e2444e44d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc56e710-4d16-4d44-ad53-bd74c745dfa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc5a826-3b15-4efb-a129-72fc225dfa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b84a7b0-c05a-47ef-b3b2-f4f36561ec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7eb1802b-3ff4-4cef-83a9-57342b25b350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac709d9-e399-4c61-8214-e8f633f0a345",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c24505-d2e1-4fb3-a2c9-e16b1e0297e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598f2118-e648-41b2-845e-e48785fc3a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea58426-1df6-4e6c-b4b6-351231108ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb0d507-da5f-4395-ab48-90ffc21cb719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34a1e67a-22cc-4cdb-a456-e0bb67d69ece",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc259cf-1550-42b2-81e2-16a22b24980f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42ad5a6-2db7-400e-9309-375bd9eec4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be211f69-53c4-41e1-8396-aba156c6e556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0518c941-fb58-42cb-b828-c92cc2fa6fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0279f41-7aa8-473c-8b5e-43d3728e9135",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ffd3c4-2f3a-42e1-937b-8e1565a17655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0119bd3d-9c48-4e19-a035-e396428b9aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0215c9-a6f0-4b7b-85b5-792674ab1041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a29b8ab8-49cf-4b31-9668-a8688a6695b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cdedaf-99d1-43fa-b02e-06007bac238f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311a0c56-15bf-4663-b209-fb0ffed7a7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba17e66-0bb7-4589-a8ee-9e164b83fc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbeced-0838-4703-8c3a-30cb26b4d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7d0d31-c15a-433c-b7a8-4695b58043f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432a047f-a521-41f6-b21f-bc1ed5a845ac",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f44fa4-c55c-4b65-9f57-6c5ad2c33178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d8a1d-cf74-458f-af97-283854ee183c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaab6d42-ecd7-42d6-9e84-c0920891861b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d670b6db-c81d-4c07-ad63-8f347fb30a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d8e46c-bc41-4d7d-944d-e2c60d39a62f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3f119e-28dd-46aa-bb50-dc68fb122a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d7e9cf-f750-4196-a42b-ad950f887415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e8ccffb-b4bb-443f-a775-fb92dbec0906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c05a1f88-6261-45a2-9ddd-d3fc0a59b5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c55c47-d529-483d-8f23-e64437b8f9fe",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2982585d-f211-443c-80f6-d746aec1b3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e082bdaf-8d64-4910-8247-6b39712d7113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b90dac6-1892-47af-866b-aebde37aca70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2c15cc-971e-44cc-bc09-ba499bc88ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864135eb-7204-485e-8f5f-075da6876721",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53789293-6df7-43b1-a741-546e40b9a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9c207f-d715-416f-ba86-2fa2a51bdc25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff5e4cc-ba50-4696-9737-9de4a13fee93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "064e17b3-3b34-4e06-a01f-cdd67e8e7c85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffe4004-ff19-46a7-82a3-404e8f1bb93f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4629f3f-cd8e-4733-b026-14d7185dbfae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06773209-814f-4cdc-9847-3e4d9ee548bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c472851-b590-4b53-a97c-83578c54732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "28fd17d3-e621-44a5-8831-779a5d3e8bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f4beb1-7f2d-49ed-8ea5-28a0900ea1cb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef9ec61-97a6-4c5a-bf8a-cd4877d2755d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f84c33-a767-4ec9-8de5-66fc7a3f1609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9548c0-9820-4388-be0a-0eea70f08240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "09cc3876-fa77-4169-aea8-7b7cf526c9d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9f6d99-2f71-4921-9b4c-0eaf34406d33",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31be7674-a5bc-40af-b8d1-43c06ce474e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f422cf-2ff1-4e77-ae44-a45801a3e62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679e76de-c39b-41ee-8ac9-80af436552b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c128105f-bb03-43c9-810a-3f8a5925173a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa737bf-656c-46d8-aa01-aa07a48dc57e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449279c9-2754-43e1-9bfc-278e6fdee210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4445ff-a3b6-443d-8839-67ca57e3cec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73196856-765b-45ee-b260-9dcd5dc5e736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ceb63ae-9647-4ff3-adf0-712c5213a374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cf4f8f-d2d9-43fd-9646-27d855a202c2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca9effa-879d-4cea-b684-88e12c17a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2eaeb36-5981-4624-9bd8-0ccba2a0f268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96bd6da-eff3-4125-ad5f-ef7fc5b27822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99dc6361-d5b7-444d-94de-986f85d8e563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca91d47-0036-43a9-838c-0a1334e01ba7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3079b1-bfc9-4926-92c1-c0c00d27612a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e02feb-bab4-4dbb-b8bd-92319a686a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3010bb86-7b82-41a5-95a6-d683d5eb35fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3423a727-76a4-426f-92d0-031f9e9ed4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1835149-712c-4a8f-bdaf-a1769ab7213e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508bd772-43ce-4ac0-a976-cbdfb608e665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e603c9-9a04-44f2-a6c4-87cd98254a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4961f5-34ee-42e4-884e-94bd95aeec1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6488dcd9-56e3-4927-bd71-efe71de32087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fe8bf5-1bc0-4ea5-9547-5130e051508d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59fa47b-6834-4de3-a47a-28bf0bff6294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2a49611-d725-4cef-9bfb-96fbdf3cc222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370f8945-b63b-4216-8917-8cd4fde49b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad098c17-7874-4fb9-8595-9590ddbc1f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c9adc2-acd2-477f-9cb3-8e3fcfb91072",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29228b23-c582-4998-a4aa-9359f1ed20a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7021a6-871d-4339-995b-d4d833cc7752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2674534f-0ed4-45b5-bf96-147dd53f1451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56421f6-6fdb-4d9b-9fea-f68108d5adb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be4fba6-48f8-4027-9a4f-11f76f9ad733",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7f5ba-038b-41c6-9210-30ad6313e680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1855cc48-6c8e-4f1f-89ea-b8cbe451ce3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972a0b36-62d7-432d-b118-833d504e46c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049794c0-708e-41b8-bdbf-0c7892c76cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110a59c5-d541-4b5f-b468-88df153d75bb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5413a8f7-7eec-498f-bdc7-01921e1798b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb8c3a3-3a09-444a-a84f-23f0fa0afcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af44272-8c30-4b88-88a5-16e5c563fac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3298008f-58de-484c-9f3a-85016c3bda07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca741352-94e8-49dd-a073-cc46a0d09df4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "445369c9-b25a-44ac-b9e1-31a0d95d842f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c88d89a-eba5-40a1-95ce-4d13e6421ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916b41d4-e65d-48f1-a6b4-a1d53d3784c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e12b99a-13bb-472f-b307-a005e8d6c0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f857fd07-e8fd-4262-89c0-e785d276893d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba26e06-3cd7-4b64-8b53-0b0b71749559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29615e37-3209-44f7-8391-705de298747a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cecf33-0523-445a-9010-540a475f76e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaef13fc-91c4-46f3-b57f-bc42ef3b88d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ab8968-98bc-4887-9e5c-803c68df759a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa99525b-544f-43e6-b095-0b85d005fa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b83d3ad-1ab4-4aa3-8dcb-7a87e715434f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7353f899-2b61-4347-bdbf-92b1749013a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "310b8468-6e27-42d2-b376-74cdd12f2bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02f4441-8e12-49cc-985e-e2f4c36ffbd6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824dd9ba-4a04-421a-974e-43d7740a4de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3823509-a118-48f9-a1b8-5433ae1af81c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec67fc6-6508-4cc4-acd0-5b2212178bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d7340d-14b6-4a72-b26f-411478f05bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8910dae-4540-4429-abfc-512d8f5ae85b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7195d7-99a5-40e0-8759-598a9bb5af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f071cfe7-fb6b-43d7-bad6-3892831ee63d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ab7542-0820-4197-aa1d-cb58d191f5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b613774-4b42-4a9e-a22d-59379d1523dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0bded0-a08b-42ee-93b9-4339772e171b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f4c841-9d0f-414f-bf66-96cf50578dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2c55a7a-d83a-4126-94b4-4dc7474a4b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864443f2-ed10-47d6-91be-b05ad3268144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7acd8fe4-f3bf-4308-bb19-f752e14b8ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626dcdb9-2790-469d-8cf7-b588d7d0df5a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716f545c-2f1f-4e30-a2eb-c8074437e387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88f9b8bc-badf-42c9-b352-f20619f51ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1b8d70-4070-48f2-b0a6-f8fc97cc191f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e59cce-571f-4494-8f67-01a58844349e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be97ae0-6101-4bc9-8694-a71a7b11ae93",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b2998-7043-4c2f-b185-96bef7ee47af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa840e9a-c07a-47f5-9040-d5a45df9c1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779326e5-5883-40fc-8dd5-d011295741ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0b13942-a313-43e6-88b1-5b8d27b860f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2372a47-655e-4498-afe2-4a64e1137688",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dac41ea-50aa-445f-beed-626345c7d73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4e5fad-cbec-4f44-80b5-d56ec91dd25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a4c40f-3347-4817-8016-059573ed39f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7253ff-b825-4a0d-b63a-8f5deec7fd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac164ab9-6205-4f01-be18-3c46f7300a30",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f19394-9f4e-410a-8801-fcb980d745de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ef3bbc-f19c-4e7f-a311-bf04aacd6e96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f329459-6cb3-4c08-afae-d7502d195a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ea9c99-f7b8-4f12-afcf-037937f07d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4335f8a5-3cea-4e41-8ee5-b3f56a7a179d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0254f5d2-4527-4cf2-9a0d-bc7dad921b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373bee68-8b4b-4485-adbe-761326e264e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acfba544-bcc7-43b8-8c0f-3d4fe9c6b11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa66591-667a-40a7-9d64-8ff335edf79f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dca7e9a-b254-4745-8a83-f45b652bd507",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c530b7-af8f-4bb7-b383-fd9f1f00dd5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53aafed-c8fb-447c-b7c6-cefedd8069ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642316d4-9334-44bf-9f75-9cda829b6d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fb5583-7bab-44ef-8d73-8d0bea158f4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0235c6ea-7b64-483b-8d4a-9d594f53be2e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6a67721-788e-4b6f-9487-07ac751156bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d236c788-b3a8-4c84-9fce-63c24b2ae272",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "de524494-dbc9-45be-a0e1-d394d2ae911c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf29652-2779-42e5-97a9-9750d6cfc7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28f28556-d550-4072-bd5a-a06968f0ab69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b15480fa-4477-4c30-9347-75504a79e011",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96434bbb-5172-4b9f-baf6-92f3f3c538a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de6c4032-8813-489f-9910-fbf2986064c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d549611f-11e1-4b1f-96f4-4845ebbb4b8a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3b73f20-24d7-4dc5-bcdd-4792f9bab723",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f47c59fc-2ae5-47be-9fb7-e4e978cc74fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d1ec13b2-e239-4b8a-a924-521774bd7e67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3f74f43-062f-460e-adae-eb000e7389c4"
            }
          }
        ]
      },
      {
        "id": "1ef97b44-e26b-42cc-b6c8-55e93bb7aa03",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0d49e84a-d989-4487-aab2-1d8c2e2fd4ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2097718d-2b57-4571-a985-1bcdb92cda95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e75e662a-6f5d-4613-b9aa-d07fcede9827",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85b47eb-d9d0-4e88-a57e-eedd20659dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "492e0a7d-39db-4adf-884b-bd18b4d10cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8b4651-96ec-4918-8e23-85ee885b4b2a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce511e-f83b-4152-8696-daaf65c1ea05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce63267-933f-4c92-b574-241d51fe50dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79866a21-13f0-4243-9f2e-d79fd1b1be13",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b4c5a-ce29-4435-89aa-00743a84438e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3483768-f6b6-4fd9-938d-8cec2102c63f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbbcd95-8bb5-4d59-8d2b-709a4ace6330",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dfff3c-6b5c-4ac9-8cbc-68a8094ac7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d935ad-685f-4980-aec7-8d411d97d418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc6b6333-7ab7-475b-a0ae-3269960b8f2e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4baf53-ce47-4b9e-9340-001d3811e568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eefdfd-f718-4ddb-8f87-f561c00312aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d809f-24b9-4559-9476-28eb61983f9a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1b198d-3900-43b5-baa0-74ca7e94e38f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f18599b-689d-4a6d-8fa3-e40f676ca2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a8f5ad-f82f-4e9e-9fc8-0659329f069f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12303ebe-815c-4122-a15e-48d8325b1b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b121816e-ade9-4cce-827b-6bad2772cb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81066dc-7b17-4aa1-838c-e021f2960969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1396f329-9d0c-4a77-861b-889e9e3b55de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3371f67-4d3b-4dbd-b53e-23f650c7fbd4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ed6f00-13c0-4bb8-8fde-2e878ff32685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0631d038-1186-4264-961b-26cb2c15b99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7778e786-bcf8-4945-93a1-302a30ec7230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e501a2a-11b5-4117-9db1-e3b1d25eaf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df83031f-1df0-47a9-a7f0-be19baa9383c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c5330c-8dba-49b6-9f6a-7ac906a201dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3254007-2a74-4806-85f3-36e55252d45a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b571f9-6495-4f8c-b16e-0b14477b6574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b44db59-a233-4066-b344-09d18e4c9a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e988fe3b-79ee-4e2b-a2ea-fbcd8240b007",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed38845-6913-4bc6-8c8a-63f13224b532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dd48c1-7557-42f5-9b77-1edc8292bad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8565eeb-e4bd-48aa-85a0-427e32ea5dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5115cd45-e5f2-45ab-a2bd-a653f1f3744d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab637d6-a585-4041-8a21-74c93af6ea88",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ebddeb-9aca-4dd8-8304-7ffda934710c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ceb073f-35af-48cd-b334-8424cfd7a054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1211e7c1-54f3-4fa6-b68b-aa7f5f871e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b56b74-a198-4c40-94e1-df85919279b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dc6fda-659c-40b1-86aa-f9d2b93a6a42",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23c2388-9269-4db8-acb9-3b707f9fb7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c9b2c3f-00a9-4834-88d3-2fce94ed72c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5cefc4-085c-4c1c-82c0-5e4ab9a84fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51bacbfc-59ed-4cb0-a295-29211eba4e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de26b8f1-c003-420c-8771-5cee25dd9262",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecd5a18-13af-4a88-ba40-7edb2e0826fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2cf1e8-2ded-4cd5-b958-4587717a24ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9060300-1c32-4ad2-a718-464ea6e3fb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ccbc64-0e69-4ee4-ac52-6513e98afe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8e4d32-8a7b-43ea-94e9-483118b0d379",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96495009-2d29-4d72-8bf9-d6aaa2586dbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aac3e334-f155-4f82-82d1-6d83954e5fb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed7ba00-4fb4-4c80-927a-c3eb9c1b4374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35dcfb26-7698-4bfb-9b73-a1695a58e96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31e4f23-d56f-4b87-bdcd-cf2a88167c62",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b40b4d-8ef1-4e21-b056-b8c2f3f45ac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c65f0f-e7e0-48bf-84da-62d5571108a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dcfe2e-25f0-43c4-911b-2244f36c8f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe8c1b5-1686-4b7a-a5ec-e82c0dee725b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1d6fb1-8289-47df-98b8-466b83a30689",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8e7818-e2db-4567-a903-fe9000006a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "511f2208-cda9-49b0-af51-1e3b6d8aeb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b8cb9c-21fd-4f46-bad7-fc3246e03b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42649f63-c2cb-482a-9ba1-32d70777ca3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba957669-53bd-42a5-9a0d-3eb08d775467",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f74b5c-2aec-4465-a2d4-47284465336d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23fc3fb9-2cef-48dc-8406-268777b1b819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb36f07-56ea-476a-a1c4-de83649ff5f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb609782-97bd-4bcb-b237-a84c4403f243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67cd86a-2166-42aa-bef8-6bdddb0ac890",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf609d2-5c08-43e1-99c9-533e4336a783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e57425f3-8b94-49fd-9d90-b527275d6cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697a5702-ed5d-427a-956b-3b862093c0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a87445f-d258-42c7-b713-21250c662070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e89dab-8c7a-4ecc-898c-0b09d82e49dd",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88bd59b5-a43f-42f8-9f79-5cdd1b616185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d5678b-6f43-4f0d-9eca-71c26b853581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4932893d-ed85-47b9-b003-75f03c0fbcd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53f15b49-51c5-4341-8492-e733720b81aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cfd6de-a5b3-441f-952f-6e512db924b4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f50039-211b-435d-abcf-58f786b5671f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d04bfd-6c22-435e-affe-8918ebef2d69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99be0cd-f80d-4274-a59d-134cf01b9f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cf83b8-f69c-43db-97b2-66f723b70011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee948a0a-aba8-42dd-a8c3-0dbefadef5c5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "951b4cb7-80ca-45b1-a2c0-b34dce817306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6c3217-6a1e-4175-a8f0-a1785bc20a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2735b46-845f-4ca8-ae68-cbdfbb59c348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbf4955-a86f-4094-b640-f3ed2ede95e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf67b90-9404-41c1-a1ec-069e827c0ad6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ed9f9d-7f4b-427a-b0fe-6b96b60b8bc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25d9ef14-c007-4e80-b5ec-cc28a958e2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c73b74f-ffba-4386-a5b0-4b52d156aa5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce8eafe-1b09-4962-8f62-d5dfa31185e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cebb88-df94-4b2f-a3f6-043dc19af71e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf986c25-b0cb-4494-a3fe-c72911cae3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b015085-6a15-4905-9528-d90617ddb7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9f018c-a712-4e7d-9d58-380334d5da24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "774f7638-0553-42fa-9c37-b793e5ed1884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "940d802d-1324-4c4c-a3c5-ca98f30bdcd0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc200c0b-82ec-42c7-ad08-b4ebf5a1235b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "915742d8-72c1-4f49-8ee2-90924318a1e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6189bfe1-90c7-4adb-bd5f-42a05926b9fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0087526c-76a0-4463-a0ac-b98e39ae635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481e9b06-fddb-4c13-86b2-9486ab97c531",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f223c42-cb8c-4360-88fb-b50a230621ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b515e7c3-f9f8-4e12-84b6-c8ecbfabc5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf098175-b4e7-4ab8-9c58-7c1a8d845435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9a83b91-a9a8-4299-bec3-a8e8928f7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ce6249-a4f3-4127-a0d5-6b3358f658f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb76fba6-c0b1-479a-9cbe-3facac4bb243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac6dd4f7-0053-4c0c-afb2-a6fd78af16d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736544ad-1ad4-44d2-9ade-7561e2a22b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b054ee3-ebc7-4b03-8bb4-a75febb1505d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80cf5f7-3ae9-46a1-ad52-5fa2f96109a8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d54a67a-dfc7-4241-848f-3cb09e8522f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9c06f6-1f99-46e6-995c-445f1cb7a967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea418a6-62ec-420d-a56b-19418b46640c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dac0ef2-f901-4732-b9b2-64216f3f590c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d199f8-d9b0-411f-9a9e-8b57810b3f47",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2586800-9b2e-42f6-8a39-7c11e3496d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f5bfb2-5ef0-4a98-aa4f-7d129932ef48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9959b82d-85dc-4f30-a3c8-f634b82e6e78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6c05c1-00e7-4035-8a57-27f08c78ae1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6ad032-a3dc-416b-a30a-5740086ded31",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ee41f7-8e2b-4a94-9f1c-5a142ef797d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9dba35-228e-47f5-b4ef-e08d6f5182dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3ce2c2-51a7-4ea1-8f0b-2ee30f815f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810f340d-34b4-460b-8fbc-aca150e2fb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad4d5e6b-e0bd-4224-8ca7-51f87bb76bde",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb3054-f746-496a-b2df-79f0abbbd955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e589fc24-da6a-4406-ba90-5f960b644e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d635ddc9-2350-46d1-9b0e-d3b35c00ae71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a718910-bf52-4780-a925-22c9382a2417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4295c80e-789a-4694-b90b-1256d08cda73",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca079aea-b99e-44a5-ac70-0bf193939d92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f2c68e-53a3-47e8-b3d8-0a8cd00de26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31381d9-a861-4c15-afe7-3bb70278beaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d92ba159-7e31-44dc-9ef1-ddc5c2d06e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcac779-2438-4a93-bdf8-e14cd4833d0c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edae9608-c3f7-41b6-9dc8-58cc971bebac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8752834f-80e2-4598-a180-f97116b2a659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d0a5f8-934e-41de-ac7f-a03caf3668d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff9bd0d-93e6-4a78-8ae2-cb731f92bb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f879908e-e5d6-4aad-93a2-606e1a3e9d76",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa81b40-d7a2-4273-984f-7055fe2f6f87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f763774c-f275-440f-a2ec-8c56ba0cfcb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3594151a-2c04-4ce4-9133-01f8f3c277ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "731ca1cb-244a-4c7d-8b71-eade3e1da6c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd30452-68ef-4301-a3fd-960225c73019",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6c9863-ad49-468f-a09c-90b12e68f970",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e45935-6f63-4529-a80a-5cd508f299a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "700055fc-6035-4d2b-89db-17c983bcceaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad9df5a-9f63-41b7-9631-14c2527512ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef739f0-22f2-4e73-b939-f68ef39b00d1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4351ec5-2301-41a1-b2f2-1df7a6eebb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084d8fcb-d92d-4a4d-89d1-b9899efa2660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2440aedc-a6e6-4ad7-af99-043bf7464767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37dd42ca-03c7-4a2f-9876-daccfc557e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef6f245-9c32-47bd-b499-fb9ffbd0d7e6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fcb11b-1e45-45f2-bf4e-22af2335e813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cef17a-2cb5-414f-8cc6-6ab8c7a0cdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2977d6b5-8545-46e7-98f6-59492e617a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7a9831-ca0b-423f-ba85-2acda0a27ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11556fa1-e0a8-4ffb-9233-427d37b110f9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e11c9e05-66c3-47be-a9b3-b3b0b8e5f82f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c928eb-fba0-4dec-8336-5d16c5ca1b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e948fd64-6499-4302-9341-5b4281184d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf08d6e-2e0e-4993-9a5d-c2fcf7273973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e874f0-3a83-4e16-9552-76e28b9e5765",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c34174e-fa35-41aa-971a-46e00e963a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2845a01-981c-4733-a866-fa08a926e730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63727b6-e9dd-4635-9716-7399e24e42f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c18bcc8a-38d8-4ec2-bcd9-0a8e7595d205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9776849-05a7-4870-854d-01cfb2db819a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd7198c-25ea-44fb-8418-b447cf39f86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a47aa3-6129-4831-beec-b22e32865be8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89152da-95c2-4e61-bda0-3a0417553bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0051fc41-6289-4582-a003-5be5b19f9110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e561b8f1-2114-48db-9309-85ac32da05d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c51728f2-cb92-4a00-b4a5-91902177c940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384d669-7b37-4846-a1eb-0fd3f378384c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab774da1-1fd9-42cf-9f4d-025dc78ff09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77717853-5bdd-4a84-8a03-793907095342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff2562e-95ce-41e2-8a7a-7ee90699d2d8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440a6916-e5ab-473e-a5a5-b4e915a143e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd900c80-f118-4b7e-a58b-cceeafd5de6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44390532-49bb-4238-b969-bd082a797cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14eb59c7-87b1-4359-8821-e7c288a5d81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a883684b-2d24-432f-b738-3850aef0df4a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f2ff75-7ae5-4a8e-9e27-36d834b3ffcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a847e792-1612-436a-9d30-5625b4b9b8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea413c3-4f83-425c-83b6-52ae641b8577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca57ee4-a1ec-4c84-ac40-8c605c4bead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a2c84d-268e-4445-94e4-e446b122a89a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc11b7ff-02c2-443f-b3e3-167dc44ebe8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28449238-d376-4cc7-b4be-1b52a474f8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1cd0b2-43fd-4660-a315-dbf025b11240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0ea01a-6b1e-4633-9a72-15dcd516a160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22bc4ba3-96d7-4d5f-a24b-198a55edda48",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0329801-5686-4196-b2fb-41ba0fde755f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd79fd0-ecd9-451f-8c76-0ab6c130c758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e230a6e-8c6d-4518-9b4f-c314e2821917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69fce1f5-e9e6-48db-91e2-27542129437f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce618ece-fd2a-46c3-bbae-1557941e5ef6",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed38c6d3-c55c-457c-87f0-651980a871e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d814a46f-92cb-4f09-9807-6163d0fa3eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de5b2df-885b-4b49-9f5c-c86fe0ac0b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95172b22-dedf-4b9c-b2a3-82bbda9dbff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb49187a-47ba-4fb4-b559-abb76e009d50",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df54af4a-66f1-4406-b504-57016b091e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f2e376-7ad8-4e37-8649-576df0a4aa4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df1ff73-274f-446b-99cc-07cd05503d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541129ce-4b3c-4a60-81d1-927c3c0ee84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bd4d60-c637-4355-a6fc-a9686ccd6427",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62736890-e6b9-4667-8152-bb87ff294067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11351116-b1f7-4b46-824f-e48217756dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad70548f-df19-4749-aebf-519caf2aa6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba48d80-94e5-43b4-bd62-7aaa2a40f293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d01e43-8287-44a9-8141-6f9b4308db8e",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a099c9-8d9f-46d4-b66b-5a85c5a74d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff3f69d-1ba2-46dc-bc42-495fc345d280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd93edac-337d-4f5b-8c8f-238315492006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0219a5-9430-47df-b68b-1790b98078ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcac9137-d0c5-4319-8a68-62fc0989de2d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b041b7b4-88c1-4f42-b0a2-2b5d783e713b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92deb097-0e0d-43b9-abb1-c4b511b4340f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a145cb-2cb9-4a7f-aa13-4bc7f331dea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b93aefb-f6df-42d5-b3a1-29c2336a4b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda0f759-7d3a-4b91-a677-f454f379ba5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e010ba-5d70-40ac-b1db-d4fbfe37e06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbf9412-fd01-45ad-a0b6-aecf22110916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18afbbcd-eef7-4b65-b657-c0ff911bb534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a376756-a048-4f6d-b264-d635c58124f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fbf9bd-ca2c-4659-88f4-9f049083cdc0",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b915108-c88c-4d54-9d48-0b0b5fe64d58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67150f0-e778-403a-b4a3-697c288b9f39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dde6b33-18af-4ddd-a126-51c0eb810f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0fe9e6-d708-4c3d-bfcc-157cb0cc20a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e868ee-67fb-446e-b160-b4a2ec550077",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816dc891-081f-4a37-b99b-3e805610e8c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97f2354-9f06-4abf-9e31-2588634607ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0e5f6-4a07-4821-affa-94560443b19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c99f5253-a4e7-4727-9de2-ece4bda3f3ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63989980-c964-4b55-bbea-69d49a87c520",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c8ebb5b-afe3-4a80-8287-2dcf1447dbbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5d2e6b-eac4-4829-8201-ac415ac73102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ddb8e94-2c5b-49d7-9101-3e8c80a6eba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f873184a-8d17-4eee-8fde-938a89578f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5d9105-21af-4af3-8ae8-c23910ab7c68",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850ba853-9f40-4265-8e55-d1b74a731d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bda513-f133-4930-b48d-4ae4171c77e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11266fa9-0fde-4ee5-9974-f33041ec5917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68f0f4e-ea97-4d45-9c4e-7c4165cad006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3974fe0c-08b9-4deb-a1f4-636ca19d2691",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57b411c-43f4-4624-87b1-57f29578518b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c102ac71-2237-44e8-9752-bb1d10ac70d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ce750d-e850-4463-a376-569c1c4bbecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf440d7-87ee-48d9-881b-940bd067f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fc974b-b218-48f1-a7c8-0da8d9ea776f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d95144c-3083-423d-bf6c-02bda5bd0af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2622155-bb93-4212-aa1e-5e5208200a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2683400-134d-4e77-9525-7e441abe6b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20355e3-f807-4ebb-ae27-4c6c0a1a88e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fe9d81-2306-43e5-9b36-f5699492c31a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53db24e3-2d0b-48d3-9196-058cddd41265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90668175-9145-48bf-baaa-1c4b4db09f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2f8465-d75e-4b63-bed3-399e45aaca69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b08ed4-4ecf-429a-b8fb-92daa2353e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84d1ac8-5f43-4e6d-93f1-f6c5eefce488",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f9f3eb-4d6c-49a0-917f-c0f6d7dea876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f4c398-6287-42d2-bb66-c5e971f145f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8857134-0c22-47ef-be4e-b34449e25ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5066f67b-a61e-4324-88f4-b92d2e0e2aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603b3823-c95d-44fa-b40b-af3f6c84315d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf5a042-8743-4d66-904d-65c9aca96fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a378583-0040-42ce-a628-2ea1c681ebae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4545b36-0fde-4ab4-8638-894f818218b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca323b5-ff82-489f-bab5-cd8507e9b7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2903fe2-f855-4133-aae2-0bb150b8efc0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3249ac3-0fa7-45d5-9e74-cd3df8838f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0446bd8f-deb5-4ecc-b8d8-3f634905c976"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b808328-2135-4b37-b861-e8ee06c774fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c8fe49-c1cc-4ee2-9209-faf35eeb08a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0cfeab-a36a-4dd6-8886-462dbcfcd6f1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7244ba-8827-4b4e-86c2-6cf866d8d8dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9c4dda-039b-4fd0-8b0c-e891ff5142fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce9b6fa-ad6f-47ed-bee6-6d82d81cb0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceba3aba-935e-4700-a64e-517d59f7757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf869cb-041e-43b5-b5a8-41d9062097ad",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef1f43a-8c0b-481a-a88e-9378d8057cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdc3773-6337-4e30-8c11-2dfa3525bb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af6fdbb-d10e-40ea-bf23-764afafaeb05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3826d88f-3bfb-4c55-820a-104d76e3216d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c7354c-791e-4ead-a344-0b08e63ed253",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e745a8-5148-498c-a650-688a7d7064ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6dbf27-92d5-4846-a388-86a921543b00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214bc10b-19a5-4d73-8df9-3f8a19395219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736e263a-52b9-4db7-a8fb-95c537f2f935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae3157d-2465-472c-bd84-24a960290a05",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11be81ff-56ad-4f9d-a0de-14c266f0e247",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38c87e1-c907-4fad-b6f4-3d6e00191bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bff939a-51f1-4d4e-8d12-2616af2756c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cf8059-3a2f-413c-bcfc-761cabe01deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c699d76-a6fc-491d-92f6-4c5672128a1b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564a4a57-570a-41d4-a324-47c1aa9dd650",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "576bf70e-f1b4-4e0a-9171-18e3159ba387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a92b31e-7105-4368-922d-69ad64605cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a5d3b2-10cc-4dd9-9f58-9e671a27e425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa344509-8115-4b7d-95de-7099dadcc54d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e70e07-0bf7-46e7-8967-20dec3c4091f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33a0a7cd-5311-45d3-8e6a-81d320682e60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be941aee-b4f9-49a1-9656-49e05010997a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb14468-2582-4f81-964d-3fc42aef071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96411fc1-effd-4a9a-8eb9-84afa18bb372",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a740b7-6284-4c53-bd8d-f087e7674110",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f7836c-db4e-48d6-a608-96dac01daef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8f0a69-4b7f-462f-9a03-f121bc141bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e1e512-90bc-4a69-b762-9cd5787f3213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c74d52b-a375-481d-9c71-9e5ac5a099fa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcfc82b-77db-434d-b440-daf344fa7343",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f83b678b-f39d-4ecf-8a5c-9a0155b10b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfccde0a-2535-47b7-bc6f-c4cf9d6f18d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b9e9b83-b9eb-48fd-a178-880d6aaca7e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307087f8-f7f2-46d5-a6d5-06958161402b",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0486d3f-8797-4626-8c22-f85033a037ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8048f8a8-c3ee-435d-b183-f99d4b776c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec450a83-316f-419c-be7d-52c242f29d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e04744-d339-42e5-af0f-c9377eb34505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9684b41-9cb8-4062-9a7b-4d2255698e8b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f8611e-732d-4b2a-81a5-70f9428ad95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "442d296f-1554-441c-8d27-d7f257ffc1c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3235c5-6b9c-439f-bb7b-3cfa3e45ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901a4b69-b7bd-47c2-9289-c8ca8fa18957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed36963-9852-4fd0-a311-9e4bd40a58df",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbb15ea-3cc3-475d-8b2d-7c44b952dd49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e6d3f5b-ee61-4250-861a-20637e3811c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20a0a96-cdb2-41b1-8e6f-3afaae04d2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03299f64-6588-4695-995f-3bb0f2a13e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a32e91-e3fe-4b19-b00a-c362e79d5531",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c45a41-568b-4221-8872-d5569c17f9dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3643956b-9b7b-405d-b99c-a4c4cdf78f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a149472-a0f3-4a55-8188-04eb109ea8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3039ac31-2e20-4cd1-937b-385546860510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85658139-5ed7-4fa6-b4fc-566a2bb81d08",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13596f0f-d173-4145-a174-7df18a2f6a26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ae0486-3122-4eca-96fe-507fe1fcebe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283471d1-04f6-4b17-8acf-6cfa5e9fc07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d688b758-8e41-4553-a8c1-a940c364426f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a0c3e3-62be-41ff-a146-ca3be53cff33",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a236961-08db-4b17-bfd2-fce66b77bb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569bf1e5-bd3a-4536-8e56-08180578b46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1537fb37-112a-473b-bcca-7b29fc027a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce856c0-3d1c-41db-bdd5-39dd68601af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e7e08-7696-4d58-99f5-a98ccac2137b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e213a8c9-2030-446d-89d7-2107c2a288f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "787b2b9e-93e2-4d28-87fd-f51f35219932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca39b760-f9a6-408f-b928-b290eb2a05f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c1c79a-8e9f-45d1-82b1-2c6668e7d26e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3b8348-81d6-41fc-a973-498932577a22",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8033915-d8dc-4640-81dd-891f61d7755a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "023b8333-aa1b-4a56-ba80-4e6ce1936cd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "756540a7-defa-489b-bc99-9f20df4b3c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a82a8d-ddfa-4343-ad9c-63f6faf6e1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e243e4-36d5-477a-90e8-1095b5942bd2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba93f3a-7a55-4c54-8560-e9208f9ffdb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bb5712e-09c4-4a9c-9648-5387c416b9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8833dc-c96e-4178-86f3-59a08c2b1157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eaab4a-bf41-4ed3-a66e-58b24c515d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1953fa-8516-42b7-a11f-1e27505dcb36",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003c1c74-7358-46a2-b36e-f3123cce1602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93fedc1d-a9a6-429a-a82f-b5d1b4d0f3aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11287137-e00f-49d8-8cde-30474f822625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3461465-a2f6-4afe-908b-2eacf97da0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8639e7e3-9337-443c-9128-e8fc14830cb5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e87b08-517d-4d69-84df-9bdbaeae61c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028a52ff-bd2a-4e3c-9ccd-8c9c22c5a689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d77b80-9450-46d1-8cf7-6939823fbbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aca32d6-1cae-4717-b432-1c6425b992b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d9f508-7fec-4601-8197-b3367625710c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c1569-2220-42fc-9234-563d6ec4bcd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "910f4ad0-3418-47b6-9aa5-31324fedc5fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f99d509-75e5-4a64-b178-e085f1fd8902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f02da5f1-d487-4c10-aca4-3d3f4dcb5708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3449c5d2-ca7c-4a3a-9bb9-be8f0a3fa6b5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926a6423-026b-4036-a5a9-a2f4e78b773c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9fe2982-03dd-4b74-a0b3-10793861f2f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4537042a-f5ff-40bd-ae75-33ac7757ef96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6f93ba-098a-419a-8be7-8a24ef2bf2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd232c6-c433-4382-bd17-d7e97ed616f0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c312df38-40bb-46ab-b4a3-dfb1b8a600b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e793cf-8dd9-4b8c-a4e3-47e899e638f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741969f4-6af7-488a-a3a6-e007ad87b66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfdacd58-88ee-41fd-bd9d-a0e427f43272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06053178-9065-4627-86b8-2eb91d46a60c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbbd1f8-f3d7-406e-bd50-f5db875eff72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73333f7-c8a0-4d05-9d49-10e15a44caae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10298b07-6e8d-4ec5-b32a-9d80e5ab627f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0e278a-f5ad-41cb-bc6e-d4501b3e2f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12edfed-073f-4346-a950-a72f719eea28",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16df58f-fd1e-4c21-8309-6753faf85413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c56ae4e-834c-4cba-ac7d-7745f88a161f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc0697-17fb-4d81-a929-40ffdfe4afbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8339120-e9fd-4afd-a1c0-a5d3cf7bbb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e7f78-01f1-4c64-a3f7-d08dfdd62ca2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b98d6d-ad4c-4c49-be3e-cf752f29511c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b478957-8437-46b4-b900-b35a5bf0aca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b577c32b-a3c7-47e2-acd8-e69efc0cb7da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8add6f6-8fa9-4e65-9249-e940f70a2180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9788542-c2e7-4284-9f46-01f14bffc5df",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e992edaa-cf5e-40c1-a79c-7fc1c5232f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf05116-fef3-4a75-aede-7931ac8cbcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747563ee-d7a3-4afe-ae46-8fde40423baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e9a766-95df-4a5c-9aef-c23ba01ecfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25e99cb-c2e9-4558-9fea-2fc2fb2de707",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbb48cd-6019-4d5c-a85a-d4bb32798562",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7aa2bb3-7dca-4975-814d-6612257a5d7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec13db25-d6c7-4f52-a072-5e147d36a6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c96be1-0ea6-4e2a-96c9-85db927d360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18e038c-12ed-4d26-8139-dd8b79bb1fd0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500a4f24-0d49-4c94-a920-bbaf669f8836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a6844c6-c650-410e-971b-9a696f909662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdce030-66d3-4943-a1b5-d234d1c901c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3dfba2f-731f-408a-bf38-ead0b4992041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e9ce6-476a-476a-a030-cf9174fccba9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59956be5-93d1-4999-8151-533d5503c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7220fab-8f29-4676-b375-c85a9630f418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdb26db-44aa-4c5b-b942-131af622fdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a834c4d7-efcc-407e-be59-a01d8c68c62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92555127-e495-4dda-bd24-03bbe4c2fe76",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd7cddd-2b59-48a5-9c1b-efababa22ec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6efa5bb-7741-4368-8f3c-92e6c47f3f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29c1efb-473f-4368-920d-36e580059f46",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce86e0c4-7d07-4363-bb1d-d3286d998d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d720ccf-18c3-4a32-99ef-3a19d1963357",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8daa72-4fd5-4c0f-912c-89b952d08702",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ad59b9-308f-49c1-92f2-4ed3698202fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40652ed4-effc-4401-bd65-16ec135f8689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e4c6bb6-a032-43ce-98f0-826770860093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b74abbf-9c32-49ea-a459-9183d097260e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c370f4e5-834a-4c2e-95b4-ae9b6b0c2ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c36a0275-8566-4ede-ba3c-832065cd82ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecee7574-8528-49b0-834e-aa8c3890e6e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09794940-2cb5-46a7-a165-fc4be2834d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8279d3-df3d-4d65-b3f9-e89ec5c24bfe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033cd293-08ce-4f32-a42c-d96053ee2dfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956506a9-6bc3-4a4f-9a45-411fc070247d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae59c0e-2a80-499e-b06a-a9437ce6e6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8bd95a-25fd-4b94-963c-fa6b3ead1d71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "778785ed-38c0-4318-b983-faa4589cae98",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781de6ad-34a7-49cc-97e4-17334ff2d947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0217ae-dc44-43a0-aed9-3cbcba0fe895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9287fb-fefd-48b7-a443-654a422139ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f0adcd2-7487-4cac-b570-1b91bd2f40aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9ec60f-1abc-44bd-b8f9-8e3411a46f60",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86773cd-ede4-41ea-a671-3ff9bd8dc861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0021d596-10d6-4502-8637-74ea310f535a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bae10d-e086-4271-b380-3dbf6dfd47c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2549652a-3b4c-449b-8b25-57f59dcefc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4431e7-d1b6-4231-b090-7c3a44586628",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bede5fc-775e-44f8-afb1-003d4f232037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce4ec79a-539a-4d1d-8a49-2b3607a3ba42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56624a05-54aa-427c-b3b8-336e15843491",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b37cf8c-6df3-4a24-892f-096780806751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb716bb-6d9e-4a93-97a8-deadafbdb502",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a82a378-dec1-46a1-81b3-b8b7142fe6b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2698b161-0a6a-4aa3-8953-492effb4d3a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbe6e1f-1e11-4209-9380-6e0c3dd27bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d83388-94e2-4da8-84e5-05498a1ce652"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bea558d2-9f40-42e1-8690-4f07ea269b22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29c6f4b4-9998-4464-a56e-c3eee8ae2e64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1fe9d1d1-5919-4c64-8af0-6a523e1028cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35f6ee25-cbf4-43f4-85c0-3612e9c30943"
                    }
                  }
                ]
              },
              {
                "id": "d4d21aaa-004e-40a0-b2b3-1e39aa22c067",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a418ca40-36b8-45fa-b7a6-648a685a5c37",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad1490f-42f5-4077-974e-b005102396b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2807674f-ba24-41d7-a7e0-7fd40f315017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52a413c-3714-40e1-9722-c04634f5411d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7102f3f6-24e1-446b-bf33-5111e27e45de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "735adda8-df2a-4041-858e-27c7ab4dae7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bac0351-1c81-4ef6-b651-76a0e41fe866"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf4bb15d-7b47-4379-8d32-1f973481243a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d61e8211-ca69-48e2-8a8c-71f1d3d421aa"
                    }
                  }
                ]
              },
              {
                "id": "6f46789b-07b1-47f4-a088-cc39d4ca58e0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "90670a32-2e60-488f-bc95-ee758058a83b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09019ee7-37e2-4a32-bc5f-ba50051c29a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e7b01186-fac3-43e2-badf-918a1b273b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7a334a-1ae4-42f9-8fb5-2a2cd504f1bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7345cb9-2115-4059-bcaa-a72a486467bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "65968d2f-6c11-4458-9c4a-1e8301de673c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e13837a3-e9b3-4b05-931d-e1801676487b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "273c1381-c398-450c-860f-4a903c00c5d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b8aacfb9-f952-4443-b7b9-c4850fe52b53"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ffc612e-b25f-4b13-93e9-4d44d480fa19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ef570f8-e25f-4060-8add-773331caa869"
                    }
                  }
                ]
              },
              {
                "id": "ce5026ef-e46a-47bb-8a42-cc8ab4abcfcf",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c531cfa-25d5-4c90-8494-67a77f5a3fae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "345a6c25-d19a-474f-bac5-cc6cb69cba66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eadd970e-0641-4deb-90fa-7849fd6c2080",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3010826d-05e1-4e3f-925c-4863c4f5d87a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4693d44a-42e3-4731-a89b-afe080ad8af8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cbbf3c34-594c-47aa-b82b-a534e49eaf7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a50641e0-df4d-49d3-9a2c-531dc17c3c94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49800b43-94b3-4a1b-9650-017d3e254691"
            }
          }
        ]
      },
      {
        "id": "b152689c-9eef-4889-b912-4ef8eeda9fef",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "94e0f636-4444-4218-915c-6d82c0dc05fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be0065e1-7403-48a6-b566-ff60bb2bef02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8498f02e-52fc-4726-a186-67eab1c15754",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e662ff-10f0-4399-839d-7cfbc79d2b87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "55096308-5ffa-4d29-999c-bd496009ba3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200ee0ca-5b0b-4a9d-ba5f-ef185deeb303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c3d7833-b92a-4ab2-b3ac-37fe3f3368ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58dd2603-b4cc-4137-9096-f912efb281f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "548aba67-3564-49dd-96da-243b079622ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0791c2a-1c1f-4736-952a-c0c4501f77d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84e0023c-d24d-4efe-bb19-ba4bc923c5c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51ae32b1-7ebc-40e4-a314-1ce8bbd08bc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2ed7f6e4-36dc-4b0a-989f-fecde7dfb870"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de04e9fd-e644-4b01-ae98-7a5404fcc7b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15c503e4-ea65-4dff-9750-dc8b45aebbbd"
            }
          }
        ]
      },
      {
        "id": "2fa48cd6-f73a-4523-a511-d4a4a6dd0682",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5df6a06f-8f20-4835-8e8b-3b2871c38338",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3e06240e-abcd-479c-97d8-57ab89a7f977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69a6397f-550f-42e4-9090-0d5ca8a3dd59",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0678ca4e-024e-4c94-a3df-67b9a33b2787",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1695fc25-c877-45eb-8d5c-57dbdfdf300e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6d7c7a-927c-4f8a-aeba-e51a8ae04c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35a16b1c-dd6c-4d9b-88ac-a8b76ca8040e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4dae4c0b-c364-43a8-b47a-c57ab448971a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a81de5c-c0ad-4a49-b81d-0d0c64f22eac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17deac95-6f9a-4703-b0af-aed61b029595",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcdad94b-457a-4820-b8d1-b8daf61de7f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a788f09-e442-4e1a-bf07-c2213c383bde",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4c03c087-cef5-4748-bf28-c86bcd2d7c38"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c9a76cd5-3744-45dd-80f7-a2e460f820f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8bc5de4-9d79-4f1f-b1fe-e16933bc6274"
            }
          }
        ]
      },
      {
        "id": "9141f5c0-5e93-43ae-8e4f-4a2899fa4fd2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "198bcc72-f3bf-441c-865a-0113a51a827b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca85e974-0164-4a11-ae39-5273e835b0d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c176855-49b2-485f-852b-e07eab3b86df",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b2eb36-ac6d-4329-aaae-92b7f1a944a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59124c13-882b-41c7-a0e2-71b52864f9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63598116-ee7b-43d1-8d73-3e93b3341773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8761ff0f-d5cc-4250-a9bf-7d921dd3a0d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8262ad75-2835-4bb4-b27d-916afb04918e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ad09ed8-b207-4e7d-b68a-03d72c4283e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f82c2f82-6d21-4cc1-bc80-a7040077e9dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba586ba3-ed5b-4a44-a2f4-a59ed0f5dea3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c38d55b-ac1e-4172-9330-1f23900bd276",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a739ca43-9ec1-4c66-b926-1399a8f62580"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2efd178a-1313-4414-ad5b-25c997990a71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f1d9b1-ff6f-4da2-a62c-a824afb7ddde"
            }
          }
        ]
      },
      {
        "id": "150d6a7a-9078-464d-9e2d-eb5009bf5718",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "469d99f7-151d-4731-9f3f-a97172531589",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77e254c9-40e9-4da1-9933-6eb70c281e12",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5bf5b7f1-42ce-41d2-9ce1-60024cfae414",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07318b72-1eec-410d-83c9-9ca6789dfd8b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b43d008e-1522-40d8-a8a6-3719e4b9e97f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 121.65263157894736,
      "responseMin": 11,
      "responseMax": 3333,
      "responseSd": 352.6433644534867,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702773528159,
      "completed": 1702773571993
    },
    "executions": [
      {
        "id": "6cb50880-14ec-414c-847a-908931e0f003",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8758655e-2ebc-4834-8730-9f833e6fc918",
          "httpRequestId": "b34418de-1574-4022-86f8-af396f501113"
        },
        "item": {
          "id": "6cb50880-14ec-414c-847a-908931e0f003",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "39db1059-0397-40f1-a310-f28c3d4c2624",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "93761976-d8c7-4cf1-b69f-9021dfdabda6",
        "cursor": {
          "ref": "7b1e0d56-0e07-4acb-be0e-82adc0954b45",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "52b8f3e9-6882-4a32-bc64-59c70f7a8630"
        },
        "item": {
          "id": "93761976-d8c7-4cf1-b69f-9021dfdabda6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f67a50e9-2ab2-458e-aea9-07938da50c4c",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "e708c47f-29b5-4d82-9e28-790ae1960f50",
        "cursor": {
          "ref": "bc751d7c-2a6a-4ab8-9c03-82c9354aaf97",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8d191c27-4101-468d-974d-e3695fe7e188"
        },
        "item": {
          "id": "e708c47f-29b5-4d82-9e28-790ae1960f50",
          "name": "did_json"
        },
        "response": {
          "id": "f3bd0bb2-a1ff-4361-a573-3175f7d1bfe0",
          "status": "OK",
          "code": 200,
          "responseTime": 787,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c08df-16ad-43b6-8398-b014658af60f",
        "cursor": {
          "ref": "688d6478-98ef-4d57-9bca-ad26078d43a0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "221b5302-b0b3-4cb3-8f5a-0f62ab95e712"
        },
        "item": {
          "id": "b93c08df-16ad-43b6-8398-b014658af60f",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec27b128-43f5-407e-b3ac-6cda5a386ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93c08df-16ad-43b6-8398-b014658af60f",
        "cursor": {
          "ref": "688d6478-98ef-4d57-9bca-ad26078d43a0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "221b5302-b0b3-4cb3-8f5a-0f62ab95e712"
        },
        "item": {
          "id": "b93c08df-16ad-43b6-8398-b014658af60f",
          "name": "did:invalid"
        },
        "response": {
          "id": "ec27b128-43f5-407e-b3ac-6cda5a386ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4272270e-95ad-4278-94a0-07302a8ef75c",
        "cursor": {
          "ref": "66c5e74d-13bd-4153-97ea-609f39853f89",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "37af69c3-05fc-41ac-bb1e-8a676506bd68"
        },
        "item": {
          "id": "4272270e-95ad-4278-94a0-07302a8ef75c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "e0ed135e-630a-4f76-bc7b-ac4dfb7d121d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 165,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed12f813-6ba1-4704-ac29-f27f875a5525",
        "cursor": {
          "ref": "d5ad6fc5-58f7-4f23-9f08-721f563fd18f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ea2d595-2e01-4862-8815-1817d8f6a8f5"
        },
        "item": {
          "id": "ed12f813-6ba1-4704-ac29-f27f875a5525",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a5026b94-424d-4135-802e-5ec6052fbfe1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 58,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c2058-89f3-4964-bef2-68484360431c",
        "cursor": {
          "ref": "f8201c07-a8dc-404f-a1d1-dbda8fc05fcf",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2575eb15-f6cc-4c29-ae22-00b7bb6c2c75"
        },
        "item": {
          "id": "133c2058-89f3-4964-bef2-68484360431c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "089c2728-1e39-4729-a2a7-9523bfcc4489",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee03b76-9749-40b4-98e2-13bade7143d2",
        "cursor": {
          "ref": "030a379f-ee83-436e-9068-5c41173e5333",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a833f53b-e3a4-4d85-91b3-ee0862b4eda8"
        },
        "item": {
          "id": "3ee03b76-9749-40b4-98e2-13bade7143d2",
          "name": "identifiers"
        },
        "response": {
          "id": "945fb95f-aa19-4495-b62f-9d19bbc69f14",
          "status": "OK",
          "code": 200,
          "responseTime": 770,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538bb768-c4a4-411d-8c90-bde5b95d2968",
        "cursor": {
          "ref": "64647273-b2bc-4ce9-91bd-33334337dff8",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "027387f4-70bf-4d43-9612-0c20364626de"
        },
        "item": {
          "id": "538bb768-c4a4-411d-8c90-bde5b95d2968",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0c4dc9f9-e240-4375-8f57-68c2b34c5a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c23326-7670-4bf7-8b81-df9d95437101",
        "cursor": {
          "ref": "b44571d1-2c6b-4ad3-9efe-939e5b842df8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d7e0aee-032b-4248-9145-e376d95ffd5a"
        },
        "item": {
          "id": "83c23326-7670-4bf7-8b81-df9d95437101",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb30c392-6687-439b-a2c4-123da1bba3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4fcb52-e348-4cba-9939-fdc19a8b37a8",
        "cursor": {
          "ref": "237312e8-383a-4dea-bbba-7b4be5f76353",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ea4dfd6b-d24e-4c87-a556-b47c7179d027"
        },
        "item": {
          "id": "4d4fcb52-e348-4cba-9939-fdc19a8b37a8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "485d3a96-af82-41b0-bcc9-d40805861b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe09acfc-6ed3-4df6-b75b-b9f266510b97",
        "cursor": {
          "ref": "7e8353a2-2db4-418e-bdd5-74a85702251f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2383dba4-ebb3-4556-b44b-c404ba072b20"
        },
        "item": {
          "id": "fe09acfc-6ed3-4df6-b75b-b9f266510b97",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "aa48c6b3-8156-41e4-8071-071286448e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bd793f-2846-42f0-8dbe-163777e9ba00",
        "cursor": {
          "ref": "2ea90ef4-14a5-4fca-8540-426843488324",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6042c441-4eb5-4143-94b5-62851338098a"
        },
        "item": {
          "id": "c7bd793f-2846-42f0-8dbe-163777e9ba00",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c958b704-94df-47b2-b578-2a110a25cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83c4721-2843-45f0-91cd-d3a1ca3003e3",
        "cursor": {
          "ref": "92ee1b84-6125-46f6-be3f-76d834b777df",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "70cee03f-1e02-4fe8-a977-2bf4de2eecc2"
        },
        "item": {
          "id": "c83c4721-2843-45f0-91cd-d3a1ca3003e3",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "07ccee72-7fda-4241-9a67-b057380549bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb124e0-0eda-4b4b-a8f2-7deeb22ffd66",
        "cursor": {
          "ref": "31710314-b4d0-4c3f-ab2f-cc279193805e",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5ede9990-eced-42c8-8614-46e15a08accf"
        },
        "item": {
          "id": "6cb124e0-0eda-4b4b-a8f2-7deeb22ffd66",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ff19494d-8228-4a19-a011-2d7ba8018741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d906d6d0-3e15-486f-91ff-b6be8bded747",
        "cursor": {
          "ref": "ad9d8f4d-2e74-4d1d-8706-6f6aaa48732d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "19ba9cba-948c-4ade-9c64-d6c6d43dc690"
        },
        "item": {
          "id": "d906d6d0-3e15-486f-91ff-b6be8bded747",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eb84b433-a79e-42dc-afd0-258679fe7b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49bb8af5-1e03-4a1c-bdc3-1d19de2423c0",
        "cursor": {
          "ref": "28d49222-5c81-4044-ac25-5d9456930373",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0b8f8a26-1cb5-4176-b80a-28647e3c2169"
        },
        "item": {
          "id": "49bb8af5-1e03-4a1c-bdc3-1d19de2423c0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34e4570f-f3c4-4bff-b106-4cf5bbf2cf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a114f6-15c6-454b-8f3b-e7964f43b2e7",
        "cursor": {
          "ref": "d6f26ff2-69d8-4f7d-b9f7-e909e0dfa54a",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d5f69aed-ce5e-4fbd-941e-8ce1c5f4ed73"
        },
        "item": {
          "id": "17a114f6-15c6-454b-8f3b-e7964f43b2e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d390adcd-af66-4693-b03d-1ed998e90201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6aef17e-be3f-4ad7-abca-a81cd8b50848",
        "cursor": {
          "ref": "a7e42615-ec0e-40d7-97c5-d20249154630",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f1a37459-0369-4bb4-9e43-856e13c58bb4"
        },
        "item": {
          "id": "d6aef17e-be3f-4ad7-abca-a81cd8b50848",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fc07a0ea-dc53-4abb-bfe9-8d2e7158d7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafe6cff-ed2b-427e-829b-94431e9d1c3a",
        "cursor": {
          "ref": "d070dc0f-5ffb-4f94-b43a-c9dba5eba5c4",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c561304a-b5cd-437f-8c0c-3601be073560"
        },
        "item": {
          "id": "fafe6cff-ed2b-427e-829b-94431e9d1c3a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "debaf5a4-4068-4abe-bbd3-5f927d2536de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ca9971-a98a-4dad-809d-ee77f3c31eb2",
        "cursor": {
          "ref": "d2e1bd6c-1f8c-400b-9440-6db352398722",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1706d60b-33c1-40be-82c2-26e2198aefeb"
        },
        "item": {
          "id": "b4ca9971-a98a-4dad-809d-ee77f3c31eb2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "6e447d10-369f-4763-a8b7-33881c7d9517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1590c8d-df5a-4cda-b1fe-8f332c288ba3",
        "cursor": {
          "ref": "2ba09723-142e-4a3d-af62-a84ec562c82e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d57c103-1450-491f-8e86-efed652359d5"
        },
        "item": {
          "id": "f1590c8d-df5a-4cda-b1fe-8f332c288ba3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "eee5e0e0-7478-4d01-b269-cfbbc40543fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cef99d0-6918-473f-82a4-5829f22deae6",
        "cursor": {
          "ref": "45ddfa65-e6d0-4599-9ca5-e06f50a2cac0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fbd7759a-c052-49d7-a353-a0974b580dea"
        },
        "item": {
          "id": "0cef99d0-6918-473f-82a4-5829f22deae6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c5fef832-5447-460f-ac9a-e6d2aad6c163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbccc7ee-cc1a-4738-833e-0fa56e340dd5",
        "cursor": {
          "ref": "0774beee-e908-4028-9d70-7bc1cb384a19",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d944a01d-1a8a-4747-9415-1a771dde79ee"
        },
        "item": {
          "id": "fbccc7ee-cc1a-4738-833e-0fa56e340dd5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "3058d863-eecf-4a76-b58f-1485bf3daa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d2e182-c4b3-402b-acb8-6cd14ae04d6f",
        "cursor": {
          "ref": "e2b56b5a-b416-47e1-91b2-1691bc9e0b64",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "bf2ba6f2-f9be-4025-a257-2b39b1e68722"
        },
        "item": {
          "id": "52d2e182-c4b3-402b-acb8-6cd14ae04d6f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f424ddd5-4a04-451a-b320-1c9d8a02b03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4516d8f8-e029-4225-9916-2b43d5589f86",
        "cursor": {
          "ref": "56ac9235-193b-4b14-b894-c0c4bd36af0b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9aadb0eb-f7b7-4513-887c-492899175010"
        },
        "item": {
          "id": "4516d8f8-e029-4225-9916-2b43d5589f86",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "19ab1945-97d1-420f-bd49-44b5f2493b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e01d3b-28c9-4748-8659-75a012010a9d",
        "cursor": {
          "ref": "527bf957-af58-4f70-b6a9-7a90ec2c6894",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d60e3290-e7ec-4a87-ae91-b035d66beaea"
        },
        "item": {
          "id": "59e01d3b-28c9-4748-8659-75a012010a9d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a5671c9a-69c3-42fa-8494-3523f4d5827f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e21cf2d-3fd7-45e2-9926-91445cd46fc3",
        "cursor": {
          "ref": "ff8b4736-e8f4-4192-abe5-e4d03cec348b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ca520058-8613-4d07-9c21-8445b3df32b5"
        },
        "item": {
          "id": "9e21cf2d-3fd7-45e2-9926-91445cd46fc3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c3eb95c5-760f-4312-93e2-46158a261aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1cf6ec-fa24-4a25-880c-751adc2605c2",
        "cursor": {
          "ref": "4d3c3bb1-cc9a-4334-bab8-ee5a990c5bb1",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "39089292-8837-4117-91f8-5c6a67a9b9c0"
        },
        "item": {
          "id": "0a1cf6ec-fa24-4a25-880c-751adc2605c2",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "60cb3466-4f91-4b9c-ac86-fb9e22955de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f41ea0-4b52-48ed-a248-c152f107223c",
        "cursor": {
          "ref": "29d7ce2b-12c9-4fe1-8123-4bc2bdbc11b9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5b38e4b2-7e1b-4e0b-8aee-8ccea6bf4567"
        },
        "item": {
          "id": "a3f41ea0-4b52-48ed-a248-c152f107223c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "520e5c4c-3bf4-4cf6-add3-75c53f7463a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db716004-18ca-47fc-9e51-7f42c4e22210",
        "cursor": {
          "ref": "3b14fbdf-38c7-4b58-a362-5398ba84032e",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f123e64e-03c9-44dc-bfc9-39143a514c26"
        },
        "item": {
          "id": "db716004-18ca-47fc-9e51-7f42c4e22210",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7ecb64ed-fc29-4c4b-9536-f5060ed3c4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75473001-47db-46f4-ba7f-f825158217c5",
        "cursor": {
          "ref": "00132499-50b9-4f9c-8fd5-bf75476ba31d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f7b6ae59-fe4a-4f9d-9ea9-0804cfc64cfa"
        },
        "item": {
          "id": "75473001-47db-46f4-ba7f-f825158217c5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "be6c77b7-ebce-4240-ac97-b035a8b6b406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5935771-a289-4550-a815-0da10c3e06fe",
        "cursor": {
          "ref": "49c91d9e-9b52-4471-b26d-4792567d9a7b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "60bd97c9-f0fc-443e-b10c-0732906ec404"
        },
        "item": {
          "id": "b5935771-a289-4550-a815-0da10c3e06fe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4380b6ce-a806-4807-9d93-15eb92a78836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64577b5a-c9dc-4029-a710-e94f0c5fe249",
        "cursor": {
          "ref": "43085289-6e02-46f0-b787-1bce200a55c9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f2c1158-aaa7-4875-9ff1-e5edeabb3e9e"
        },
        "item": {
          "id": "64577b5a-c9dc-4029-a710-e94f0c5fe249",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8597843c-8b0f-437c-a56d-bccb073b528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f56c5f3-dcbe-4eba-b870-a42de3eac88f",
        "cursor": {
          "ref": "db31a8f4-ca72-4ee1-be9e-147eca33f33c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "640df0e6-8b8a-448a-b546-6ac32f173640"
        },
        "item": {
          "id": "3f56c5f3-dcbe-4eba-b870-a42de3eac88f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "765b97d6-e17e-4e6a-914c-5c842fe476d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5fbff6-fb39-4963-b01c-ef3681adec4a",
        "cursor": {
          "ref": "ec592cc6-2f55-46c4-a3b0-e88ebceacc7c",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fc5742d6-ed72-4d36-a2e4-9f0814c289a1"
        },
        "item": {
          "id": "7b5fbff6-fb39-4963-b01c-ef3681adec4a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "84aa5617-57a3-418d-9da1-30a24b292983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029b87ad-a0ea-4567-8e31-135741b039fc",
        "cursor": {
          "ref": "741ee48a-5c23-456d-afc9-746c7ad04167",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "32ab4ef3-ede6-41e3-bd33-2ab8b31211fc"
        },
        "item": {
          "id": "029b87ad-a0ea-4567-8e31-135741b039fc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9c597f14-ae2c-485b-ad37-b753a5bc11af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4396cb31-1a45-4905-b0b2-6faa89b1748f",
        "cursor": {
          "ref": "ab031ac8-293f-4359-89bb-257b334a59d0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6524fb17-f0d4-4e26-8357-8ab0749e23e3"
        },
        "item": {
          "id": "4396cb31-1a45-4905-b0b2-6faa89b1748f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c70f587c-aa98-46f9-be65-a8efcedbf995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae6638e-e2c7-4982-91c9-d4e1d3c56b1a",
        "cursor": {
          "ref": "dda0a7e5-8e76-4374-9674-936b0b465ecb",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e0dae8d6-f0e0-4876-bfe2-455ee729cc34"
        },
        "item": {
          "id": "7ae6638e-e2c7-4982-91c9-d4e1d3c56b1a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9778e9fd-a63c-4385-bd09-7a1dfd5ffba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e6ca0c-1608-4546-b95d-2dc6a9c3c5e0",
        "cursor": {
          "ref": "fecd9d66-2bc0-4e1d-9b26-7965719bab2c",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a286b5b-9e6e-4bab-a6f9-1ba8173c7bbc"
        },
        "item": {
          "id": "90e6ca0c-1608-4546-b95d-2dc6a9c3c5e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "78b7450e-8c67-4ae2-a7af-6dd1c1d8c15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3b3588-4c71-4a1a-9cef-5df9be13bf71",
        "cursor": {
          "ref": "bd8921c1-a4cc-4c38-8492-aac9ad292ddb",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "04833803-b248-4d5c-aa21-1a4c39df239d"
        },
        "item": {
          "id": "fb3b3588-4c71-4a1a-9cef-5df9be13bf71",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4f9a0b5d-9efb-4903-89a1-3c79340c82f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d29941b-12d1-448c-9877-c8a1734b17cd",
        "cursor": {
          "ref": "4c0e0206-a0bd-430c-af20-135296a3d33f",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "095932fb-ce98-44be-b272-348061b52454"
        },
        "item": {
          "id": "2d29941b-12d1-448c-9877-c8a1734b17cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "92485fe2-f783-4d6a-a442-9671877cd012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b899cc3-944c-46b6-a840-d0f25ab32f9b",
        "cursor": {
          "ref": "fdb7e1ca-0d07-4f8b-a769-6c6708d1286c",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "98f9df97-490f-461e-ba31-b3604626a7e7"
        },
        "item": {
          "id": "9b899cc3-944c-46b6-a840-d0f25ab32f9b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cabaec5f-a5c3-4290-a478-ba1ae67d61ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6576d7b0-2b5f-4f1c-931b-59bcf1ea21ee",
        "cursor": {
          "ref": "7c3629c8-e9ff-451d-ae6f-56470c0882cb",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3c3a1ba9-e94b-436d-915e-010ab41bdd1e"
        },
        "item": {
          "id": "6576d7b0-2b5f-4f1c-931b-59bcf1ea21ee",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ee246d90-dd0f-482f-870d-15fe736a086b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 352,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae80a76-fffa-46c0-9274-575ffb56381b",
        "cursor": {
          "ref": "f30f102d-1137-4193-8648-575fe0ef21a3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2cfb6ba8-e035-4c16-ada6-c7180267e313"
        },
        "item": {
          "id": "bae80a76-fffa-46c0-9274-575ffb56381b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "85b28837-9172-4758-ac9d-f24e3708659d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "774f8951-982d-478f-b4f1-e282daa74dc3",
        "cursor": {
          "ref": "5b4793bc-a231-4f87-85ce-8bb782527127",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "dbd69d0d-e017-463a-8931-b742a72c4414"
        },
        "item": {
          "id": "774f8951-982d-478f-b4f1-e282daa74dc3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dc436ad1-44e2-4c7b-97e4-7b62e97e07a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d767804-07d6-40a7-a5ca-b6b3e4314609",
        "cursor": {
          "ref": "f379ac88-309e-4ac1-ae1a-d60914e1c41c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b088bcd6-141d-43e2-8a05-847530d3295d"
        },
        "item": {
          "id": "2d767804-07d6-40a7-a5ca-b6b3e4314609",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "781e1c24-d6f0-425c-888e-265c4d45cd56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d736d0-9f98-4878-8aa6-29b60e86c43c",
        "cursor": {
          "ref": "d6bb3eb6-6afc-4dd7-be27-c2427ef8b634",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "cdede5b0-bce1-4c54-b77c-e4eb20091e8c"
        },
        "item": {
          "id": "e1d736d0-9f98-4878-8aa6-29b60e86c43c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b99b5762-9872-41f7-a282-4dcd3dde18b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6e17e9-038e-4bd4-b211-2a0d9e479d1c",
        "cursor": {
          "ref": "c756f1af-c7d4-4e35-947d-112257154039",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c3485314-0cf4-40d0-a211-57a46c06ac66"
        },
        "item": {
          "id": "7b6e17e9-038e-4bd4-b211-2a0d9e479d1c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "79a039fd-684a-4691-9c1a-6a3e82a94f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f66a52-561f-46f8-82be-3e324995788a",
        "cursor": {
          "ref": "0129f16c-c5a1-4392-8843-5bf578dae6dd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d7921588-80a4-46cd-a50b-fed6dfbf36e7"
        },
        "item": {
          "id": "54f66a52-561f-46f8-82be-3e324995788a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3254d6cf-c42e-4d12-a0a4-80436077320d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7464714f-75a7-45e0-97be-f6bcbe1070e4",
        "cursor": {
          "ref": "46927476-659d-41c1-a167-c9924c8ce3c4",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "31eee52d-6197-4352-ba6e-84a6926e26d7"
        },
        "item": {
          "id": "7464714f-75a7-45e0-97be-f6bcbe1070e4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7e3ea581-f840-4ae2-8de7-fb70d08af55b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 333,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79a94ee-4b75-4830-ab15-57a1db003d26",
        "cursor": {
          "ref": "ca63e9bb-a47b-408e-a855-b3523edf8090",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "142b9e86-a02b-4ae7-af30-aaeba6aa480b"
        },
        "item": {
          "id": "f79a94ee-4b75-4830-ab15-57a1db003d26",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e477c6d4-d841-4415-ae97-44b042114fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e155d691-55a9-4c85-b213-68324ccebbf4",
        "cursor": {
          "ref": "1ee63d18-99f8-4648-9470-37e0fdfaa9f9",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0f3d7fda-bc04-4833-9fb6-74cbac335bf8"
        },
        "item": {
          "id": "e155d691-55a9-4c85-b213-68324ccebbf4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "07b04832-37a1-49f5-9d35-bd0730efef15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bd5aaf-17eb-4789-af3d-5046569b5d0b",
        "cursor": {
          "ref": "7b057fbf-f17c-4f07-a096-5dcff1b9420b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a5408486-50de-4821-aed8-c31f2861271f"
        },
        "item": {
          "id": "e0bd5aaf-17eb-4789-af3d-5046569b5d0b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e55eded6-8469-4da3-a5f7-91478d9c9086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8280e80-4aa3-4900-bc79-b8c42ab4b550",
        "cursor": {
          "ref": "7b20f6a7-7146-46f2-9cad-bad789100502",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "47564748-00d6-441c-80c7-463044ba3d26"
        },
        "item": {
          "id": "e8280e80-4aa3-4900-bc79-b8c42ab4b550",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d7debb91-eaa6-409d-9274-364355523a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d850aff1-3eef-4fd9-8f03-45c110fa87ac",
        "cursor": {
          "ref": "387e3c0d-d07c-4c3b-9ed2-8dc78abcc4eb",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36b95abd-b4d5-4b45-8a46-4b68de86ffe7"
        },
        "item": {
          "id": "d850aff1-3eef-4fd9-8f03-45c110fa87ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b3c5a2b7-5179-4e87-b621-749357c001c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719d2d5e-04f1-4e1d-9ce0-c508003e678d",
        "cursor": {
          "ref": "93040c31-ef46-4363-8119-48d8d45dda6a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2dab32fa-6eff-4c89-9882-a763e4d6e6cf"
        },
        "item": {
          "id": "719d2d5e-04f1-4e1d-9ce0-c508003e678d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0f1257da-da07-40cf-9229-e32caad7f2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ab276e-7881-45b4-b943-7d1b99b07c5e",
        "cursor": {
          "ref": "b829c6d0-61f5-4123-89f3-f2586d8aef8d",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9c8c6394-672a-4158-ba5a-bf25d27f187c"
        },
        "item": {
          "id": "13ab276e-7881-45b4-b943-7d1b99b07c5e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "96809f4b-9bca-451b-8dcd-207737017396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f267b925-ade6-4204-8329-8cd0b9d1d1ab",
        "cursor": {
          "ref": "0610b30d-98fb-409a-8aef-4bb2bcd170bd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fda98d00-532e-484f-abdc-b0990a670d27"
        },
        "item": {
          "id": "f267b925-ade6-4204-8329-8cd0b9d1d1ab",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7556bd9d-72f3-4643-ac70-e5a5ec3ac884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3e86d3-41c4-4186-bc0e-ea9c59f6ed74",
        "cursor": {
          "ref": "964ab672-a9b5-4a64-82f3-ca12f5b79156",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f2134a58-7020-4b5f-a4e7-ef7d6bf57bf3"
        },
        "item": {
          "id": "3a3e86d3-41c4-4186-bc0e-ea9c59f6ed74",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9b9bce7f-91b3-4ab6-aa34-2779499a5657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429adf52-3392-48d9-bedf-bf651db2090c",
        "cursor": {
          "ref": "a49e86d2-99a6-4635-8bff-ddf09ad7a330",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "21963d94-d3d3-4488-8023-ea8c438d2e92"
        },
        "item": {
          "id": "429adf52-3392-48d9-bedf-bf651db2090c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "16e94b66-7724-47f6-8afa-0cdce60b1d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "639a77da-e4ab-4e05-96a1-c5af30bdf8d7",
        "cursor": {
          "ref": "48011a80-387d-4588-8b92-1e70afce641d",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ca97ede7-caf5-4a2a-bd27-88db14f7509b"
        },
        "item": {
          "id": "639a77da-e4ab-4e05-96a1-c5af30bdf8d7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "04aacdfd-3bc5-479f-80be-3f3e560922ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c03f0e-8b48-4fa6-bd12-22821ba0fad4",
        "cursor": {
          "ref": "201e00bb-e057-4a76-9098-7bd6c34cfbb8",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "62363aa1-614d-4002-979e-a94b38241312"
        },
        "item": {
          "id": "e7c03f0e-8b48-4fa6-bd12-22821ba0fad4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "477e8679-60ce-41be-8acd-c85ea5e803f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e66852-f41a-465d-a637-c97db2143046",
        "cursor": {
          "ref": "f977058c-bcb7-49dc-b692-0f4fd94c1f02",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "deec4821-04c5-4c68-85c0-740c22698a08"
        },
        "item": {
          "id": "66e66852-f41a-465d-a637-c97db2143046",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "47edda89-0840-4b9f-81da-bad715cd70bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdd85e8-c223-4a2b-98a4-36e67261a118",
        "cursor": {
          "ref": "8b9a71d9-25d9-4329-b412-7591c74b7b9a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "58f818c5-3007-4299-9662-1c2df6f07869"
        },
        "item": {
          "id": "8bdd85e8-c223-4a2b-98a4-36e67261a118",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f22b7a66-3719-4334-8029-279e000c26fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b3fe71-1367-4773-9d8c-9e4dfce41a7d",
        "cursor": {
          "ref": "d30f8273-f281-4f3f-b2a7-44e1366b238a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1fd1ecc6-a096-4d32-bb5d-5df1ca90fb5d"
        },
        "item": {
          "id": "f8b3fe71-1367-4773-9d8c-9e4dfce41a7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2e7b7abd-d93f-4b34-8899-dc619817bb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7330647b-a181-4c81-89ab-d92af7c5095e",
        "cursor": {
          "ref": "8f131ed9-ceb7-4c26-97ae-c6603809256f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2c9540e4-3c80-44a0-bde0-02d08876837d"
        },
        "item": {
          "id": "7330647b-a181-4c81-89ab-d92af7c5095e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f28379d7-ae29-4df4-a616-162ec8dedff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46e66f1-be23-457d-a47c-5d1c5dd07b94",
        "cursor": {
          "ref": "5498bf40-e33d-4a9c-bb7e-f44845ceb2c8",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "bf9a9c8c-ac98-42f2-9afa-5accd401a872"
        },
        "item": {
          "id": "c46e66f1-be23-457d-a47c-5d1c5dd07b94",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "863ac46f-5f60-49e1-8695-8d594abbae3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2d6b92-6a5a-447f-8322-8bb039f5e478",
        "cursor": {
          "ref": "9694a88a-35e5-447e-8817-d0d31d4a56d5",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "87bb79cd-4ebd-41ee-999d-8bf963d34856"
        },
        "item": {
          "id": "bf2d6b92-6a5a-447f-8322-8bb039f5e478",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0dd38264-145e-4f0e-8c05-6877a320ad8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7826a5-be67-4498-904e-66f5c79b5ae6",
        "cursor": {
          "ref": "96f2d608-97ca-4a2c-9452-065abac07961",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "04e4b987-e714-4e0d-b0c6-80dd8c400ad6"
        },
        "item": {
          "id": "5c7826a5-be67-4498-904e-66f5c79b5ae6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d6e38732-f085-46c4-a351-9a2570a8f3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18164acc-d5dc-408d-83a6-9d7fd7d2f01d",
        "cursor": {
          "ref": "708e1f4f-ef52-49d8-9d3f-0d634abe4570",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "be778576-6fdf-4862-a1e3-801a45ffcdd5"
        },
        "item": {
          "id": "18164acc-d5dc-408d-83a6-9d7fd7d2f01d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6fb5c6b6-402c-48e1-b914-c8904c1b5bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee353a3-2e6c-43ea-b87d-8be0b983885b",
        "cursor": {
          "ref": "ef8bade4-b38d-4a82-a834-1796eb5db678",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f8337ff5-1308-43e2-8172-46959c34bf47"
        },
        "item": {
          "id": "fee353a3-2e6c-43ea-b87d-8be0b983885b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "17a564ae-2c39-4ce8-834f-3a3e49056205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceff6a73-2f99-495c-9773-6f26f635abbc",
        "cursor": {
          "ref": "d75a0ed6-9948-401b-a9b2-bd7780a7b3b8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a4eddd06-e65e-4551-8dc6-b301acf53209"
        },
        "item": {
          "id": "ceff6a73-2f99-495c-9773-6f26f635abbc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "32f339ef-4599-425d-9b91-ef702c5b2bf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15875a1-62fb-40f4-936b-9b15f7931fe7",
        "cursor": {
          "ref": "00481e4d-4392-487b-9d25-4ae63b9f4c9b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a7727e0c-032f-4df0-84bf-065fdf91a316"
        },
        "item": {
          "id": "a15875a1-62fb-40f4-936b-9b15f7931fe7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8edeeaf5-fbc2-465f-969e-c4ad8ae78009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb34876-311c-40ac-8433-489394faa377",
        "cursor": {
          "ref": "da86ad52-822c-4928-b267-562c593c2155",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "abf2da1b-86b7-4d0d-b27a-20ff40d3e02d"
        },
        "item": {
          "id": "5eb34876-311c-40ac-8433-489394faa377",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "98bc59d6-2bbe-4c11-b022-40392be99b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ee5b92-53c5-4c76-a6f4-7c35adc5f338",
        "cursor": {
          "ref": "360289b0-c7cf-4608-b720-6375394dbd49",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "15378b4b-4069-409c-a1e6-1e9a0e29df9b"
        },
        "item": {
          "id": "c6ee5b92-53c5-4c76-a6f4-7c35adc5f338",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c1781f08-2154-4d1e-beca-8e4507cb8eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab1cb7d-42c9-45d7-aa35-5c8adf6197c5",
        "cursor": {
          "ref": "4a8d170f-0a8a-4514-bd14-f225afe74d3e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "22a77e5f-a436-4531-ac05-69e9b0641f24"
        },
        "item": {
          "id": "1ab1cb7d-42c9-45d7-aa35-5c8adf6197c5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f36b420e-45be-49a0-bdaa-e0e763657026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076284c-a527-413f-93ef-2839d06598e5",
        "cursor": {
          "ref": "055c117f-42c3-44e5-8541-371036cf57da",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ec86f07a-c3f9-4ca2-b08c-0e82f7c9feb0"
        },
        "item": {
          "id": "f076284c-a527-413f-93ef-2839d06598e5",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "51146fa0-be5e-4007-9824-3a081964ac91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdb150df-e3ca-4d2c-91fb-2589550d7241",
        "cursor": {
          "ref": "b4d67bb2-3410-47c0-b620-1d63ae168e57",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "16874e5c-53b1-4841-8ad1-9dde1e86cc06"
        },
        "item": {
          "id": "fdb150df-e3ca-4d2c-91fb-2589550d7241",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dfd7781c-7019-4701-be09-21ac170c38ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ceeb25-17b9-46fa-9a72-751788d09ae2",
        "cursor": {
          "ref": "63bc78d0-5e33-46ce-842c-111a2a3eb065",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ee6e48ba-ac3d-4220-b151-142ffc805a3e"
        },
        "item": {
          "id": "a4ceeb25-17b9-46fa-9a72-751788d09ae2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4dac3d23-edb3-46b2-92e7-cafe7de4d858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81d1994-75f3-40c1-8ad8-9d75f205cc11",
        "cursor": {
          "ref": "2ea04b83-f23c-4f98-ae5f-8007c1c536de",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "646b1c4a-50c4-4be0-91bd-9a4f4a4c392e"
        },
        "item": {
          "id": "a81d1994-75f3-40c1-8ad8-9d75f205cc11",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "4f37810c-8422-45a5-918e-8bdc387e594c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb43370-d4d8-4260-b3dc-9a1029e0bbd6",
        "cursor": {
          "ref": "b09a00f9-f758-4bdc-98ee-3bf2f0812a46",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "95fa3223-d62e-4fc8-9212-67bce1608569"
        },
        "item": {
          "id": "fbb43370-d4d8-4260-b3dc-9a1029e0bbd6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "36cfcb67-79de-4361-86f9-bf8652d39db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a4edd3-df55-41f0-8f67-83d62684e696",
        "cursor": {
          "ref": "e1c6a960-14bb-4c82-8b3a-b49f0f7f59a3",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "77b2b853-63a3-41a5-a7cf-e474ce338e8d"
        },
        "item": {
          "id": "b0a4edd3-df55-41f0-8f67-83d62684e696",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a09e0a85-84e0-4554-bb8c-7c7fe001e6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b880b5-a961-4da8-b422-f7f4783c93d7",
        "cursor": {
          "ref": "1b3c07d4-fb8a-4beb-94b5-d81f9550bde6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "95899900-ec59-456a-89d8-a05da3ab67fd"
        },
        "item": {
          "id": "32b880b5-a961-4da8-b422-f7f4783c93d7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "35d67362-66b3-44cd-8c96-14384b7584d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef68722-5c82-48f2-84cb-c07939b6e7bd",
        "cursor": {
          "ref": "02ffde5e-1209-4290-9ea5-3e7ba6dc52e8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "479a90d3-5371-4bc5-a0e3-13cd2bbd47b3"
        },
        "item": {
          "id": "eef68722-5c82-48f2-84cb-c07939b6e7bd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ed7216c0-0834-4585-a680-6ed515e100de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7133c27-7bc8-4832-be60-d907779b5e41",
        "cursor": {
          "ref": "62f82956-2f39-406a-b76b-11c4b8515cd0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "dfc6c3da-e3bd-46dd-af86-d84a8fe3a785"
        },
        "item": {
          "id": "f7133c27-7bc8-4832-be60-d907779b5e41",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b55397fc-ee5f-40c4-8980-0cc799b10b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b604ca0b-f3f2-4dd2-8d8d-2cd3795d1ff8",
        "cursor": {
          "ref": "0e83f791-8cac-4378-ae8c-ab8ccfbe08f2",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1c9d352e-129a-4b06-870f-168d3d732307"
        },
        "item": {
          "id": "b604ca0b-f3f2-4dd2-8d8d-2cd3795d1ff8",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "05e96659-0b4c-456c-9cb1-cfa2454ade75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6c8ab5-7c16-4b81-b52f-c1c0e592b989",
        "cursor": {
          "ref": "a10c4942-6e64-43cc-875d-7ce55eadcdf6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c7732a16-04f8-47ad-ac7c-6153819bff8d"
        },
        "item": {
          "id": "3a6c8ab5-7c16-4b81-b52f-c1c0e592b989",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8f457a89-aed6-473d-9d87-8428a4844ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa4c68-03a0-4d1b-9446-9db5f8458172",
        "cursor": {
          "ref": "e96582df-5e2d-4d7c-8a70-2402fb80063a",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "115c1eba-3d20-465c-8c1e-9364153d9542"
        },
        "item": {
          "id": "a5fa4c68-03a0-4d1b-9446-9db5f8458172",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "63ee6c93-322a-460e-8ad8-ff5219f5af91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8531342-8ffa-4a6b-95d2-9bc62ade8ac3",
        "cursor": {
          "ref": "347ff371-268a-44d7-856a-ead71a6ba5ff",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d42f1239-0c35-40a4-a015-9add381a19da"
        },
        "item": {
          "id": "d8531342-8ffa-4a6b-95d2-9bc62ade8ac3",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0aee3e3b-1442-45e8-a96c-5de3a8d0b34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b60d6a9-3764-470a-8ef0-ede4fb4292eb",
        "cursor": {
          "ref": "522d93a9-a81d-427a-af7b-ae19ab36019f",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e30d2c13-d3ea-4213-94d6-2587cf7bcfd2"
        },
        "item": {
          "id": "0b60d6a9-3764-470a-8ef0-ede4fb4292eb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e032761a-8ddf-44ce-93e7-943b040bc293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7f8ffd-5628-4e33-b249-0a00770266d2",
        "cursor": {
          "ref": "0cc69bf1-d44f-473d-a682-8d4bb821929d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bbd7e935-8b02-42a0-975a-36a1633f53b3"
        },
        "item": {
          "id": "2e7f8ffd-5628-4e33-b249-0a00770266d2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "38fceb65-d7bd-4722-844c-2614644ed566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d080ae-8573-46aa-a143-d484683b1be3",
        "cursor": {
          "ref": "b27ed316-1d53-4ed4-b9be-5d1f7276efe6",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f3144e93-9b6f-48b8-b01b-5580e293a0ea"
        },
        "item": {
          "id": "21d080ae-8573-46aa-a143-d484683b1be3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bd12997d-8b3b-47af-99aa-0b9abdffa7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db3ad02-b218-419f-b34d-74dc6b4ded15",
        "cursor": {
          "ref": "d20835e4-3e13-43a0-9446-9366def3a966",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0547cef8-ae8b-47d9-9b6f-5b5f4de3bdb9"
        },
        "item": {
          "id": "3db3ad02-b218-419f-b34d-74dc6b4ded15",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4c55b164-c000-427b-a01d-a423be66f86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4cb032-1f6f-4cab-880b-09eb67984844",
        "cursor": {
          "ref": "7bd0016d-7eae-45f4-8301-5687de81d74b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "2bc635bb-c3e3-400e-a4d6-20947f0db8e3"
        },
        "item": {
          "id": "8c4cb032-1f6f-4cab-880b-09eb67984844",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4a9d9af9-4ed6-4830-a70a-809ad6598cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a19a7ec-76f8-4772-8020-b7f6d662980a",
        "cursor": {
          "ref": "670ab8b9-3397-429d-aed8-a572a7080589",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "28eb8e56-5750-4acd-a11f-7089b297d2f5"
        },
        "item": {
          "id": "9a19a7ec-76f8-4772-8020-b7f6d662980a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fabbe9d7-4743-4bc1-a3a4-0f259130823f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8804b8-49fc-450e-91a2-be19d940e4d2",
        "cursor": {
          "ref": "68bd0938-17d7-4f53-9016-9a090975b83d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2b40e601-1650-4a80-a2b5-164d7ec0e9ae"
        },
        "item": {
          "id": "ea8804b8-49fc-450e-91a2-be19d940e4d2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e08c7821-9d63-4b57-94f0-984b7189a1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ef975-7194-48c8-b670-f2a8fbb490e4",
        "cursor": {
          "ref": "fa93c831-9818-4566-b7b7-eaefb2932672",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8852f52f-7737-46b2-91aa-651e98f7ac31"
        },
        "item": {
          "id": "b31ef975-7194-48c8-b670-f2a8fbb490e4",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bc49ea8c-68f8-49c6-b2f2-5ca1a2dc9d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d306100b-b95c-4536-a2ed-3c7aa0a0df14",
        "cursor": {
          "ref": "2f2712f8-61a0-4b2d-8a5b-60b97b988d2f",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cba0b4cd-6a2b-41fe-bf8f-2c22fa6cff12"
        },
        "item": {
          "id": "d306100b-b95c-4536-a2ed-3c7aa0a0df14",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6b4ba594-db04-48a3-9812-492c04717030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf0965-1b15-49e2-8f12-c69d32a69d6f",
        "cursor": {
          "ref": "bba5b77d-ea11-47de-b797-b0b39784c6bd",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "944a088b-e9a5-49ad-8bdf-f289750cf146"
        },
        "item": {
          "id": "acbf0965-1b15-49e2-8f12-c69d32a69d6f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd37ad7f-13bf-44a0-bdf0-b81fc6165cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ef4e3e-f02e-4bf6-840c-1c7ca9ea4b22",
        "cursor": {
          "ref": "dfdc8535-b384-412c-afa2-147da21182c6",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9805557b-730e-4dd7-9f25-0177031cacb5"
        },
        "item": {
          "id": "21ef4e3e-f02e-4bf6-840c-1c7ca9ea4b22",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "25b51d3b-9915-4d43-8b0a-f8205111fe79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6702cbe0-c866-4263-91fd-60cedd974fb6",
        "cursor": {
          "ref": "7d3ed172-e6e8-4499-a0e0-d23ef485fbc7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a8557ef9-fe03-4f4a-9696-c49dca0a5498"
        },
        "item": {
          "id": "6702cbe0-c866-4263-91fd-60cedd974fb6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7d2cff8d-cd33-41a9-8746-a2366b30956a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "1a8ad847-1213-438d-9ffc-d7196e6e98e2",
        "cursor": {
          "ref": "3e603814-e36a-41c1-8f34-b53b62f1cc33",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b0bcfb33-8224-492b-a282-1b7371f698c6"
        },
        "item": {
          "id": "1a8ad847-1213-438d-9ffc-d7196e6e98e2",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1fb62b2c-f96c-40af-a707-a88504e0c6d9",
          "status": "Created",
          "code": 201,
          "responseTime": 3333,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79708f1-1d1a-4a20-b5cd-76d5a9851716",
        "cursor": {
          "ref": "35aa9fcc-923f-4ce4-82e2-1d36168ccf42",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c10d1d00-2c6e-493b-8df1-0ad21039aadc"
        },
        "item": {
          "id": "a79708f1-1d1a-4a20-b5cd-76d5a9851716",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af856925-e620-4793-8973-1521fde40a03",
          "status": "Created",
          "code": 201,
          "responseTime": 2240,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae7a415-113f-4e38-997b-c36932f65998",
        "cursor": {
          "ref": "a4f87b67-92eb-4986-8af7-403649f31b18",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d51f13dc-50d0-4101-9196-f75e68cff810"
        },
        "item": {
          "id": "bae7a415-113f-4e38-997b-c36932f65998",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a88c6156-1935-4da9-ae09-ccdf730ca043",
          "status": "Created",
          "code": 201,
          "responseTime": 2225,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bb06c9-a168-4376-b9d3-5f167099e73c",
        "cursor": {
          "ref": "f4043d1c-1a82-4ed6-bbcf-564482349b0e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a289fc96-e5c6-4dda-b5b8-a56475e96be7"
        },
        "item": {
          "id": "a9bb06c9-a168-4376-b9d3-5f167099e73c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "646a0893-0183-49ef-adb7-91dec881ecac",
          "status": "Created",
          "code": 201,
          "responseTime": 2862,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a364165-121f-4336-aeab-1bb21a46e663",
        "cursor": {
          "ref": "c1d4b71b-9ca5-457f-858d-8d7f048b3a78",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "87920eee-e3ff-45bd-b360-205b0517ca32"
        },
        "item": {
          "id": "9a364165-121f-4336-aeab-1bb21a46e663",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "40f7e394-9aa9-412a-a1b9-bb54d255cd19",
          "status": "Created",
          "code": 201,
          "responseTime": 2052,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0acd631-79cf-4208-b767-1edd65837000",
        "cursor": {
          "ref": "f16d3993-ed23-420c-ab57-06a73688e3dc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "44b43b8c-6757-4c6f-9446-abd00a6b1391"
        },
        "item": {
          "id": "a0acd631-79cf-4208-b767-1edd65837000",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "53bf0fb8-e5ee-47a7-bdce-249dd9a75f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "663fae66-5e81-459e-a1ca-e7c332c7ee3a",
        "cursor": {
          "ref": "0826df0f-b47b-4f39-8c02-c6fbb7ff7817",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9c7cc124-3aeb-46d5-8a69-1beab140c688"
        },
        "item": {
          "id": "663fae66-5e81-459e-a1ca-e7c332c7ee3a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b051b496-37cc-4770-b979-a9123735a9ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1fc816-48ca-4507-b809-01e8f38965d2",
        "cursor": {
          "ref": "c1f80e53-350e-4eb7-8953-a9cefb76d3aa",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "04cc895e-27de-4bd1-8b72-30b79b2226a8"
        },
        "item": {
          "id": "fa1fc816-48ca-4507-b809-01e8f38965d2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "110c646d-4169-45e7-841e-42435a6ec347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02e5073-c75d-4adf-a9b6-82f8c17b82b4",
        "cursor": {
          "ref": "736cdf16-54ef-4be1-8292-848ccb921b1b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "705cf55b-04a5-43c4-8f1b-f8e733e163c9"
        },
        "item": {
          "id": "e02e5073-c75d-4adf-a9b6-82f8c17b82b4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d48ebe4-4113-4a27-8dcd-5448885f4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8814f87b-eb4f-406e-aa92-18ef983c74fb",
        "cursor": {
          "ref": "7e14fb6e-8104-4425-af9e-f7ed47abd518",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d41ad413-4080-48c6-9974-93fdf0b90c89"
        },
        "item": {
          "id": "8814f87b-eb4f-406e-aa92-18ef983c74fb",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eea64bc5-da33-4938-a597-743c167c3191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46addd65-68c5-4396-b883-243f65b8263a",
        "cursor": {
          "ref": "866416a5-0395-41b5-8449-d00dbb460a41",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "886759d5-9880-4df2-8e0d-1f7d0dcb8353"
        },
        "item": {
          "id": "46addd65-68c5-4396-b883-243f65b8263a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "83425cf6-6f16-4777-b6f8-84c32e4c7642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf942d32-48a6-46e2-89bd-7fbd4660bcdc",
        "cursor": {
          "ref": "9ec98f2b-073e-471a-9fa1-d59b5a13e336",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5cc621b0-901d-465c-ba09-b587257d332b"
        },
        "item": {
          "id": "bf942d32-48a6-46e2-89bd-7fbd4660bcdc",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c3e2bddf-bc01-48d8-8bc7-5ed8590b9101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecceb77-678f-4951-b886-0d8281499d04",
        "cursor": {
          "ref": "c5f732c6-304b-4d7f-ba00-b48a3e37fe81",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "420b082f-e78b-4ba3-a0c0-d6707d7590a5"
        },
        "item": {
          "id": "1ecceb77-678f-4951-b886-0d8281499d04",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "63d93407-2b53-43c1-b328-ceba886f4ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e59d3b-a065-4743-93d7-98c68f24b64a",
        "cursor": {
          "ref": "cf40c1b9-91d2-4d93-b762-a44059f7a6fc",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7205bc74-e83a-4204-99e8-d0d8f5a47bac"
        },
        "item": {
          "id": "96e59d3b-a065-4743-93d7-98c68f24b64a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c9cd47e-f385-4122-8d6b-b2faca18b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02318864-ab00-4598-830e-45a2d522b2c3",
        "cursor": {
          "ref": "19f9ca30-cfcd-4962-a0e1-6ff81964eb8f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "88bb79f6-d4e8-4152-b09e-41d0ceaf6262"
        },
        "item": {
          "id": "02318864-ab00-4598-830e-45a2d522b2c3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e856764b-8a84-45f3-ab4d-1104a6d10e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "042d190c-8c3b-4a0b-89f8-78a27aa57ed2",
        "cursor": {
          "ref": "41a542e0-592e-4933-9d7a-77eaf7ad6621",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7a256f2e-3538-4f2d-a3c2-6637b9ce4c71"
        },
        "item": {
          "id": "042d190c-8c3b-4a0b-89f8-78a27aa57ed2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "78a1b3ae-539c-45e3-b104-bfd489636d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d71e433-9954-48b1-9793-b391f7231391",
        "cursor": {
          "ref": "9d711fb6-80fb-4dc6-9741-2f5443b64313",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f36315d8-b507-416e-b7bf-b46f41fab927"
        },
        "item": {
          "id": "3d71e433-9954-48b1-9793-b391f7231391",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "65de8d3e-04ef-4377-9efe-c04ee98bd36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f33faf-b313-46fe-9ddf-4947996ccba6",
        "cursor": {
          "ref": "924e1405-65f4-4788-a0c6-9da5e22998fe",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "51f8eccb-d0f5-4965-9eeb-18ff3697b18b"
        },
        "item": {
          "id": "05f33faf-b313-46fe-9ddf-4947996ccba6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "790f6d4f-fcfc-4d97-a2d8-ca2a025fa309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc1ba3-639e-4d90-82ad-3b91b40b4b93",
        "cursor": {
          "ref": "d4d1b06e-9c65-4d6c-a027-b3749afd0512",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "15b65efd-a207-4cb2-9052-eb0d574b02fb"
        },
        "item": {
          "id": "afbc1ba3-639e-4d90-82ad-3b91b40b4b93",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09c3e8d8-6aee-4a99-b421-8d737f464ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613a7452-f81e-4c7b-9eac-49b0a61d1912",
        "cursor": {
          "ref": "50552483-fd0c-490a-b38b-0f9dfced1b7a",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0746ef3f-f5fc-4ec0-86f0-5d32cf2c6b69"
        },
        "item": {
          "id": "613a7452-f81e-4c7b-9eac-49b0a61d1912",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "77d7be17-112a-4759-9c74-d70af646355d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a09e68-9974-4006-898f-6a64f6eb2510",
        "cursor": {
          "ref": "7bd2cf93-538e-4bd6-85b9-ca5d98484776",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3d28514c-f999-45cd-80ee-3f1f638dc37c"
        },
        "item": {
          "id": "10a09e68-9974-4006-898f-6a64f6eb2510",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a03fd997-c77e-4cd7-911c-829c7bf15ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6643a377-9c37-4156-9fba-3eea32d7e697",
        "cursor": {
          "ref": "87b4db78-ec7e-42c1-890d-5352cb013b39",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "99a2b070-3756-4b9c-8981-5f4c2e88202c"
        },
        "item": {
          "id": "6643a377-9c37-4156-9fba-3eea32d7e697",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "805aebfc-23db-463a-bb2a-abe174340eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15239c0a-73fe-4141-a239-c750d3a94b8f",
        "cursor": {
          "ref": "9d5f8f91-be97-42af-8de0-e670e295c2ba",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "edaeb627-a644-4acc-ae43-428ae76604dc"
        },
        "item": {
          "id": "15239c0a-73fe-4141-a239-c750d3a94b8f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d1b8839e-993b-4639-896b-db4f744940ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a697e8-adf0-4da9-b5db-9e86e5b689da",
        "cursor": {
          "ref": "2a7fd638-efe1-4ebe-bef8-f1b8974bad00",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8cffc9e1-433e-43e1-8e00-0fa921692a7b"
        },
        "item": {
          "id": "73a697e8-adf0-4da9-b5db-9e86e5b689da",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "49a2e89d-aa76-479d-8df8-9ae9d023600c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0710ed-6bf1-4da5-ab86-732213085820",
        "cursor": {
          "ref": "3d7d312e-473a-4380-a1fd-2558456664b9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0bdd86d0-690e-4e8f-b9d0-1b603c448fdd"
        },
        "item": {
          "id": "2a0710ed-6bf1-4da5-ab86-732213085820",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0acfdd7d-68c0-46dc-9ebc-1b68a11ad823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650b8f75-df69-4023-8e5b-37ebbb98a7a1",
        "cursor": {
          "ref": "d750a2f2-5052-45aa-ab9a-735236d6f38a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b7201895-7527-4bec-b5ee-ff79fce9177b"
        },
        "item": {
          "id": "650b8f75-df69-4023-8e5b-37ebbb98a7a1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "12b33307-a64d-4811-8a49-109af2b89fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0036e38-907e-451b-b6f2-165b7b8331fd",
        "cursor": {
          "ref": "53e3a362-d997-4349-8f64-c24032379e6f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f03b38bd-d8b2-49ab-966d-48f73551099a"
        },
        "item": {
          "id": "a0036e38-907e-451b-b6f2-165b7b8331fd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "eba88c82-f95b-4d42-834e-77606eec1624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff160b3-03bf-43ba-b666-64dd7366cadd",
        "cursor": {
          "ref": "65345e52-af63-4f46-a53a-51257cccc02f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "07653af9-a661-485f-9e88-6c7cc66a1221"
        },
        "item": {
          "id": "bff160b3-03bf-43ba-b666-64dd7366cadd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f0856e9d-ca54-4326-b971-6b97a50959f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94389d05-b378-4cc8-a6ba-b1eeca1791b3",
        "cursor": {
          "ref": "d19e4d13-c5c0-4c68-8d78-40e7f521971d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7b157f22-9610-47a2-a80c-c94b1cf6c0c5"
        },
        "item": {
          "id": "94389d05-b378-4cc8-a6ba-b1eeca1791b3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9ac5950f-2cf4-471f-8b8c-dc89ebc681f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe840490-879b-4d33-bdac-ac904f0d826a",
        "cursor": {
          "ref": "7d1aa284-490b-4f39-b708-b331c10afe05",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d8d48e5-0e73-444f-827d-db36aad5b2a2"
        },
        "item": {
          "id": "fe840490-879b-4d33-bdac-ac904f0d826a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eec02f20-3a9b-4c29-b4a0-8acc81a68927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565b0487-8661-4597-8369-c0c87ba87131",
        "cursor": {
          "ref": "fe1342c6-9d6a-46f0-bcca-c324b4941c64",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3d6e748c-1076-4348-87a1-65df3c1d9a59"
        },
        "item": {
          "id": "565b0487-8661-4597-8369-c0c87ba87131",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dac3b713-6006-43ad-9cc4-eaf236b5df52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b915967f-5688-4c8e-ae84-9c2a1d2b7d9d",
        "cursor": {
          "ref": "724205d0-6a29-4395-8a02-fed25877cafa",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dc16720c-ac52-4c64-af7c-7fb5410cb0f6"
        },
        "item": {
          "id": "b915967f-5688-4c8e-ae84-9c2a1d2b7d9d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7caef8c8-1d55-48b6-9be7-5d0d923c8ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038ea9e5-5ec7-4119-be7c-8cb80e8df6cb",
        "cursor": {
          "ref": "27c5ed6f-678d-446d-a71c-0538a64b2c5d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "46035328-a909-48b5-bc49-7d65bbd38515"
        },
        "item": {
          "id": "038ea9e5-5ec7-4119-be7c-8cb80e8df6cb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b31632f6-7ed2-4e18-bebe-36bebda6e14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f332beb8-6cbc-4d71-9ed5-4e473c1403dc",
        "cursor": {
          "ref": "9ad58fa6-6bce-455d-8abd-e952d2a75c91",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f12a169c-0ee5-4ff3-a8b0-035a6f914991"
        },
        "item": {
          "id": "f332beb8-6cbc-4d71-9ed5-4e473c1403dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "04a7ed99-126f-4377-9a4b-0ebdf212d494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19e8972-46e7-4a6a-b517-061c161bc91f",
        "cursor": {
          "ref": "b1c7e11d-534d-45ba-ae94-f51b060fdec0",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5e1188b4-72bb-4be2-aadb-b43ac6b13524"
        },
        "item": {
          "id": "e19e8972-46e7-4a6a-b517-061c161bc91f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "faf8d556-df67-48e4-b69f-7329b81380b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7036dbe3-fde4-42f9-93e5-4a6879515ff0",
        "cursor": {
          "ref": "f560630b-eb3d-48e0-8820-560b1c4be44b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "59a5a49c-2c9d-4385-9c53-dfa859c700b6"
        },
        "item": {
          "id": "7036dbe3-fde4-42f9-93e5-4a6879515ff0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1d3e0100-cc2b-4f45-909a-cc71740aedfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89591583-4ccd-4a2f-8617-6583f58cbedb",
        "cursor": {
          "ref": "c407c643-c7c1-49a9-be6b-012acd7b36ff",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ec6962cf-97ca-4ddf-93ec-5d5df4025416"
        },
        "item": {
          "id": "89591583-4ccd-4a2f-8617-6583f58cbedb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "57dc2586-8957-46c9-800d-ccd2251a0976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcdb1517-a4d5-424e-84e8-4a9e920f9597",
        "cursor": {
          "ref": "c86e40e6-97d3-4cb6-a25a-396061aca6e2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fd2fa751-3406-4930-a5b3-8a122fe44b60"
        },
        "item": {
          "id": "dcdb1517-a4d5-424e-84e8-4a9e920f9597",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d50cd3fb-4ca6-41b2-841f-3cb247e934f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589ce7f1-24a2-4056-99d6-ef697dc00417",
        "cursor": {
          "ref": "44fd9f1b-e2b8-4b01-8ad1-0629129d1d43",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "eb22ea55-8b3e-42ef-92a4-0f820d97a80b"
        },
        "item": {
          "id": "589ce7f1-24a2-4056-99d6-ef697dc00417",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2ba21b12-73f6-4908-af61-dc9230809a99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eaeea8-3515-49ce-9adb-8fc14dbcb9c0",
        "cursor": {
          "ref": "34b3fdee-97b7-4712-8340-21e74fef7b7f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b527d7e8-11e8-4980-b815-36263165e729"
        },
        "item": {
          "id": "50eaeea8-3515-49ce-9adb-8fc14dbcb9c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a796152-c604-42f4-a58a-12a9facaec99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e7a33-4b69-46a2-a44b-59d2cee03c6b",
        "cursor": {
          "ref": "d91cede7-54fd-40f5-a944-db45431e7064",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "2552de54-08f3-494a-9490-48ce84017a15"
        },
        "item": {
          "id": "418e7a33-4b69-46a2-a44b-59d2cee03c6b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f35f2baa-56b9-4001-940d-97d8ea5a5547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7cd843-14ef-4f9d-908b-80df4e8bdff6",
        "cursor": {
          "ref": "e858ffe6-c2ff-4af2-8197-0b7fd7893096",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "067f659f-7493-45fc-a48e-82c068f9b9b9"
        },
        "item": {
          "id": "6f7cd843-14ef-4f9d-908b-80df4e8bdff6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "56ddc93c-3d8d-49c0-9ae7-1ac7e38d9b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ababeb82-36de-4106-9d17-e8665b222912",
        "cursor": {
          "ref": "d45ca43f-f709-42cf-8585-505e11965376",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1b316f25-f77d-4722-8927-1c2bede76120"
        },
        "item": {
          "id": "ababeb82-36de-4106-9d17-e8665b222912",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "49aed537-203b-4187-9024-951797f28dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a001e0-a0e6-4ee2-8122-932bd6caf92e",
        "cursor": {
          "ref": "322d0c7a-79e3-4d84-a788-9ad2631727d3",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "22c0b154-44e9-44d5-87ec-80a373b29ce8"
        },
        "item": {
          "id": "09a001e0-a0e6-4ee2-8122-932bd6caf92e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ebf525c3-be32-40c4-ad15-81f13622dd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752ec689-d635-4c22-99fb-7c9e2444e44d",
        "cursor": {
          "ref": "2a2cf15d-a84c-4c0a-ae1a-7cc947e67fa4",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d7da7bbf-a3be-440b-997e-8199e7845263"
        },
        "item": {
          "id": "752ec689-d635-4c22-99fb-7c9e2444e44d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33e4aca5-cca6-4c2b-aaef-63774244521c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac709d9-e399-4c61-8214-e8f633f0a345",
        "cursor": {
          "ref": "a5eddef1-f5cf-40c5-a45d-b441e61d28f7",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "12015eeb-1343-42f6-b79e-518cafb030f7"
        },
        "item": {
          "id": "9ac709d9-e399-4c61-8214-e8f633f0a345",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a9441171-47a1-4135-bf25-18764a85a338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34a1e67a-22cc-4cdb-a456-e0bb67d69ece",
        "cursor": {
          "ref": "77bd8ca1-6e00-4076-9c16-8e04485622e1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b1c54ca5-243a-4d17-9649-2bad59c11f52"
        },
        "item": {
          "id": "34a1e67a-22cc-4cdb-a456-e0bb67d69ece",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "22d0a272-2362-46ca-b51f-0c18c0b304de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0279f41-7aa8-473c-8b5e-43d3728e9135",
        "cursor": {
          "ref": "4d81f999-30da-4bd2-9d27-79ad53da0c4a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ff255d68-e11a-4e8b-b681-fc5bfb79de92"
        },
        "item": {
          "id": "f0279f41-7aa8-473c-8b5e-43d3728e9135",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9405e450-4758-4738-9b24-a8a9af9b00db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cdedaf-99d1-43fa-b02e-06007bac238f",
        "cursor": {
          "ref": "fded5b7c-9975-4a02-9c0f-0556d5f229ef",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "67905664-56e8-4052-8fc5-b38af1202b9a"
        },
        "item": {
          "id": "77cdedaf-99d1-43fa-b02e-06007bac238f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "393b9024-885a-43b5-af42-2f45590e3456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432a047f-a521-41f6-b21f-bc1ed5a845ac",
        "cursor": {
          "ref": "2a87f99d-f604-4cab-9d90-634bda9219b5",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7b5bac28-3cf4-4e3f-abfa-136f788eef5f"
        },
        "item": {
          "id": "432a047f-a521-41f6-b21f-bc1ed5a845ac",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9a914ccd-4fbf-4624-924d-dd5db78b3f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d8e46c-bc41-4d7d-944d-e2c60d39a62f",
        "cursor": {
          "ref": "60db1d09-08d3-463e-b58d-b792f509f3ea",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dd47cbaa-9b2c-40fd-b332-f946e2762577"
        },
        "item": {
          "id": "e1d8e46c-bc41-4d7d-944d-e2c60d39a62f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cfcf3886-de42-4546-b497-9a49c18fe48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c55c47-d529-483d-8f23-e64437b8f9fe",
        "cursor": {
          "ref": "5e648980-103b-41df-9c8d-ec584ca97f84",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2e654bea-feff-4a20-a899-2e3ebdfb317b"
        },
        "item": {
          "id": "a8c55c47-d529-483d-8f23-e64437b8f9fe",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fb9179de-e4bf-4627-b99d-6d30bed47b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864135eb-7204-485e-8f5f-075da6876721",
        "cursor": {
          "ref": "f29873b8-9f83-498b-8a46-c253636991eb",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2068f58d-17cf-4185-a292-78c937cad418"
        },
        "item": {
          "id": "864135eb-7204-485e-8f5f-075da6876721",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "929b72f7-d28e-4e36-b4d9-b9c857498efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffe4004-ff19-46a7-82a3-404e8f1bb93f",
        "cursor": {
          "ref": "c20dc2de-3d90-46d0-943b-9b6a40aefb86",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8fa97cc8-1eb5-4e8a-af44-5f360047efe4"
        },
        "item": {
          "id": "dffe4004-ff19-46a7-82a3-404e8f1bb93f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c90a6ac-6822-411f-9609-c9a7f67e0305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f4beb1-7f2d-49ed-8ea5-28a0900ea1cb",
        "cursor": {
          "ref": "bcdf1027-ef26-438c-bf88-1ccddfd4509e",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d5adac0f-7121-4c4b-a703-2e8660a9bd31"
        },
        "item": {
          "id": "19f4beb1-7f2d-49ed-8ea5-28a0900ea1cb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bb164fc3-eabc-4cc6-9ac8-b512ef7dcb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9f6d99-2f71-4921-9b4c-0eaf34406d33",
        "cursor": {
          "ref": "465876d3-e4dd-43be-84c4-2f7262df0131",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a63bff7a-c5c4-451c-ad3d-49d76e10042e"
        },
        "item": {
          "id": "9c9f6d99-2f71-4921-9b4c-0eaf34406d33",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87b9a26f-63a2-4963-abf6-882e7adc3bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa737bf-656c-46d8-aa01-aa07a48dc57e",
        "cursor": {
          "ref": "38c73298-264e-4acf-b161-169ca597b45c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "14ed1ad0-d41c-4267-a007-32f57cac293c"
        },
        "item": {
          "id": "7aa737bf-656c-46d8-aa01-aa07a48dc57e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ce2fb8cf-e169-40a0-87d4-3bd034a2b983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cf4f8f-d2d9-43fd-9646-27d855a202c2",
        "cursor": {
          "ref": "6ce8ce42-345b-4419-bdf1-51492dd81195",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9eb3ccbf-2134-45dd-960c-a6d194e75029"
        },
        "item": {
          "id": "18cf4f8f-d2d9-43fd-9646-27d855a202c2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7238547d-28e3-407f-b499-a786d72fe2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca91d47-0036-43a9-838c-0a1334e01ba7",
        "cursor": {
          "ref": "ba45abbc-f6b9-41ee-9f2b-1c03eddf1544",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "453d8dfc-9725-4afa-b6ab-36f0c1d99324"
        },
        "item": {
          "id": "dca91d47-0036-43a9-838c-0a1334e01ba7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c5752efa-7c4f-4a5d-af2f-49b8da1936d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1835149-712c-4a8f-bdaf-a1769ab7213e",
        "cursor": {
          "ref": "3fd8cf4e-e642-46f9-aa83-5a90b5c484b2",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "93da967d-edb8-42a8-96b1-8c2b5b2cef7f"
        },
        "item": {
          "id": "f1835149-712c-4a8f-bdaf-a1769ab7213e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a94e1e54-1bad-4ef7-b5d4-6faac3d0577b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fe8bf5-1bc0-4ea5-9547-5130e051508d",
        "cursor": {
          "ref": "6cd7d7b5-ed48-4b4d-ba80-99b4f0121a9b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a84c6ff8-cb6e-43cd-93e8-f97c856477cb"
        },
        "item": {
          "id": "78fe8bf5-1bc0-4ea5-9547-5130e051508d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "048609bc-359e-47d9-9f98-80b06694602e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c9adc2-acd2-477f-9cb3-8e3fcfb91072",
        "cursor": {
          "ref": "14223c36-f62d-4436-bb65-01b35aad74a2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a18ded3a-ee9b-452c-ad4d-c654e8d00481"
        },
        "item": {
          "id": "e0c9adc2-acd2-477f-9cb3-8e3fcfb91072",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "255a3bf6-2491-4c30-b476-1d935f30535c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be4fba6-48f8-4027-9a4f-11f76f9ad733",
        "cursor": {
          "ref": "5be99543-4fea-4d2c-ad06-3581b657a830",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d12019d0-9fa1-41e4-9597-d2ce2f8b011b"
        },
        "item": {
          "id": "7be4fba6-48f8-4027-9a4f-11f76f9ad733",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2623e430-a2f1-4dc9-96b1-350f743a5de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110a59c5-d541-4b5f-b468-88df153d75bb",
        "cursor": {
          "ref": "5f606290-259c-4541-9b89-112c37f8e111",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "69469147-f853-4665-a59a-963659233958"
        },
        "item": {
          "id": "110a59c5-d541-4b5f-b468-88df153d75bb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f9613c3d-87d9-4071-9b81-b02329245281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca741352-94e8-49dd-a073-cc46a0d09df4",
        "cursor": {
          "ref": "455ff5a8-9234-4deb-9a65-69a807d2bbfb",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4a11403f-759c-4257-8c8b-ce50fa888696"
        },
        "item": {
          "id": "ca741352-94e8-49dd-a073-cc46a0d09df4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d441c0a9-f649-4dd3-aed9-9e1f9861adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f857fd07-e8fd-4262-89c0-e785d276893d",
        "cursor": {
          "ref": "93934723-4cc7-4ae3-9601-cd3692991ba6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1a90f66c-fd79-4676-9e8a-3e1723efa2a2"
        },
        "item": {
          "id": "f857fd07-e8fd-4262-89c0-e785d276893d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "caf87457-109d-4b5e-8017-27bcfb58b063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7ab8968-98bc-4887-9e5c-803c68df759a",
        "cursor": {
          "ref": "bfeaeb50-75f5-4b26-ac06-bb992d783c77",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e57181d0-0dac-4737-8246-13d8299fc27e"
        },
        "item": {
          "id": "e7ab8968-98bc-4887-9e5c-803c68df759a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b42c58b2-340a-48b7-b3b8-3c609e1b1e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02f4441-8e12-49cc-985e-e2f4c36ffbd6",
        "cursor": {
          "ref": "96a91c42-a344-4bea-bf3a-4859fa7576b0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4dcf974d-a9de-4451-9910-cd2d5bfa3a60"
        },
        "item": {
          "id": "c02f4441-8e12-49cc-985e-e2f4c36ffbd6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1f86c10e-e332-45c1-85aa-fea34f8c0bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8910dae-4540-4429-abfc-512d8f5ae85b",
        "cursor": {
          "ref": "1d6bbf5f-e0cc-4657-ac4f-20691f690342",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8a451425-8935-4413-8794-86b86871f70c"
        },
        "item": {
          "id": "a8910dae-4540-4429-abfc-512d8f5ae85b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec9e156d-ce90-4c49-8434-b020c3c2ef64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0bded0-a08b-42ee-93b9-4339772e171b",
        "cursor": {
          "ref": "c95c1ef3-c18b-43fc-a4dc-97ed2458c6ab",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0a558980-d4ce-437a-9fb7-8ce1a4dd41cf"
        },
        "item": {
          "id": "ab0bded0-a08b-42ee-93b9-4339772e171b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0a945a40-2274-4095-b54f-372a5f3063e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626dcdb9-2790-469d-8cf7-b588d7d0df5a",
        "cursor": {
          "ref": "c3cb9d46-8907-42ae-8c2e-6801425b8ffd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a973fb6b-9f49-43d0-8ad8-235d72dcb3ba"
        },
        "item": {
          "id": "626dcdb9-2790-469d-8cf7-b588d7d0df5a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "eebf4544-9efb-4407-ade4-64defc4b997c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be97ae0-6101-4bc9-8694-a71a7b11ae93",
        "cursor": {
          "ref": "c0f69fe6-5f49-4c91-a04c-d7316345ca06",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "00c994e4-2694-44ef-a68c-29fdf78d8941"
        },
        "item": {
          "id": "5be97ae0-6101-4bc9-8694-a71a7b11ae93",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8f44a242-4d39-4bb4-b1af-f27dc25b10fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2372a47-655e-4498-afe2-4a64e1137688",
        "cursor": {
          "ref": "af18975d-42c6-4449-ac5f-50844e956e66",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fdbefcfc-e418-4f98-80a5-1bb7ad1d3def"
        },
        "item": {
          "id": "f2372a47-655e-4498-afe2-4a64e1137688",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4132c6aa-f4fa-47c6-b4ae-3e97f2ac3611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac164ab9-6205-4f01-be18-3c46f7300a30",
        "cursor": {
          "ref": "72347e71-bd16-402f-83a6-02eb51928d98",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0f4bc3ea-5b72-4696-a245-215cc1f191e6"
        },
        "item": {
          "id": "ac164ab9-6205-4f01-be18-3c46f7300a30",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4fef4e0b-5990-4ac8-b9cd-11ca7877e5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4335f8a5-3cea-4e41-8ee5-b3f56a7a179d",
        "cursor": {
          "ref": "7b00ee81-6c5c-4c43-9b59-69b2b05bdd13",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f80ab65e-4e79-4ddb-92ec-d56ebbd01a34"
        },
        "item": {
          "id": "4335f8a5-3cea-4e41-8ee5-b3f56a7a179d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "80bdab5b-8703-49ee-aa81-b66fa79aff6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dca7e9a-b254-4745-8a83-f45b652bd507",
        "cursor": {
          "ref": "ba3a7cef-887f-41cc-90d6-6fc692f7b49a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "07244bfe-b221-4c35-803e-7f754886a91a"
        },
        "item": {
          "id": "2dca7e9a-b254-4745-8a83-f45b652bd507",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "752aa7ee-3d15-40e7-bfd7-fb41c832f958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a67721-788e-4b6f-9487-07ac751156bd",
        "cursor": {
          "ref": "256ca2f4-e80c-4133-b782-420c9ecf3a09",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7a36ac61-fef7-4dbf-bcb8-05b6984a3071"
        },
        "item": {
          "id": "e6a67721-788e-4b6f-9487-07ac751156bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "71bccdd4-fc58-45b5-af2d-6db0f86eb526",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75e662a-6f5d-4613-b9aa-d07fcede9827",
        "cursor": {
          "ref": "93b798ff-e6af-496b-b356-6ecced016b72",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "562fc0a8-b9f8-4523-bc4d-a9556d860036"
        },
        "item": {
          "id": "e75e662a-6f5d-4613-b9aa-d07fcede9827",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "31d860bb-ba9b-4696-b6e0-9a7f71a0f71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8b4651-96ec-4918-8e23-85ee885b4b2a",
        "cursor": {
          "ref": "252ec127-8e46-407b-8515-7a0528ed5bce",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4b3d548a-750a-4ecd-af10-26ca28318155"
        },
        "item": {
          "id": "eb8b4651-96ec-4918-8e23-85ee885b4b2a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "22cc8260-80cd-40a4-9563-0452684c8583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79866a21-13f0-4243-9f2e-d79fd1b1be13",
        "cursor": {
          "ref": "3cf6f7d0-9e4a-4ef5-bce8-939d9c0e8642",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "91729f73-603f-4b91-aed5-de31685f3401"
        },
        "item": {
          "id": "79866a21-13f0-4243-9f2e-d79fd1b1be13",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9cb3e815-c1b5-4638-9c53-f351aff854fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbbcd95-8bb5-4d59-8d2b-709a4ace6330",
        "cursor": {
          "ref": "421399b0-fc8e-41e7-bfa4-aa8e37996374",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6a32fd49-671e-4fd9-87e5-d4d71042d47c"
        },
        "item": {
          "id": "dbbbcd95-8bb5-4d59-8d2b-709a4ace6330",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "fbb66e2c-cb91-4752-b628-52d4e0486cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc6b6333-7ab7-475b-a0ae-3269960b8f2e",
        "cursor": {
          "ref": "dfb89256-2c33-45db-ad75-6c5aa3e6bd16",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5534a1a2-014c-4880-92b0-58a8921e837c"
        },
        "item": {
          "id": "bc6b6333-7ab7-475b-a0ae-3269960b8f2e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "17cd2835-e7ad-4805-bfbe-29daff1a2b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d809f-24b9-4559-9476-28eb61983f9a",
        "cursor": {
          "ref": "9e519863-65c5-49d5-9713-70e0b1d496c2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6d92acce-b0e0-4db1-ab51-ec5ac4bd9489"
        },
        "item": {
          "id": "5b5d809f-24b9-4559-9476-28eb61983f9a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "68b6f3e4-f8f0-40df-bf1e-4e94bb33ba75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a8f5ad-f82f-4e9e-9fc8-0659329f069f",
        "cursor": {
          "ref": "cc2bd044-cfb7-48bd-bd04-26ac803ec6cf",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d67230ef-7d27-4e3a-8455-65fb551bdbe0"
        },
        "item": {
          "id": "d3a8f5ad-f82f-4e9e-9fc8-0659329f069f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6c2c092f-cbd4-49dc-8dff-da5c79361687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3371f67-4d3b-4dbd-b53e-23f650c7fbd4",
        "cursor": {
          "ref": "85a502fc-af18-4b38-9cae-c90424b35fc5",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "553dd770-4034-45d5-8829-9bf895a3daf2"
        },
        "item": {
          "id": "e3371f67-4d3b-4dbd-b53e-23f650c7fbd4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a8f0db3b-f1bd-44ee-a2fa-fbcbf4b526a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df83031f-1df0-47a9-a7f0-be19baa9383c",
        "cursor": {
          "ref": "b017908a-e099-4183-b176-c4da7cb8837f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2e82248c-bd4f-45a6-beb1-e60f5a46d231"
        },
        "item": {
          "id": "df83031f-1df0-47a9-a7f0-be19baa9383c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d1b4a451-5123-4a51-971e-bd94c21d49f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e988fe3b-79ee-4e2b-a2ea-fbcd8240b007",
        "cursor": {
          "ref": "a53485bd-3e5c-4883-8cd3-caa9d4fae30f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1a71e449-30b7-490a-bbf7-36b5b1ae27aa"
        },
        "item": {
          "id": "e988fe3b-79ee-4e2b-a2ea-fbcd8240b007",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4da5b862-68ff-4ba8-b652-8a3b880b814c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab637d6-a585-4041-8a21-74c93af6ea88",
        "cursor": {
          "ref": "952c828e-8150-4721-9994-a29e9f73bf74",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "10db5b1f-b03a-4300-9698-bf1754f93942"
        },
        "item": {
          "id": "4ab637d6-a585-4041-8a21-74c93af6ea88",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1ee15f0e-f7d6-4e0f-b933-7a979bdd162c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dc6fda-659c-40b1-86aa-f9d2b93a6a42",
        "cursor": {
          "ref": "1bb0232f-4ba2-4498-bf7c-a84b12bf30df",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e225faa3-fe03-4b84-ba90-6bb9b2a4b9ea"
        },
        "item": {
          "id": "70dc6fda-659c-40b1-86aa-f9d2b93a6a42",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "27bf0024-8dbf-4185-9e0e-d961156b6305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de26b8f1-c003-420c-8771-5cee25dd9262",
        "cursor": {
          "ref": "567b90a7-c207-480a-a380-b9a8bf58246c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d3b73226-5189-43d0-ad2d-cfa84ed44cb3"
        },
        "item": {
          "id": "de26b8f1-c003-420c-8771-5cee25dd9262",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "cd0ccf7b-f36c-4ea0-9c52-3b137cc3eb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8e4d32-8a7b-43ea-94e9-483118b0d379",
        "cursor": {
          "ref": "cd3057aa-ac1d-4f6e-875c-bd54dd6f737b",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "47892512-b4f8-4983-ad37-e5fce09d21f6"
        },
        "item": {
          "id": "da8e4d32-8a7b-43ea-94e9-483118b0d379",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "910ef0ed-27f7-49fc-8388-3345e6b6cf02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31e4f23-d56f-4b87-bdcd-cf2a88167c62",
        "cursor": {
          "ref": "995c0a69-27c3-458c-8d99-5d07632265e4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "448218bf-30f8-4438-8916-a8ad8556fe16"
        },
        "item": {
          "id": "e31e4f23-d56f-4b87-bdcd-cf2a88167c62",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "522d494a-6295-4282-a19f-9cc3059a4afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1d6fb1-8289-47df-98b8-466b83a30689",
        "cursor": {
          "ref": "56e64668-a92e-4592-93c3-cc60dc87753e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "54569341-d16d-4c94-88b3-b6ef670c6e58"
        },
        "item": {
          "id": "6b1d6fb1-8289-47df-98b8-466b83a30689",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "793044d6-ab79-4e6e-aede-a43e8f92b7b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba957669-53bd-42a5-9a0d-3eb08d775467",
        "cursor": {
          "ref": "3f33142f-5b0e-4528-a339-5d7e9553d718",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2e6f2d32-199c-4c27-8df9-aeae74dbbd83"
        },
        "item": {
          "id": "ba957669-53bd-42a5-9a0d-3eb08d775467",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "06d2a3fa-2ff5-42a7-9516-d351ba278ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67cd86a-2166-42aa-bef8-6bdddb0ac890",
        "cursor": {
          "ref": "e798e585-1fad-4597-9dfb-dd5ca88e30c9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0308a019-0411-4618-b2c0-b90566cdab1a"
        },
        "item": {
          "id": "f67cd86a-2166-42aa-bef8-6bdddb0ac890",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f9f86c70-c3f2-4b19-a148-feea983ffa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e89dab-8c7a-4ecc-898c-0b09d82e49dd",
        "cursor": {
          "ref": "45ecbb35-a364-440f-bb32-d870ce0fd076",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e4118800-5355-45f1-8b94-924643c80421"
        },
        "item": {
          "id": "55e89dab-8c7a-4ecc-898c-0b09d82e49dd",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e3a116d7-4f99-4627-b7a2-7daa00225963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cfd6de-a5b3-441f-952f-6e512db924b4",
        "cursor": {
          "ref": "c30f1208-4b65-4d46-bc13-7c334fedf69e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e419d08c-a94d-4586-9d2f-d478dcc4f7b2"
        },
        "item": {
          "id": "f1cfd6de-a5b3-441f-952f-6e512db924b4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b2520702-4da4-411b-bfb2-9d25e3b409da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee948a0a-aba8-42dd-a8c3-0dbefadef5c5",
        "cursor": {
          "ref": "90481b52-0df1-45c8-a251-cb667b0ca6e8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9cf71b33-c40f-4d39-89ad-97bb76238bf2"
        },
        "item": {
          "id": "ee948a0a-aba8-42dd-a8c3-0dbefadef5c5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3127b50e-ca94-40d2-86fe-9e7a35718ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf67b90-9404-41c1-a1ec-069e827c0ad6",
        "cursor": {
          "ref": "f80d2acd-a359-434a-9a32-79db5df0404e",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "55e91c0a-75f1-4553-afb1-1ae3bff88d38"
        },
        "item": {
          "id": "7bf67b90-9404-41c1-a1ec-069e827c0ad6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f4610875-1196-453a-bde7-989ad45576f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cebb88-df94-4b2f-a3f6-043dc19af71e",
        "cursor": {
          "ref": "95e16393-4461-4bbd-a13b-5e603c444113",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "534a3f4b-fbcf-427d-8726-4bb7198b7b36"
        },
        "item": {
          "id": "62cebb88-df94-4b2f-a3f6-043dc19af71e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0e8ccdb2-2395-453f-aca9-0a960b6063b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "940d802d-1324-4c4c-a3c5-ca98f30bdcd0",
        "cursor": {
          "ref": "41e539d8-bbc5-4a2d-a915-17f80c1b44e2",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0c1bdbf4-4dc5-4a27-8807-c14f51ddf0bc"
        },
        "item": {
          "id": "940d802d-1324-4c4c-a3c5-ca98f30bdcd0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "06d267cf-6df3-4f08-8a81-75d05d07ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481e9b06-fddb-4c13-86b2-9486ab97c531",
        "cursor": {
          "ref": "399a0de0-b689-40a5-9727-48c720d9d4ff",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ee33158c-7970-4559-8ff4-23969920b691"
        },
        "item": {
          "id": "481e9b06-fddb-4c13-86b2-9486ab97c531",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ee8404f2-9c30-40df-9765-6d4fe1322da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ce6249-a4f3-4127-a0d5-6b3358f658f5",
        "cursor": {
          "ref": "d922c307-a1f4-4d59-805d-ee76b232d036",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5fa5a6f1-30c1-4edd-a548-a48180b1c63e"
        },
        "item": {
          "id": "34ce6249-a4f3-4127-a0d5-6b3358f658f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "82d574c9-ef91-425a-9853-fbb873083269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cf5f7-3ae9-46a1-ad52-5fa2f96109a8",
        "cursor": {
          "ref": "38f873e7-5633-4397-85d0-7290657a591c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aab59828-e7a5-4cd4-b98d-3be12b59ef85"
        },
        "item": {
          "id": "e80cf5f7-3ae9-46a1-ad52-5fa2f96109a8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bb2886ea-507f-4326-8cb0-1f44662d77d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d199f8-d9b0-411f-9a9e-8b57810b3f47",
        "cursor": {
          "ref": "3481eea7-f484-4b2b-8a5a-d5688bb65f5b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8ccbdfb0-a192-4b86-b945-7f247a32cb14"
        },
        "item": {
          "id": "f0d199f8-d9b0-411f-9a9e-8b57810b3f47",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "432558dd-3d01-4f38-a6b1-210b7dd9125b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6ad032-a3dc-416b-a30a-5740086ded31",
        "cursor": {
          "ref": "7d414315-8579-4a6a-8ddd-4fa129672a3b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "de8575b9-a4c8-4189-b64d-d6369e04f70a"
        },
        "item": {
          "id": "7e6ad032-a3dc-416b-a30a-5740086ded31",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8e3db17d-a703-45c1-b932-58a1d4675eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad4d5e6b-e0bd-4224-8ca7-51f87bb76bde",
        "cursor": {
          "ref": "85da9b96-7629-4cab-8bea-2f4eae0ed70b",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "75d98ea4-9907-4016-b7e3-2597b7c0b6bf"
        },
        "item": {
          "id": "ad4d5e6b-e0bd-4224-8ca7-51f87bb76bde",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "59cf0a99-b21c-4d31-85f7-1204f9213eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4295c80e-789a-4694-b90b-1256d08cda73",
        "cursor": {
          "ref": "dd921ba3-3647-4a1c-8641-4c59a23ebbf7",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d1001f7c-933a-4bea-9d07-4b24b15b94a5"
        },
        "item": {
          "id": "4295c80e-789a-4694-b90b-1256d08cda73",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a9abedf5-24b9-4ac9-a216-ca0aa470ca98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcac779-2438-4a93-bdf8-e14cd4833d0c",
        "cursor": {
          "ref": "c1fdf7d7-9de8-4c46-a0a3-9adce6e6b40b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7dc5f39d-af15-43d1-8ce6-6b6dbb11c468"
        },
        "item": {
          "id": "4fcac779-2438-4a93-bdf8-e14cd4833d0c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "31393bd1-de92-401c-8b08-34e6e4e439ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f879908e-e5d6-4aad-93a2-606e1a3e9d76",
        "cursor": {
          "ref": "27ae6d35-dcb0-4383-a066-a089328958cb",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cb0c9012-e41f-4bdc-9b7f-181d67e97d04"
        },
        "item": {
          "id": "f879908e-e5d6-4aad-93a2-606e1a3e9d76",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a329356-5d9e-477f-b9db-44704120daf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd30452-68ef-4301-a3fd-960225c73019",
        "cursor": {
          "ref": "715ca76c-da0c-4501-8c72-6a775bcb2d68",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7d20b6ab-3e6e-4766-a3a1-3924964efc4f"
        },
        "item": {
          "id": "0dd30452-68ef-4301-a3fd-960225c73019",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "282252c2-5146-4c07-88ff-46baf13dcaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef739f0-22f2-4e73-b939-f68ef39b00d1",
        "cursor": {
          "ref": "3fdd8e38-7fea-49d9-811b-cc243ca33d3b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6ed2f2ee-a35b-49a2-9ffb-847fccbcc0de"
        },
        "item": {
          "id": "5ef739f0-22f2-4e73-b939-f68ef39b00d1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "66e3696f-b0e3-429b-bc7b-4332bd31e971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef6f245-9c32-47bd-b499-fb9ffbd0d7e6",
        "cursor": {
          "ref": "810ee2e8-cadf-4883-9a7a-9cd150ca64ed",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f8dc09f-cee0-49a9-b649-a0f5aeb2e4de"
        },
        "item": {
          "id": "1ef6f245-9c32-47bd-b499-fb9ffbd0d7e6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9effb672-a1a7-4bcb-bbb5-b76ab49ed5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11556fa1-e0a8-4ffb-9233-427d37b110f9",
        "cursor": {
          "ref": "1c42c472-64cb-4f59-8b18-7d432f1225e7",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "57a2419f-c8c5-4570-98c6-70e47da01a92"
        },
        "item": {
          "id": "11556fa1-e0a8-4ffb-9233-427d37b110f9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9427fbfd-22b2-41c6-a44d-a1cd9eebb35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e874f0-3a83-4e16-9552-76e28b9e5765",
        "cursor": {
          "ref": "157a5f6e-6ffa-4028-b5f4-77d0996e0774",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5ab8852-26b7-4b47-b9cc-86ee4a71ed92"
        },
        "item": {
          "id": "c8e874f0-3a83-4e16-9552-76e28b9e5765",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c677d363-9f4d-46af-be7a-bee6d5d5c441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9776849-05a7-4870-854d-01cfb2db819a",
        "cursor": {
          "ref": "9aa48596-2229-4e23-b523-66c3377294e8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "56b7500a-c9c9-4664-a759-8ae8e5088b86"
        },
        "item": {
          "id": "f9776849-05a7-4870-854d-01cfb2db819a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "abde7bc5-0cf4-4bb8-8cd8-a4d7ab0894b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561b8f1-2114-48db-9309-85ac32da05d4",
        "cursor": {
          "ref": "cc72702b-eea2-4860-ba07-b4311714daa1",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e2645479-7893-4dbb-a0c6-7693b16b49cb"
        },
        "item": {
          "id": "e561b8f1-2114-48db-9309-85ac32da05d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a4954396-4b55-44c6-8650-b3e4697af7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff2562e-95ce-41e2-8a7a-7ee90699d2d8",
        "cursor": {
          "ref": "c0f5105f-6719-430f-a1e1-d3a3e9ff42a2",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2f37e3f1-5db1-494f-99d0-b291677c66c0"
        },
        "item": {
          "id": "4ff2562e-95ce-41e2-8a7a-7ee90699d2d8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0e346fdb-f84e-4cc7-a6b9-868e0abb3a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a883684b-2d24-432f-b738-3850aef0df4a",
        "cursor": {
          "ref": "4e1e0422-c5e4-4d25-9969-195e9256e658",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d39802b3-1fbd-4592-b112-9e7aff8a03e2"
        },
        "item": {
          "id": "a883684b-2d24-432f-b738-3850aef0df4a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "79caa8da-3a04-43c9-922c-aac7660dca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a2c84d-268e-4445-94e4-e446b122a89a",
        "cursor": {
          "ref": "83e59e00-cc51-48d1-bc9a-06646faa2aaf",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e102afed-aed7-403b-b129-cd6014d2208a"
        },
        "item": {
          "id": "c7a2c84d-268e-4445-94e4-e446b122a89a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b195f5df-520a-480e-bc5d-da882811fabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22bc4ba3-96d7-4d5f-a24b-198a55edda48",
        "cursor": {
          "ref": "18362ceb-d5d9-4c38-9528-48ea753f779a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e81a9d15-277f-4fd3-8c76-21566d3eb144"
        },
        "item": {
          "id": "22bc4ba3-96d7-4d5f-a24b-198a55edda48",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bb8d5261-0849-4ff3-aea8-26d6ec6e9005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce618ece-fd2a-46c3-bbae-1557941e5ef6",
        "cursor": {
          "ref": "c8cf945e-bdfe-4e07-89b6-5317a0c4073b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2d9b0c89-a8a9-4971-b056-a1dbda975386"
        },
        "item": {
          "id": "ce618ece-fd2a-46c3-bbae-1557941e5ef6",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ad9a52e9-adf5-48ce-a6be-2152b2ee7c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb49187a-47ba-4fb4-b559-abb76e009d50",
        "cursor": {
          "ref": "92345de4-ca5f-4f93-b44a-40fa2b92fe38",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "08e0d574-8d8b-48c9-9daf-c5dc523e88b8"
        },
        "item": {
          "id": "bb49187a-47ba-4fb4-b559-abb76e009d50",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2e5fe91d-5dd4-44e7-a74d-33e032e64609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bd4d60-c637-4355-a6fc-a9686ccd6427",
        "cursor": {
          "ref": "f523945b-5a98-45a0-aed2-2bb57705858c",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aa81a007-0e6f-4142-9f67-b7dd539b9436"
        },
        "item": {
          "id": "a7bd4d60-c637-4355-a6fc-a9686ccd6427",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "de4979b5-fbfa-44a2-93c9-501a3c831cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d01e43-8287-44a9-8141-6f9b4308db8e",
        "cursor": {
          "ref": "518a655d-82dc-4f54-aeef-127fab861aff",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ebebbf20-eb46-4e69-a59f-4353856303dc"
        },
        "item": {
          "id": "d7d01e43-8287-44a9-8141-6f9b4308db8e",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a6d66482-d87b-4590-933c-e6b9994ab602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcac9137-d0c5-4319-8a68-62fc0989de2d",
        "cursor": {
          "ref": "dc534bc3-1ed0-4dbd-9570-e791a5e67804",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3f04d697-b1fc-4565-a6e7-6a4cb8d6852f"
        },
        "item": {
          "id": "dcac9137-d0c5-4319-8a68-62fc0989de2d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "31b1c0d2-8852-4aee-bb97-afb85bbdad0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda0f759-7d3a-4b91-a677-f454f379ba5a",
        "cursor": {
          "ref": "231b2390-1ac3-49c9-8d21-20ab6c9b55fa",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb8a2a40-de75-4a75-983b-917baa5510a1"
        },
        "item": {
          "id": "dda0f759-7d3a-4b91-a677-f454f379ba5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "993fe00b-dbce-4988-afb8-1dc8cb800c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fbf9bd-ca2c-4659-88f4-9f049083cdc0",
        "cursor": {
          "ref": "fa89898e-ad32-4f5d-849c-8435d026e578",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65914e6c-8bf6-4c32-bf42-3426f5af6231"
        },
        "item": {
          "id": "24fbf9bd-ca2c-4659-88f4-9f049083cdc0",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ca68a1cd-7b77-4bfe-84f4-c5ee61b7e74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e868ee-67fb-446e-b160-b4a2ec550077",
        "cursor": {
          "ref": "3b09d0ab-a221-4e79-9d23-6826ae7436a1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2c4e3aa8-1747-4394-8d28-1beff3a67f8b"
        },
        "item": {
          "id": "a2e868ee-67fb-446e-b160-b4a2ec550077",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1333852c-7059-4f9e-83fd-5fdc8b65d58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63989980-c964-4b55-bbea-69d49a87c520",
        "cursor": {
          "ref": "01a517b3-27ce-4b09-ad6e-4e94958097d2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "90d37af4-18c5-41ae-9f77-0356326e5147"
        },
        "item": {
          "id": "63989980-c964-4b55-bbea-69d49a87c520",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a46d87e6-cd5b-4207-9fd6-59809edd9137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5d9105-21af-4af3-8ae8-c23910ab7c68",
        "cursor": {
          "ref": "13c002c1-a013-4954-bc10-5ecbcae218aa",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f3bada25-fcaa-43ee-9fcf-90294d66bee4"
        },
        "item": {
          "id": "ab5d9105-21af-4af3-8ae8-c23910ab7c68",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9c01594-9db9-4e29-ae8b-442f2fb5ebba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3974fe0c-08b9-4deb-a1f4-636ca19d2691",
        "cursor": {
          "ref": "22810144-9b0f-4163-b7fe-acf5837d0187",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c875e45b-bb26-490c-b8ab-083bf7bcbdf6"
        },
        "item": {
          "id": "3974fe0c-08b9-4deb-a1f4-636ca19d2691",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce0a5c37-5af9-4909-ba3c-95f1bb2fac20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fc974b-b218-48f1-a7c8-0da8d9ea776f",
        "cursor": {
          "ref": "61af4d6c-bd94-4248-b948-56a22bf8ae73",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d962e13c-f517-4cee-a949-a8df3242f21e"
        },
        "item": {
          "id": "89fc974b-b218-48f1-a7c8-0da8d9ea776f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "67132448-073e-4d97-975e-fea66aeaac00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fe9d81-2306-43e5-9b36-f5699492c31a",
        "cursor": {
          "ref": "279e7a79-115b-4cf9-bc32-2325cc48c76a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "616e91ea-9583-412b-b42e-8d94491c1095"
        },
        "item": {
          "id": "c0fe9d81-2306-43e5-9b36-f5699492c31a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5d9f5622-1ea9-403a-bf9a-d3d8711753ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84d1ac8-5f43-4e6d-93f1-f6c5eefce488",
        "cursor": {
          "ref": "4ff3b0c9-ba3c-487b-9bb4-3271d445bcb8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a3da693c-a048-47e0-a103-f5a7369b1ecb"
        },
        "item": {
          "id": "b84d1ac8-5f43-4e6d-93f1-f6c5eefce488",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "3b65f276-34c9-402a-9170-b0d5c44fe2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603b3823-c95d-44fa-b40b-af3f6c84315d",
        "cursor": {
          "ref": "f922f742-a7d2-4afa-9d4d-cd7824c972ad",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "53d02ec6-8559-4ff6-94ab-caa46395cdd2"
        },
        "item": {
          "id": "603b3823-c95d-44fa-b40b-af3f6c84315d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4f3d2d4c-07e3-44f7-bfab-57133bc1d826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2903fe2-f855-4133-aae2-0bb150b8efc0",
        "cursor": {
          "ref": "7048950e-ebee-47e2-93b5-e8be37c642e4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e12ef79-26ff-483c-a26e-480dc9c7fefa"
        },
        "item": {
          "id": "e2903fe2-f855-4133-aae2-0bb150b8efc0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "57637870-e7ba-4e32-8a68-e60ae6629b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0cfeab-a36a-4dd6-8886-462dbcfcd6f1",
        "cursor": {
          "ref": "4d100f7b-0ba0-4470-97d8-d00c14cd46e1",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ebed6eed-2cc4-4483-bde3-d2ec8abd4600"
        },
        "item": {
          "id": "be0cfeab-a36a-4dd6-8886-462dbcfcd6f1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4c29e875-ea31-4c58-b4a2-9ec30c93b77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf869cb-041e-43b5-b5a8-41d9062097ad",
        "cursor": {
          "ref": "551dcb4f-d599-41f3-8a30-b01d35fd4fd2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "53ea1c52-fb05-4474-9475-092bd1c1f2dd"
        },
        "item": {
          "id": "9bf869cb-041e-43b5-b5a8-41d9062097ad",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "639d9037-e3f4-4bd3-83d0-3a9eaea2d935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c7354c-791e-4ead-a344-0b08e63ed253",
        "cursor": {
          "ref": "ad408b06-88d4-4b27-a36f-527bec6059ba",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "151e6dde-128b-41ed-963e-adb2044fb2be"
        },
        "item": {
          "id": "95c7354c-791e-4ead-a344-0b08e63ed253",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6077cacd-67f8-498d-bca5-d75750c8b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae3157d-2465-472c-bd84-24a960290a05",
        "cursor": {
          "ref": "9a0c9010-ec50-4c84-ad13-300e2d9785a5",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7565071b-b857-4895-b5b1-58aa2112123b"
        },
        "item": {
          "id": "7ae3157d-2465-472c-bd84-24a960290a05",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "20e031d7-3ac9-4ccc-8aae-eb72291101a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c699d76-a6fc-491d-92f6-4c5672128a1b",
        "cursor": {
          "ref": "4532e565-6c27-461b-a932-538c48d083a3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "45b7ac24-6e58-4da3-884f-8774846043fc"
        },
        "item": {
          "id": "7c699d76-a6fc-491d-92f6-4c5672128a1b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ee0ec868-26c1-4e99-8ecb-852058b6c1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa344509-8115-4b7d-95de-7099dadcc54d",
        "cursor": {
          "ref": "a6fb7577-f23a-4dcc-a479-e3ce136db3c4",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "913f0ac8-c390-468c-8cdd-618e25f42503"
        },
        "item": {
          "id": "aa344509-8115-4b7d-95de-7099dadcc54d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7754d7e0-3202-4f28-8d26-47e7882cb5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96411fc1-effd-4a9a-8eb9-84afa18bb372",
        "cursor": {
          "ref": "e229c5c1-026b-4acf-969f-e5ae0dd1bbe2",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "909c796b-d157-4812-8e27-8043d2fb375b"
        },
        "item": {
          "id": "96411fc1-effd-4a9a-8eb9-84afa18bb372",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9a59fe35-534e-4ce5-8b8e-59194a84c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c74d52b-a375-481d-9c71-9e5ac5a099fa",
        "cursor": {
          "ref": "7f4bc5a3-19a9-40bb-baec-f715d945c06d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1322401b-a001-41f6-8b3c-f6b3439bfa2e"
        },
        "item": {
          "id": "0c74d52b-a375-481d-9c71-9e5ac5a099fa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0a9f3cd7-16d0-4cb1-babd-0260d211cdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307087f8-f7f2-46d5-a6d5-06958161402b",
        "cursor": {
          "ref": "0f1f335c-45e1-4180-ac5c-2e1560edf87e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "29c1503a-f09a-470f-8b8f-bc75c5b0add4"
        },
        "item": {
          "id": "307087f8-f7f2-46d5-a6d5-06958161402b",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "66c1ab3b-6c18-433b-b878-70aeb41ee43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9684b41-9cb8-4062-9a7b-4d2255698e8b",
        "cursor": {
          "ref": "d901afb1-495c-423f-b9ab-5c89a2ffa12b",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b660609-0a5e-4dea-bbcc-75cd7856a5a8"
        },
        "item": {
          "id": "e9684b41-9cb8-4062-9a7b-4d2255698e8b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "730552e4-de00-4104-9836-cee733ae632c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed36963-9852-4fd0-a311-9e4bd40a58df",
        "cursor": {
          "ref": "ea48c151-ea50-4c10-ab6c-01f814c660f5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ef2b6d2-d8a5-4e6a-8554-e5c2ea7c761f"
        },
        "item": {
          "id": "aed36963-9852-4fd0-a311-9e4bd40a58df",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "bab255ff-2b66-4408-b7b3-bf2e843f3f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a32e91-e3fe-4b19-b00a-c362e79d5531",
        "cursor": {
          "ref": "a7890747-6f4d-45f7-b3b7-4ec41b3f6f75",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f4f7f7c3-baab-474c-93c5-878808ceaf95"
        },
        "item": {
          "id": "84a32e91-e3fe-4b19-b00a-c362e79d5531",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d39118c0-7654-4834-a286-86f8dfcdc730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85658139-5ed7-4fa6-b4fc-566a2bb81d08",
        "cursor": {
          "ref": "ac84bf6e-1e75-460a-a32a-2787fdc3a0e2",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "925a2fe2-323d-447f-8efc-e0e49ab73074"
        },
        "item": {
          "id": "85658139-5ed7-4fa6-b4fc-566a2bb81d08",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1cb00ca6-b365-4a0d-bdd4-2229e265b369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a0c3e3-62be-41ff-a146-ca3be53cff33",
        "cursor": {
          "ref": "8feb24e7-b768-4d91-8aa5-0176e1136a2d",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e8687842-3bf0-4bdf-b901-70752b9c3e5a"
        },
        "item": {
          "id": "f6a0c3e3-62be-41ff-a146-ca3be53cff33",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8116cadf-6333-4b23-a8f6-e38864d26fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e7e08-7696-4d58-99f5-a98ccac2137b",
        "cursor": {
          "ref": "d43b2467-d315-4e5e-a540-a5cc98a7619a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "81d5551b-692a-4f31-8690-c7dac23ef1fc"
        },
        "item": {
          "id": "e50e7e08-7696-4d58-99f5-a98ccac2137b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bec2dfff-1c2a-45dd-bc2c-fcf7e96ff2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3b8348-81d6-41fc-a973-498932577a22",
        "cursor": {
          "ref": "dc31efd9-1edd-420f-b697-01d8ab8aca54",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b0f5119a-894f-4db1-9641-be283332b4a9"
        },
        "item": {
          "id": "5b3b8348-81d6-41fc-a973-498932577a22",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f4e29e57-52dd-41ba-8150-87d68a4347d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e243e4-36d5-477a-90e8-1095b5942bd2",
        "cursor": {
          "ref": "ec251f91-48d8-43ba-8388-5a3e4a417245",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3eb80725-5475-492c-afbf-043940f5ce64"
        },
        "item": {
          "id": "c5e243e4-36d5-477a-90e8-1095b5942bd2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b5787367-1325-4b13-834a-6ff70592467e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1953fa-8516-42b7-a11f-1e27505dcb36",
        "cursor": {
          "ref": "51972090-14a1-42cc-bc0e-117553abb8c7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "23faff12-4d63-4931-b90c-bf69d147bbdc"
        },
        "item": {
          "id": "3f1953fa-8516-42b7-a11f-1e27505dcb36",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "64d11e54-623b-4ea0-92ad-7e3499eecd35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8639e7e3-9337-443c-9128-e8fc14830cb5",
        "cursor": {
          "ref": "f8e6f0b5-eeb4-40e5-a218-263b20478fdb",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "934897e5-5c12-41ce-9c8d-a840faea5544"
        },
        "item": {
          "id": "8639e7e3-9337-443c-9128-e8fc14830cb5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "046114b7-a46a-4fb2-bc7b-5693b514ad83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d9f508-7fec-4601-8197-b3367625710c",
        "cursor": {
          "ref": "d38415d5-ee3f-45bb-a326-2efcf323b968",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "189d44bb-b560-4c40-b5ab-a5dd2d506b5f"
        },
        "item": {
          "id": "b0d9f508-7fec-4601-8197-b3367625710c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "995e27c2-8ca5-4e79-b9cf-ec852546c44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3449c5d2-ca7c-4a3a-9bb9-be8f0a3fa6b5",
        "cursor": {
          "ref": "001eff00-21c9-4c82-bce9-6f9c3d8f56b1",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "37e24edb-c82b-4f54-a679-57f820702422"
        },
        "item": {
          "id": "3449c5d2-ca7c-4a3a-9bb9-be8f0a3fa6b5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "649a08d8-f3fb-4f9b-970e-596e30b9dd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd232c6-c433-4382-bd17-d7e97ed616f0",
        "cursor": {
          "ref": "fc535fe4-7628-47e6-b1dc-b5649bd69dda",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a94f9379-1aec-400b-970e-234cd18c4f48"
        },
        "item": {
          "id": "1bd232c6-c433-4382-bd17-d7e97ed616f0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f93ed703-5073-4328-aa06-f5ffd3f810a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06053178-9065-4627-86b8-2eb91d46a60c",
        "cursor": {
          "ref": "bf6a25af-af83-4583-9c4e-72ccca733258",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "005e20cb-ba27-47a4-ae21-ce59ffbc7768"
        },
        "item": {
          "id": "06053178-9065-4627-86b8-2eb91d46a60c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "68fbde9f-956a-41ff-ace0-a21f78c55da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12edfed-073f-4346-a950-a72f719eea28",
        "cursor": {
          "ref": "9110618a-143d-4b2d-a113-205ea628c6dd",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "1a640d45-cf65-4d15-a995-fc15dd4119a3"
        },
        "item": {
          "id": "c12edfed-073f-4346-a950-a72f719eea28",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "66a3f49e-c4f1-4918-8342-dc0781d64c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e7f78-01f1-4c64-a3f7-d08dfdd62ca2",
        "cursor": {
          "ref": "cb8a69bf-492b-4dd6-9f4d-6161c0b9f6c1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f21e4dd0-927a-47cc-8693-753a61766ffa"
        },
        "item": {
          "id": "4c0e7f78-01f1-4c64-a3f7-d08dfdd62ca2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4ca4ed77-f8a0-4ad1-9ce5-83f628a469f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9788542-c2e7-4284-9f46-01f14bffc5df",
        "cursor": {
          "ref": "99293c1d-89bd-4d98-96ad-b41fd07ae344",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "47f8095e-8cf7-48c9-b2cd-96ac4bd96fee"
        },
        "item": {
          "id": "a9788542-c2e7-4284-9f46-01f14bffc5df",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "28d45088-5d4d-4a99-aa38-6fc1eec616d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25e99cb-c2e9-4558-9fea-2fc2fb2de707",
        "cursor": {
          "ref": "1f548c52-5da4-4cdf-ab4d-e5f4af2b1686",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "35cc4fd1-a892-414d-9826-8f97b864ee0d"
        },
        "item": {
          "id": "f25e99cb-c2e9-4558-9fea-2fc2fb2de707",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "38579eee-0906-47e0-b27e-6a870d288e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18e038c-12ed-4d26-8139-dd8b79bb1fd0",
        "cursor": {
          "ref": "0afbbdd0-4d3f-44d5-b7b3-4578b2947b99",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "47826a97-6d5e-498a-b202-1856cb24ce92"
        },
        "item": {
          "id": "b18e038c-12ed-4d26-8139-dd8b79bb1fd0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "048c6896-f592-4133-a8c2-932cd7a6aa8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e9ce6-476a-476a-a030-cf9174fccba9",
        "cursor": {
          "ref": "673f3b33-8e8d-452e-803a-45e44a2821f8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "3ab35a8c-32df-4496-8d87-b782e35c05c2"
        },
        "item": {
          "id": "0a0e9ce6-476a-476a-a030-cf9174fccba9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "28ab7c4e-179b-4e2c-b3dc-e5c28e8a4b0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92555127-e495-4dda-bd24-03bbe4c2fe76",
        "cursor": {
          "ref": "a6f4fc05-b6ec-40ab-b2a3-da9a3fcd2b9f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f4bc19a-29b5-4982-ba74-736c812911f4"
        },
        "item": {
          "id": "92555127-e495-4dda-bd24-03bbe4c2fe76",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d11f1ec8-65c1-45e6-9e1c-f05d46dc922b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d720ccf-18c3-4a32-99ef-3a19d1963357",
        "cursor": {
          "ref": "e653b493-945b-4ad1-9813-97c7ed11e938",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "47946dae-1e94-46ae-828c-b9f107c275f9"
        },
        "item": {
          "id": "7d720ccf-18c3-4a32-99ef-3a19d1963357",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cd0725e7-6bb1-4838-838d-b0ed3e6393af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b74abbf-9c32-49ea-a459-9183d097260e",
        "cursor": {
          "ref": "fd6ece96-4b76-4b89-b947-ce2923ce2311",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4e06adf3-256a-4b64-917d-dc50f51cb30d"
        },
        "item": {
          "id": "5b74abbf-9c32-49ea-a459-9183d097260e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0db79502-b74c-4273-b79e-c3be3ff227e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8279d3-df3d-4d65-b3f9-e89ec5c24bfe",
        "cursor": {
          "ref": "47ab10ad-4268-4306-933d-696eb7aea655",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "9bb4cf16-0042-4516-b91d-7ce3255be91a"
        },
        "item": {
          "id": "ad8279d3-df3d-4d65-b3f9-e89ec5c24bfe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b740c8a3-5dbf-4d05-a3f6-fd7c57686005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778785ed-38c0-4318-b983-faa4589cae98",
        "cursor": {
          "ref": "00cfd247-cec7-44bb-8950-7c5d1e1b7bee",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f5ad12b6-c9c3-4d50-a750-7f722bd80ff3"
        },
        "item": {
          "id": "778785ed-38c0-4318-b983-faa4589cae98",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d99c813c-7c86-4750-b078-8a401c5202f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9ec60f-1abc-44bd-b8f9-8e3411a46f60",
        "cursor": {
          "ref": "28240dd3-de66-4581-ad49-054ec4cf1402",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7587d806-509e-4b7c-a645-c6b43d6b013e"
        },
        "item": {
          "id": "1e9ec60f-1abc-44bd-b8f9-8e3411a46f60",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5b1ed633-16ac-45a3-a229-b1214f2e7a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4431e7-d1b6-4231-b090-7c3a44586628",
        "cursor": {
          "ref": "c3937a17-a877-4297-b2b9-d6330bb699af",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e796f6ad-ea11-4d2f-ac46-85af7fe36e5f"
        },
        "item": {
          "id": "1d4431e7-d1b6-4231-b090-7c3a44586628",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8fd8459e-33d9-4142-a2a3-df01c169b465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb716bb-6d9e-4a93-97a8-deadafbdb502",
        "cursor": {
          "ref": "9d93b3a7-9103-4f21-9970-7c1e77b0e638",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "141c7dc5-bb8c-4b7b-bd23-63c62cb4d437"
        },
        "item": {
          "id": "4bb716bb-6d9e-4a93-97a8-deadafbdb502",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b10b493c-e5df-41e1-a47d-088ffa6c3e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a418ca40-36b8-45fa-b7a6-648a685a5c37",
        "cursor": {
          "ref": "a5ae812f-85e1-4980-9b3b-f58808724fc3",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ce9860e3-e12d-4253-99f5-e41d183ccf9c"
        },
        "item": {
          "id": "a418ca40-36b8-45fa-b7a6-648a685a5c37",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4e3713ca-74b0-4b3f-9a67-be1d3c909737",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90670a32-2e60-488f-bc95-ee758058a83b",
        "cursor": {
          "ref": "a8bd29d6-ecf8-4e9d-ae90-ffa0ef266dc5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "5cc5c57d-76d4-40fc-aa05-cc9a131c87b6"
        },
        "item": {
          "id": "90670a32-2e60-488f-bc95-ee758058a83b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ad99a870-533d-480a-980c-e728975285c3",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13837a3-e9b3-4b05-931d-e1801676487b",
        "cursor": {
          "ref": "bba6e680-d37c-478a-9de5-dc3cacdc32e8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "57fdcd17-f9ba-4838-a1ec-71abf1569102"
        },
        "item": {
          "id": "e13837a3-e9b3-4b05-931d-e1801676487b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c789f6f-7e6a-42a8-8b9e-f47bfaeaa533",
          "status": "OK",
          "code": 200,
          "responseTime": 1298,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5026ef-e46a-47bb-8a42-cc8ab4abcfcf",
        "cursor": {
          "ref": "2e7d3e74-f744-4ece-8818-a2080c25aec4",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "25e1fbe3-001f-49cd-ac48-83a3aea37dee"
        },
        "item": {
          "id": "ce5026ef-e46a-47bb-8a42-cc8ab4abcfcf",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e4162b25-d394-4ceb-be31-6676022cceb4",
          "status": "OK",
          "code": 200,
          "responseTime": 1247,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8498f02e-52fc-4726-a186-67eab1c15754",
        "cursor": {
          "ref": "6e19946a-4403-4eb8-aa67-39f63ac2a3cf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "206ce057-1fa9-4754-a4ff-3bf3de4af41c"
        },
        "item": {
          "id": "8498f02e-52fc-4726-a186-67eab1c15754",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e3fbf90-ac4d-4f32-9a75-3a6e3b96b143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8498f02e-52fc-4726-a186-67eab1c15754",
        "cursor": {
          "ref": "6e19946a-4403-4eb8-aa67-39f63ac2a3cf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "206ce057-1fa9-4754-a4ff-3bf3de4af41c"
        },
        "item": {
          "id": "8498f02e-52fc-4726-a186-67eab1c15754",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e3fbf90-ac4d-4f32-9a75-3a6e3b96b143",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a6397f-550f-42e4-9090-0d5ca8a3dd59",
        "cursor": {
          "ref": "2471dc5b-c02a-4a42-b477-9eb3835e2412",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d1ee354d-8579-44f1-ac72-3206b8a964d2"
        },
        "item": {
          "id": "69a6397f-550f-42e4-9090-0d5ca8a3dd59",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ee20790-372f-48ac-8e13-f08d3bdfec45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c176855-49b2-485f-852b-e07eab3b86df",
        "cursor": {
          "ref": "c14e62bc-fb00-4c2a-8fd5-c699780f72ad",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "945f389b-51fc-4218-94ad-ae3ed7617948"
        },
        "item": {
          "id": "9c176855-49b2-485f-852b-e07eab3b86df",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "076c79c5-470a-4282-b569-c2204c78f322",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}