{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "857f51da-669c-46b4-9e7d-d20d7663705d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e63a3cd9-73b0-4388-be97-6726171317ef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "66a49022-65e8-4e5d-953c-11b3e54e1c88",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ca6419b0-ff6f-44e2-8e6c-3e4965dc4236"
                }
              }
            ]
          },
          {
            "id": "fd9ed746-dd8c-436c-ab89-4d5446a6cb90",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3093e105-e086-4e08-a11c-4f0e2cc1adff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b7b55306-8047-4fd2-888c-df4fa62b6cba"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29955768-b614-46b6-a1f6-298778a3ea0e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "875221b9-3f5b-4d12-b426-0206ac187906",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d319eae-9dcc-460e-a0c7-11eb289e279f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "897dc930-21e9-4362-81d1-a391297edf70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccd5efdb-a7dd-4f9e-afb1-e44af9bcaa1e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "77274db2-8b14-4d38-bfc0-650e85fd6581",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "11199560-0175-498c-847e-50d71621af21"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d9c2fb3d-d97a-4387-bc65-58815a1b6cdc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8ef64e3a-2f6c-485e-9a6d-69adcf88d239"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c32a661-b0e7-48d4-8060-5c239b071984",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "24e03e8a-ebbd-4d79-89f7-fc1095373474"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ae48a41-05a5-4a80-9db1-206e96e467c4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80d3461e-998b-49e7-8da3-cb790576cb09"
            }
          }
        ]
      },
      {
        "id": "d562caf1-7690-4558-afb3-b128e8c28016",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "771f7a6c-1112-4ace-8d5b-c93ce2dc662b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c927bcea-89da-4f38-8c2d-2f81f638b603",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dadfb824-b0aa-4f20-ace7-327edd753a7b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0d1830-e0f5-470c-b525-6ad7e1085c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7fb834f-0b3b-417b-908d-e6a2f3aa9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8771dd3-7b4a-4035-95a4-62a792b9f921",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d10a90-b148-4f03-a313-ce3486392380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42ec3122-ecce-4fab-ad2f-5a0c8683fa40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dcadb2-fd80-4249-95be-694f02b811c1",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39033170-1f15-44a8-b3ed-6f2663dc4c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29a3521d-2107-4e31-8a02-2a40792f472b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea5c6a07-74ab-497a-8969-d85ee5f311e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "57f62903-5ecc-441c-9095-8af6602befa3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0942a3-3de8-4765-9792-e8746e562ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e26d6609-48da-4776-b4af-7280f268a8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022d0e9-d055-4f10-ba5b-9e9c10159293",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e32b34-918d-4f90-8073-66275450ca4a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "06515c80-469d-4632-b828-3a528ff64138",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd630259-5da6-4152-9714-f5b5201e2aaf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0d9fd1e-0110-4df2-bea6-a1ade18b3145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "23812409-a325-4c4d-af4a-22c533c798ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65d32e19-8633-41cc-8d90-6e115feec6f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "267bbe69-29ac-44a2-94d9-8c64901d4974"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d586a3ff-d3a3-4bea-a57e-8ca808d2fd5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0597b3e8-e542-484a-9509-78a0146a4a99"
            }
          }
        ]
      },
      {
        "id": "ec8c17b9-5b77-486f-b79f-f4da06a2b8ce",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97d1dae5-24d2-46d3-8b08-7e3a603534f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd660c2b-eb61-42a1-be35-c36016282267",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5806e1db-9f83-4dd9-8c72-3281915096ff",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2890f6-5bb5-4924-b95d-9d046536a40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bee978-f5a4-48a7-acbb-cb037af7d74f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1899c0b-aecf-4634-8c47-ffae578c2ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a16f2d7a-2c62-4b0b-8b15-64638a2d54f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729513f2-0219-46c1-9713-e6b02a98390c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ac9c10-5375-4871-a126-6a68f3435ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca6ff0a-ce00-4905-a4dc-076bc4d5a7d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b18da3-24f8-4cae-bf1c-423c807d81a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f226272d-93a8-46f5-b6cb-0dc94a400135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ef4d49-8007-48d9-8ff2-68c8727fcfc8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00baf24b-a78a-49d7-9f1a-aa8b32642b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a47063b-565a-4296-8d9c-74798b264290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6bb085-5835-4324-a880-cd10581d21e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baf8af6c-dd1a-4acb-9994-a67debdbd86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e9243c-352e-4ff4-b197-63bfffe1e760",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc2c1e5-f3d8-4988-b22d-501f93141b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d3af75-183b-47bc-a2d0-cfe026393ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a654f0-6629-404c-b502-41da4147aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91a95320-f9d2-4eb3-b8d4-cef7473cd466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7737692-9ba7-41af-8f0a-5b31dcf9bded",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955a4d05-6930-41d0-a502-f1453231a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b07ea74-6f58-485a-ae01-bd18684f7598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd131243-cafa-42d0-99c7-3010e2b516c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9faabb3-1e6d-4dcf-a42e-e7f7da74f0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d06820-c95b-4b80-9bc4-2498ca18e7c8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df08b17-fd16-4b0b-8778-97f02617f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3085609a-812e-46fa-b788-d3258d3303b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6630c26-7689-4e47-92bf-773e8d3e2f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aeedfe9-ef1c-4907-9d7a-ba5b668e9422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f771a33-1a0d-45b4-9b42-9ec565a65e2b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f591943-3e3e-4d0e-bcec-f875e4b3911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2302d32-79cf-4546-ac53-6a6ec86882e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ab3d6-ea35-43c0-99eb-370090de2f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae901a66-c2e6-4093-8927-fcf6e784b973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdcc4bb-ef5e-424c-b7e8-bd91a56f69aa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f78fc4-025b-4495-bf3c-824289aff249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2bc2435-7ce8-4faf-a26f-6f863f146b02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c151ac6-b456-4214-8dc4-d1cd8bed64f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c97ef9a4-15d9-4e2e-9021-fccf7c6632ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734c1597-d982-4682-847e-179e2984e62d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f1e16a-a0ec-4315-a40a-2ad41758ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f4bbba2-e4dc-491f-bd95-6876df4f346f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea021b3-70ce-4fb7-942a-300a6bee4f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd0d9971-bc65-4cec-a26a-df18370b97a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf31e51-4f9a-4045-b452-7dbe44bbc794",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b19ec1-20d2-4f19-8748-0ee7f0499c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52172ddd-a377-4f71-891b-93a49ccf2c28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098a30a4-64f5-4726-a6c8-b541c4147944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0b45e25-24f3-45eb-bbc4-142c9cef211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adf7182-bee4-4c29-b572-ef4a104a2ddd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac881901-6698-4ced-bed0-5db2b1cd4a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a81222-825a-4e66-babe-dcbcec3cf3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344b7517-63fd-41ec-895d-bbac7d727c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b68a22-611d-4520-8286-167d5abddcaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c174e13-f42c-4387-a2ce-e98cb09374bd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4eeff1-0c04-42ca-98e0-928a2d0731e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5e2043d-be27-47cd-a91a-b01912d1bc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97538f0-4af1-405e-ba87-664a95cee5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da8199f8-be45-4b86-9696-1bcd54fae6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225ae394-1d3d-446e-89f4-48bb62c79b5d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00735d01-c7da-4029-a39d-b601b061fb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7bb1f0-9d77-4c03-beab-d91c1e91fae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0be05d1-62d8-4fef-bc3b-b4669705c922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cb84cd5-139e-4873-8a01-95e456b71979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab28ae8-e0e5-4ffc-b293-f06c81dfff74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbc6c3e-9c0c-4afe-9e90-bf74f07eb541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f6cf39-9569-4fc4-82ad-0d1e8a7cc526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9360195-cb4e-4a07-9f06-af8d272efdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63abd96f-afd3-4c13-8316-6343e5dae781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6219ad-8259-4631-9d34-bfac2fc1440c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1bfd7b-e2ee-490b-bbc5-15a99bb7a376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7e9433-7ad3-40bc-ba68-388bb065989d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1797a225-ec7d-4944-ab6c-613501f16c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5b494e3-36cd-4be0-b521-d54fec26e91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7876fb-1ba4-4131-8eef-686dd23bec3f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd92492d-f5d8-460b-9ac4-6e7c4e895f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dcf498-14cf-40d4-afc1-21932a7adfb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6121b07c-1af9-407c-9bc7-74f14f23b3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "604a3bd8-b05e-4b4d-9c44-d34401b66d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff2f7ef-d331-4d40-8351-b756ee4649d9",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8491d171-e0f5-4573-b1f0-a2665622a981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb0686e-c1a1-4db1-9437-c7f5c621766b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16137c81-432d-4a8e-bb47-bd8133b66e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "098f877a-0b3c-4830-898b-dce1408582f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0552159-0185-4d02-824b-12a81ccfcfdb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55da8cd-6c7e-4996-a971-eab3fb1d32ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7915f6-6ff2-40af-8459-69d207a3dc6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3380f138-2101-48a2-9a63-63397e63f2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85bcea8a-2719-49dd-8585-a4f28471d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cac982c3-ba64-4d9f-a73d-21623eb2761f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e097c84-ebf9-42c1-bc02-3c10776adc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a94dda-f444-4c00-8b16-149481d41236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4984870d-8877-47b1-bce6-65de3508f901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "327a1111-114f-48ac-b394-16a576759b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e4a34a-9896-4618-879c-8fb238642136",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a60385-9fc2-4d43-9c71-9124fb1ad17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5799b03e-5534-45ae-9109-dd7f0395ae7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58181db5-53a9-412b-a665-d4e62948bdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e35c7508-44de-410f-a642-3be2873853b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723ba7fd-9f56-4a4b-aa8a-ad27bb2c59c4",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b6d770-109f-499f-85eb-241905693234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fec43c-f44c-42f5-b950-c2fb6e83e7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7d079f-ac2c-4677-8f62-99b42ffa5b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db1afad-d58a-4d34-b8e2-2e62e1986e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effe3ded-cd1b-446b-b629-2312a2b15ee4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b21695-4063-4084-9595-67cd22782464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3710fa29-bf73-40b0-bba5-a7af35c92d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208e221-ffae-4c7c-82e7-d438d4ce124f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28257fbe-7252-4d70-b700-8a1b1ed3b4bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63769e1c-7830-4896-aba0-fa37716671cd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8017fd42-ab75-4452-ba89-4bb250cbce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869430c1-bacb-496f-b784-2f60ef8b6fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b959ccb-4894-4a15-8a80-4d058a6e28b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4c58ea0b-74cf-4795-a305-6eb043e6759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5cc362-723a-4b5d-a948-c844a548905c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6c45c4-72d4-40bf-8149-2f6b99ba6937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab7cdc9a-c210-433a-9eef-95f2bfc5998d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2931cb2d-b3cb-448f-bb69-92d5226b14d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42f2a40-f078-4375-ba70-ec4dda7a7d2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4c5860-ff9d-4a12-b7d1-aedbfe6ddd19",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceab99c-7251-41af-8ccf-677228c7cc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9cbb70-fa17-48ff-a183-848e4b3c281e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c67cc3b8-d682-4631-9448-406a52dd701e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b9d5ae9-4c19-46ea-a8c2-e4ad782b44cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac59f6fb-391e-45df-82f8-acba3153e6f2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8e0d75-3d65-4105-b7dd-0e902a516bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b7abf05-9420-4e70-89ad-561cd1a005ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aedf82aa-b238-4476-a48f-214fa2c81cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9baa72-703b-4375-b61e-699033cfa9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffba4e6a-27a9-41c7-b12b-49e137681f20",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fd38f3-9f18-417a-b57a-b7c3fd431928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31e7efb7-659a-4f48-b0db-1a3289703910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5437d81d-ae47-4b61-aa6b-873c366d7740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4882c57-47ef-4b6c-9dca-43531537851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a046b6-e252-4096-a72c-dd84bbd2dc28",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea83237-1b65-45ab-8f65-a40d92a0374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad82205-d11c-4247-aefc-cf0f1c7dd506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f755ec0c-6c6d-4162-939b-2ce822bb85b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ca54c4-6230-4dee-8f00-d4f5536333ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a4837e-17e3-4ca9-acfd-18aa4bdb8e40",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3e1cdc-f7e7-48c4-9d95-297ef0d96c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bd411f-742f-400b-bdfd-2a1a0483fa97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1a89aa-45d9-45c2-a78c-1fedf2f255b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee4bdf67-24b2-40df-8dfc-b5f2a3b8d617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac216cfd-bb06-463c-93ea-5d634b31b2e3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fe873b-de46-4c07-bdf1-a248684cd359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb0db24-0a06-4c31-a8a0-8e736e51acbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b22335-cfda-4182-bcca-1a21d7538499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "08c33452-e397-4300-9ee9-7dda7fac8a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d47fd63-bee4-4fd4-b7b2-ab1e4503563e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a2a172-ad87-4122-a220-5176fefbbc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84c5aa1-f6d5-4772-b341-1de205a403be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4121e268-8ae6-4a68-b77a-7828434a5cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c41c883-dd73-42b8-9987-c8e0b844573a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6653b1-1261-477c-9197-5d17707a1807",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c27b0a0-9f72-4390-baff-2c8073f5275e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c061979d-184c-4b12-91b0-2d61dd5e938b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd30557d-74e3-4723-8999-b9fa11307b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "889a850f-bd7a-4d33-8be9-1df6f1044edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cadfeaf-77f1-4b6f-ba64-d1a95aa47f1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e95f33-9b59-407c-b360-feb781c02b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fc66ab-5e14-466e-ba96-198ace933f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0073946-bd0c-40b0-8f29-50713932b28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6326488e-bf29-4aad-b2d2-40cde8af52a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a007291-e02d-4062-99a5-03f108776e21",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1565075-4601-4bd1-9ae5-d0e223c808de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d831f67a-e2b5-4c0d-a51d-7406870980d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2459fd29-a8c1-43ae-a897-f96ffcde9f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c186208-dd48-4883-a215-1f66917d2200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842d2d4e-1c83-4175-97f8-20f00d8347d1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd20e9ca-e023-4e80-b540-393fb75f5604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42534be-1c54-49f4-a60c-e5b984133af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ae4dbd-af17-4559-bf00-39c91eb6a708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5db6dc18-efd1-483f-ba6a-55c903510464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256fa678-5f83-48ab-92a8-2c97bc411e8a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2dc3ac-bdc4-4dfb-a88a-6312dbb0e5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3848c63-3415-45ff-bf87-344fa95a5551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd480df5-675d-43dc-9ffe-343c1c9f4d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11d314a2-20c2-4cd7-9459-4812c1881c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575bc2a9-ce8a-4fb3-9f53-33b665d1288f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6258993-dc2b-4474-bfd3-a951b2a6c252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9c98b1-4b3b-4fda-b5df-bb83159220f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e7a5dd-f649-4d16-b268-94dee75735e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a756280-7953-4233-b011-36f962283310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fa3f49-ad6d-437a-85f5-8da916f74b40",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ddd165d-2c27-4d88-9d06-9a755b535607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad5928d-9ab6-4560-8021-0e7401764a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143e6daf-e59a-4a72-9e44-b9da2be50d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15b51e90-1a87-4633-a653-f8d2e439c752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0019ab35-7da8-482a-afb3-4c87353fb632",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47427f0-6edb-4568-8a94-3d2b76b56230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48dd9aa4-c16a-40d6-bb9c-10f7766bcb4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4f2fc9-baee-4d46-981f-623ddad5d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4db50669-5166-47ed-8291-cbc5bc8097d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1e8a02-a8a0-41ad-afaf-a36708ac52c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9065a89-d2be-4994-ac11-b9e9887cfac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05450f1d-a755-43eb-8d24-6880a9a027b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33de0f6f-42a1-41d4-b562-5e73562b8d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "82039312-0862-4f77-a211-e4aafb0786c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a464082e-265c-4134-93b8-b4e051956593",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ff7373-233b-4711-b3de-20ff9a6daf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4161360-7fe5-49dd-85cc-a4874e053e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7e6b3d-f848-4e33-b038-3a5d2a790ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "603ea855-c776-49df-b636-619005a288c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113c6c57-d137-470a-90f7-d72773ad6775",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45405575-b9a8-4ef5-8e53-cbc792f1d196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc783a4-2368-4c4b-802f-aad099cbf666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fedc6b-e120-48d1-80a1-0218c1248278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f1baedc3-ffcf-4335-b470-67740141ce77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816f8912-0084-45d9-805e-da0fc86b3fa0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ad0ebbd-b231-4646-9b39-1a1f896b8caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486d1f89-856c-49c0-bd42-2f5fbf59d99c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ffe416-274d-40e3-8f9d-479d676cad4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92dc383d-3abc-4224-ba05-33da51009c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aa2d0c-bd26-401e-a01b-328a5c25b555",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60c1c2-6aed-4193-a6ee-74df821d08c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f8b578-c6fc-4876-9f92-83541cd76821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e51b97-93b7-4eef-9576-d8cf57a6ec30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d94b0e59-c1e4-4f15-b797-4a1202b9437c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96856175-256f-4ac7-b7d5-171f65a5c176",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a4b8b3-aae8-429a-971f-b55144f6ed4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a79b1d6-1484-4cae-a58f-089197597c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e6ec30-96b9-41ce-8cc0-9fd51fb6107d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dc5915-13cb-4717-8069-cc11ee2f6af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17603efe-f783-462c-a3e9-868baadb5c0d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de497ff9-6da9-4e3c-81a1-6139e6b3dc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252a5543-8135-42b5-af1f-378ecbab2b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29904b76-8f2d-4aa9-9a54-ce3e8f4c802b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c09fa795-e845-4b9c-ab6e-d41988d8ca5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fb38dc-12dc-4402-b4fc-c9721fac26e4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f67550d-7222-4cbf-a632-052c8d33e068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eecba03-b550-4432-ac8b-617a5c14bef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f555b21b-e3cf-492b-b48d-57b6f7488ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb36822-aae4-4b8e-a722-ea54b4005a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fdaa57-aa52-4f25-8c67-a0912a4905bf",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cef8637-6129-421a-bbd8-30d2e54b8afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f92f81-6f0c-4a30-aef0-8010ad70c655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f5267d-84c4-4be8-ae46-2304d62a0ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95575da-1810-47ed-8f7c-4ceb50efeef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3572c70d-b86f-4a20-8d7d-b0a120feda69",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f685969-71bd-40f7-8423-ec4ce90df3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1641d7c1-b7cd-417d-92dc-05afdd2bdb25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c94c08b-9e70-454f-9ae6-2700171d05c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d667d05-0f4c-4984-8f47-5e547a390b7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b34685-10eb-4497-9b0c-51071f1e6932",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b3bd62-650d-4198-a927-d42feba4f690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c567aa0f-e925-42b7-8b6c-338d27402f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336378f0-3751-4261-84d0-3edd49d1b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e063e76f-db4b-40f0-adaa-f9b329994c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72028ba5-ca90-4e51-86de-3a9c0d2c2172",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60193625-1b9e-4dc2-b568-924afa3eea8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b4fb16-950f-4cf8-97c0-f9f11e6d5bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04c7866-e378-41ec-b608-b98b7619e9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca9d1b7-e32c-4e81-bb84-aa5f90c16d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d14c6c-cc4d-42bf-85f9-0cfcb5154a11",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97682736-f3ef-49fe-a1d7-2f7b9c512dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7a3175-650e-48a2-942a-aab9d7bf6da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e7d041-9cfc-46b2-b28c-fe61516a58da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2698f388-f227-43b4-b6f9-3f3cdbc285f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da12f4a-e662-410d-87ce-735ce811ff15",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c59cc0d-60f2-4195-a295-8779427a228a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34223a49-d5b8-494a-ab25-4e54d6eadc8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4435bd2c-f2db-4a63-9c65-71d331adad16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d70b81-4583-493b-a12c-19d941c8208f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03931dd6-33ed-4534-9a27-fd6fb4cd500c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3838efc-3b03-4b94-aaf5-ba85574d8cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e26592c-ba78-4d33-81da-48c7a5bcb0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8967b3e0-f509-4e9e-9588-8fe69a0ac084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcd228a4-f28c-4826-b7b1-e4b675af2a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c984a4d4-ffd7-4e89-be9c-9b1e1e4e5743",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d6a8dd-656a-4d3e-a016-917e89cab23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346d0be9-2064-44e9-a309-0adc0fb78044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcf6c67-b359-40cf-acc6-3953c8c656ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fb1689-d687-47e4-b090-4bbf19078db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5348902d-ff42-4e39-9020-4cdb1183257c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70265596-3a78-4751-a0db-4380f0e9354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41fd124-cc4c-429b-953c-ca7230c8c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b5af55-dd38-4f2b-a326-4b24f0c00328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "76387dcf-0c57-4d13-8d6f-b135e35893a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb9bf5e-83ae-4939-8ae5-393dd91c1978",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a03cc4-554a-4621-9dc5-7c5ded3b1faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e08ea34-ab61-457b-bc85-eb96ad55eb44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c0c8a7-4507-4bd5-a0c2-3e50e8cab784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "420f1e19-92d9-4de5-ad61-1872f215975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1085236-c510-4cc8-83f2-e473265f7507",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6278f48c-12ee-491c-9f01-2203fe67ca1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ab6684-9b6d-46ad-8b7a-60e3d8c11eb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145177c6-f5a7-45c1-90c3-b937c759d186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ded97300-fd19-4d00-88a2-f317db8cd978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c0375d-2378-4f64-8e24-f2c1574ce6e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f996dd2e-e39e-43e5-864c-61dc986110eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd45f9b5-23d5-4ade-b443-ff41dad30e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad6d8c4-e5ad-4ec9-847b-9ed02f55427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dd915f-18ad-4633-b37c-ace046f85754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbea899e-1006-4c05-9e3f-7936b3cd9255",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781010fe-a094-4151-8c99-6cbf19f684ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db517c3-c00b-4644-87c7-c2ff8511a366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d430418-dd2e-4b9c-9db5-5062310d86d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78ce818d-0ef9-4c78-8d17-f6fd08e976f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433a9025-3636-4c2f-81d3-e645d98408f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08202512-916f-4c0c-939a-5f45170b1f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52a9742-80e5-48c6-a479-ebd83a61c2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c761a21e-76a0-4179-b681-cb231a4c822f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2c3483-2e36-4915-b115-26d9680dc627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c4696-ccf2-4ad8-b7b9-ed293d211bf3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65244b46-f0f8-49ba-8335-edbdd58a85da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b55d207-8d3c-48bb-9acb-42519d2666e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc3fb3d-36c9-4d47-b35e-a08fd0961b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a10531a7-bb1a-496a-9a0e-c62f307c3bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c983a2-0b00-412c-bee3-5c73a52764bd",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7709a5d-235a-4c2d-842a-629b2b7e9809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b379627-2d54-4c18-bc29-7a8408cb7014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7a49c2-21b2-4580-beb2-8d9c0298e651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "950652bc-adf8-4572-9e1e-cd30d2d26bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c40a85f-2cee-462b-9eae-254ed4aaa48c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f81f95e-4c93-4249-9a02-8cdc1aaaa6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea15ad20-2bbf-461f-b829-48ce0fd10081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beab077-c9d9-43f2-98b2-4588443ea0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7930fa42-6f94-430f-b64d-594cbd66500f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2042fff-f6b5-4ff4-94e5-7c64caf79aec",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6386bf8-9dec-4dd1-9079-6e895ec5fa01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f88349-f55c-4d26-be02-7c8ba0f06be0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a630743a-9df1-4b64-b790-ee0dbfac141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d37001-8f6b-4e23-bbba-e99e62e62eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6753d16-c16a-43c7-a230-e8886996dd35",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd10b415-71d8-49ab-be74-28c1abb78c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df6e9338-957a-48cd-b179-6c017a57824b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dde3e9-2b24-4566-a23c-c7d43da48316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9facd08e-8993-4b17-95b5-872f6fa6e2e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7725b61f-2577-49d5-be3d-b48e511a4b4a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd5c05-da64-4db4-95e0-1452e3331a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba03f63-de96-4881-9220-226e4f56ad94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544a9eec-afd3-4c9b-975c-cda15720de39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d74c4804-58df-46f0-9529-cff872bad673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed895e89-185f-4ec2-9905-4777ab140e0f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0af08-a9f5-4c69-ad3a-991ce1f358f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd908b0f-592a-4bca-892b-c9d92b1773ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8363fecb-e5b4-4070-b740-5ad5f4a74013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a534fac-131a-4fb3-92ed-58029d8994af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767c89d1-88ac-42ef-9e63-928474a8da46",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c5744d-f327-4661-9c5e-81006eb87c39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af246d06-3040-471a-9dd2-753e5c0f49e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d7bc0c-3e94-45c7-81c2-40b6c3af7a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b659f269-a6b9-46b5-ad0c-25bd7f4530a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ae2ca0-91c5-46cb-80ec-27ec54073e88",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd6ed9b-1f8c-49c0-82ed-65be28d3e3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d03f248-2e16-48db-9749-8a3fd7a7b776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8a8eba-23b4-4790-aaa2-3d7e8cea4a9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2596134-204f-4fcc-b119-1fa1a64abbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc473a2-7f8c-41e4-bca9-981658f18885",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc564c8-747c-42e9-b83c-c18dc87154a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a185d9-8d01-4c7e-b1b2-c5a845839ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f18129d-d256-46e8-9c90-06503a7367a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d3dd52-5b44-40ca-8ce9-3c83c9d4e8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc76fee-d83c-460b-8e9f-218a3fd520f9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0e4710-a8b9-4d96-a0ce-5f7cd6438991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11cfa8ba-1553-4430-9605-767ef916a156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fec92d-de01-4a2d-bf17-5df29551ddca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fd308b-3f25-42d7-a563-cba42ad7b5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00388f79-c09a-4344-b860-e8dbf5ce4116",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2178b0d-bcbc-4c1e-8965-65211215945b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebaf8cf0-632a-487b-9869-8e58ce656718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b3aee3-95c4-454a-b3ae-86aa326dfb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8dc357f-520f-4c71-b586-a79731636b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87277d31-e92f-483a-bc00-178de854f414",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8206d21f-5456-42c5-8380-893333df6f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760fba90-87fa-4eb1-9d42-9882526648bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6de3d22-9175-4f77-b796-216839f137ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5400cb-7bc5-4cd4-92b4-8e9e0d42c34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e945d8-56d2-43b1-bb9d-fb2df46a1162",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91296427-1005-4c8e-a0d6-82b0c177a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897426e7-bdfb-4524-a9aa-8e8122e8c7af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f62d79-1c0c-4007-a584-ba8ce6443425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61727e3-e451-4c4a-ab49-85902dd587c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b766c0f1-4142-4df2-bc15-24abba606e3f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2883aa6-df85-4db5-984a-4252026967bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db491666-0174-4431-93dc-23221ac6cdd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1ba6e9-5548-4dd2-9293-21774df4aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23a9a8ce-ee2d-4225-85f2-37f2dc9e4f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c9487b-034c-43d3-8a21-5cd7b4f10f28",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c475a2-5cfb-4a34-bdad-444352b202c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4322f951-8e47-4026-8197-808c2599bd95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43d17d2-f5cf-4468-b7c8-8b4dc1ab04a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb66551-7a8b-4b72-8ca0-ea1c7d85fb90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961bec47-c0bb-4533-949f-4d491b45b61d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d09fe8-3cb9-4af1-9964-fd2c11cb6575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6cc3ebd-6a85-46e9-ba6c-4fa92f8a0ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7df528e-c99a-4ce0-9170-cabf4ceddd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9052eb41-d61e-4ab6-81cd-ba8381d8eb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653acff5-4566-4413-90c8-972c46031d75",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c97930a-a101-4a0a-ad52-eb998cefeb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e25f9c8-48ef-4dd2-8cd3-0cb2d9d63b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175020cf-d4d9-44d8-8fb2-989ec2986d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e10365-fc01-4003-b1be-de0b2c9561b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da6881b-e82b-4de4-a01b-9be11b847844",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5378f7f0-0fa4-48d3-9332-5704327fa534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08b9984-6ad5-4772-8577-8cd067417159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce87074-ed99-4ca0-b48f-5ea71c6ecb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "611dc3cc-f77d-44cb-8ac0-0b5724bd9daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58bb988-4aff-44df-8ffa-60e07fd42b23",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08d6226-f9f4-4d40-8d82-74e60265b2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7192bf69-7e43-4a82-95c5-2609e985b3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f05e91-5c6c-473b-b7fb-6ea311902c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d759f4d-bb85-408c-a19f-37087b9bdeea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ca2e01-b3bc-4b67-833c-470df766899d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbce9106-51a3-42e8-a0ab-6fdfb7c829b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67abda64-3844-49c8-a65c-ba705f3dcb4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9b028-82f1-4e30-a1ca-8c084ca90c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4615e59d-24ce-45fe-a30e-2e359bf023fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a8b7cf-fe1f-4a3f-88ed-8646601a78f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4608e7c4-2d85-458f-8b11-9d456630e422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02885c96-e9b9-407b-a7b4-c00c65ccae3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75952921-539c-4437-a2ec-d251d464a707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9666de-54df-4c63-9625-5c3cf8aefa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797b57b4-1cf0-45cc-8bba-15381ecfa121",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef21973c-9971-4a79-bd10-cd376361972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "366055ad-958a-4c03-8d28-dca803975db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068809f0-fbe0-47f8-8e56-592af793e5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9eafb07b-3cd9-4ae7-b003-a4544c6fdb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f53c61f3-8ce0-4142-bac0-5d26b5aa67a9",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0025b4d-214e-4df4-ad09-992cdbdd324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ff1f2bc-935b-4344-8dac-5be9ce22302c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca08541-3536-49ce-95e8-3431b610b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e28af23-4788-4658-bb82-244ce9b9aa37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b3ac4c9-e34a-4539-8223-f74b86bd0744",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73f8b2c-ba6a-4375-897b-c721c69951ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6117cd-b740-48ae-977c-16e978959846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f70dae-7ae8-46e3-b6c6-25ccb384c4ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd4b5fd4-4e38-4037-bad0-6d70b58525b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba617f-3ad7-462d-8427-db66e63c8058",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3cf29a-e7c9-4542-b6d6-c7dd004462a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36362a0d-d6cb-47de-8279-5d67701f5496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a9231b-f32c-4dee-a730-f08a2267ad86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf157af-2dd9-449d-bc58-f7bf0ddbed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4757ed-9a73-4945-91bc-b9ca2e582f00",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38aed7e0-6c8d-4cbd-8f7f-310c5a198732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ef03b1-faf5-4b40-a0dc-f063e9c40af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6aac9a-decb-4f17-af65-6ed42f5e506b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "974165fd-1697-4c8d-83e7-eba1c3eb6f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a750d6-7764-4c1b-ae33-20c543dab899",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4548dd-b527-485b-b8fa-e0fc8b8d9354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52fcb75-c50c-4835-a14c-69a61ced5e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "327408a8-b349-4b36-8ded-a2a87926898d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e609d40-5105-4b65-8e25-bfdb4dc9f423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f963d9a4-cb94-4111-9384-ace5adbaa515",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e745ab3-52b8-4ef1-954c-cd193738d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2390320d-4432-4bce-9aa5-06819e1ecaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23368238-d1ce-4d94-b986-6c555620b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "204e7e18-82dc-4bed-b848-cccd18435eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4a8d4a-d3b2-4032-ba11-6fdb0e32c5e4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d925a9c9-b816-4089-8bef-c80f61de4d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d10a6ed1-426e-4504-bb3f-913730f71f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff55993-809d-4711-b1e4-b730be417d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44a7f512-747d-4cf1-b64f-0c98900bb39f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0591c977-e94d-425c-83b8-a82ba3abff10",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29d129a-da4c-487e-bbdc-29e2d5b5d38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f72e2aff-3e83-48af-88b9-e192197e180d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18509884-ed1d-4a07-8358-357aef6a97a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "917b00cc-a7f5-4bb3-9ede-83489c312090"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e13fee37-6229-49cb-9c33-569b684ddd87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7b1506c-7665-48db-89df-5b589ed8e393",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e5494b-3b93-482c-a8d6-a490c0c75bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "976ab92b-4de9-4469-9235-1bca65b58b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6f78ad-7274-4efe-85f9-783549006dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f03d1c8-ed60-4489-931f-95c12bea8463"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fa4ad45-1040-4186-b71d-093927835860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4fc2af77-8b38-4117-a69b-8d48bea542a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "365f3240-0d5a-4630-b64b-636e3ebc76d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc067bce-e11b-47cc-9376-775f9fd19e4a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03ccd969-174b-4d93-8591-4d046cfe478c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "191db88d-4047-4c86-a8b8-547f35e9433f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3e5c013d-44f1-4c4e-8420-fb450224ce86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "08a79586-4f32-45f4-9196-f59cf63146eb"
                }
              }
            ]
          },
          {
            "id": "10052f2c-e974-4610-894c-756cce475b2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83689532-d8cd-4caf-b97c-8662bdf35ad4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3186a304-b1dd-4e0e-bec1-78609fbb9776",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637c563-aee2-479a-a118-6e74aca96f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1ec5f786-df09-4c0f-8c6f-3987a10ad349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff44f669-de6a-4623-a63a-1d6c8bb90ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23f6d6f-05b9-4b5b-ba67-03e6e4e622af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5432c090-6e54-4041-b133-59b0c19ebd9b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d01c7dc-93e6-40b7-a9c1-ba8171722bcb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c281b89d-f2fa-4c4d-9641-cb67cc4831de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5efe5570-debb-4e29-82e6-c98faef67612",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cd25a735-6db6-499e-b91e-e0bfc140a9d4"
                    }
                  }
                ]
              },
              {
                "id": "0fd2e8b8-6e9e-47e0-bf71-fc14399aed27",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2846b1fa-d564-4b62-86e1-dd4058b9b18e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9fa6b3bd-42d9-4a1a-893d-0a6a67dd6c20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79153022-a447-4bf2-afc9-23312dd9c1e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8c3ff6a-2727-489f-b9e4-e717904d2861"
                    }
                  }
                ]
              },
              {
                "id": "c0a90d4b-3847-4fe9-96d0-c65bb72f60a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "306f6d96-89d3-4592-b28a-c73776457796",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "681e1d48-97ad-44bf-8276-bac1e9910780"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beb7374d-0e49-4d73-93df-3ad0eabb526e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63360df0-605c-4a1e-8789-4a5d80cf97d1"
                    }
                  }
                ]
              },
              {
                "id": "5556087a-0923-4a89-90e0-3806c8d9ccaf",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcca5c69-5f31-47cf-8553-7a69292026b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1caa66e7-b5fb-4e6b-80c0-a311a6f89d56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd248522-f503-43be-bc64-9d092d6e30f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "60512fc4-35b9-4efb-a604-2ae323195bc1"
                    }
                  }
                ]
              },
              {
                "id": "63601dc8-0e75-440e-88f8-5725ad10ef0d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f088fbd-25a4-42df-8ece-77f7848d832c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "082adcfe-939b-459d-8e18-8f1737fda834"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "015a7734-fa3b-448d-ac20-958d36fbf849",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "191753f8-04e1-4aa5-8e81-f61d6ef325af"
                    }
                  }
                ]
              },
              {
                "id": "4ed342e8-9f96-4bd4-88a4-e40067b7b12b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d3861f4-e24c-4808-b123-f92ad0cbd18a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bcec682-3ba4-439d-bb2a-dbc11eadd059"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21db38d7-f067-4c78-b199-0b5906925963",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9f2478a5-fc49-45a2-be9d-8e15e034b41c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb6f3f46-cfde-4680-9b29-dd1263e65958",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cb497988-2504-44c9-8494-373c71e848b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3683e740-ea75-4739-971e-3cc84536864c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76525f25-1b70-412e-a06c-216871bdca89"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "888f3665-286e-4aeb-9882-e7a9b8b7f9cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2a850d6d-afa2-4435-9110-34b09d700ebc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "926be82c-d09d-4fd8-becf-84e6d93fea84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76008921-2571-4feb-9bb4-753881368d87"
            }
          }
        ]
      },
      {
        "id": "9b5407f9-54ec-4201-9df0-1e8fe8907bbd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ea99bd29-f557-4bb5-99fc-c0895e3b9358",
            "name": "Negative Testing",
            "item": [
              {
                "id": "467507bc-e668-4a89-b1b8-d17949e4f71f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1cf0352e-8163-41f1-8886-72943babb67e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "302238ee-ec64-4688-ba15-f4fcb9ab65b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943cd90c-8dac-4b40-970f-af703e06dd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d575d51-a5ea-49be-ba36-a0e9d4325b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef7d2c3-28c3-407f-b4f5-43a36dcb5dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ef18cd-a65b-434f-8fb7-055c0927af80",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a2199-d3db-40c6-ad90-04cb03a23076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80ec09eb-b7fe-46f0-933e-d4da2b940b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a14c065-55b0-434b-9d31-c759deddad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9409ba74-6ef9-4a60-bccf-8e454a0fd955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8af8195-9af7-4ace-b502-57a1f5cd0588",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e0ca1a-de4d-4257-95bd-cb8ae88c4644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9342536-8324-4af2-8fbb-6ec61b987632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ccb98f-dd10-4b90-884a-cf2110e32fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "962205a1-56d4-400d-aa03-d8d3bee1e37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199490cd-2d67-448e-ab05-57ab75f863f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f75b124-abf7-497c-93cb-0a6cffd587e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b87ce8-bb8f-4d58-bff8-49f7ce201312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c7f5c1-e84a-49db-985e-7315e5d48b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43101447-caf2-4e10-84bd-6e42f0b4bc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4469032d-d452-44fa-b190-62c3cc1cef74",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7845132c-8bd4-4e9f-b1db-7f5113477311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ce2ad2-c4f8-4819-9e62-afb0def36ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b9ff92e-6415-4621-abae-734f72fed2eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27cfbc2-77b4-4dd5-ba76-e1b3a29e0544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c84ade-ccee-45a5-8172-b1bb47d73cf2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7d93c7-9a64-42b7-937c-a0b35e319836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e7e0f1-eec6-40da-a032-b386a1e163be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98858875-d9fb-4a43-8435-0e83cdee6307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7629290b-4168-45cb-9acb-cc3992ba86b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02818e5e-b7f3-427d-88b4-1e66cf8839a1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffe2cc2-efca-44f5-8166-897f56049775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2e463a-b32a-41f3-b952-ba5ee34d85a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e20d7c-2425-4a34-841d-bf2d0605d2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d58218b-5a9b-47de-82e3-b56d87b63a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7afc3-a082-495b-a23c-1b4c02215cd8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8496f8-3086-47b8-9b6a-5a168edbec49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1e124f-9f4f-47f8-af4a-94de4fe8b23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1769361-9083-496f-9e6b-7d790740999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52e11024-477b-4cd2-a368-14052ad90c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "740a0ecc-014a-42b6-8a6b-0f58b96a4eef",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee754ea-81ba-40c8-8ed4-5de496a5020f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdde3fb2-14f4-4660-97c6-7fd38969f3f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913e5d99-e0d2-4732-a6f6-7d79cf82012a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61123bd8-0bef-4902-a3bb-7217cd9e42eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d0737-8e50-44c3-a737-dde9e2a941a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369e93c7-555b-4617-a301-891c26c3fb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26edec7-c079-4647-b842-8c1f63f9f640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a996212-f9a4-4328-a85a-1d36c45b7484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c4b58d-905c-4970-8bc2-ec9f20572485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9ed0ed-4fb7-45a5-99f4-0f8267296c93",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf7d176-9eac-4662-885f-8d47103dde3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65660621-83ad-4e43-8f1b-ad6181092223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fc762f-7704-4a9e-aeda-3ad604b4fcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c6da717c-d153-4d18-95cb-3c033280fda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd0254-2868-464d-a111-211082be5d2a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6c98ed-402c-4c01-8872-466969426d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47051fa3-80be-408a-83d4-de8bd428e610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56a28dc-5805-43af-bf8e-5b05aab5c0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5ab018-36e7-48ac-9b57-09dcfbddfc69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec17440-dad0-4615-8ca5-230887a3eef9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3093ba63-cf46-4b98-9d1f-8bfe064b6539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e10e899-abee-4678-b62d-9212259ab209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e066a407-3060-4c0b-9af0-4c9e5d8ec0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47065e39-d979-4612-b9b6-0ea411a0087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d19ed36-90e8-47cf-92a4-8a5e0d90e35f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb9cee5-02fa-424c-b6fa-76ddccdd793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac3972b-7337-4988-8fdd-78534fce174e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e91a89-db0e-4713-b824-fd3bd78f7ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "74cc12e2-c6ce-41c2-b2ca-47478caed1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafc42dd-eaef-4c33-b5bd-9b02b70dd6a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484a9d00-2f68-4097-bd2b-fbd7aca68e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a476ab23-5501-418b-9b6d-347691c44f14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c88b40e2-5d96-4078-9381-dc7922b67531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f4132-11a4-4eea-9970-66e8a9e32121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c322aaf-42cf-4c81-aca1-22bd9ef730b0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d971c0-746d-43ee-8e51-24d792387c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca5f696-19bb-4f14-8dc4-8a5a49480302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb9f98a7-647e-43e5-8133-8040356b58f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac5a699-ab2a-4386-b37b-153cfa790218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2b93ef-3dd7-4001-a2d7-e458e982980a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd74961d-19ee-44f4-ae24-da815d057f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0df4bc-e778-4bb4-a17d-8d929a2447f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92301643-3a5b-4c95-8306-bec5ab212a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9f01eb-d426-4339-8468-3c063079791d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af739a58-d952-40ff-8d0f-c091374ce92a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02137747-9796-4ca9-9d21-c9b0434c99a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c78416e-c808-43f8-9f1d-1cfde908b85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ce76ef-c670-4ef2-b324-e32ecc75b12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca67f6bc-e756-4beb-a393-6cf5f95793d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f1cf09-17a5-4f21-8f92-0be469cf0117",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cafa89-0658-44f0-8a0b-4bce450cd1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f6b8bc-59ce-4946-b740-af9d5e91e897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16f10b7f-5f22-487f-bd41-331f735b4dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82780898-8d9a-4362-905c-f141e6e1e093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cdc0e4-3716-49ac-b394-e2f0ef1f04c9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0242f0-f41b-41f0-9b91-42e18f6cbcdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffa00390-fa54-4e54-a4d1-4c0d440adb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac38e01d-895c-422b-a349-b8891591c456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c96e2b-a35a-4d50-8a66-e01b8868f7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e9cff7-e8e1-45c2-868d-45adea7acfb0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e710d6a-2e4b-4fe8-8bd8-b7ec01e788bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7eaa351-206d-4631-af44-746825d7d613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78159b8c-e5ba-474f-8146-500d40de1a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cfe122d-db62-40d7-a6ca-87e2936d74b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82656f8-babf-4d4d-967d-560288abe1c4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e0d5c9-23aa-41e9-8843-f080006a1afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bd6887-3edc-4e46-8b97-158e8b86a373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39537038-65b7-4920-bfcc-517453c78ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c48b3f-7dae-48bd-b28e-b2fd80cefb1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadfd914-fb3a-46c5-856f-156ce92bc24e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b6603d-53b2-4d76-84ee-de18c05eafd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1892d678-c95a-440f-b3ef-c89d8f0355fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23123528-2034-487a-8bab-6e46baba4d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7354492d-3677-4076-80f1-705c32cbbe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b467b1f-c929-447e-a180-ae090310df62",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c0b0db-5860-47e9-b2b5-24d62811af47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124c3a7b-44d4-4d31-988a-b3f67b4c2e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f71b0d8-ff2d-4337-9250-31ec8e28c145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59520e53-d590-4e91-9921-ab136e40fd6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223c9614-e235-4c53-8d7d-3e0bce3fe40a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27d27911-1522-4da4-90b5-bc268aa1fbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a209dc35-f3cf-458e-9ead-13237ffe51bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff22276a-a5d7-4f34-a0fc-131718acc4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fb05b4-11c5-4e81-93e2-c0460ebcc3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff68f13-fedc-4539-aba3-ed8873573a7b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ddf388-482a-45c0-aaa5-14f7c8ca6b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967d6467-2268-4b95-ab44-2cf2ae40c8d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd9c565-3ce5-4c53-afc2-294f3e27bb6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df4a7e4-2a7f-4ffe-82db-7ebed181a8d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fb6535-0e88-44ce-83d3-5d2ac1df1c8f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7688b1ed-1b93-4e04-b448-502084d30bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6f2e535-7bb8-4713-89b9-6c5f170f7d63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ba9253-2926-4e6f-9d0b-dc8cb9776aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8ed123-4857-4051-a938-08565990800c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa3d4fe-1808-4b88-babf-b82f258485ad",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5c5167-a270-4a0a-b247-1497c2dfd7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b5acf2-4595-4d92-baba-c3bd0ac406d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3bd195-1431-48c7-9b4f-fcdf138b000b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bec4a06b-a110-405e-b605-a8e70ccb9acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c36d1802-7164-4e8a-a832-d490fcdb75dc",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6158acf6-7dfd-43b2-980e-6e36c89d55a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da5cc39-2bf1-4bcf-88fc-3e9db0e087ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fae53f5-a3a4-4aaf-8cd5-5fd8160371dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d314970-d1aa-4f89-955c-d7ab6790c399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d0c751-e571-4374-8467-4a1a7847684e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b248a28-eb64-4bf9-bef0-3b0a228890b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc5d38d-49f4-4e9b-88a1-91b7c17c397b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69613045-198d-480c-a667-b22d0fb8847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8457e5-ab47-43a7-a02e-3f23dd034480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06450805-b05b-4376-a562-33789c85f4b4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3e7c9a-a70b-4fc9-b45c-d0783e5f0a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa372039-3fb8-42c3-a220-d110e397148e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7844abca-9b5f-4742-bf3e-8f54ace28f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab4c09bf-e651-4b2f-af19-6a9eb0d18632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933fa35-6dc2-4351-a57d-7ab2320d0a86",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9e6d8f-1469-460a-bb81-c84ff4f5682b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de961a8-6adc-4117-bd9e-d205644d99d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edec7d31-de0c-40ce-bd66-afb49107642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "767bf1ce-a228-4d5c-aad8-85817cf1514d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30f5300-b970-4a05-bebc-19311db0de67",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab986af6-ad40-4055-86d1-c2fbf5683a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da82cb4-7d4a-4124-b6ea-49ae4af64690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115e54ee-4882-4bda-b2e2-8d79ecf20d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89af53b3-d199-485b-b6bc-d2731ee206f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f9fa43-f430-40be-a4b8-0606de1c4fd4",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b977a70e-705b-413b-8790-4a0695d062a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5c2304-868d-4a85-81b6-5a49f5030e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10ddfbd-4ea1-4a53-9bf5-cf8a269d7c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9dfd0c-1dee-49b4-883f-c5099a825b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e830c2e-c72f-4581-a173-255d811c6ced",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029dbe94-3795-4113-8ebe-4b20de905a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660f2274-bf99-4e1d-8a3b-b0a5f4d5f849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669f9437-114f-4146-a193-7186a8f2a77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2c6231c-3c22-49c3-a1f9-e89f673e06eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa721f-7127-40c3-a560-161228aa2a78",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ffbf38-4b42-48a1-bc90-2df446cc4096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56a202d-8068-4fd2-97fd-00ae8564ac04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b54440f-ad11-4aab-821a-0526f67e4136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3eafd5b-013b-44fa-946b-be26aebef6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e577115-1995-411c-b904-ca524362c534",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8652594-8ec9-425a-942b-0bdd33bef7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b63f7c45-1a8f-4d5b-ab9d-837d0e21055a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a851f844-5be2-4f13-a76e-37bde58c86bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf719580-9ef6-448b-a7e2-658d7ab5ce64"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a14716de-905f-4ab6-aa9e-0ba6bfe4be14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "069dbd57-a133-46ab-a511-f8a971d9e7b5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4171cd77-a79c-4e17-93dc-fd04668e8ac0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "63806982-c3b1-405a-9578-1838a882ca22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5004ed11-5f97-4475-a948-27b6d8e212a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d6ea930-2414-4a51-9dba-a9dc9f2a71b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "caf801b5-25a3-45d5-aec3-674e94ac05de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "100ec064-a410-4ea0-9f48-7a58c69a54ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fb26a8b-163a-47bf-b89f-fd3525957288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "469b6bc1-faeb-4ca4-a529-e43e7a634565"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85532ac4-c8c6-43de-98fe-d01c310668d4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8d2a5d1a-676d-42d5-8b87-3fde14ecc8b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "632bed62-e019-4f68-8726-c83162a08758",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78140be5-42d8-4481-b778-60f4bacf320d"
            }
          }
        ]
      },
      {
        "id": "9ac84d1c-d856-472c-9a4a-58b725fd8621",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "12c98417-9c40-4a05-88b5-286b5d84aa11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ee6d312-e4a9-4a9e-9ce2-0e5cbabfa1e0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "20664252-1ff6-487e-92e8-00329ac3bed1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb18b6b-1189-4195-a250-aa014898312d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23910c04-c3a3-48b0-b322-9e83dd70e6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bb16e4-c717-4185-b5cd-4c06369cffc7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a28160-2bd8-4088-a6ce-b10e069418f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593ebfd3-c8a9-473b-a7be-6d6c13ec821f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d88e22-9b88-4fe9-b54b-6039621feb2d",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c3fa33-4a06-45e3-bf38-853586dd397e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbb3d5e-f4e1-49ed-adf0-e55cb06e3535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3dd242f-0e33-4c9c-9ef9-c8a40e3b13c7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6391dc3d-a772-4eb8-bec2-6a1975eab9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f000f8f-6bd5-4462-851c-4cc26e0edbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33934cb7-876c-4938-8806-a6a3ebf40d6a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8d1345-1071-47de-81dc-e62285b6e5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ac3865-7bbd-412d-8575-29dad15b765f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79159571-2d98-4e4a-b2c7-5a2812b60a3d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be04ac3-72b4-4865-acb6-37b465fb05a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ab297e-20ab-49c4-bc57-7e9939b13be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bf1d5d-c6d8-4576-916f-db801a023c53",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea5dc93-214e-436f-9c7f-95c871b6e56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1005ce57-d023-41cd-8fe2-cb463a07f2d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fdba3d-5d57-4f0a-af32-f5aab756a63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bcf6bbc-2b0b-4c03-9448-ade5f1e07fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517c44a2-376d-4ad1-ac11-11f37670f06a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b318a85-65a3-4a5d-a9fc-4dc0b3023f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a81b2b80-3cc6-4976-8b5f-a9600ec43fe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c2d7b3-2bf4-43df-af61-9686b9fb7430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840865e4-746c-49e9-9dab-0c13fa511623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2838ee2-ec29-48e5-ace6-2108386845ef",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "926984f8-b988-4ae7-8e04-fc09439a0bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5f392e-0d07-44ea-8233-076a8520112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48becb1b-7ba9-4d63-8859-bafc4a8fc21c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "457a0ce7-7696-42be-afe3-8ab91a1d9416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a30b91-d9f3-4113-940e-f9720cef4399",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ca3cfd-9cfa-448d-9699-3d71803fe675",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb33353-6d62-47f6-85b5-0838f39d150e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4dffda-59f5-4c51-b568-3ba41eadef28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c3a86f-c93b-4a6d-a703-7806542221a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe2d9d7-e0bb-4bb0-99f9-b56f6a71e060",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8726459-82aa-4d66-9752-51cbfb49584d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b6493de-7c1c-4ba0-9ea4-6d0c25c5efdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a74049-06f4-44a0-8608-922efec07e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380b063b-8fd8-4769-a7fd-e881934d28dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925402ed-ac18-4eee-b52c-fe5ffcaf7833",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c80e217-8b24-41e9-9827-b951cc63cdd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d8bdefb-3039-4fec-878e-77bf47acd97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c058db5-9bec-4a34-bca5-13d63e7e32fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76221793-f5e8-457c-8ea8-efb16ecdcaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48308aa7-246c-41d2-b2e6-51b3c1b518f0",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f687c3fe-770c-4c4c-9c1e-59b07f29725a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa05289d-bb18-454b-bf6e-0c8b83b7707b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5ae0c-2a90-4c04-85b1-c2bcce98bd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a3e9bf-31ce-4f47-b370-281bb6927d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dee9d49-c10d-4e72-a6f4-1ed8eb0e374c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b85db2a-0a11-4d4e-8490-da023716b65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42af9c07-cbfc-40ad-ab0b-27ba56e17af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff33fae6-51a8-4600-8dfb-94a688c1c296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73057358-5618-4aa8-b335-1fa365f4f967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47eeb8d-ba97-40ce-b05e-f0ce730d666b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8703b46f-2fa5-42da-bdd1-42b150fc736f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7d8024a-72ef-4381-a9e0-885a91c2e238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a60f017-751e-412d-9b73-ce26a4c190e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f587fd1-a2e9-410b-ae21-9a164004ba5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c34d70d4-c9de-4fb5-acf2-c9a97d8c14f0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58e3d88-094a-4aad-80ad-6c4e2eb95622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5e394b0-ea4d-479f-bcc5-2ecff6160462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05aadb49-1920-4710-ae0f-997d77a72231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bded5fe-a874-4d9e-bcb5-2b0bfd0284e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e241a0-b635-4a94-90b4-5c08ff6b8c42",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c85f62-9234-40d2-ab18-84f224a759d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e891864-8fc0-4563-b4a6-5f8843158589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539b1c59-294b-4960-8075-b6ec701f5323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d29ccd-9073-4195-91f8-fff71415bf95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ddc262-560b-468e-bf9f-acb2b3dcc25d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50468356-16f3-4b6e-932f-9f917b36c32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabcdff8-3591-4092-a1a8-aa760078811f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed9136a-c40e-49ae-984f-89416c12b74b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5823a2e-4e1b-4c3c-824a-0b300bd3ecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad2a80c-82b0-40d2-9344-eac8f2623c92",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c20f99a-a4c2-420a-8cf0-bb169d8d7d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8fb070-4190-47b6-be18-8edb1791147e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb305e1-756b-4ff9-9140-1d98afded42d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b7c336-c9e4-4026-969f-c033ffa96d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212d33e1-4f73-412e-98b8-b2f1c41f80f3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dc3ef1-8f4c-45c1-ac37-6cb6b4da755b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc9989a-ec22-47cb-ae26-c8798f6dc256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec33987-9504-4335-bbc8-b46d11bf04ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d6a19e-c160-4034-b4d1-f5dffd811de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95069dfd-3bef-44ef-aa61-485b42401c9f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a618b3-dffe-4456-af2e-cb094d29ed95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d907d27-514c-4ea0-b7f6-f42840f8fdb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "518edd2d-06e3-4a5b-821a-3f57892b9f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa28908-0e09-4189-bcfe-c1159bf8a969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0cfd4e-be96-49fb-946f-233fbb92b584",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2e4a64-f7a8-45f5-93f6-1ba993f4f839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d667a34-4820-429d-b6f3-d7196d34ad0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2971a8-f039-457f-af49-3186587558f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe22044-0bdc-45d7-924f-b44bb7840119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10896130-0ad0-4e75-bb18-f8830596e1d6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa076d5-a2e3-4dc1-9576-e0b949b39495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd52d1c1-d0f5-40cb-9143-c5c6cd428968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bade1b5-5dc2-424b-9e18-1be53aea7c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3e25f1-a7da-43c0-837e-d1797c333244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b38da1-212a-4a93-8d6a-10142ae45adf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef68b755-eb3a-4cfc-9fb4-54f2ef8fc4d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa90abce-cdaa-4d48-a218-82a6de75576c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b505c1f-b52c-4646-a3c0-b0684bd6f7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f242e4ee-2b3e-4936-823a-40ad8a9e3db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf802ccb-37d7-44e7-bd6d-9efca30181c6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696b50f-83ab-471d-b0cf-9f5cb5a01d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4df8a57-d6b0-4a71-aeda-4a548a4f24ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127dab70-510d-49fa-a874-80b8ad987b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acec19e1-5a6c-4dec-943a-9a6b35018fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcf90d9-d36f-40ee-a909-67a825d35a09",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247d53e0-fc1c-420d-abb8-7f885f3f3e25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3067627a-d1ad-49b3-9513-90c9a310f80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be42243d-83ca-4e1b-9472-8395af0a579e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8af1b7-81d2-4c45-936b-38f353112c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f4ccf65-ea1b-4deb-8360-f5fd4d721f09",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55527912-62fe-4b08-8712-007bc4f32c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238157de-63d9-4720-bced-a2d25d6ceea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0aca42-f2e5-4921-b7e3-ed640870be05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f735922-1ffc-4082-9128-9b0e36068dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8fa1b8c-6156-40c6-b216-5788c23ddd64",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da7d630-df81-414f-9158-ab8ab5e0763b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58cde35-4b67-4556-b248-a36571d6f11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d5a506-62c7-43cb-92ba-e86d576a5c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f012da-cadc-4d51-9ac6-4ee8cb0a3b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f3cfa0-f32d-4a29-af62-2e88a0888696",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c2018f-b8c6-4079-bf3f-be2f94c53d48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9548801-8b20-4063-93a7-ee13618de0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2280af14-6a58-4bdc-9e64-bd96fa2c4590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834e7c1f-141c-4ccc-ab1b-99bc8f36d952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3157e4f0-87a4-4483-9a89-886e9cd7b23b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef197a66-1b5e-4e68-a5c9-1cca45fc7bd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c66f0d6-41ff-460e-8ff1-8c2d1e5b20ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd8d7ee-1353-4069-b7ee-3731b4d06abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6e5690-b297-4c8f-938c-64001a729d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044a5496-014a-49c8-91b1-eb23caba4650",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd18d32-ad6f-4acd-857d-da19818d5b5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79200e71-8964-455c-b958-5a686d14ded6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0f5bc6-cd79-4ca9-9e12-c394801e54d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563d2169-7d2f-40f7-8c4e-bee003e3180d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23676712-7a07-423a-a0c9-ede2c9b5de69",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489884f6-95d8-43ed-936a-9f445713f9f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de8957b-3308-4f7c-aea7-af41680e759f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc82050-7f23-494a-b84d-11d5bc9b23db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae51cdae-1235-4851-b0e0-72fa0946c130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae311803-f50b-4d2f-a47d-701171d7f5b4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f183dd84-62be-4e4b-8f5a-402f7cbea778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55f07f4-0314-4a61-84f6-a199b083e848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ccb6a9-5662-4e75-bd7e-deff2cf62f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aeb3e22-8ec4-4ef2-869b-510793b49de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92025d5-191c-4cdc-a6ce-9132e1ffa87c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dd25a2-d605-4043-94b1-ae468c5e99d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63fd47f-8fcd-428a-bf55-3a927f009300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd5414-5589-467a-8ea6-6d754c13b168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5016814a-5542-40ca-90dc-33a261a733c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26857772-56bf-47cf-9fcf-dac112e35135",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c888871c-347f-4a4c-8463-6830c622fb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b0d6e6-2a7a-41a6-86a6-38fb08d37372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c4820-51b4-4833-8b3c-0bcd870e5815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cad26d-1607-44ef-b1cb-358544850a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b163342-0e90-4e82-8171-43ea54d52256",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22397d9d-e21a-451c-8960-61f2589ff15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371a7fc9-5fae-4a4d-a62b-5c3a63819e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c27836b-a0ec-4f0a-ab8a-e523883b5261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fc29d1-b4f7-4276-8537-084d013dc4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfabbe1d-4d5f-4502-923c-52ee37530acd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04474ae-e611-49ac-964d-fe26a90d3217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439b2515-d6c0-4b51-aa3b-8b91fabe3a15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acc0eb4-f851-4353-8627-f04985735741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce83f11b-71fd-459a-ad22-d7a4dccc4576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a04c39c-98d3-46c0-b61f-0ab68e6be8b2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97f46f2-ea0b-4a4a-ae98-d0448c98337e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c371ecd-8065-4514-b576-2df35185bbe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96eef02-5428-46d2-bd9f-44857df3848e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d7c139-8be0-4b97-adb6-9a4a8144a6b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbde47e-eb4e-41c9-935c-af47f44dd01e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb6de2e-54db-4f36-9426-0d1a651c1784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6464ae-757a-4a56-98ec-05b4bce2d3b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305c61cc-7074-4638-915e-34bffcfbcc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530176cf-e933-4b74-9353-83f80cf18ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b716a30c-6294-4701-ba73-36a37605bd18",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071be39a-301b-484d-a6b8-7d1066a0096f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1dbf15-45f5-4eeb-beaa-f414e2d73f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20780bb3-9329-46ac-948b-0c1d80ca6a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007547ad-272a-4f76-bb41-21d7503dec43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76fa65a-5edf-4dc5-a8a5-97495f6954cd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57194630-e2cb-4a18-b3df-d6f82b33952b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a6d0cb-a4d2-43d0-b4df-13e79b7c6ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29b2292-0893-402a-b135-fb0d27031093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8c4655-974e-4945-9e2d-c558a3d1176f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c197aa74-bd9c-455e-9c89-89700a05f5e2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3838f071-5b51-414c-be1a-48047ec62ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c761a069-d095-4991-b57f-d629207e7022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b30786-2d0a-49b2-904b-3200b1cced9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18ddcebb-ce78-43e5-823f-34a0b1890798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc56e761-6c1f-46d6-91f3-1000c92ff8f9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff9e3d2-c140-44c5-86b8-b7a050f5f0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe62f4d-6e04-41a0-8346-034a9bc37a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513c7dcc-2fc6-436d-b187-bf61aa6ac64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e4d73-a8c9-4d76-8650-96bd99e1fff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4dab72-f96e-473f-bc8b-8030dddd5528",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a96873-76b6-4e83-bd2a-8766e1316128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8601044a-71de-4558-b8eb-e1469ebfe537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4326433-15db-4b16-9a9d-8116552aeb9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "005a4d8d-d1f1-467e-84d3-853d31eecce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f42a86-8872-476e-97f0-1d660c2d570b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425db481-0d0c-4956-a108-e6c7594aad02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e237e08c-042d-40ed-a8ec-d798eefa178c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f483c5-142c-43e2-92ef-3ede6d7b82f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a72190-4210-4bee-896d-25a1f11dd1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399baeea-d03d-4eb1-ba7d-81a21e8e57dc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288fd465-674a-44b1-b2ce-89e8d3dfe1b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f3e4f5-1336-4d90-97d9-987b58593d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9796ff-3cfd-44a3-9229-3f11f1549fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc0facf-9f19-4e05-952c-b6f908462f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a4d98c-8f3b-4c97-8f79-52a5f36c369d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f2d968-b882-4507-ac61-a6363f7a4906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bdaf26-827f-4730-8f46-681f2e339c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2daf23-f165-406b-b05d-6d2bdc3c6965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825f966f-0eed-4fd0-8c52-25ac8804ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6870e788-12e0-48a0-b314-e8296eace857",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0686a79d-52dc-4fc1-a911-e3aaefb8d3a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d1afe3-e562-4e0d-8d17-b4f1249262f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac30fb7-71d1-41b0-94ea-0649aec166d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139f3a04-f6e2-4e61-8cb9-0b4657d44e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1627bea8-4a3f-41bf-8172-1d4de3560183",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c27e2d-733a-40be-9c7c-915aa13c625f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab72c47e-a090-44ca-a03d-43ae16748e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3abbaeac-9760-4a72-9384-19bf78356076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a634949-c745-468a-bbb9-71720ad0c51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d2c327-22e6-4cb8-8ad3-b974ded237e1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d630f5e6-7baa-4c5a-8809-5da6f2fef255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d34ff3e-c05d-4a2e-b7e2-a5005f1b322a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ce3e8-ce1f-4b26-b2e6-b27dc7904826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ee4f02-8c44-448f-ad9e-1b985b1eadf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27ca79d-ce73-431e-abbc-5673fa296c19",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c860c4-96c8-42ef-8634-34dd0602b6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f95efe7b-58fe-436a-8d92-5c92ec17ffaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca30614-8d81-4c72-bdd5-91e41c6cc840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99d263c-fde8-46c5-b85e-90d12affb0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe08e32-ee66-457c-ab04-35ba8dd5a823",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f7795e-9f1c-4cdb-9c12-739dae15658e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadaf513-0b6e-4778-8bde-6fc606578f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aab144f-d9a9-4971-821a-a4f31c30ed7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610e205e-aed9-4995-a578-0dbec12baf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6e4866-93eb-4812-ad0d-43b260a15091",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a59574-dc84-4982-bc8d-0ab8d9c11de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41d4054-c711-45cd-a6b8-7815f13b75ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba91a04-e0b4-49c1-9f9f-3603c90b64a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8333d3cb-3313-4138-9413-7f9f46371120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16c9729-0eff-42eb-a036-181289ed6165",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6a8eeb-5866-4883-b626-f7b1679630b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bb03052-1ec9-44de-b6f2-42d86adfe40b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "855d50bd-510e-4eeb-a5b1-aa051b899f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5af952f-1ee5-4ff1-b02d-feb5bc9be725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafaffd6-4123-4581-b8d0-23b0dada7787",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2a2bcf-10ca-4809-9794-b1324900760d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde2018c-26d3-4733-bf00-152c3af0deb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609638f4-1134-4fac-9403-e48396601415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbf4589-9ac3-4f82-bbcc-9e8fa6b32c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c869cf66-1ed3-4e8c-85db-d99dd81de6e5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e25842b-98f5-4831-b210-73b0d82a6371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc2f1e5-1ac7-4493-836d-a41a2a5fa9c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0520ac86-6191-4cca-b963-148dac8124a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f27cc52-7300-4d43-af4d-c52bf43fbdc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25882ec-b0a5-4aaf-980e-3e29ec820552",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a6e174-8fb7-4d66-8391-430c9af014d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e01af27-268e-46df-bfc0-21873a680126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a145d7-1a40-44c9-bc07-25ba5751e70a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a03e13e-0272-4a4e-9f6c-32c8a513c8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b89143-e27a-442a-abbf-9f8e79aaef9f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93aace90-4932-4392-8a79-d80e717b7729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffc50b2-54f4-4014-a742-39cb2b10adb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febcaa88-cb7f-4aa3-9af9-8268146422cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23fb7a8-e2be-4ab4-bd74-cbddbb5a1ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41219acd-7698-42c8-ad29-b78eaf983289",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d48afb9-59ec-463d-b49e-9e5c8fdfc038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "791c37cb-ccd7-4db9-bcbd-b4401f8ae736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb21666-896e-4949-8899-89deae1604bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d5bde8-774e-4086-be47-ac3099120216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d83f50-2127-416d-9556-8582b2734e10",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2382ce-264f-4634-a285-376ae4fc78bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5f4353-0223-4aec-849f-67fa50c5826e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b5b4c2-f19b-421f-aa99-ca01f441c2ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "267a0ee0-387b-4ea1-8448-6335ea35dd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb541786-eb1a-4f1a-b272-ae020a388b0f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebe120f-8f22-4005-9723-206f57c14de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72edbc81-e35e-4dcd-be09-76f0100d8531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b3279e-7812-4d4a-9c92-942f953e0c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6247da-076a-425d-84c6-5550c6dba76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc11409-cd61-4553-97f4-f2303c4db84c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d55af8-cfd1-4eae-9590-e86b9ef5d5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41feb67d-3022-48f0-a8b4-a39296e562fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd72aa52-041e-462c-9951-ae006f93a4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96cfd2a-22dd-41be-8e60-98a296b40124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b512ffb-b93a-46d2-8e3b-48a9ffdefd6e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fff727-0638-452a-ac66-a561685e8940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a0b8f25-bda8-4a94-aa83-0bee40ae305c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8866f67b-9c0b-4279-8f80-b5a4febee72b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6624c860-f2c2-4a6e-a452-afc0541cfdde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa828ab-c7b8-47f7-8418-e55119eb1cf8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b0775a-dcd7-4ce1-9943-bb959b97fd22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11e20a93-90e0-4a99-8cc7-c8d05f2bb084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8371e9f0-48af-4ab5-859b-a7302937804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846dfe61-ce7b-4f21-a64f-e241b9d41f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74dca089-b6fb-4ddf-acc2-dda3692eccd6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d494148-5712-46dd-8c2b-e209565ca2bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b1b3c7b-a5b9-4966-9330-8a9a64909cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f170ae-db8a-4dc9-8845-cc90b8cc8727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f7fbb53-6df4-4706-9cc3-b29043e7eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb57c314-79a2-41c0-9baa-7a36e89b95e4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02efdce2-1bd3-49be-b33b-72938f400f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9acd5b37-572c-4a81-b784-fd191049006e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14d32df-b2e3-433a-8780-806aed95f3e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54010944-01c2-43a9-9b09-5c162130409a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec7a1c7-236c-49ee-a4af-5d7b5c68da5a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c30f3d-677c-4ba3-b431-943d618c9064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92228db5-37e3-460a-a58c-2d8ccf5fd5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af2a305-c74e-426d-b6f2-2a3ac632bd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cccbb0-c8f1-4b48-a880-e1e8b9f72159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c813243b-bc0e-4e03-beb1-39fc86da43e3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98807568-cac7-45d3-882c-6bb87c027f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "959f9f93-84ef-4f11-a430-3c5875b191b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f2e00e-f79e-4a3b-b97d-7db80906da91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abfe4f9-6da7-4ad1-ad45-7cdbd1685544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed22f3a-6816-48d2-995f-16ff14274e8c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab22a42-ca38-41d1-a47b-3b039f7fb2ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f07e8165-5bab-4ab3-b067-3ba28097831b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d160b90-4bde-4acf-a729-29253c80e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9633189-9c30-406a-961a-ded9aa9873d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd9b415-3bd6-40ed-8c49-1cce52787db4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ebd511a-04cc-4344-9dcf-ac93b2c50c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efb668f1-5007-4c43-b8b6-92b1dd73dc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47015e1f-5acf-4f0e-a6ed-522b3efe4dba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7952ae-0ddf-41b8-8399-7dd1320d590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff6cdac-4bea-40a9-94ba-2cf38220b913",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd31f8c-b3f6-41a2-86b3-aad214faad78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b35686f-d7f2-4adb-a607-2f3d49baba9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559840b-07d0-4b4c-b29a-94a193d379b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d6cd4f-f778-4df8-b867-b9a14dfdc43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b0f488-5331-4091-ab02-92aa4015b285",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f04f328-4360-46d0-b194-60c1b04b7926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78a08d50-9579-4477-9bfd-d58d3f54eb8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e093b790-d51f-4443-bed7-ac570189c6ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6186b3-eae7-4518-99ab-220f115ed69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f164a8-b4d3-41ed-ab80-d4cc05ab9931",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fb2779-705d-423e-949e-62ec3dfe8c8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e2317d-3055-40b2-96d8-8a8ecda916a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd22e6-21df-4623-8d6e-ddea6848abad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877b0670-aebb-43db-8e33-f864fee35e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff3235b-d39b-4282-a4b5-066e768b609a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1942cd13-9d6f-4a26-9d24-4fb64b9d87bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f563a9c1-b112-4e5d-89e3-83150fc8ef6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48cdb7e-e5d7-424c-b29b-e8cb83e38e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef17a47b-35ac-4d71-be27-603f0d156b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad19d4c-d2c4-46b9-822a-e63e8e98e857",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797e3960-cb01-4ebc-b1c8-07f684a2f2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c874a6f3-3634-4cab-9334-57e5cb315208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72a0582-771f-4b6a-9a8e-a55d253ce4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2899a7d-96b1-4fb4-83c2-069ff5bc8359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589b3525-4a03-4da1-a251-7238e5c8a4d7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d3122d-55ed-41d3-90bf-5c93450edda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6984590a-8b71-4dc5-a0fe-696d4d4ba186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f086b212-e78e-4bdb-8875-ea7ae1b5fac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bd54aa-8878-4004-a180-f0cff80e104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b8c75d-e238-4ad5-8d86-dec1a237634f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab805c5-4bf9-493c-aca8-6ca0cb11e172",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa63782-339f-4927-a2a4-9e1e919f4ecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cb7fa7-c92b-488f-a93d-279ea6760882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30ee468f-f223-45e6-b0b9-3e32a40975f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca62a79-d304-4529-b6d4-d7d2fe58419f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee83f5cc-8fbd-4e3f-9c49-23ee8402ae5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "293bc30d-5b60-495d-8aa8-1d64a62fc3b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0548893c-f931-474e-b10f-360a714d3447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57bb504e-6c76-48af-9f51-d5bcefd1cf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c79e427-2443-4b66-9587-646f75cb8f9e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc852ee5-75a3-4afb-b600-67633246faca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c250d82-98ea-4429-9d4c-121e80d6652e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3798b23a-286e-4e09-a551-5b0f59a5781a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6240fa9-1aaa-4a7d-a6e6-96851d3c85cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142bd52-65fe-4713-a215-fd6cbf28de96",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617ea28e-ad55-4832-899e-e206dbde1fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8e3baa-136f-455f-9c36-e44a1ddc4a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da296a3c-9eef-42ed-8a06-5adb358cdf5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190088d4-967a-4519-91bf-739392447f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ea0145-b8d6-4dd0-a63e-f71fbacbbcb0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b160d691-13df-427e-b987-714838cb2be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d00bd4f8-e9e3-46f2-ac24-0bad6dce7bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b569d9-425a-4d65-9559-0cca632b0482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b82311a-6a6d-4271-b501-3c5a53aee20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0c6785-f5e9-4c41-ab3c-11e069087288",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1557cc6c-5a59-4857-8831-0abf4283f373",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2435f26-03a8-465f-a058-9422288d94a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe937535-ff42-46f7-8f1b-32b89ad25dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cb9211-c431-4478-93a2-d335752e719c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3e4ac7-de33-47ba-8a56-485fe90906ad",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014dfedd-8021-4975-8305-2e9d0dc05c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6027dc84-896a-4e69-ae51-9dc6d10a9320"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e362dc-ee79-4169-8f89-760302360eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76275154-f16a-40bc-9ab5-0464bcf5a53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57be18c-4695-40a3-a38b-b803b2946dfd",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400634ca-8187-496c-8a14-ad088f3b21d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0202280f-a9a5-4408-b38d-8ac56d2e05da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf48f9e-ef5e-40e5-9695-e18b46ab0003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0fcf0d7-828f-4a8f-8cf2-4fab25efe07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca94014-545c-4f97-9a67-38ac4c36c179",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd58324-234a-4654-a3df-06ab2f5633cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52b230c6-49d1-44f5-bbbf-6060cb1db103"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d254cec7-6f3e-4b87-886f-e52d43e69cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b0a96e-f512-497d-952e-6797ecdc1fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28c9691-1414-464c-bbec-6b527cf8f549",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9860c2d8-b9ba-4c19-82d2-b89cac323aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6e872a-a036-4527-b51d-90705d0cc4fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f5d79c-389f-40e0-ab19-41333d1ba71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255e6b92-6d86-48da-803d-dd7172eac8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdcc758-eacf-448f-89ff-d7f11ad4165d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b7e8d1-6d22-4d4c-b2ea-b325ceeb44e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48958b0-497d-48a3-9562-39f84311c56f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1676176c-24ae-4f98-a045-5adcf90b3c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dab78d9-38ed-4b3f-8055-3445696a7116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138ec1f2-2ac8-4918-b3e0-19b02be4248c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c26976d-9877-4e74-bf36-d891ba85556e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "567b96e8-9ba3-469f-ae35-36431029f964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9730435c-a5f4-43bc-b323-daece0316502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc79b1b-49c2-4452-b231-af962269dd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65746a31-0eab-4c7c-991a-4c7910330156",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb20e4e-3c1c-4514-b09b-5a07ff64bb41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4b731d-146a-4b7e-af10-f2784208388d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ffed8d-a299-418f-ac9a-bf5f3eecc5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17234bc9-f331-483f-82bf-13dce594e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18279241-4b46-476d-a737-4294ba6f0d16",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f4dc7e-1678-4527-98e0-a061a4153020",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e37b4df-4968-4fe7-b082-dff042026b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c761251-b271-4c8b-9ea6-3772f2b4ac74",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c922535-27f5-4ca8-99b9-c67163b046e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbbc5dc-2798-4cd8-ad2a-caf5d5bb8bc6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21258989-48b0-4b78-ab4a-2e92777f2958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a8700ba-ddf7-44ab-b302-8fbcf240d57b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3eec82-7ccd-47d0-9792-69504197580a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46966c48-8168-4aef-b26f-5ad60f54047a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9db6ea-665b-46cc-a672-f613cd48ef7f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d5600-709d-4c5e-8636-b5c5fec429df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "578eadef-1d94-45cc-b005-37ba21d15178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d5ae9f-372b-48a3-b2a1-6c40d160b5e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61db1558-16c1-44db-afe5-fa816a589faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a929639d-6ac4-4943-a1e1-0af3816f5a7e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbb6889-e130-4c14-a01a-e297dbcfb8d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7dcfa32-f245-4534-973c-8be929800e65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31432391-7d22-4666-9a9c-d01a239397c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40d76d6-6c0a-47ed-a303-9320f9291060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc22ee83-9ff1-4f04-8722-b5277d560adc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800819ac-88e9-47c4-8a10-0059abba3768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80096633-45b4-475e-981b-44450a00d91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e6d838-8db5-49af-a715-c14e08285b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc937b58-52ed-4de0-8988-865db3f6f088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d82d92-2b47-4ef9-8237-555a27e399c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0268d94-f125-445a-a8a5-e4f9170379a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4b156a-68b6-46a5-bfe1-e130da3008ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af30db4b-514b-4b2f-b0c6-70b6907ca12c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551ed361-0a4d-4f97-a1c1-a6a63db3ae01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d8701c-7ff3-4b3b-8b4e-f72bb71ef5d4",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e8bfdb-1363-4b46-8fec-8d8e907b8425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caa701c1-e670-4bc9-8e0f-bf59b4e93eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b46e151-a184-46cb-afb2-3f6fd5f07915",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834bfc16-acd6-4fd4-bff8-6a9ff48c1e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5890b8b4-67da-4fbd-bf7c-2c9372b56595",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986234cb-b31d-4ffb-9794-ca68b9ce982f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34ace366-97ee-4838-b216-72f0eafdf6b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4bd634-0ec1-44b3-87db-bda10865594d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cbbf6c-b482-44d0-adae-ce8caac1b455"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da541d7f-6fca-4fc2-8bae-582dac7867ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283ceb42-b2a1-4b5e-82f7-5924f9a9be02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26871e6c-379e-432c-8aa4-aeb5830673c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d75fda7d-29de-4bf7-a9e2-0fe124d0cf20"
                    }
                  }
                ]
              },
              {
                "id": "e0e7c9f1-9865-45bb-a1cb-c69242d8405e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a26b129-e5c3-41f6-ac1a-0e475f794f6c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b42f7858-ee47-4522-bbd4-10ccfbd39360",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "59b7d92b-747b-45de-b9e3-b16998dac983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3a09c8-18bd-4831-a2d1-ff5156acb25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a38a4023-721a-43d7-a609-72dc07aa1bc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "526b209d-0b11-4f1a-9e09-2ffb1f3929fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87ca4a2f-8ef2-4f14-a54e-6b163f801e2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d8dd51-f690-4539-a77d-4c7a1d1f7044",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f270e2e5-2cac-4ce1-93f7-0fb791be3234"
                    }
                  }
                ]
              },
              {
                "id": "2f3e4a18-b7ff-4123-996d-98e7c512614a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2fc197d9-34b9-4ca9-b991-73cd7e988f75",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "049f9bf3-8688-414b-b98c-018f0e73c10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8000f3b2-73d7-439a-a76e-eeb72e45366d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa7413b-49dd-483d-aba3-3c5f6d539147",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b56fef-ab56-407b-abbc-b85365f59665"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "70612054-40f4-452d-868d-02ad9a3cfcdf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22377bf9-4d47-4816-9b08-0365392285d6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04e568d4-f9f3-4bd9-ad57-999822ad7f62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "32c8fdc9-f947-4bd2-aa66-cf8e709f6459"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525bf587-2db2-4f09-961c-96ab86a7070f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d7839bf-68a3-4908-b7f9-56ce59d21572"
                    }
                  }
                ]
              },
              {
                "id": "56d1d3ea-c9f2-4c63-b931-7193e273e38f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6974a6cb-981a-4858-9de3-15d8b8f1d177",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cfca172e-6259-4a58-a8ad-36d4ccef120b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dc7a18d-b634-4b1a-a3a6-54bb7427faea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31762009-26cb-4d1f-8927-5615cfb441f5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b605717a-f03e-4c1c-8c98-705711832d6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "88906bef-10f3-49ff-9af8-7f2aa1b1d4a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3aff3830-453a-4e59-b11b-39621472a0af",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fc606a0-fe26-47f0-bd8a-34b73f782a08"
            }
          }
        ]
      },
      {
        "id": "f4ec7a91-f45d-4808-9c29-6a7bc6ab61b0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2bbaba8b-02ea-47c0-b395-32d836a2f6f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86f45f7c-7be5-4151-8c22-5f512acf3148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cdde09e8-ff4e-4533-a755-fe8ecb6f57df",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba61bc7-8077-44f9-9ff5-f4d1c7c84b25",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12db2cbf-31c4-47fa-b7e2-3936341d829f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2722f421-4fb0-4b66-b931-53130eda473a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64c15db5-f682-474e-babb-c9a543e96faa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4fb38b-6406-4811-990f-17190c21acc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ad3e72a-3da9-4bbb-b752-32e76b0a2b45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b2ce005-f315-46f7-a0fb-de047bfa8d5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2b52f27-5f12-4b4e-a7d5-024164ee1d5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccfa5e1c-d99a-4e13-ba7d-ac2f5241f159",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "76f45e93-f42b-4e3d-9650-d754f49b32bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f925edc6-f03a-42d8-b6db-145235465f3f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9186a715-e912-4396-99ee-bfe3290eac37"
            }
          }
        ]
      },
      {
        "id": "772ae6bc-ef87-4f3a-96f1-b2e4757da7d3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7268e7f2-3d24-4d30-835c-66bd6b04de18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "04c8fd51-69af-4187-88e7-2bbf797a7efb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efce6ee5-8f96-4a4b-bc6e-62b02254ba90",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72137653-f528-4c5f-acc7-732ee5108dbf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6daf6abb-a11a-44c8-af55-6d500baf370d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c40b04b-ed99-4c99-be2a-13cfb1023954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de279b3f-17ed-42cd-ba49-4f9dae16966d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eeadf40-b486-49fd-b6fe-a009b47737cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b24cc720-b0cb-48a9-b66d-9a02d28b64cf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3393492b-668b-4a2f-96c5-7e7dd536660a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c05e7f6b-e341-4947-849f-b26a94dc505d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2271376-b8cf-43bc-bc87-84b7fd9b68d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38da5d31-6486-4858-991e-06d32956752c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06661a0e-6d52-4515-b81b-86d100efcb51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a70aff92-7808-4f4e-bbde-5be4f964c8e7"
            }
          }
        ]
      },
      {
        "id": "aecc627f-db28-4f22-8c85-f33bf86f78ef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "96c8bc6a-5621-447e-a72f-27fcb435a6a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a1e303d-0aaa-4bd2-aaf1-9bf0a2271d87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c65b769d-2edb-4fbb-a5ab-7e3eb8710e5b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4a808f-8a56-4699-ba88-95d7916097d0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6248decd-c00b-4013-b8b0-fd30946a792a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099b960b-cb8b-4b63-92d2-f2959baa6296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7e9573c9-6884-4318-8d43-8ff1c826a432"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8680014-c4a0-4428-8501-3bf0f43ad47f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf6b2d39-9b6e-46de-b73a-9dbdb3d1be50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "98bf9963-05d4-4ad9-b595-ead7827cebdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a710cae9-f9ad-4672-89b5-1b098e1bb310"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1378fb52-4f72-4a97-b2a0-a67fd8c77805",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3eb7d050-5540-4aa9-aba6-6fdbe657ff2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fea4ce5f-f87e-43ae-bcb7-088d7865e58f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf34fc85-bcc1-4374-8a69-9a67c6d3a388"
            }
          }
        ]
      },
      {
        "id": "29f5e7e5-8e53-4633-9e6e-bd8f2abc32da",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "138890e0-f1d2-4811-bc22-c2acfb233778",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "894b4a68-f44d-47f3-8ba0-34d527814e73",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "87165ea9-0f2e-4e0d-bc26-9791f0b2ddf7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e0c4a30-1b16-45f9-9e58-5e28ec653f12",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "699400ec-8057-445f-a689-25aae4000ebf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 29.63492063492062,
      "responseMin": 7,
      "responseMax": 319,
      "responseSd": 26.19935876308571,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722040760909,
      "completed": 1722040776360
    },
    "executions": [
      {
        "id": "e63a3cd9-73b0-4388-be97-6726171317ef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e9b00a39-772f-43b1-97d0-b83fc915479f",
          "httpRequestId": "97c4db9b-4393-418a-b061-79ed3c6199ad"
        },
        "item": {
          "id": "e63a3cd9-73b0-4388-be97-6726171317ef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cafc5f5c-7b9d-4214-b6ca-5424317364c8",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "fd9ed746-dd8c-436c-ab89-4d5446a6cb90",
        "cursor": {
          "ref": "1e3c4815-6afe-403d-ad95-3c3f78302f13",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aaf1f744-cfa5-4844-a162-1d24c0cf4518"
        },
        "item": {
          "id": "fd9ed746-dd8c-436c-ab89-4d5446a6cb90",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5ceb9846-34a9-4d50-815d-c32e5aa74ced",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1d319eae-9dcc-460e-a0c7-11eb289e279f",
        "cursor": {
          "ref": "796cea91-3e2f-42e0-88c1-45fadf92330e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "718e8799-d4fe-4b06-af4a-610106c1db5c"
        },
        "item": {
          "id": "1d319eae-9dcc-460e-a0c7-11eb289e279f",
          "name": "did_json"
        },
        "response": {
          "id": "d8dd588c-4c99-4e8d-8e44-6a814d7ebcb2",
          "status": "OK",
          "code": 200,
          "responseTime": 213,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadfb824-b0aa-4f20-ace7-327edd753a7b",
        "cursor": {
          "ref": "3fdc63e0-1190-40aa-90cc-bb06dc15831e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2891e2a2-c67f-4208-a80d-26e8b438054f"
        },
        "item": {
          "id": "dadfb824-b0aa-4f20-ace7-327edd753a7b",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad7cb70e-2396-4188-b601-19076542eed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadfb824-b0aa-4f20-ace7-327edd753a7b",
        "cursor": {
          "ref": "3fdc63e0-1190-40aa-90cc-bb06dc15831e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2891e2a2-c67f-4208-a80d-26e8b438054f"
        },
        "item": {
          "id": "dadfb824-b0aa-4f20-ace7-327edd753a7b",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad7cb70e-2396-4188-b601-19076542eed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8771dd3-7b4a-4035-95a4-62a792b9f921",
        "cursor": {
          "ref": "8086cb70-0392-40c3-b78a-edf6ad7c9275",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a4910118-5c25-4d2c-a174-7f88bf01ac70"
        },
        "item": {
          "id": "b8771dd3-7b4a-4035-95a4-62a792b9f921",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ff314c9f-8b0e-4cf5-be3f-a2cbdae82fd7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 199,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dcadb2-fd80-4249-95be-694f02b811c1",
        "cursor": {
          "ref": "fdef9575-4f4b-4c00-80b3-c118e5d31ac7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fc9cd146-e29d-494f-9bbc-cc58f9d67da8"
        },
        "item": {
          "id": "75dcadb2-fd80-4249-95be-694f02b811c1",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e5353a01-ae26-4478-904f-faa5066dec95",
          "status": "Not Found",
          "code": 404,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57f62903-5ecc-441c-9095-8af6602befa3",
        "cursor": {
          "ref": "f6be241f-22ff-48af-a5ae-d1a49f362455",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2bd6f6e6-ffe3-48f4-8eac-0f2d89599eab"
        },
        "item": {
          "id": "57f62903-5ecc-441c-9095-8af6602befa3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "323e083c-696b-4a0d-851f-c6af64e83e4a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd630259-5da6-4152-9714-f5b5201e2aaf",
        "cursor": {
          "ref": "11588bc0-ab34-4b7a-877e-28a4754aae86",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c4d44d2b-2ca1-4af7-86e5-7151c9279fcb"
        },
        "item": {
          "id": "cd630259-5da6-4152-9714-f5b5201e2aaf",
          "name": "identifiers"
        },
        "response": {
          "id": "1a1f4865-26c3-4e0c-a2be-12148ccd018e",
          "status": "OK",
          "code": 200,
          "responseTime": 175,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5806e1db-9f83-4dd9-8c72-3281915096ff",
        "cursor": {
          "ref": "8197f40b-5eca-455a-80cf-159be0f085f2",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "18d055ec-59df-4139-b965-820169658919"
        },
        "item": {
          "id": "5806e1db-9f83-4dd9-8c72-3281915096ff",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a0f08330-5cf1-49cf-8176-d7add2d99954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729513f2-0219-46c1-9713-e6b02a98390c",
        "cursor": {
          "ref": "242a54d7-ce63-43b2-a6fd-9c73601ca50f",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6c0133d9-4d4c-42ea-b2b9-8e226b3ccfae"
        },
        "item": {
          "id": "729513f2-0219-46c1-9713-e6b02a98390c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "3d8bba24-54b0-44eb-b09a-5df09b941c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ef4d49-8007-48d9-8ff2-68c8727fcfc8",
        "cursor": {
          "ref": "22cc6b17-59be-42df-99e9-f17e98121fde",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b3c9a9a5-0df3-4e07-ab7f-18facbc66984"
        },
        "item": {
          "id": "72ef4d49-8007-48d9-8ff2-68c8727fcfc8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "cc98619d-7e76-479e-9250-f02192e77e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e9243c-352e-4ff4-b197-63bfffe1e760",
        "cursor": {
          "ref": "36e8612c-d5f1-4e72-afcc-4f00cd0168f9",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "52498261-8698-4296-9663-d43863155f66"
        },
        "item": {
          "id": "46e9243c-352e-4ff4-b197-63bfffe1e760",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e86e638f-ee6f-4e61-b590-a3d160fb240b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7737692-9ba7-41af-8f0a-5b31dcf9bded",
        "cursor": {
          "ref": "c8e2637e-754d-4505-87cd-b96ef7a14960",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4f3bc49a-80ed-4267-a8db-479f75a66039"
        },
        "item": {
          "id": "f7737692-9ba7-41af-8f0a-5b31dcf9bded",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f705b41f-9c1f-4634-8248-4285f8bad95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d06820-c95b-4b80-9bc4-2498ca18e7c8",
        "cursor": {
          "ref": "7a7e9d80-1b11-4cb7-bcd7-4dd02092f6bf",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "aded4d33-53a5-4376-a9a4-6582801ae5da"
        },
        "item": {
          "id": "18d06820-c95b-4b80-9bc4-2498ca18e7c8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4e00b34a-5ca1-4cd2-98ca-a6f1c8014748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f771a33-1a0d-45b4-9b42-9ec565a65e2b",
        "cursor": {
          "ref": "21909a03-dafc-4c2e-98cf-4ac6923e37f9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "36b99cfd-248e-45fd-878e-1110b1710121"
        },
        "item": {
          "id": "8f771a33-1a0d-45b4-9b42-9ec565a65e2b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "dd40b1c2-848a-4dd9-acf1-5ee19f622376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdcc4bb-ef5e-424c-b7e8-bd91a56f69aa",
        "cursor": {
          "ref": "b7f7620c-8010-4f2a-a9b3-b9f58b22386d",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a33d1cad-2603-478c-bfa9-804fddfea7b8"
        },
        "item": {
          "id": "cfdcc4bb-ef5e-424c-b7e8-bd91a56f69aa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d0bb76f1-dade-4de6-8aa0-cdadfc2f774d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734c1597-d982-4682-847e-179e2984e62d",
        "cursor": {
          "ref": "1eaaa7e8-86cf-4ac0-8aba-4fabedf98445",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "98244e5b-fd65-4343-91bf-789a9c0cbe95"
        },
        "item": {
          "id": "734c1597-d982-4682-847e-179e2984e62d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2d33d3ea-5419-4ee0-bce4-ad26da8d0052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf31e51-4f9a-4045-b452-7dbe44bbc794",
        "cursor": {
          "ref": "9063feca-b4a2-4a2d-b38c-ec5690afc2c3",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e3f95baa-8478-426e-8d74-35e69f99a5eb"
        },
        "item": {
          "id": "adf31e51-4f9a-4045-b452-7dbe44bbc794",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "786a87cc-b9d6-4334-88b8-5e34c83e3995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adf7182-bee4-4c29-b572-ef4a104a2ddd",
        "cursor": {
          "ref": "02a15a1f-dd36-4fc4-9f8a-28850e0edc07",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fb532864-d385-4f46-beee-4c9ba9ed7a20"
        },
        "item": {
          "id": "3adf7182-bee4-4c29-b572-ef4a104a2ddd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8e0f1f0b-9105-4c6b-bad0-a4b5f0a2172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c174e13-f42c-4387-a2ce-e98cb09374bd",
        "cursor": {
          "ref": "6f264f46-9a6a-490e-bc8c-56c907c854fa",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "24dc6d83-b5fe-45c0-b572-2c7ceadd639a"
        },
        "item": {
          "id": "7c174e13-f42c-4387-a2ce-e98cb09374bd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3febe866-8e13-4111-8f39-c21b2b6e5314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225ae394-1d3d-446e-89f4-48bb62c79b5d",
        "cursor": {
          "ref": "8cabe468-bcc6-4ad3-a280-c1bc1afd7fe2",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "00b7bc28-23a5-4f2c-a30c-41d64a6d7081"
        },
        "item": {
          "id": "225ae394-1d3d-446e-89f4-48bb62c79b5d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "409e60cb-b7ef-4088-acdc-b69ad93db1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab28ae8-e0e5-4ffc-b293-f06c81dfff74",
        "cursor": {
          "ref": "92b7136e-f119-450d-9af6-311035cedcfc",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a524cb6b-5695-4861-b3b9-7cc72845692b"
        },
        "item": {
          "id": "1ab28ae8-e0e5-4ffc-b293-f06c81dfff74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4e4c972d-231b-4329-81ce-176360339ac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6219ad-8259-4631-9d34-bfac2fc1440c",
        "cursor": {
          "ref": "f630ba71-0dbb-4d1f-99a0-b6ed87337e90",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e870850e-0ea7-4600-a772-3f7b5b8b054a"
        },
        "item": {
          "id": "de6219ad-8259-4631-9d34-bfac2fc1440c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "37016a6c-a844-44c7-b96d-7ca220b9f0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7876fb-1ba4-4131-8eef-686dd23bec3f",
        "cursor": {
          "ref": "41f60dcd-37e1-4f4a-a540-59dc912fb5f9",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2ece78a1-653c-4599-8123-8eeb91c5cbc0"
        },
        "item": {
          "id": "ca7876fb-1ba4-4131-8eef-686dd23bec3f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "47764e35-a367-49ec-8d13-df8d6327be4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff2f7ef-d331-4d40-8351-b756ee4649d9",
        "cursor": {
          "ref": "03eaaa60-c71d-48ed-b808-cac3e389facc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c06270c4-f5c2-473b-abdf-403c68761d7a"
        },
        "item": {
          "id": "eff2f7ef-d331-4d40-8351-b756ee4649d9",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "bfbcb9ae-5e73-4f9b-a404-df0ab1df2d06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0552159-0185-4d02-824b-12a81ccfcfdb",
        "cursor": {
          "ref": "b3e18d4d-6dd1-4975-97c6-2ac844d83528",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3d9db9ba-7ded-494e-b170-198ae363a7d2"
        },
        "item": {
          "id": "d0552159-0185-4d02-824b-12a81ccfcfdb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f045448b-9cfb-4394-997b-bd378431e9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cac982c3-ba64-4d9f-a73d-21623eb2761f",
        "cursor": {
          "ref": "a2236ae7-6d62-4073-91b4-0a109242e5d9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b26044e-2813-4b8c-93fd-7c7cddfeeadf"
        },
        "item": {
          "id": "cac982c3-ba64-4d9f-a73d-21623eb2761f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bef72145-4593-483a-b9bf-ba0e433edf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e4a34a-9896-4618-879c-8fb238642136",
        "cursor": {
          "ref": "b7ea4f1f-8806-424a-9556-b2743308af1d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a5b0fea0-478c-4f81-9645-5c47e8faf99c"
        },
        "item": {
          "id": "b5e4a34a-9896-4618-879c-8fb238642136",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b3032104-9fb0-47de-a0e9-7577b2147415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723ba7fd-9f56-4a4b-aa8a-ad27bb2c59c4",
        "cursor": {
          "ref": "98e00f36-8296-4e76-974e-f5fdedb8b572",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4577dbd8-b24f-4caf-b36b-2d4cb41a8256"
        },
        "item": {
          "id": "723ba7fd-9f56-4a4b-aa8a-ad27bb2c59c4",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0a593550-3757-4200-b326-3537521cc025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effe3ded-cd1b-446b-b629-2312a2b15ee4",
        "cursor": {
          "ref": "04a6735b-8e82-4fef-ac48-24e82581b3c4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3aab9ac9-9840-483d-9e4a-be6cba441f53"
        },
        "item": {
          "id": "effe3ded-cd1b-446b-b629-2312a2b15ee4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "837f09b7-b63c-4777-b4da-54a674b1173d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63769e1c-7830-4896-aba0-fa37716671cd",
        "cursor": {
          "ref": "869d86e8-f4a2-4f3e-b72b-c7e91970dabe",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ffb4945c-9970-439a-bf36-0cbbd033e07a"
        },
        "item": {
          "id": "63769e1c-7830-4896-aba0-fa37716671cd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0d32d3b3-48d6-4740-9071-8cf325c8e6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5cc362-723a-4b5d-a948-c844a548905c",
        "cursor": {
          "ref": "4fcaaf90-4633-42df-bb7e-164c4ddadbb6",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d98b35d6-d052-42f3-97ab-e1e0b97244c1"
        },
        "item": {
          "id": "4c5cc362-723a-4b5d-a948-c844a548905c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "65d34487-c03b-4117-8e58-3b5519d9396c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4c5860-ff9d-4a12-b7d1-aedbfe6ddd19",
        "cursor": {
          "ref": "f44aaf18-2bf2-46f5-a763-889f9c485f21",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b3510962-b255-4690-808c-5c02b8d1ad72"
        },
        "item": {
          "id": "7d4c5860-ff9d-4a12-b7d1-aedbfe6ddd19",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ff842793-e984-4186-b13c-837a4a8202fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac59f6fb-391e-45df-82f8-acba3153e6f2",
        "cursor": {
          "ref": "c443b91b-f9af-458e-87dc-32c56587e672",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ee5ddd3e-1b1d-45ee-8fb8-67a71b4e178d"
        },
        "item": {
          "id": "ac59f6fb-391e-45df-82f8-acba3153e6f2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "621ac3d8-4d7e-42e8-98f8-a35774e42f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffba4e6a-27a9-41c7-b12b-49e137681f20",
        "cursor": {
          "ref": "062af8df-c3be-457b-9574-5207872d0e59",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b625745f-2851-4b6a-8d39-23ceabd5f368"
        },
        "item": {
          "id": "ffba4e6a-27a9-41c7-b12b-49e137681f20",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "895a8888-4d32-4113-a908-79d2e266aa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a046b6-e252-4096-a72c-dd84bbd2dc28",
        "cursor": {
          "ref": "ad4d082b-8542-4508-913c-d9a396a1ef9f",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4c2395f7-e086-47c8-b422-2e66c4b8c8b3"
        },
        "item": {
          "id": "80a046b6-e252-4096-a72c-dd84bbd2dc28",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0682158d-2073-4148-9a1b-5b70e10a3059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a4837e-17e3-4ca9-acfd-18aa4bdb8e40",
        "cursor": {
          "ref": "2189f34b-0fbe-47f6-9959-b1f3dd5272bd",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "2bb6caca-5f03-493e-b527-c8dde3b8f694"
        },
        "item": {
          "id": "76a4837e-17e3-4ca9-acfd-18aa4bdb8e40",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "29514382-49c1-4f43-83f4-0298117fcb00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac216cfd-bb06-463c-93ea-5d634b31b2e3",
        "cursor": {
          "ref": "cc178750-45bf-40b5-9df5-1a05f4c909c6",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0abe3ece-a88c-49a8-82a1-f973980ba312"
        },
        "item": {
          "id": "ac216cfd-bb06-463c-93ea-5d634b31b2e3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3cd0cc0b-5470-46cd-9faf-672d723d6d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d47fd63-bee4-4fd4-b7b2-ab1e4503563e",
        "cursor": {
          "ref": "670096f3-1fde-4b08-95db-3bb4fc768e16",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "710a07a0-7d77-4136-9c73-61dfe3641cb6"
        },
        "item": {
          "id": "0d47fd63-bee4-4fd4-b7b2-ab1e4503563e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c85946fb-4d43-448f-879e-e59d1303e6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6653b1-1261-477c-9197-5d17707a1807",
        "cursor": {
          "ref": "1ea6e04e-bbd2-4e35-b639-9b241777a270",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "49bc2081-7718-411e-9511-f2cfb56f59ab"
        },
        "item": {
          "id": "4d6653b1-1261-477c-9197-5d17707a1807",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2fb37aaa-e492-4379-9a44-b1a9a4a022c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cadfeaf-77f1-4b6f-ba64-d1a95aa47f1e",
        "cursor": {
          "ref": "172a5eaa-851b-447e-aa94-ee3108049710",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bad70076-41f8-4ef2-91bd-e8addc939d1c"
        },
        "item": {
          "id": "9cadfeaf-77f1-4b6f-ba64-d1a95aa47f1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f13ba616-1847-4a58-8670-f75c8e2d41d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a007291-e02d-4062-99a5-03f108776e21",
        "cursor": {
          "ref": "7fcbd442-8417-4a36-bffa-c476b011c443",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "56c14e06-a3c1-4626-8b4b-831bd224f649"
        },
        "item": {
          "id": "4a007291-e02d-4062-99a5-03f108776e21",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8a2ee506-0a6c-478f-8c4c-fb6de3d2984a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842d2d4e-1c83-4175-97f8-20f00d8347d1",
        "cursor": {
          "ref": "2ee23f4b-81fe-43e4-94d5-0231f64c82b2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "670d62f4-4ef3-4319-a57d-74a256c6afca"
        },
        "item": {
          "id": "842d2d4e-1c83-4175-97f8-20f00d8347d1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "37031640-deea-4395-acab-b7755da49f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256fa678-5f83-48ab-92a8-2c97bc411e8a",
        "cursor": {
          "ref": "77da2279-877c-4f4e-b206-1071e5e973ea",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "08c60482-e19f-414c-9979-dcedf599795d"
        },
        "item": {
          "id": "256fa678-5f83-48ab-92a8-2c97bc411e8a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9e6f4df9-c5e3-4086-8f0f-5de593b74258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575bc2a9-ce8a-4fb3-9f53-33b665d1288f",
        "cursor": {
          "ref": "131280e7-1a12-420d-bbe5-11ceb30f8808",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "67e7d43d-072f-4dad-98bc-8c340a8c98b1"
        },
        "item": {
          "id": "575bc2a9-ce8a-4fb3-9f53-33b665d1288f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5585a4c7-aa30-4992-9241-9325b747c1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fa3f49-ad6d-437a-85f5-8da916f74b40",
        "cursor": {
          "ref": "aeab97df-b715-4d03-9827-2ee88617f12b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de361c2a-0dda-4896-b8fa-bb372cba2915"
        },
        "item": {
          "id": "60fa3f49-ad6d-437a-85f5-8da916f74b40",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5d72b65a-cdde-4eb2-ab67-eb0c059eb1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0019ab35-7da8-482a-afb3-4c87353fb632",
        "cursor": {
          "ref": "3fdf0a73-606b-445e-a31f-9d83f54339ae",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a6ced309-8ff1-40f4-95a9-7fd2b51c9877"
        },
        "item": {
          "id": "0019ab35-7da8-482a-afb3-4c87353fb632",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8ce7edf9-dcb9-4477-9a43-a17865d97421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1e8a02-a8a0-41ad-afaf-a36708ac52c4",
        "cursor": {
          "ref": "7d2b6af3-d0aa-4c17-a398-1cb7829b9333",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8fd1bee5-b6c4-43bd-b4b0-64e09a4b2cff"
        },
        "item": {
          "id": "eb1e8a02-a8a0-41ad-afaf-a36708ac52c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "01cd94aa-8a93-4d78-8a8d-509df94c0ea7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a464082e-265c-4134-93b8-b4e051956593",
        "cursor": {
          "ref": "3d01f8d6-886e-4fc3-88da-d7fa44c96beb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c050f181-157c-4918-aa2b-cba3198ab17e"
        },
        "item": {
          "id": "a464082e-265c-4134-93b8-b4e051956593",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b260d7aa-96e6-4fa1-88ea-c18ec5e7cd97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113c6c57-d137-470a-90f7-d72773ad6775",
        "cursor": {
          "ref": "9a6c36bd-a3cc-4d99-acb7-252091e3afcf",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1498c673-17d5-4fb1-8ad1-e51107ef163b"
        },
        "item": {
          "id": "113c6c57-d137-470a-90f7-d72773ad6775",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7c211994-9138-4806-acdb-9ee5f58f4441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816f8912-0084-45d9-805e-da0fc86b3fa0",
        "cursor": {
          "ref": "bc408dc4-8202-4f8c-a672-68d0003414dc",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "baadd6d7-31b5-44b3-a330-b5a945e05c04"
        },
        "item": {
          "id": "816f8912-0084-45d9-805e-da0fc86b3fa0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e63f4323-e447-46b0-a15d-d0dee7f236bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aa2d0c-bd26-401e-a01b-328a5c25b555",
        "cursor": {
          "ref": "e6f2ec50-f8d6-43e2-bf32-4de81c5e25ab",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "78afcab0-b26b-491c-948f-cbe9d22e1472"
        },
        "item": {
          "id": "c2aa2d0c-bd26-401e-a01b-328a5c25b555",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "56db729b-37ad-4176-85dc-f914517aa222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96856175-256f-4ac7-b7d5-171f65a5c176",
        "cursor": {
          "ref": "14c9354c-2d2e-4f9f-bc3e-c222dbcc5336",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9bd4c650-7e98-429e-98b1-433d5eece690"
        },
        "item": {
          "id": "96856175-256f-4ac7-b7d5-171f65a5c176",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5ea20f38-7d8d-4ef5-a52a-eaf90133fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17603efe-f783-462c-a3e9-868baadb5c0d",
        "cursor": {
          "ref": "286f2511-1e31-4afb-afb6-0a8630c062d4",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "852864db-7016-4be3-8553-123703e92c8b"
        },
        "item": {
          "id": "17603efe-f783-462c-a3e9-868baadb5c0d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4410e0f0-25c6-4158-a059-62d9d19d1da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fb38dc-12dc-4402-b4fc-c9721fac26e4",
        "cursor": {
          "ref": "da09e5bd-b1eb-4d05-bb89-93313c6b4447",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bd40ee5f-a9dc-44e6-b2cb-b84fec61290a"
        },
        "item": {
          "id": "f5fb38dc-12dc-4402-b4fc-c9721fac26e4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1bdb038c-ae4e-4929-b48b-cf2d78f1e70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fdaa57-aa52-4f25-8c67-a0912a4905bf",
        "cursor": {
          "ref": "de6b319f-2162-49ef-ae1a-e744c47b85db",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "1140f50e-9192-4313-9438-640f9b8d139c"
        },
        "item": {
          "id": "37fdaa57-aa52-4f25-8c67-a0912a4905bf",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "77a0b7bc-9fa5-4ae2-a22a-fba4b034de61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3572c70d-b86f-4a20-8d7d-b0a120feda69",
        "cursor": {
          "ref": "1f3c72a3-7e3f-4ade-8e93-f9e973b307af",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b2ca328a-71d8-47e8-b6c4-cf645188a7b6"
        },
        "item": {
          "id": "3572c70d-b86f-4a20-8d7d-b0a120feda69",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b8a0783-e909-4852-baf6-db60fcd42688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b34685-10eb-4497-9b0c-51071f1e6932",
        "cursor": {
          "ref": "0044f687-8dcd-43f7-85e0-9952e2a52515",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "cd285af5-bcd6-49e3-873c-d28c2ea05287"
        },
        "item": {
          "id": "14b34685-10eb-4497-9b0c-51071f1e6932",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8f7a8ffb-36f5-4935-a9ad-4c8389351948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72028ba5-ca90-4e51-86de-3a9c0d2c2172",
        "cursor": {
          "ref": "99718cd7-3220-4f02-80ab-3a5acbbd9484",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ccae90f6-1051-49a0-867c-642f277e826a"
        },
        "item": {
          "id": "72028ba5-ca90-4e51-86de-3a9c0d2c2172",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "58f2cfcd-708f-4044-a5bf-0688cb504e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d14c6c-cc4d-42bf-85f9-0cfcb5154a11",
        "cursor": {
          "ref": "61ea709d-3858-4daa-aab2-0920d76f7d6b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ecc8ae3f-58cb-4269-8d22-8ca500e7c0e1"
        },
        "item": {
          "id": "c0d14c6c-cc4d-42bf-85f9-0cfcb5154a11",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e33697d9-d463-45f0-981a-a7df06eb8a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da12f4a-e662-410d-87ce-735ce811ff15",
        "cursor": {
          "ref": "1a44469e-5750-40ab-a242-209fb184d4db",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0b97961f-4d62-4789-845d-e519ed6facad"
        },
        "item": {
          "id": "2da12f4a-e662-410d-87ce-735ce811ff15",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c232c650-75d8-4e6a-9dd3-e2b718e30950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03931dd6-33ed-4534-9a27-fd6fb4cd500c",
        "cursor": {
          "ref": "197055b2-cb18-456e-a4d8-61da540c0441",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f980aa00-98e4-40de-b004-0059981212f6"
        },
        "item": {
          "id": "03931dd6-33ed-4534-9a27-fd6fb4cd500c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e56cb30d-3e56-4ff4-9aa1-728be14d5512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c984a4d4-ffd7-4e89-be9c-9b1e1e4e5743",
        "cursor": {
          "ref": "ac5629d6-6789-4e19-88d6-5ba08edbf2a2",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4a55b2b5-c8e8-46ed-abe6-50a8c7950bf1"
        },
        "item": {
          "id": "c984a4d4-ffd7-4e89-be9c-9b1e1e4e5743",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d5fca3c1-1b79-4bdd-b7ca-2d0c99b9272f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5348902d-ff42-4e39-9020-4cdb1183257c",
        "cursor": {
          "ref": "a335fbbd-3335-4330-9b0d-f5847a137d7b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "beee2d3e-f86d-4619-a674-cc5379af8538"
        },
        "item": {
          "id": "5348902d-ff42-4e39-9020-4cdb1183257c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "522e1ca2-12b6-4bae-ba3b-b46f12f365ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb9bf5e-83ae-4939-8ae5-393dd91c1978",
        "cursor": {
          "ref": "d5d19753-2d82-47ca-a63c-ecaaa0c29f7c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1bba8719-0e34-4a00-ae0e-126744424d51"
        },
        "item": {
          "id": "feb9bf5e-83ae-4939-8ae5-393dd91c1978",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "66e380f4-a09d-4733-b313-2d2c96945360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1085236-c510-4cc8-83f2-e473265f7507",
        "cursor": {
          "ref": "0b94d0df-b068-451b-be5e-3447b8f51fe6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ac9f87a7-a228-48f7-8953-4cc9c6ab480c"
        },
        "item": {
          "id": "e1085236-c510-4cc8-83f2-e473265f7507",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4a862193-3e2e-4227-b15a-95d596206fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c0375d-2378-4f64-8e24-f2c1574ce6e0",
        "cursor": {
          "ref": "949f2f54-330e-4263-8dc1-bbe830db33c2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "46747565-fc5c-4e2c-a707-48768c915079"
        },
        "item": {
          "id": "94c0375d-2378-4f64-8e24-f2c1574ce6e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2e03fbf0-833a-43f8-b5c0-96207208d802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbea899e-1006-4c05-9e3f-7936b3cd9255",
        "cursor": {
          "ref": "dbe3c5f4-5ba8-4985-923d-99ce9d6de137",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a088cfce-874f-49ff-af7e-7ae6b2accdd1"
        },
        "item": {
          "id": "cbea899e-1006-4c05-9e3f-7936b3cd9255",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "02ab40f2-4b19-4347-93f7-441ca2e69f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433a9025-3636-4c2f-81d3-e645d98408f2",
        "cursor": {
          "ref": "2c4cab43-37a5-4260-a270-9ca5d45c7afb",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4e0cde33-cc31-4c2f-afb9-7e153ee3ab5b"
        },
        "item": {
          "id": "433a9025-3636-4c2f-81d3-e645d98408f2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "af128e08-99bc-4a5b-8a80-eb5869bdcebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c4696-ccf2-4ad8-b7b9-ed293d211bf3",
        "cursor": {
          "ref": "c9db9329-b060-4e84-9cb2-af0378daefb9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "89583d5f-1811-425c-bfea-d6fea540d6a7"
        },
        "item": {
          "id": "491c4696-ccf2-4ad8-b7b9-ed293d211bf3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fb58a77d-4025-4d88-b5a6-3ddab14330ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c983a2-0b00-412c-bee3-5c73a52764bd",
        "cursor": {
          "ref": "524d993d-6c67-4a07-9288-d3bd3c6f38ca",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "943846ac-7a7f-46b4-bf46-a957bbfb6ee4"
        },
        "item": {
          "id": "a4c983a2-0b00-412c-bee3-5c73a52764bd",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f5aae857-955f-48e2-8181-29d5220c16a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c40a85f-2cee-462b-9eae-254ed4aaa48c",
        "cursor": {
          "ref": "7305b4e2-5f53-40bb-9451-b467e0c1d81c",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4266a49c-2dec-42e2-84b9-816e5cdb5723"
        },
        "item": {
          "id": "7c40a85f-2cee-462b-9eae-254ed4aaa48c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "442ec635-d7c2-4a12-8840-bbf104ba0a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2042fff-f6b5-4ff4-94e5-7c64caf79aec",
        "cursor": {
          "ref": "e3c3524d-1b35-4280-9e8f-83975b089d1a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d2ea8515-859c-47ae-a52a-2c53cf98cf0d"
        },
        "item": {
          "id": "b2042fff-f6b5-4ff4-94e5-7c64caf79aec",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0448e91a-c476-47b7-859d-6330995c35cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6753d16-c16a-43c7-a230-e8886996dd35",
        "cursor": {
          "ref": "0aab5ec3-0a82-4803-b642-c17120a966ae",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "afa20c62-d0a5-4cf1-87e9-4d295bff3ead"
        },
        "item": {
          "id": "f6753d16-c16a-43c7-a230-e8886996dd35",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2fdfe9d1-5972-47d5-aae0-8abb3d3b4617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7725b61f-2577-49d5-be3d-b48e511a4b4a",
        "cursor": {
          "ref": "17978d01-55cf-4b12-9de9-fb2296d755f1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6bd88c94-c3d4-441f-ac43-0cd550be2bad"
        },
        "item": {
          "id": "7725b61f-2577-49d5-be3d-b48e511a4b4a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0d43642a-21dd-4496-a86e-0c65bd89c3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed895e89-185f-4ec2-9905-4777ab140e0f",
        "cursor": {
          "ref": "9bb87928-b22f-4a81-982e-d7a250dc1a30",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4fb8adb8-20d3-4af0-b62b-7fa6e61f7c00"
        },
        "item": {
          "id": "ed895e89-185f-4ec2-9905-4777ab140e0f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "94808252-ec27-4bb7-8487-e4bb918c9568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767c89d1-88ac-42ef-9e63-928474a8da46",
        "cursor": {
          "ref": "9fd34298-a5b8-4e1b-936e-837d381cdae9",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b7bc0a16-6ee1-4382-9e20-189f94634a79"
        },
        "item": {
          "id": "767c89d1-88ac-42ef-9e63-928474a8da46",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "19128276-50a0-4a49-a6ac-5be7faeec6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ae2ca0-91c5-46cb-80ec-27ec54073e88",
        "cursor": {
          "ref": "8bef4d6a-765b-477f-b2be-17ae7b5cda50",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1b861291-78e7-4974-8a26-b723352604ad"
        },
        "item": {
          "id": "00ae2ca0-91c5-46cb-80ec-27ec54073e88",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "239871f9-ced1-4343-bcc3-16528c303d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc473a2-7f8c-41e4-bca9-981658f18885",
        "cursor": {
          "ref": "6f06bfa4-fe1b-4225-a145-5da745415e9d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8b295555-58a5-4523-841c-2e8f072bfed8"
        },
        "item": {
          "id": "6bc473a2-7f8c-41e4-bca9-981658f18885",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f89b35ef-1e07-4888-b875-3f6faa908dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc76fee-d83c-460b-8e9f-218a3fd520f9",
        "cursor": {
          "ref": "974671f8-3f58-4a6d-bcf6-f47fb7692614",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8d5a258c-59eb-4675-9d90-0bb697080d22"
        },
        "item": {
          "id": "7dc76fee-d83c-460b-8e9f-218a3fd520f9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7a1de9cd-45e6-4f7d-ad8c-00e50caa53ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00388f79-c09a-4344-b860-e8dbf5ce4116",
        "cursor": {
          "ref": "36914ea0-5c3d-4c25-94d4-7adc9349493e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9fe7697e-4e4b-4a2d-abcc-3cf2174d2c0b"
        },
        "item": {
          "id": "00388f79-c09a-4344-b860-e8dbf5ce4116",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d93e1abf-0273-4093-b5ca-9bca830bd11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87277d31-e92f-483a-bc00-178de854f414",
        "cursor": {
          "ref": "1a0f8e69-33a7-4d78-a7af-6e126b95270b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b2477569-3fdc-4a57-aab3-f8b7618d914b"
        },
        "item": {
          "id": "87277d31-e92f-483a-bc00-178de854f414",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f0e6d58e-0932-4204-92c7-86f47ff34c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e945d8-56d2-43b1-bb9d-fb2df46a1162",
        "cursor": {
          "ref": "1c05c496-61a9-4adb-9271-66e0b6da77e4",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f8446c89-fb22-418c-85e9-4e4bebefee41"
        },
        "item": {
          "id": "67e945d8-56d2-43b1-bb9d-fb2df46a1162",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "042dece5-faea-4c82-964a-dc94a795c030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b766c0f1-4142-4df2-bc15-24abba606e3f",
        "cursor": {
          "ref": "44219931-6d36-42ad-9757-eaf76a76101a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5328bb7e-5c4f-4aad-b01b-27c0e946c629"
        },
        "item": {
          "id": "b766c0f1-4142-4df2-bc15-24abba606e3f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6ff29419-f8ea-4458-b192-f28b2d1dd997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c9487b-034c-43d3-8a21-5cd7b4f10f28",
        "cursor": {
          "ref": "c57dc845-dc87-4c8b-ba18-37416bfaa79c",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d6ed6eaa-8977-4e41-bf72-0bdf271554f6"
        },
        "item": {
          "id": "79c9487b-034c-43d3-8a21-5cd7b4f10f28",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d3c4d611-b567-42e4-8338-b74448a8ee00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961bec47-c0bb-4533-949f-4d491b45b61d",
        "cursor": {
          "ref": "ae8603a1-cf82-4ad8-88fe-796e602da837",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "3c5c2cdb-116a-4fbc-bc0e-de43a0085596"
        },
        "item": {
          "id": "961bec47-c0bb-4533-949f-4d491b45b61d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "3666e657-e8e0-4d5f-b394-fd4a56a335eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653acff5-4566-4413-90c8-972c46031d75",
        "cursor": {
          "ref": "e3ae357e-31e5-4b51-9f0b-c2df4a0a3b13",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0b11e56a-8e85-4ac6-9081-c294cfb544a9"
        },
        "item": {
          "id": "653acff5-4566-4413-90c8-972c46031d75",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3b5fee1d-9569-478a-827e-9b7f1c4a69e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da6881b-e82b-4de4-a01b-9be11b847844",
        "cursor": {
          "ref": "95362722-d4bb-4000-bb24-07354ca0694d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "92318c7a-da76-4c5b-87ea-03e4a3a076ab"
        },
        "item": {
          "id": "4da6881b-e82b-4de4-a01b-9be11b847844",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1647dae3-9b22-4801-a2ce-8e21d68b0fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58bb988-4aff-44df-8ffa-60e07fd42b23",
        "cursor": {
          "ref": "0052d47e-712b-45da-b000-0c81f6a9d462",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "10e4914d-2852-429e-9e84-b86de9b208b7"
        },
        "item": {
          "id": "b58bb988-4aff-44df-8ffa-60e07fd42b23",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "db858b7a-98a5-4009-91b5-d1d8dab4d02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ca2e01-b3bc-4b67-833c-470df766899d",
        "cursor": {
          "ref": "2c825802-abc9-4b9f-9c62-88fb7f3edfad",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f3472be3-4faf-42af-b156-f9f4e8b1d52b"
        },
        "item": {
          "id": "d5ca2e01-b3bc-4b67-833c-470df766899d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e3608f74-edd4-4fdc-83d9-c47bc3820218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a8b7cf-fe1f-4a3f-88ed-8646601a78f5",
        "cursor": {
          "ref": "a2833667-ede2-4870-ab8c-82766d90cd26",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "105b1b44-34e2-47ca-a962-aef364395cb7"
        },
        "item": {
          "id": "b8a8b7cf-fe1f-4a3f-88ed-8646601a78f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "40a48dc3-0c3e-4bc3-9faf-46ac47dd78bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797b57b4-1cf0-45cc-8bba-15381ecfa121",
        "cursor": {
          "ref": "91ce1f1b-adc7-4cbc-aa2d-c94701321f94",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "e160f3c3-674e-4cf6-b7fc-a59eb4c928d0"
        },
        "item": {
          "id": "797b57b4-1cf0-45cc-8bba-15381ecfa121",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a5628e2-d989-46ff-bb15-1b93c45b9b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f53c61f3-8ce0-4142-bac0-5d26b5aa67a9",
        "cursor": {
          "ref": "82d5bffd-8f98-47bb-8642-b45f680a4356",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "947dc69d-bc48-4dcd-81ca-8791faf75635"
        },
        "item": {
          "id": "f53c61f3-8ce0-4142-bac0-5d26b5aa67a9",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0926bd34-3cc1-4a29-8e7a-506433361b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b3ac4c9-e34a-4539-8223-f74b86bd0744",
        "cursor": {
          "ref": "34c33bf8-1c6c-4ac9-b379-e59d8073db36",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "37978482-1e9a-43c2-b788-66b6bd70d5cf"
        },
        "item": {
          "id": "9b3ac4c9-e34a-4539-8223-f74b86bd0744",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "da9a293d-1349-40a2-b1e6-1a8efce818dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba617f-3ad7-462d-8427-db66e63c8058",
        "cursor": {
          "ref": "440e0f1e-327c-4620-8a82-f05a7e0aceb0",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e6936e91-cf62-48b1-b856-9db3ef9ae748"
        },
        "item": {
          "id": "b7ba617f-3ad7-462d-8427-db66e63c8058",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "19115448-e273-4e57-9b92-fac6596e68b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4757ed-9a73-4945-91bc-b9ca2e582f00",
        "cursor": {
          "ref": "a5a884db-442a-40ec-b358-19d0a9a4af1d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f64146ca-7f8a-4a0f-9c1e-8635fd1d77e5"
        },
        "item": {
          "id": "9b4757ed-9a73-4945-91bc-b9ca2e582f00",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "37782e56-701e-44fd-a1f2-89d2b04d359b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a750d6-7764-4c1b-ae33-20c543dab899",
        "cursor": {
          "ref": "750071e8-3cc2-460d-86e6-8c0dee6a7a93",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5812ecf6-0093-4ca9-b351-7f854096ed7c"
        },
        "item": {
          "id": "31a750d6-7764-4c1b-ae33-20c543dab899",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4b88bd03-ca1f-419e-96f5-d4f1edf4f082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f963d9a4-cb94-4111-9384-ace5adbaa515",
        "cursor": {
          "ref": "2f6cfd03-a97e-44f5-9ed3-23c1b6b11142",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9fdacb7e-9ea4-46ad-85c1-04e15f80109a"
        },
        "item": {
          "id": "f963d9a4-cb94-4111-9384-ace5adbaa515",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afb9a008-bb64-4618-83ab-ecaaa2090d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4a8d4a-d3b2-4032-ba11-6fdb0e32c5e4",
        "cursor": {
          "ref": "499dff90-443f-459a-8993-d65f9943ce63",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f945d0d2-37f1-4986-8380-c2e88be24d96"
        },
        "item": {
          "id": "0a4a8d4a-d3b2-4032-ba11-6fdb0e32c5e4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "00922f2f-f659-48f1-a974-0402f7ea2e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0591c977-e94d-425c-83b8-a82ba3abff10",
        "cursor": {
          "ref": "10ce7dbb-64cb-4d11-95d3-7d67f957c78d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4774c44d-49d8-4aaa-9ca3-e2f04adf31fb"
        },
        "item": {
          "id": "0591c977-e94d-425c-83b8-a82ba3abff10",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18d44f1d-5129-43e2-8b84-8be9bc500d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b1506c-7665-48db-89df-5b589ed8e393",
        "cursor": {
          "ref": "14d9902c-a5ae-44fd-9021-785086f297b4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d38f3cfa-011c-4526-9379-2f32c76fd0c9"
        },
        "item": {
          "id": "f7b1506c-7665-48db-89df-5b589ed8e393",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2147faf4-8804-461d-8ae0-9cd5e53ecbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3186a304-b1dd-4e0e-bec1-78609fbb9776",
        "cursor": {
          "ref": "06e1c1a9-9bc8-4466-9726-928acb5b40a9",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bff8af21-5c65-4693-a267-3e1c8bba887f"
        },
        "item": {
          "id": "3186a304-b1dd-4e0e-bec1-78609fbb9776",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d4d5bd52-3c75-4577-9d8b-7219dee06b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5432c090-6e54-4041-b133-59b0c19ebd9b",
        "cursor": {
          "ref": "e47e7c45-15e8-441f-a7da-b8dd43ecbc9b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6b64def6-97a1-4aee-9bc2-c087c31bd309"
        },
        "item": {
          "id": "5432c090-6e54-4041-b133-59b0c19ebd9b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0d8f3c4-27d7-4ff3-bc91-088197905b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0fd2e8b8-6e9e-47e0-bf71-fc14399aed27",
        "cursor": {
          "ref": "333528f0-ecf1-4143-a2b0-0afd429fea0f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "90ee6971-4215-4d8e-82e7-fa5580de1113"
        },
        "item": {
          "id": "0fd2e8b8-6e9e-47e0-bf71-fc14399aed27",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39996edc-5c13-46f6-88c2-22d8f787d7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "c0a90d4b-3847-4fe9-96d0-c65bb72f60a6",
        "cursor": {
          "ref": "128c9c7b-d81a-44d5-94b4-f2ab3116644e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1d2dcb90-3fa5-48ce-8231-1777d02a1955"
        },
        "item": {
          "id": "c0a90d4b-3847-4fe9-96d0-c65bb72f60a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "da15176d-1352-4e72-813a-3ec3c5f05b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5556087a-0923-4a89-90e0-3806c8d9ccaf",
        "cursor": {
          "ref": "e74ec6bd-626e-4993-b5e2-8384a2d28cef",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "46141a05-7b08-4319-a182-64f9e5e09f25"
        },
        "item": {
          "id": "5556087a-0923-4a89-90e0-3806c8d9ccaf",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c8ca66e0-846d-4d8f-a796-3d9e1671ee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "63601dc8-0e75-440e-88f8-5725ad10ef0d",
        "cursor": {
          "ref": "7dd835e7-3411-42e6-b7b5-4c509d7db742",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "23ed4c6f-b6af-4f34-8015-4e7377ac8f49"
        },
        "item": {
          "id": "63601dc8-0e75-440e-88f8-5725ad10ef0d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a8b40e49-555a-4202-9777-f48c8048ca51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "4ed342e8-9f96-4bd4-88a4-e40067b7b12b",
        "cursor": {
          "ref": "25b30fc5-6b56-4b10-a8ff-c050951e7be1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b100fa0b-7c62-4783-baef-3f2fbc731a5b"
        },
        "item": {
          "id": "4ed342e8-9f96-4bd4-88a4-e40067b7b12b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cd75f6d4-299b-4d00-be7f-b0749c584d19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1cf0352e-8163-41f1-8886-72943babb67e",
        "cursor": {
          "ref": "be304a73-2d5f-4e42-8b93-b46e7fcd5a50",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b82ee6d4-e8c5-499e-b19b-6f88e63489dd"
        },
        "item": {
          "id": "1cf0352e-8163-41f1-8886-72943babb67e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89b545f9-4608-442c-bd14-42c29c7a2443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ef18cd-a65b-434f-8fb7-055c0927af80",
        "cursor": {
          "ref": "0dbc8660-ed19-4389-8a69-293552ad98d1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3d1d1173-fd81-48e1-ab26-402165bad9a9"
        },
        "item": {
          "id": "35ef18cd-a65b-434f-8fb7-055c0927af80",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fb70d90a-8c90-4840-b34d-327e9246a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8af8195-9af7-4ace-b502-57a1f5cd0588",
        "cursor": {
          "ref": "5d460c13-edd3-40bb-a96d-9ed6164a3e41",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "89d02237-9e5e-4d07-bb93-a5e09c3f68ff"
        },
        "item": {
          "id": "e8af8195-9af7-4ace-b502-57a1f5cd0588",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "52cca9c4-5f0c-4f8f-895a-5c2d8d9f68f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199490cd-2d67-448e-ab05-57ab75f863f6",
        "cursor": {
          "ref": "37963ecf-c02c-4bae-8240-57063f107cee",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0a29eb25-f62a-4768-b21e-3a6972c9b8d7"
        },
        "item": {
          "id": "199490cd-2d67-448e-ab05-57ab75f863f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "26d22726-86c4-4526-b443-3a024f3b1351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4469032d-d452-44fa-b190-62c3cc1cef74",
        "cursor": {
          "ref": "e1e74e92-5465-4ad3-80c0-5d31fa631936",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3de3072d-a82f-4f42-a16d-b8d4c7948576"
        },
        "item": {
          "id": "4469032d-d452-44fa-b190-62c3cc1cef74",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9558897a-d1c9-4bd9-b8a9-67c50e780132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c84ade-ccee-45a5-8172-b1bb47d73cf2",
        "cursor": {
          "ref": "d77b4ee0-d7cb-47c2-b986-53fc8082d7b4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "68e6c9ac-032d-4cea-ae28-58efffdc2d1b"
        },
        "item": {
          "id": "22c84ade-ccee-45a5-8172-b1bb47d73cf2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44fbba97-37d2-4e93-b6d6-79b15f83b4e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02818e5e-b7f3-427d-88b4-1e66cf8839a1",
        "cursor": {
          "ref": "30631878-34c3-48d3-ab64-0bdd93496003",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb42c7ee-c03e-47f3-b4dc-ce6b7bbda622"
        },
        "item": {
          "id": "02818e5e-b7f3-427d-88b4-1e66cf8839a1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20c80cd8-6921-45d9-aa31-15b44c43a01d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7afc3-a082-495b-a23c-1b4c02215cd8",
        "cursor": {
          "ref": "9a2694fe-ebf9-4ab8-bbe3-f4094f7b92a7",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "78fddafa-d012-4258-9595-678f16c947d0"
        },
        "item": {
          "id": "f3a7afc3-a082-495b-a23c-1b4c02215cd8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "db2413e4-ce02-4b08-8c11-d5c956b51afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "740a0ecc-014a-42b6-8a6b-0f58b96a4eef",
        "cursor": {
          "ref": "2616ee5e-6fe8-4f8f-a1cd-ef2093de9b56",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4d093492-c9b1-4971-a2e7-46605f096780"
        },
        "item": {
          "id": "740a0ecc-014a-42b6-8a6b-0f58b96a4eef",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "13c775c2-e648-435b-be3c-e60ca601f40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d0737-8e50-44c3-a737-dde9e2a941a1",
        "cursor": {
          "ref": "45b652ea-0354-4310-aeec-ed652a2d701a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "74e589c0-9b9e-4c73-8541-21ee699fd6dc"
        },
        "item": {
          "id": "619d0737-8e50-44c3-a737-dde9e2a941a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "27d5c7ec-1a46-4642-a5e0-5b320300add8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9ed0ed-4fb7-45a5-99f4-0f8267296c93",
        "cursor": {
          "ref": "94171f2b-1932-40a8-8a97-62648381c3ba",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32f473ca-59e0-49dc-a77f-299e27022ad5"
        },
        "item": {
          "id": "ba9ed0ed-4fb7-45a5-99f4-0f8267296c93",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1493454d-dfe6-45be-b47e-41a8ca3b6057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd0254-2868-464d-a111-211082be5d2a",
        "cursor": {
          "ref": "33d350f0-8eac-4550-99ad-26b3af170973",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d036a3b8-1353-403a-8a4b-f7216aefce14"
        },
        "item": {
          "id": "abfd0254-2868-464d-a111-211082be5d2a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "37d8f1f9-0e68-4424-a5d4-98224269b823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec17440-dad0-4615-8ca5-230887a3eef9",
        "cursor": {
          "ref": "2390d61b-db0d-4dd8-b415-6850abdff88d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cdcf39f4-a7e7-466c-9493-c107c0ceb667"
        },
        "item": {
          "id": "bec17440-dad0-4615-8ca5-230887a3eef9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "26537b66-2081-4473-9f4a-7924ab634007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d19ed36-90e8-47cf-92a4-8a5e0d90e35f",
        "cursor": {
          "ref": "b062b347-8cfc-43df-a6fb-3fc5cfb6c598",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c45b1fb3-155b-431c-b67c-46caa68a4188"
        },
        "item": {
          "id": "4d19ed36-90e8-47cf-92a4-8a5e0d90e35f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4c298199-d6a6-4da7-923f-47a8efffe79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafc42dd-eaef-4c33-b5bd-9b02b70dd6a3",
        "cursor": {
          "ref": "c911ccd3-00e2-4f2f-abed-f2da8f0f6b5c",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "126a33d1-15a3-4e6e-af53-2a8676136cfc"
        },
        "item": {
          "id": "cafc42dd-eaef-4c33-b5bd-9b02b70dd6a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ee059d29-6344-4a81-9f0c-0a284f3632e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c322aaf-42cf-4c81-aca1-22bd9ef730b0",
        "cursor": {
          "ref": "dcd31668-54a2-4237-b25b-79dd6cdded2c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "44f10404-e315-43e4-b21f-ec38867121f9"
        },
        "item": {
          "id": "7c322aaf-42cf-4c81-aca1-22bd9ef730b0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b9725fa-0d07-4fa9-898c-7a6f98b912c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2b93ef-3dd7-4001-a2d7-e458e982980a",
        "cursor": {
          "ref": "8411840f-9ff2-40d7-833a-2cf6b89816c3",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "31baa909-107d-47bf-88f6-4762a7c25670"
        },
        "item": {
          "id": "6f2b93ef-3dd7-4001-a2d7-e458e982980a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8925ca68-de50-4b4e-8442-7e52591035e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af739a58-d952-40ff-8d0f-c091374ce92a",
        "cursor": {
          "ref": "fad78f06-9e03-41a9-b85f-094e27d4b2d8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "71376245-5781-49ad-ac14-6e06ee82b5b0"
        },
        "item": {
          "id": "af739a58-d952-40ff-8d0f-c091374ce92a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0dbf3c31-c853-4fed-9a9b-aa3a29ab3a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f1cf09-17a5-4f21-8f92-0be469cf0117",
        "cursor": {
          "ref": "27311024-149b-4fe1-8375-f4fcc93b6264",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce86b026-28e3-411f-83b0-a240ac4619ee"
        },
        "item": {
          "id": "79f1cf09-17a5-4f21-8f92-0be469cf0117",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "301ca8ce-2800-424b-a340-e6d0b8eeefff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cdc0e4-3716-49ac-b394-e2f0ef1f04c9",
        "cursor": {
          "ref": "7ce7dceb-731c-4bc6-b32d-b324a1f81ed7",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8e16b91c-a643-42f1-8c10-bfe59720db43"
        },
        "item": {
          "id": "63cdc0e4-3716-49ac-b394-e2f0ef1f04c9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "92b40317-6081-40be-a58b-4f69b18d5270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e9cff7-e8e1-45c2-868d-45adea7acfb0",
        "cursor": {
          "ref": "bc08526f-d20c-4e42-8c46-c2fb8de275e8",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f6dd30ea-9d09-4395-bdf6-168dcacfc102"
        },
        "item": {
          "id": "26e9cff7-e8e1-45c2-868d-45adea7acfb0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c78aa9f-441c-46fb-8760-2c49e78772da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82656f8-babf-4d4d-967d-560288abe1c4",
        "cursor": {
          "ref": "59deddc3-8d06-45f1-b5e5-ae61c73c50cb",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "62639065-1d5f-4a06-9da4-fdbeeb6d3121"
        },
        "item": {
          "id": "a82656f8-babf-4d4d-967d-560288abe1c4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9d83edc4-eb49-4e1a-80cf-c9249316d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadfd914-fb3a-46c5-856f-156ce92bc24e",
        "cursor": {
          "ref": "c6807c45-013f-449e-bd0b-49582b9c1d14",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7356d776-53eb-4551-be9d-07d04cf0a087"
        },
        "item": {
          "id": "dadfd914-fb3a-46c5-856f-156ce92bc24e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "75e50a3c-dca5-49df-a924-3246fc3a7de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b467b1f-c929-447e-a180-ae090310df62",
        "cursor": {
          "ref": "c25d17eb-202b-4776-b439-f4043b373203",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b972b5ac-0a3a-42ba-8e5e-bccaced52528"
        },
        "item": {
          "id": "4b467b1f-c929-447e-a180-ae090310df62",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2de815de-e54c-4036-abef-e3fbc1fff2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223c9614-e235-4c53-8d7d-3e0bce3fe40a",
        "cursor": {
          "ref": "9adabb1e-d5e2-4b7e-92bc-d3484960854e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a19486ac-5f25-4e84-b04e-7d412fb203ec"
        },
        "item": {
          "id": "223c9614-e235-4c53-8d7d-3e0bce3fe40a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0b370abe-e0aa-4024-9c5e-91cc61b949d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff68f13-fedc-4539-aba3-ed8873573a7b",
        "cursor": {
          "ref": "46c3879f-1635-4a5a-a14f-5fae9ccb7a59",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "60ebdab6-9063-45aa-89d2-8620fe027fb5"
        },
        "item": {
          "id": "1ff68f13-fedc-4539-aba3-ed8873573a7b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "87c2de1e-040a-4e99-a75a-bceb98670b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fb6535-0e88-44ce-83d3-5d2ac1df1c8f",
        "cursor": {
          "ref": "0d1e4c2f-3240-47fb-86b3-55cd43f154ee",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fc97ae1a-622c-4d84-b396-d1185e936873"
        },
        "item": {
          "id": "28fb6535-0e88-44ce-83d3-5d2ac1df1c8f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4ce0a8bf-858f-436e-91aa-0d0e94764baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa3d4fe-1808-4b88-babf-b82f258485ad",
        "cursor": {
          "ref": "0860d9c2-9ff3-4829-bcc8-6a2c2e08a728",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4617a261-ef14-4ffb-a6e2-06d9e8b78b11"
        },
        "item": {
          "id": "dfa3d4fe-1808-4b88-babf-b82f258485ad",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3c985909-c9c1-45d3-80ee-a8fd2f3fdd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c36d1802-7164-4e8a-a832-d490fcdb75dc",
        "cursor": {
          "ref": "028c5750-8b08-4d80-9072-24ed81a31f70",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5d3e8e91-4947-46ca-b400-88040e9b16b6"
        },
        "item": {
          "id": "c36d1802-7164-4e8a-a832-d490fcdb75dc",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "694a5a8f-cfa6-47cd-991f-a194b7ac7c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d0c751-e571-4374-8467-4a1a7847684e",
        "cursor": {
          "ref": "e79e219e-a5be-4468-9d07-dbc8c44c0109",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "87e0c645-cee4-4049-bd9c-33a283f41764"
        },
        "item": {
          "id": "c9d0c751-e571-4374-8467-4a1a7847684e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f455c98-fc61-4009-9970-9151fb354de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06450805-b05b-4376-a562-33789c85f4b4",
        "cursor": {
          "ref": "a8957048-e979-41d1-b0e5-5ee07833d633",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "708fe9bf-b150-4683-a86a-ff34df02a688"
        },
        "item": {
          "id": "06450805-b05b-4376-a562-33789c85f4b4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a7b1e4ad-0445-4a69-8bab-c841e0df5716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933fa35-6dc2-4351-a57d-7ab2320d0a86",
        "cursor": {
          "ref": "93d9fa27-095f-49cc-9edd-5cb572872fbc",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "41366e05-579b-4010-8ab3-eaa6841c8709"
        },
        "item": {
          "id": "f933fa35-6dc2-4351-a57d-7ab2320d0a86",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "bcd26510-63ca-46d0-b321-826515e3df76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f5300-b970-4a05-bebc-19311db0de67",
        "cursor": {
          "ref": "173e49de-72cd-436d-98f6-2660bde6c44c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5f5a70a3-180c-493a-b9d7-3ce8a555c821"
        },
        "item": {
          "id": "a30f5300-b970-4a05-bebc-19311db0de67",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a0d667c8-a373-4fb2-a23e-2e168526c3ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f9fa43-f430-40be-a4b8-0606de1c4fd4",
        "cursor": {
          "ref": "df87b9b9-b547-4ff9-b606-65f8dca320d1",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "542e1758-a9d2-4835-b7da-ae72baa5daf3"
        },
        "item": {
          "id": "e6f9fa43-f430-40be-a4b8-0606de1c4fd4",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "9ee63999-f517-4732-abad-b727a57c8cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e830c2e-c72f-4581-a173-255d811c6ced",
        "cursor": {
          "ref": "962358ab-0cae-4cbc-8c8d-604db262dd0d",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c282348b-2bb9-4335-9963-b666300ff79d"
        },
        "item": {
          "id": "2e830c2e-c72f-4581-a173-255d811c6ced",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "58261407-4c36-4c27-9405-8881c8cbb229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa721f-7127-40c3-a560-161228aa2a78",
        "cursor": {
          "ref": "47a822cc-1c4e-4687-b727-b031eec80e06",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b9edaebc-ba8e-423b-838b-e56338f67ca3"
        },
        "item": {
          "id": "61aa721f-7127-40c3-a560-161228aa2a78",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e1e26e83-1b09-4a60-972c-ff0d0b14b9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e577115-1995-411c-b904-ca524362c534",
        "cursor": {
          "ref": "103fd241-9950-4be3-b8d5-a00510963bdd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ac5f4049-04fd-4ebf-951d-711ff2071b36"
        },
        "item": {
          "id": "9e577115-1995-411c-b904-ca524362c534",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9b48ff99-283f-4392-890d-a7fb2065a3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069dbd57-a133-46ab-a511-f8a971d9e7b5",
        "cursor": {
          "ref": "3456663d-3b38-4d73-b010-291f8e950853",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f576d9ec-3044-462f-957c-7a6ebe3cc445"
        },
        "item": {
          "id": "069dbd57-a133-46ab-a511-f8a971d9e7b5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4e8c7089-d78b-4bd5-a8bf-e356a6a40f43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20664252-1ff6-487e-92e8-00329ac3bed1",
        "cursor": {
          "ref": "8763e666-86e3-4a5a-abbd-5c74b6b8d5d3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "89a0123a-685e-49e5-bae7-3743e6bfb099"
        },
        "item": {
          "id": "20664252-1ff6-487e-92e8-00329ac3bed1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d24ccd29-9d51-4594-b87a-9080182f0cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bb16e4-c717-4185-b5cd-4c06369cffc7",
        "cursor": {
          "ref": "76e077f0-7382-4a2d-8106-1c75da6e6a7c",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "28a11a92-b7fd-470e-96ad-c875a61e4aea"
        },
        "item": {
          "id": "80bb16e4-c717-4185-b5cd-4c06369cffc7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4c2b262c-5466-4007-993f-830c785ca431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d88e22-9b88-4fe9-b54b-6039621feb2d",
        "cursor": {
          "ref": "efd23fcf-6cf2-4fc4-9621-b8a7e4954153",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "14e6f8ab-e9e6-4641-befd-e22d71ac1d04"
        },
        "item": {
          "id": "12d88e22-9b88-4fe9-b54b-6039621feb2d",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5dbef6a2-c772-458a-9a4d-30a5a6113953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3dd242f-0e33-4c9c-9ef9-c8a40e3b13c7",
        "cursor": {
          "ref": "892e425d-206b-42c5-a298-20e8577b2786",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "feb8fd81-d272-4e77-b848-0484ddb015ce"
        },
        "item": {
          "id": "f3dd242f-0e33-4c9c-9ef9-c8a40e3b13c7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0a14a342-3dfa-4d47-9770-8e950fde46ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33934cb7-876c-4938-8806-a6a3ebf40d6a",
        "cursor": {
          "ref": "a4fd0db1-e7ed-4043-8bdb-57766041b06d",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "67a56c4d-f334-48e5-a625-2040f7139796"
        },
        "item": {
          "id": "33934cb7-876c-4938-8806-a6a3ebf40d6a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "862e38ae-2e3a-4616-95a8-17c096ea77b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79159571-2d98-4e4a-b2c7-5a2812b60a3d",
        "cursor": {
          "ref": "75cb7d4d-ad23-466d-8d83-e2ba5d27c3c4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1e3ca4c4-6781-4c73-b8e8-e5a40516cf92"
        },
        "item": {
          "id": "79159571-2d98-4e4a-b2c7-5a2812b60a3d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7185aac0-c407-4cb0-9cb7-3b71a8c87558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bf1d5d-c6d8-4576-916f-db801a023c53",
        "cursor": {
          "ref": "c14d574f-f330-455b-9e1d-86621f251da1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d028cf7b-8625-4485-9628-bb9fa8388e14"
        },
        "item": {
          "id": "23bf1d5d-c6d8-4576-916f-db801a023c53",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5bfebe44-24f1-4698-a348-df48024e2b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517c44a2-376d-4ad1-ac11-11f37670f06a",
        "cursor": {
          "ref": "9b756090-1add-426c-8e1f-1887c9dd53c5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "43bb0361-ecea-4ea1-842f-c900891b8837"
        },
        "item": {
          "id": "517c44a2-376d-4ad1-ac11-11f37670f06a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "919449f6-7206-46e4-92d5-2986f23107fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2838ee2-ec29-48e5-ace6-2108386845ef",
        "cursor": {
          "ref": "724e443e-0bd4-4a37-92f7-8c126e25d3c3",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8a5c2c5d-ef84-404a-aa5b-f3384e1fb191"
        },
        "item": {
          "id": "e2838ee2-ec29-48e5-ace6-2108386845ef",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c9c1a5f1-f3e3-4af3-8bf5-3a1ca08438c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a30b91-d9f3-4113-940e-f9720cef4399",
        "cursor": {
          "ref": "b2d6f95e-b0cf-4f99-90c8-2ed10ec47906",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd4a81d1-2697-4f25-9e71-0a70f57e128f"
        },
        "item": {
          "id": "c9a30b91-d9f3-4113-940e-f9720cef4399",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c5f53cee-bf17-4844-b5c5-2306ed579b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe2d9d7-e0bb-4bb0-99f9-b56f6a71e060",
        "cursor": {
          "ref": "4eafc8a6-a963-4bca-86a3-3509c2e7ec79",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7c66dbeb-12e8-405c-b5f0-ae22d97da401"
        },
        "item": {
          "id": "ffe2d9d7-e0bb-4bb0-99f9-b56f6a71e060",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "67b69596-a147-4ebc-95fb-bfe5ff61a114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925402ed-ac18-4eee-b52c-fe5ffcaf7833",
        "cursor": {
          "ref": "34c4d1ff-0ff6-489d-8402-4ec213437ad1",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "efa20eab-5bde-4f1c-b942-e486c982f98a"
        },
        "item": {
          "id": "925402ed-ac18-4eee-b52c-fe5ffcaf7833",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "57ff3a27-003f-4d31-9f9f-96e5fbe909d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48308aa7-246c-41d2-b2e6-51b3c1b518f0",
        "cursor": {
          "ref": "6a42093d-495c-4a14-bc81-c605deb6964a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4472a025-2df0-4766-807c-bfcf4c6eb45d"
        },
        "item": {
          "id": "48308aa7-246c-41d2-b2e6-51b3c1b518f0",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8197bd64-5bd4-4f11-86c8-819453834348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dee9d49-c10d-4e72-a6f4-1ed8eb0e374c",
        "cursor": {
          "ref": "9be6236d-0954-430f-a311-926cce11879c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "29291039-a39f-4d45-a4e2-2d47b0e37806"
        },
        "item": {
          "id": "4dee9d49-c10d-4e72-a6f4-1ed8eb0e374c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a00ab8d7-32ee-447b-91c2-6285e2a95df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47eeb8d-ba97-40ce-b05e-f0ce730d666b",
        "cursor": {
          "ref": "ab0f91a1-2391-40af-a9db-c9af541a0382",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3be8711a-03b0-485e-88ff-3dff8f53a931"
        },
        "item": {
          "id": "d47eeb8d-ba97-40ce-b05e-f0ce730d666b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "34fcaaf5-12a7-44f5-91e3-29c2799edb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c34d70d4-c9de-4fb5-acf2-c9a97d8c14f0",
        "cursor": {
          "ref": "a74de5e9-4c44-4702-95cc-559df3881e59",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "cc2b12a9-8814-406e-8693-66e5ff49f2d3"
        },
        "item": {
          "id": "c34d70d4-c9de-4fb5-acf2-c9a97d8c14f0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a2f37a20-e3c2-4a9d-89bc-0b654d90be2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e241a0-b635-4a94-90b4-5c08ff6b8c42",
        "cursor": {
          "ref": "c30e0946-aca5-4d3a-b97d-11672ee5e48d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "068f7ad1-00be-47d1-bd7b-9a838be41c5f"
        },
        "item": {
          "id": "22e241a0-b635-4a94-90b4-5c08ff6b8c42",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0b8ab466-628c-4bc6-83c8-b31adfd9aee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ddc262-560b-468e-bf9f-acb2b3dcc25d",
        "cursor": {
          "ref": "f0897eb8-2236-4438-a207-a35161b485d2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "de445ce1-a620-45d4-ab76-a5a5ba0fdfa8"
        },
        "item": {
          "id": "54ddc262-560b-468e-bf9f-acb2b3dcc25d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5ae1de55-fb12-45b4-8887-a34796592b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad2a80c-82b0-40d2-9344-eac8f2623c92",
        "cursor": {
          "ref": "b3bfd733-ed5a-4aac-9bda-d4cf732ffa33",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0d82d50e-202c-4480-96c7-e1e504395a07"
        },
        "item": {
          "id": "8ad2a80c-82b0-40d2-9344-eac8f2623c92",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0de06b23-9c66-4d90-99e8-d2f4b499762d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212d33e1-4f73-412e-98b8-b2f1c41f80f3",
        "cursor": {
          "ref": "1a433a46-705f-4a18-bd8a-be3eb12bcdea",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a62c80da-01e4-4ee3-bfed-07e8c8016b9c"
        },
        "item": {
          "id": "212d33e1-4f73-412e-98b8-b2f1c41f80f3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "113923f8-a09b-4e06-8bc1-6b529f48da2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95069dfd-3bef-44ef-aa61-485b42401c9f",
        "cursor": {
          "ref": "d17ad857-ae9b-426a-ac3c-c1df591d7d55",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79311241-30ec-4883-bdcb-7e1c168404e3"
        },
        "item": {
          "id": "95069dfd-3bef-44ef-aa61-485b42401c9f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ec1301fc-29a0-4359-b14c-04f7706faabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0cfd4e-be96-49fb-946f-233fbb92b584",
        "cursor": {
          "ref": "0dc251e0-ca72-4660-bd42-21999e883e4c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "89499c08-d0c5-47ef-bc25-c080eae99bbf"
        },
        "item": {
          "id": "0a0cfd4e-be96-49fb-946f-233fbb92b584",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ccbf7706-ea44-4e28-9316-24b47fcbc7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10896130-0ad0-4e75-bb18-f8830596e1d6",
        "cursor": {
          "ref": "db4b81a4-d64f-47c0-819a-e7a9afa481a6",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "13cb47cc-1e01-4f05-9d25-8f6b6cbd7ea9"
        },
        "item": {
          "id": "10896130-0ad0-4e75-bb18-f8830596e1d6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "032c006a-a2b5-4259-aa00-84cfb9b69d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b38da1-212a-4a93-8d6a-10142ae45adf",
        "cursor": {
          "ref": "4ce0d9eb-2812-4eef-b4dd-5c6db4c99c52",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9228bc5d-a6d1-462f-9ec4-892bc24f8dfc"
        },
        "item": {
          "id": "77b38da1-212a-4a93-8d6a-10142ae45adf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c0cb3087-2e8f-41cb-8144-23fc6ce2f008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf802ccb-37d7-44e7-bd6d-9efca30181c6",
        "cursor": {
          "ref": "9a670072-505a-45d4-9ecb-78869c07e620",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0cf5b808-65de-43be-9929-05ea6073ec7e"
        },
        "item": {
          "id": "cf802ccb-37d7-44e7-bd6d-9efca30181c6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f9e492a-7d74-4a6f-bccb-8f7ce32271ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcf90d9-d36f-40ee-a909-67a825d35a09",
        "cursor": {
          "ref": "56638082-dfee-4e22-84a4-0ca65667bf7d",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6c8f1f93-a05b-40a1-9a0b-f81510a364c3"
        },
        "item": {
          "id": "0fcf90d9-d36f-40ee-a909-67a825d35a09",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6735be77-e620-4c47-8bae-8d53133493af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f4ccf65-ea1b-4deb-8360-f5fd4d721f09",
        "cursor": {
          "ref": "993db7b0-2c8e-4fda-99c4-5c51dbde01c7",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8cae8c98-34c1-47cd-817a-598b02b8a2c6"
        },
        "item": {
          "id": "9f4ccf65-ea1b-4deb-8360-f5fd4d721f09",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c542619f-5595-4319-be13-2cda97e39b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8fa1b8c-6156-40c6-b216-5788c23ddd64",
        "cursor": {
          "ref": "fa9103a5-8804-42b2-8536-195660d20211",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f43230c-ce8d-4c3e-ab4c-8d3177b1da08"
        },
        "item": {
          "id": "d8fa1b8c-6156-40c6-b216-5788c23ddd64",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0a783959-78dc-4b3c-b265-be80099c9465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f3cfa0-f32d-4a29-af62-2e88a0888696",
        "cursor": {
          "ref": "b5a2cbe3-d362-46a2-9f8d-70a707b29add",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6f23c141-1b2c-4323-ab15-ebe7ca400002"
        },
        "item": {
          "id": "d4f3cfa0-f32d-4a29-af62-2e88a0888696",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a31fb2c1-c074-4cd4-8a8b-e461983bae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3157e4f0-87a4-4483-9a89-886e9cd7b23b",
        "cursor": {
          "ref": "05f5a788-994f-43b5-af98-fa5b14ca57f5",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e541a3fd-7dcc-48ec-b3b1-c3d6a6bfc868"
        },
        "item": {
          "id": "3157e4f0-87a4-4483-9a89-886e9cd7b23b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0ef91985-496d-45bc-90e0-f82be93525c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044a5496-014a-49c8-91b1-eb23caba4650",
        "cursor": {
          "ref": "619618b7-482d-42d0-976d-268398395f09",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "41814e2a-d05a-498b-8e98-5ffca8ebfceb"
        },
        "item": {
          "id": "044a5496-014a-49c8-91b1-eb23caba4650",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "82b1d4a5-5dc7-4428-98a2-caf21a5cf86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23676712-7a07-423a-a0c9-ede2c9b5de69",
        "cursor": {
          "ref": "e3ed2f3c-2007-4c6d-add6-62a06b701254",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cb6ab460-4282-44f6-96b7-f5951a0fbd0d"
        },
        "item": {
          "id": "23676712-7a07-423a-a0c9-ede2c9b5de69",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "30196fe6-87fb-4e83-bb69-40e23b3e2087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae311803-f50b-4d2f-a47d-701171d7f5b4",
        "cursor": {
          "ref": "618d6634-c475-4962-be3a-82c13a8f7640",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6b7f1288-1324-4250-adbb-4703340819f2"
        },
        "item": {
          "id": "ae311803-f50b-4d2f-a47d-701171d7f5b4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3e19d6af-4bc3-41b4-b108-4fca9090654d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92025d5-191c-4cdc-a6ce-9132e1ffa87c",
        "cursor": {
          "ref": "05ea0989-b53b-41b5-a03d-fd8566d8778c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d7e37347-4ae4-481a-b3e4-fb3a74ddf6e9"
        },
        "item": {
          "id": "c92025d5-191c-4cdc-a6ce-9132e1ffa87c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e6f5409e-5625-4d50-b8c4-0e7f532d8f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26857772-56bf-47cf-9fcf-dac112e35135",
        "cursor": {
          "ref": "5932b331-f577-42c7-864f-0fbc5613e5ae",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4e007666-a907-4ade-96da-ab0f29370db0"
        },
        "item": {
          "id": "26857772-56bf-47cf-9fcf-dac112e35135",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0c506a55-db78-49e2-8f9d-c3c21ad06d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b163342-0e90-4e82-8171-43ea54d52256",
        "cursor": {
          "ref": "397ded86-d50a-4a9b-9de0-03f2599c083d",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "66251aed-5da3-46d0-a4e7-6a4346daec99"
        },
        "item": {
          "id": "2b163342-0e90-4e82-8171-43ea54d52256",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ff5107a-5637-4939-99ce-f29222c41d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfabbe1d-4d5f-4502-923c-52ee37530acd",
        "cursor": {
          "ref": "8d47087c-b3df-4cb2-97c4-3a53dc474763",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b15bf9c7-ff7f-41f2-a0d6-643c4b542fdc"
        },
        "item": {
          "id": "bfabbe1d-4d5f-4502-923c-52ee37530acd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8a840377-4c88-43cf-9424-9f9eff6aa712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a04c39c-98d3-46c0-b61f-0ab68e6be8b2",
        "cursor": {
          "ref": "de809ef3-b51d-41fd-9750-98c1388193bc",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d6df97a-5424-4412-bd59-dbbed7755d3b"
        },
        "item": {
          "id": "8a04c39c-98d3-46c0-b61f-0ab68e6be8b2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ca5f9ad2-8211-49a2-85b5-c32e5365b03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbde47e-eb4e-41c9-935c-af47f44dd01e",
        "cursor": {
          "ref": "d178440f-64e1-4964-ac69-9ffa9dc0b1dc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "427ef8f0-9eec-4926-91a4-d073d9435508"
        },
        "item": {
          "id": "bfbde47e-eb4e-41c9-935c-af47f44dd01e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9611d5fd-0cb4-4044-8079-0fa41ced674d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b716a30c-6294-4701-ba73-36a37605bd18",
        "cursor": {
          "ref": "06146271-75a3-43d5-bc61-7f8076978a83",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "43b15069-0683-4620-a049-bd8f78a3b921"
        },
        "item": {
          "id": "b716a30c-6294-4701-ba73-36a37605bd18",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "44206bb8-81e0-4d98-bfbf-90de0a87c26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76fa65a-5edf-4dc5-a8a5-97495f6954cd",
        "cursor": {
          "ref": "47b7e121-70dc-4ad1-b645-f9d442e97435",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9bccdde0-d986-4c58-8ed0-1d28d96fcfb1"
        },
        "item": {
          "id": "c76fa65a-5edf-4dc5-a8a5-97495f6954cd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "244470e1-64f8-4554-a618-c267f9441d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c197aa74-bd9c-455e-9c89-89700a05f5e2",
        "cursor": {
          "ref": "26f17f24-e168-400f-be9f-ebd4c38ff6de",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2bcbbbd1-ff1e-4f67-be20-6d7903881309"
        },
        "item": {
          "id": "c197aa74-bd9c-455e-9c89-89700a05f5e2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a5cd881c-8c6c-4cd6-8b80-6e1504d9f438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc56e761-6c1f-46d6-91f3-1000c92ff8f9",
        "cursor": {
          "ref": "fedd1210-5b43-4717-883c-a2e1178fbac3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d438e50f-eadb-43a2-88d8-187e963f6681"
        },
        "item": {
          "id": "dc56e761-6c1f-46d6-91f3-1000c92ff8f9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "20a99825-eeaa-4a2b-b40d-60cfbed5b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4dab72-f96e-473f-bc8b-8030dddd5528",
        "cursor": {
          "ref": "b19d586a-becc-4481-bf82-4cca290ce193",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3c89f8df-d76b-4c4e-819f-d3d577928396"
        },
        "item": {
          "id": "cd4dab72-f96e-473f-bc8b-8030dddd5528",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "81b73def-4364-456d-bb4f-322daae00b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f42a86-8872-476e-97f0-1d660c2d570b",
        "cursor": {
          "ref": "85cb78da-6596-4f23-a79f-951770ba508e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e282ef66-74d6-43d3-a2e3-d5d1a5854c66"
        },
        "item": {
          "id": "81f42a86-8872-476e-97f0-1d660c2d570b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "be42370c-11b6-40e1-8d8e-d3acc8b470de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399baeea-d03d-4eb1-ba7d-81a21e8e57dc",
        "cursor": {
          "ref": "2006279e-f3ad-4037-846b-6311f30d4018",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8e22c41d-871d-4fe0-bfc2-1011c13845ab"
        },
        "item": {
          "id": "399baeea-d03d-4eb1-ba7d-81a21e8e57dc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9805483a-0938-49e9-9d3b-0601a2d3764c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a4d98c-8f3b-4c97-8f79-52a5f36c369d",
        "cursor": {
          "ref": "e3633ef8-7adc-41e2-be13-09ce6222c565",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b091949b-0e14-47a5-985a-e6b51615782c"
        },
        "item": {
          "id": "46a4d98c-8f3b-4c97-8f79-52a5f36c369d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "844511a9-2481-49b1-9093-6017db9d6f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6870e788-12e0-48a0-b314-e8296eace857",
        "cursor": {
          "ref": "e7d763ce-9c2a-43c8-a783-e1d893a17185",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "12785baf-855b-4f4d-8fdf-ecfc3975058a"
        },
        "item": {
          "id": "6870e788-12e0-48a0-b314-e8296eace857",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b64ea192-473c-435d-8df1-620b824ba916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1627bea8-4a3f-41bf-8172-1d4de3560183",
        "cursor": {
          "ref": "46c032d0-233c-4bf0-b6fc-ac8eddc38953",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "4e599724-27f5-480e-bf4e-8c8abb746388"
        },
        "item": {
          "id": "1627bea8-4a3f-41bf-8172-1d4de3560183",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0046a13d-ff64-4245-9e33-895da64e4f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d2c327-22e6-4cb8-8ad3-b974ded237e1",
        "cursor": {
          "ref": "15d978a5-817f-4aad-a18a-41fae0feb33e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "544510e2-7b69-4c4e-946c-bee26374a3a9"
        },
        "item": {
          "id": "a0d2c327-22e6-4cb8-8ad3-b974ded237e1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c50163e2-c7db-4877-acda-86d8cf681cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27ca79d-ce73-431e-abbc-5673fa296c19",
        "cursor": {
          "ref": "b21ace99-032e-4d82-bc3e-8dd2f6f6fc53",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "370aaa61-b0b3-4c4b-a858-5b176ab3ec6e"
        },
        "item": {
          "id": "c27ca79d-ce73-431e-abbc-5673fa296c19",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf786669-b90a-425d-b689-9551a99ddaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe08e32-ee66-457c-ab04-35ba8dd5a823",
        "cursor": {
          "ref": "06f18ebf-0d99-4b2a-ac95-fa56c6a37295",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "dc7c0fe8-cbd7-4d34-bb5b-605dd6b52f52"
        },
        "item": {
          "id": "bbe08e32-ee66-457c-ab04-35ba8dd5a823",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ba79fa39-b637-499b-8a3f-da8753805eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6e4866-93eb-4812-ad0d-43b260a15091",
        "cursor": {
          "ref": "304fc8a3-89f3-461f-a9b5-116a6ffe804b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "676dcbb4-79f8-45dd-b871-9d4f4e8c669e"
        },
        "item": {
          "id": "cf6e4866-93eb-4812-ad0d-43b260a15091",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "99156777-2ee6-47cf-9140-421ca2a9f571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16c9729-0eff-42eb-a036-181289ed6165",
        "cursor": {
          "ref": "116b263e-772d-4b73-a19e-abb616fdda9b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "acb03c1a-3da9-4822-86e5-815112119a67"
        },
        "item": {
          "id": "d16c9729-0eff-42eb-a036-181289ed6165",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c430a88f-41af-42f6-98b5-f086c495a6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafaffd6-4123-4581-b8d0-23b0dada7787",
        "cursor": {
          "ref": "22f3c35f-a9a3-466e-b822-35c436c8ac2b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a47753e6-0ee4-45a1-a3fc-5839c4bc1d34"
        },
        "item": {
          "id": "eafaffd6-4123-4581-b8d0-23b0dada7787",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "09eab245-4824-4695-a76c-251b9fd4f424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c869cf66-1ed3-4e8c-85db-d99dd81de6e5",
        "cursor": {
          "ref": "439a4af0-b5ae-4d0f-8d0e-12f2ea0ea572",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f17a1de0-0584-406c-af2d-3f082a5f100c"
        },
        "item": {
          "id": "c869cf66-1ed3-4e8c-85db-d99dd81de6e5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b4271ec8-d124-4343-8dca-30ff00866713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25882ec-b0a5-4aaf-980e-3e29ec820552",
        "cursor": {
          "ref": "c94bdae0-201b-4f69-b0dc-7448e81cd02e",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24ab8b51-5a9f-4590-aedd-fa4c9f8bfc74"
        },
        "item": {
          "id": "b25882ec-b0a5-4aaf-980e-3e29ec820552",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5071a35c-ddf7-430f-a93b-609be102e616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b89143-e27a-442a-abbf-9f8e79aaef9f",
        "cursor": {
          "ref": "e98d6cf6-a6d3-4d9b-b28d-98f12033d541",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "242837c8-e796-4598-b47b-ef505b708dcc"
        },
        "item": {
          "id": "44b89143-e27a-442a-abbf-9f8e79aaef9f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9520fef1-b7ee-41e8-bac4-a9674a3e7134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41219acd-7698-42c8-ad29-b78eaf983289",
        "cursor": {
          "ref": "a5fa99b5-186f-4bea-94ac-713d4895db3c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e766330b-6d35-406d-9009-3a0574e02008"
        },
        "item": {
          "id": "41219acd-7698-42c8-ad29-b78eaf983289",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "72e2e84a-7c07-483f-804d-026426809272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d83f50-2127-416d-9556-8582b2734e10",
        "cursor": {
          "ref": "3d20ac52-c8f5-4063-97a3-a2cf2b7d4937",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "523d603e-8e6a-4362-92e3-80da0e1b5434"
        },
        "item": {
          "id": "41d83f50-2127-416d-9556-8582b2734e10",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ff06a073-e9a3-4b57-b1cb-c333360d87c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb541786-eb1a-4f1a-b272-ae020a388b0f",
        "cursor": {
          "ref": "0154692e-a06c-4871-b0f9-bc00cb088442",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "afe6ea66-ac44-4e00-96e3-5cdad8a12982"
        },
        "item": {
          "id": "cb541786-eb1a-4f1a-b272-ae020a388b0f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ed44dcc9-3425-46ae-ba10-4e3942dd609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc11409-cd61-4553-97f4-f2303c4db84c",
        "cursor": {
          "ref": "aa4044bf-bd2c-4631-a874-fdc6f8576924",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a56b8682-0dfc-406a-950a-6d1bc4890df4"
        },
        "item": {
          "id": "6cc11409-cd61-4553-97f4-f2303c4db84c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "5ac8092e-4e2a-4a8e-a68f-3cb6c7e676b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b512ffb-b93a-46d2-8e3b-48a9ffdefd6e",
        "cursor": {
          "ref": "34cdd196-0965-4560-b18b-7667743518e6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9ebd807d-86af-452b-b557-91ee18169564"
        },
        "item": {
          "id": "4b512ffb-b93a-46d2-8e3b-48a9ffdefd6e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bfb8f6c9-5dd1-4124-84ab-0ffd8cb67bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa828ab-c7b8-47f7-8418-e55119eb1cf8",
        "cursor": {
          "ref": "c6887cde-2536-4c85-a246-aadf597e39ec",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ac120459-f078-4c34-ae53-8f71d0f2276f"
        },
        "item": {
          "id": "3aa828ab-c7b8-47f7-8418-e55119eb1cf8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c6b3f813-3d9f-4832-8886-5d09512c3c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74dca089-b6fb-4ddf-acc2-dda3692eccd6",
        "cursor": {
          "ref": "2210b744-d969-4cd1-b3da-f128cd7fbf54",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0d13ea29-b37e-4d50-aa38-6b63edd7c055"
        },
        "item": {
          "id": "74dca089-b6fb-4ddf-acc2-dda3692eccd6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c8997b88-4644-43f1-90dc-44416cd486cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb57c314-79a2-41c0-9baa-7a36e89b95e4",
        "cursor": {
          "ref": "265d8f1d-5991-4902-9676-d674a63051e2",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "708d310f-521a-44d1-984f-df8936f6800d"
        },
        "item": {
          "id": "bb57c314-79a2-41c0-9baa-7a36e89b95e4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5d85949c-6f5a-4ea4-bfa5-750edd607ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec7a1c7-236c-49ee-a4af-5d7b5c68da5a",
        "cursor": {
          "ref": "89987199-fad6-4549-a876-1f308e1d8aa6",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3cee6627-c75c-45a9-8a8b-d2ad251303d1"
        },
        "item": {
          "id": "2ec7a1c7-236c-49ee-a4af-5d7b5c68da5a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "feb530c3-2cd2-4b51-b3f4-dcf5d1b129cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c813243b-bc0e-4e03-beb1-39fc86da43e3",
        "cursor": {
          "ref": "c99f7b6a-a088-4b43-9e29-1d6a25a22f73",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "56f4f183-7e22-42d6-acdd-f807b3a06dee"
        },
        "item": {
          "id": "c813243b-bc0e-4e03-beb1-39fc86da43e3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bc0640b5-8938-45e5-a6aa-36b597a34adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed22f3a-6816-48d2-995f-16ff14274e8c",
        "cursor": {
          "ref": "a2602771-b9a9-4335-99c7-a3ff18a05b8a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a2ed55a-fb03-43e1-9c7f-c6e90cd6419e"
        },
        "item": {
          "id": "bed22f3a-6816-48d2-995f-16ff14274e8c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "4d5845ea-ca2f-41e7-b585-315dc5ed77b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd9b415-3bd6-40ed-8c49-1cce52787db4",
        "cursor": {
          "ref": "0f29e20b-258f-4259-897e-4bfef9f275b1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "98dd2a35-fc2a-4ae6-aadf-f8480af229e5"
        },
        "item": {
          "id": "acd9b415-3bd6-40ed-8c49-1cce52787db4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0f29e184-5090-4b1f-9f20-98fb0be06490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff6cdac-4bea-40a9-94ba-2cf38220b913",
        "cursor": {
          "ref": "3903a280-71b8-4b37-a475-66816ff930fa",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d7abd50b-f22a-4f48-ae08-5bee747dd7f8"
        },
        "item": {
          "id": "5ff6cdac-4bea-40a9-94ba-2cf38220b913",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "64aa3fb1-3244-48b8-a1bd-1f784f02f25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b0f488-5331-4091-ab02-92aa4015b285",
        "cursor": {
          "ref": "8aba28c9-09d1-43a1-a604-a62f4b643d40",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a8929c10-04a2-45fc-8f7a-2011d8aee347"
        },
        "item": {
          "id": "c5b0f488-5331-4091-ab02-92aa4015b285",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8f4fa21d-40b5-46cb-8ac3-9a8c4409de6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f164a8-b4d3-41ed-ab80-d4cc05ab9931",
        "cursor": {
          "ref": "4d7f216c-b0eb-439c-9490-dfba627d3a93",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9d491eac-3350-458a-a8e0-ff929fb89a35"
        },
        "item": {
          "id": "a8f164a8-b4d3-41ed-ab80-d4cc05ab9931",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "84f8723b-4e9a-4aaa-b304-96e07f6da9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff3235b-d39b-4282-a4b5-066e768b609a",
        "cursor": {
          "ref": "7372395b-5dd6-4bd6-8d5b-0151ad6fb50c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e3d9c78c-9d01-4dd8-bb83-2e96922fb548"
        },
        "item": {
          "id": "2ff3235b-d39b-4282-a4b5-066e768b609a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c9da3143-4dfb-4a17-83b4-fcc28cd7e012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad19d4c-d2c4-46b9-822a-e63e8e98e857",
        "cursor": {
          "ref": "840e30df-c145-49a3-bdda-3a40dc4e3e08",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "26254146-8c38-4fbc-a4df-dc56b43a9883"
        },
        "item": {
          "id": "fad19d4c-d2c4-46b9-822a-e63e8e98e857",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "37bacb67-b748-482b-9b90-4b13ba59916d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589b3525-4a03-4da1-a251-7238e5c8a4d7",
        "cursor": {
          "ref": "334c7bca-a709-4c9d-bbae-571dd67315cc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1c0a2157-7f8d-425b-b40b-4b890e5a5d42"
        },
        "item": {
          "id": "589b3525-4a03-4da1-a251-7238e5c8a4d7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0fbc0b5-1e6b-47ba-a01d-b04b454f459f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b8c75d-e238-4ad5-8d86-dec1a237634f",
        "cursor": {
          "ref": "0872110b-49f0-442a-bedf-33becb445dee",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "06ac0f81-252b-432e-b23a-11484e344093"
        },
        "item": {
          "id": "d1b8c75d-e238-4ad5-8d86-dec1a237634f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "05c9f65f-a8d2-4b50-b666-29f59f6afa48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca62a79-d304-4529-b6d4-d7d2fe58419f",
        "cursor": {
          "ref": "08822e24-07f9-4ec3-a829-0f4b4e7779fc",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ceb02358-6b9a-4439-af33-37d5a3695a56"
        },
        "item": {
          "id": "eca62a79-d304-4529-b6d4-d7d2fe58419f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "1483d8af-2d42-47dd-9e4a-5ab138954855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c79e427-2443-4b66-9587-646f75cb8f9e",
        "cursor": {
          "ref": "18110014-e7f5-473e-962d-b1756d54a316",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dad3d799-3460-4c8c-a3d2-9ce1b897282f"
        },
        "item": {
          "id": "6c79e427-2443-4b66-9587-646f75cb8f9e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d9d6232e-ed9b-4365-a41b-a3a8e4fac830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142bd52-65fe-4713-a215-fd6cbf28de96",
        "cursor": {
          "ref": "ca32e8df-484a-4abe-a0b2-e51f41191cbb",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e1de61e8-1e14-481e-b397-8ca764159096"
        },
        "item": {
          "id": "a142bd52-65fe-4713-a215-fd6cbf28de96",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f7fb1493-ec63-4209-8beb-e872ab0b4b40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ea0145-b8d6-4dd0-a63e-f71fbacbbcb0",
        "cursor": {
          "ref": "8d5b00d3-62c4-4017-9cf2-865d24bcadae",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d53bd5a8-8fc5-41e1-9351-cc575f99bb03"
        },
        "item": {
          "id": "58ea0145-b8d6-4dd0-a63e-f71fbacbbcb0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2c7f4c2f-c5ea-4931-908a-34a3bbbb7bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0c6785-f5e9-4c41-ab3c-11e069087288",
        "cursor": {
          "ref": "08c69014-1f63-4882-8df1-97d96ac1ae7c",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f8654438-5808-492f-a541-f615dd18c11b"
        },
        "item": {
          "id": "4f0c6785-f5e9-4c41-ab3c-11e069087288",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "53a0b87a-3ba0-4ed1-be15-0296dc98f1cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3e4ac7-de33-47ba-8a56-485fe90906ad",
        "cursor": {
          "ref": "6470e986-2b0c-4962-a474-a76560d63b47",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c95e42ec-27f5-4ac2-a9f2-79acc6d81730"
        },
        "item": {
          "id": "4e3e4ac7-de33-47ba-8a56-485fe90906ad",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6983dbee-3e58-4c29-9ff0-f283556b3a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57be18c-4695-40a3-a38b-b803b2946dfd",
        "cursor": {
          "ref": "f3f7aa48-ae83-4922-b088-8d5bf6b78a46",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aa13ffa6-4321-4153-bb06-5494457fff79"
        },
        "item": {
          "id": "e57be18c-4695-40a3-a38b-b803b2946dfd",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "592fe386-00c5-4649-b261-d6bad4816b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca94014-545c-4f97-9a67-38ac4c36c179",
        "cursor": {
          "ref": "19920c26-3b78-464c-8618-2975ca8939ca",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e7cfce49-a14b-4ede-a135-d04403483296"
        },
        "item": {
          "id": "eca94014-545c-4f97-9a67-38ac4c36c179",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a909e4ca-c818-4688-9d0e-23a85bb3e814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28c9691-1414-464c-bbec-6b527cf8f549",
        "cursor": {
          "ref": "fb7c87b2-f81b-484a-b529-ce55b91e5e61",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9399b165-ef09-4ecc-bfa4-6f6ee52aa952"
        },
        "item": {
          "id": "d28c9691-1414-464c-bbec-6b527cf8f549",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3baec6d7-d631-4bb9-8755-0e7398eac2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdcc758-eacf-448f-89ff-d7f11ad4165d",
        "cursor": {
          "ref": "a1db1936-cd74-44aa-b53d-956f63cae9cf",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d3fa1a77-2928-482f-a383-ba387f0b6745"
        },
        "item": {
          "id": "6cdcc758-eacf-448f-89ff-d7f11ad4165d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "978cc35a-7666-4158-b84e-85db8eb1cd2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138ec1f2-2ac8-4918-b3e0-19b02be4248c",
        "cursor": {
          "ref": "edf17d06-4667-4fc9-9dc0-945c76d4f468",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6681b3cb-8b3d-4998-980a-c848f97877c4"
        },
        "item": {
          "id": "138ec1f2-2ac8-4918-b3e0-19b02be4248c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3ac816b7-0c25-4c07-a94a-e39e61bc014e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65746a31-0eab-4c7c-991a-4c7910330156",
        "cursor": {
          "ref": "d9ad5709-8fcc-4207-af9c-d7db678c79be",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "21100086-93fe-4deb-94d4-4c439b9f7111"
        },
        "item": {
          "id": "65746a31-0eab-4c7c-991a-4c7910330156",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a97f8e2a-1a4b-4aa4-9e64-5b13457f5c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18279241-4b46-476d-a737-4294ba6f0d16",
        "cursor": {
          "ref": "78067fef-6fb7-454e-aee4-a6468ab382f9",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f01b1d23-36f8-4981-a9bf-7397bdca8d32"
        },
        "item": {
          "id": "18279241-4b46-476d-a737-4294ba6f0d16",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8ab221ca-c213-45d2-8767-0d134ee7e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbbc5dc-2798-4cd8-ad2a-caf5d5bb8bc6",
        "cursor": {
          "ref": "df3ae3f6-19b3-4f68-b0fd-9254866f2056",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6319efc7-eac6-4319-9631-f707b851d33c"
        },
        "item": {
          "id": "ffbbc5dc-2798-4cd8-ad2a-caf5d5bb8bc6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ca2c86a6-4765-4925-931b-ea4017e576aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9db6ea-665b-46cc-a672-f613cd48ef7f",
        "cursor": {
          "ref": "81f2f95e-8351-4800-a77e-b28c22b1e2bd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7a20678c-d18a-4c40-a864-77702b78196a"
        },
        "item": {
          "id": "0b9db6ea-665b-46cc-a672-f613cd48ef7f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "56bcfb7a-b2ee-4521-9f7b-41722ab112a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a929639d-6ac4-4943-a1e1-0af3816f5a7e",
        "cursor": {
          "ref": "99dd65bd-6fed-45e7-9638-d149c5a11e64",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2583bade-22cb-489c-a5c3-ac63f80af7ad"
        },
        "item": {
          "id": "a929639d-6ac4-4943-a1e1-0af3816f5a7e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8664313c-f5e4-4c2f-b0a4-b35b35fca871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc22ee83-9ff1-4f04-8722-b5277d560adc",
        "cursor": {
          "ref": "2cccf4f7-cc7a-4b15-8885-f62c3176aefc",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fe3ee55d-5220-4ea3-b392-8604834ebff3"
        },
        "item": {
          "id": "dc22ee83-9ff1-4f04-8722-b5277d560adc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "00a97823-f3e6-47e1-8c8e-b9311171cbcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d82d92-2b47-4ef9-8237-555a27e399c5",
        "cursor": {
          "ref": "b7a19b76-d2e1-4089-8d55-eb2b5dae0137",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2d0a55eb-4ab0-4d7d-bcfe-dc2f695c950f"
        },
        "item": {
          "id": "a7d82d92-2b47-4ef9-8237-555a27e399c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7f480323-d062-4d23-8cbd-31c7182de2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d8701c-7ff3-4b3b-8b4e-f72bb71ef5d4",
        "cursor": {
          "ref": "c006ead6-62e6-4057-903d-594f608d26ff",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "59d19bb7-f891-4048-8027-a50048ffb56e"
        },
        "item": {
          "id": "23d8701c-7ff3-4b3b-8b4e-f72bb71ef5d4",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "543ac97d-4954-4a3c-8627-b595c9ec792a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5890b8b4-67da-4fbd-bf7c-2c9372b56595",
        "cursor": {
          "ref": "00835087-0e8e-4320-92b5-27ad30276e0f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b0d6434e-54f1-494e-b257-fcecb0fae971"
        },
        "item": {
          "id": "5890b8b4-67da-4fbd-bf7c-2c9372b56595",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b321384e-893c-42ec-9a30-647cdca8cccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a26b129-e5c3-41f6-ac1a-0e475f794f6c",
        "cursor": {
          "ref": "319b6f46-c82a-407e-af86-7345d08cfbd1",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a5fd459a-dd0e-4952-9376-4850a84836be"
        },
        "item": {
          "id": "4a26b129-e5c3-41f6-ac1a-0e475f794f6c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8ddb8f17-0d84-4b9f-86ed-4c2dd389fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc197d9-34b9-4ca9-b991-73cd7e988f75",
        "cursor": {
          "ref": "0bca1d12-cff3-46d0-88af-42373460789c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e088f766-6f3b-4b8e-9bee-630e2643f7bc"
        },
        "item": {
          "id": "2fc197d9-34b9-4ca9-b991-73cd7e988f75",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a2a9eddd-34de-49c4-8779-b2268bc4df38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "22377bf9-4d47-4816-9b08-0365392285d6",
        "cursor": {
          "ref": "bdb6cf34-70cd-4fa7-8e6e-e776093ea4e8",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a95199d7-668a-4a31-818a-73f4e1db982a"
        },
        "item": {
          "id": "22377bf9-4d47-4816-9b08-0365392285d6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b736086c-a466-4779-9dcd-b06f996c8e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "56d1d3ea-c9f2-4c63-b931-7193e273e38f",
        "cursor": {
          "ref": "b1237f10-1ead-43e8-8152-d912c8436913",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "64ca7f03-5b30-4ac3-a33b-7b4aa3592dfc"
        },
        "item": {
          "id": "56d1d3ea-c9f2-4c63-b931-7193e273e38f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6f03b7e4-9649-445d-83bd-43b9be81d687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "cdde09e8-ff4e-4533-a755-fe8ecb6f57df",
        "cursor": {
          "ref": "a2f17ed6-2eee-46bf-a515-dbf175a4c848",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75df7915-bd62-4fda-a427-31776e947bad"
        },
        "item": {
          "id": "cdde09e8-ff4e-4533-a755-fe8ecb6f57df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08eac733-7831-4933-894b-667adb2cd1a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdde09e8-ff4e-4533-a755-fe8ecb6f57df",
        "cursor": {
          "ref": "a2f17ed6-2eee-46bf-a515-dbf175a4c848",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75df7915-bd62-4fda-a427-31776e947bad"
        },
        "item": {
          "id": "cdde09e8-ff4e-4533-a755-fe8ecb6f57df",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "08eac733-7831-4933-894b-667adb2cd1a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efce6ee5-8f96-4a4b-bc6e-62b02254ba90",
        "cursor": {
          "ref": "cee1557b-070d-45d8-bb5c-b99c3691ad74",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a2cb7b4f-7692-4345-bc87-9073090848f9"
        },
        "item": {
          "id": "efce6ee5-8f96-4a4b-bc6e-62b02254ba90",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "aa1684d2-ba23-4be3-b60b-e54f9444c0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65b769d-2edb-4fbb-a5ab-7e3eb8710e5b",
        "cursor": {
          "ref": "eb2b1978-dd26-4583-a15a-303c5d71d8fb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "3173fc36-4014-4ae2-bf67-e66b17324f0c"
        },
        "item": {
          "id": "c65b769d-2edb-4fbb-a5ab-7e3eb8710e5b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "683d86ad-3601-4382-b54a-30c2e3708ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}