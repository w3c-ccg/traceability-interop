{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9315728d-1f7a-448e-ac2b-ce2d79895b85",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a3987a12-a58c-4e13-8a36-61c723658ffe",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "549f3b15-3eff-45d2-9da3-be4be55133a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "67f59cca-6590-4b6c-860f-e5ca1ceb5919"
                }
              }
            ]
          },
          {
            "id": "029ed5f4-c964-4ca6-9f48-6d93cc965b13",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e7c542b9-5913-4726-bf3e-c7b61cbd440f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bb9dbd85-ba8e-4906-a33e-89c532116263"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "063af9db-7d10-4859-988d-5d62b33c4f61",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d38cc531-c6e7-4dc3-bbc1-645cfc32c7fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ff3b8a9d-dfa7-4eef-be17-5ba2c27ee25c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "197d98db-0f96-42fb-9687-64028bd4f0b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "021bc52e-ad2e-4297-9f04-c886c1e967f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43686164-2977-4b6b-8bed-b24f5b04596c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dcc29023-6ee8-4719-bc1b-233ce3adbf66"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43ea93d4-bfe0-4e83-9653-efa537acb6c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "425b8ee8-a18a-465e-bf5f-37ead233057d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28029ffd-6767-4b9c-a576-7627547cadc5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b174f79-5f8e-412c-a7fb-5fdf4d36249d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43d6c247-ce05-4c81-b577-c2077ff4770a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d39e7de-2b96-44b1-b383-1f87b9977a43"
            }
          }
        ]
      },
      {
        "id": "e2470fa9-1995-4429-a068-d7af42db6b25",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4ee46a39-d644-438e-80db-857c32c89fac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f1b3c87e-5bcb-464c-9ab4-629b1eab72c0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ac9329b-74e7-4d01-92ef-ddfc01b8bd0c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c8fa76-70b1-46d3-b1df-80838b7e84aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec8531c7-493f-446d-84f5-d256dccd4abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697f7961-5d8b-44c0-adbb-69c4e511548d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56439e0-6df9-4153-97eb-6a7f233695d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "270f744e-e5ed-498a-b123-838a38208e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae08330a-575a-4fc2-8154-60bd68aac5e0",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba6ea23-3125-44d8-a72d-fce83e8fabc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d48c397b-c286-4b58-bdf0-16c08c1c0d7b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e459919f-f48d-499a-8306-c9c03f6aa8d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3aa8125c-769c-46b7-bf3a-0f043b0168d7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9437bbe4-ebd2-4787-8f91-cf0b42c44af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147cbad6-8588-4947-afcc-0ce0d3d61c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83619f93-6ab1-4593-a639-bca279ec6ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef139f96-4b16-441d-b2e8-679e6de9bd1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2c09580f-4559-4f47-80e4-0d5839c42889",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2dcfe20f-a5f9-4ac9-b7ff-80e10a545d64",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf7383af-4182-4910-8245-a4442e827f3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "186360c0-10b9-422b-836f-2f4445770a97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0980bb1f-5782-4d95-bb31-4fca276a3649",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3811251c-ad8d-47cb-baa5-849a5d2a819b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d51df4e4-19f3-4f19-a18e-af190ea84c3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9652857b-0a8c-42ec-a0a2-6d33d1252d52"
            }
          }
        ]
      },
      {
        "id": "3f3cecb4-6c6d-4cfc-b5f2-adcb3fadd503",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "595c76de-3a24-4c47-8080-7e8ec0a67232",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6f3604f-fdb7-4336-af5e-0dafff719373",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "62c2b412-4d33-4564-803b-00e632120f24",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9e4bc0-c67d-4e6e-b710-7f01fb4973bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f55ce28-0e8a-413e-a547-b65762f75758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f862c31f-8348-43c3-af2e-202946dd5c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cdba080-1061-4aad-bc03-fb007a5bfaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f938987-0123-469d-aff0-35440104b8dc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213d7843-8281-484b-85a1-5c3e5bdf6384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb25179f-b9f5-4e51-8906-22ae8182d0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3c182a-bb1e-4c1a-b201-56dc9f0a2cd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c51af6-ea4b-4339-b015-a3208dc9c23a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da7de9d8-24b9-4e10-bd22-8638abf71e83",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a4a4b7-25e5-43b8-80c3-565244dfdb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0084118-5aa3-43dc-8687-23ef3c2c1a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a551beb1-6589-48bf-91af-0ddaa442ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98ef30b5-85fa-4282-b443-f5ebf6107c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098ae14c-8d7c-49b7-a503-0c04f79ab067",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcc0add-e0f6-48bf-b793-9ddf0f6ae2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ec627b-1ff8-4813-8c06-8caf4da57226"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e013bb-7280-4040-9b0c-da2a499012d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "059e0a99-b37b-4e86-8d72-84e9e26198cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf091d28-7cb4-49b8-af02-c288efa1ce38",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "527af056-992a-4595-a4a0-371c56461657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc47e82a-7ac2-4196-9128-60de9845f128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f041a288-2d19-4b57-a2bd-243dbcf0cd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c5c2e13-e58c-4ea0-8d7e-06dcabfd8e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7184120-9d3d-4660-9633-0cc64e227c36",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03ee83c-7625-4c78-b7ff-65029944eea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b58a16-340d-41ef-b524-6f86edd3ff51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8d30b38-b067-4274-988e-55635e92a1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c7eaa6-6a28-4c82-99c9-204304d2e1d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf22a7d-4ed0-4b63-8081-a646aee94aa4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8692932-f626-4441-aed2-2cf0a7a34dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e05985-f446-4193-a1ef-25d36aa76602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fffc393-5d0d-4e8e-a3e6-5905128e47ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3950ac6-8082-4954-8e2a-ee046f0183f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec291989-9e92-44fd-a5eb-ce17eb2d786b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedc0547-f51a-42af-995d-f76d2b226343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9172c4e-dfcc-41b8-be9a-f36aa0b2dae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6d4eca-dd62-4b40-b9fe-7deb31b51c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "208e513f-568c-4543-9cac-d756543f06db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16059438-1da1-4a05-81d8-2777a96a0669",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd73263f-9795-4220-a9cd-ceed72be0a88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36384d87-5ece-433d-ae34-76e11290dab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c5ee21-a8bb-4725-bef0-6d698df32b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7333533a-bc57-4c9e-b393-29e44274b5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2791f227-a4aa-45c7-b3f1-6fdb4d30437a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6022bb-eb19-4565-8b2a-573c81d6d452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0d06b3-1da9-401d-8d61-860798b89fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af319fd-4c9b-4c33-8626-985b072e0bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44361944-fc1a-4290-bebe-8de5874eedf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee0eaa5-0644-4880-a162-18132e38fdd2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7190d713-50cf-446c-b5e3-0af589eb1b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9771290-2f3c-4e99-845c-8d0fe393e08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beaa8f12-928d-48ea-a31b-c913845d2cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dc4c51b-2f12-48a1-9d8e-134ab6cef81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcc47a6-b581-4c7f-8609-416b65e325df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff33468-5285-4b16-8d66-bd5898c405d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c990e9d3-dcb0-4c58-afa4-3bdf2db2a0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5658ea-7325-4c15-a42b-5616f6cf0c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8caa687c-ee78-4fdc-b172-03cef55106f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4662fcd9-7c8e-4082-a1f6-0a830a0c7df8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5892699-0ea4-4518-b485-b9477153d05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fff16c9-bdef-4676-8e57-48248123bb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda914b6-12df-42c2-be4a-411c5f8868d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2559ffea-4923-444b-89a7-01cc962a1c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc582d3-ec34-4055-b67a-197ec86ecdab",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877d6cb0-ada5-4bb4-bd80-61bb00896aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63388bf-4cbe-469d-a082-e21c46f5401f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a688d08f-bc75-4a0d-97e2-c69bd4ebc492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b231ce63-589f-4c6b-9f31-3d4429f84d29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e028af98-6622-4d06-a41b-01ce1f0d365f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcd82c3-924a-4c05-967e-4a1b256b6274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57276df-aeac-4354-a5d5-1448c1f32b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995cedfc-e989-4684-a5c3-86c9dd4871dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "631ff1b6-d7bd-458f-a8f8-50ea60c542ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcddaf7-e2c5-4b40-9a32-5190bd386984",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc637f5-6f41-4593-a2ca-8beede2ef217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5329ef72-3974-4787-bf8f-1d7fd39b989a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1027f6-5814-4c6d-981d-6b66701cecd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "043df77e-dac8-4d37-a31c-e809c74d5cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62d157e-8c0f-4e83-85bc-6d6807984f29",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "110bb9b0-c5f2-43b2-8451-f00a24f2c891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ab1615a-99fe-48c4-b4fc-0852fd206359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bf787d-1ffe-4eed-8a41-ed70dedaf2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fa07c8f-1926-46e1-a4ee-a96565fbd93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75ecfbd-757e-4a4a-81df-776e43dfc626",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa76292e-7614-4ba3-807d-94a3a21d912a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ef9819-c8b6-4c21-a267-106d137c0215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622023ed-1764-4ae8-ac88-c1bf04ef987d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "68e6826a-4387-49ac-9217-b648f6a95dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446f20a8-45e7-49ba-847f-226b2811de8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a260cb-59c5-4888-b454-d8b8cdb2591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38530109-da64-4a0b-839e-2f305d59df5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7466630a-69d1-45e1-9291-786a07d635b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab248f3-f6f7-45f4-a37b-0578f762ba7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "769f3cb0-b208-4194-9262-bc7a9e3a1dd2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeda0e5-e36e-433b-8af3-85a2a9114838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10057388-e96b-41c7-ac05-a8693c2ad40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808cff19-43c1-4d2a-8d92-6fc89aa32bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a4142a2-3e38-43ee-a812-4a6515113239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ada9675-5ad4-41e5-b1b8-a5643c22b90a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407b286a-de49-4fc5-9f84-29661b0e25f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4abf77-b5b5-437e-821d-288b1cc4e969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1c7984-cf1e-485e-81f4-740939f26ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8263cc33-055d-49aa-80ca-61b52906d343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b2c60c-17c5-4aa0-8e89-cba517822134",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ab7d60-1499-4c56-93fe-ac8aad4c3d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a67c42-2185-449f-96fa-ed0786de57df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6ef141-2b53-4a55-8f79-c96347cca25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a266740-2568-42af-ac52-80c531d7daa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07775d45-dd65-43e0-b8e2-224e5cc3bd21",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495a9d13-0830-4a8e-be96-b860f5794a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e971432-fd76-4fc6-848e-f2d07a032f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704d4364-bf14-44d0-b589-f2bf8efed866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b91340f7-d464-46be-8a31-26d9688c85f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38cadbf-c835-437b-858d-5b341f8d4024",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58fc5b0f-ce55-4dff-b0df-b15440260e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5a8f80-ba74-4949-86d5-0ec2f6a6732a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fe405c-0e94-4372-bf64-b8892f38732b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5622b67-2f9e-45a2-841b-d6eaebabacb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7044fc-71d8-490c-9c25-f06fc6a4ac67",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa3c838-6a9c-4cfb-9e37-89e75229a0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d34c8f8-7cb1-4e10-a1fa-f8fdf2f688b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7753a9c7-1333-417b-856f-55f95297fecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "947a4dff-cfa6-417b-97d8-5d741b4e3bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19769d15-a191-4442-abba-63eb802cbda7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8cf90d-09f4-49ea-b598-305fac1c6180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bc5dcd-e1d4-450e-867c-8528c6218906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0546e7d-047c-4344-a729-2b17667b4d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "076510c5-9b2e-4b5a-bc43-b5a7d17c3c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bb607c-d6a1-46dd-a7e7-a2b4ba853e7f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8558df2-bc6c-4e88-9d86-cce402298b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a497b14-519b-436c-9f14-63f178755539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e914726-87ad-4473-8e46-b445c9b02202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4f427f-4693-45f0-9088-1d287d446e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d1cd4-0f0b-4fd1-9b08-8672ac78a8a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a5e118-b412-4075-897e-8fa4c1c7a11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b27b147-8bf5-4dfa-b276-65f8b38c2bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359867d7-40c4-40a9-84fa-28a5e1e7c24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "29c604e0-0d42-4527-a86a-2a826c107b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5789b03-e952-4435-9a5a-4dafdc131edc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49985b8f-889a-4823-a6c0-76432b1165ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1deb6df6-6305-41c7-b0dd-234e09b6641f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c01823-e938-40ba-aa15-6a0ba450c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7d56ff-36fc-4219-9159-1323c7386c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c154ae61-69ab-48f1-8f8c-bd5e1b8e2769",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42306f1b-3422-428d-9bf2-7c5076e9a0cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d742bd-4901-414d-b7de-80e8c127ea7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd789ab8-2fee-40df-a17c-b1fad520a09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "177f9b67-5632-4222-bbcc-792dfd090af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63afaefa-29f7-4e61-9abf-7b92fd9d6f77",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db1db788-8558-40be-b9f5-ebf6a63e871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aeb860-1a4a-4967-8a56-9287729dcf69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb62ce8-6a32-42f2-90d0-6bad276aa41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4137be93-25da-459f-af69-f4b0e02ef87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ec14f6-c88b-48b0-ae20-e3743ec4a358",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d38742-30bd-4f11-bad7-f9a69b49b08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2679f862-093d-4f43-bef5-9f3420792904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b29e527-dce1-4e67-bdf5-79f071c1f134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "221543b6-f00b-4613-a9e0-21ac94782309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f981c5-523e-4e49-a62e-e6f1402296b1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f111c10-1554-49fc-a416-18955dacf7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b307b20-6542-46cf-8be7-6825c55bc227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f52a5500-4200-421a-a106-b37b77ed6299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1e7e03-bab1-4e4d-8db4-90ed3f66c93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa91780-a6df-4f23-8d2e-0e14879465dc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfdb6e9-3c10-4f92-8446-e5282c8eea6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c7b640-ca69-4a91-900d-439cda196f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bc7942c-1c24-471c-8ed4-38728ad7212b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2a39922-7dee-4fcb-a873-d5333b2677cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953ea161-e3ed-42be-8afc-149384726df5",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62d5cec-a66b-4c2b-8d3b-390182b758e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78fe65ff-ec0b-483a-ac04-fec60f182a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9292c10d-c57c-4820-94f8-1c74fb3ea3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bf2140dc-a5d2-47f9-a4bb-37507700ca9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0746c23c-0589-4759-9ed0-45d4cfd3d705",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b05b98-beb8-48c5-b95f-75b74a99bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "775c012f-82b0-4315-a42f-b218811fffed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8d0943-5ee9-4bb2-b84f-bac26d7070de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbfc2176-4696-4458-948c-672459223cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602f1de4-6670-4377-96b9-9c3d88444ed3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49faf3c-456c-42a6-a509-d7a20d640fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15acfa62-5957-4074-8451-b40ed06aa9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "704c7091-be00-4965-8ce5-6f3da547268a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "28f711bd-b418-4adc-ab8e-97ee92e8d9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09620fcc-d1b8-442b-8745-89ddf9cdf015",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a627832-5644-4dd5-b4e7-9660dfabc9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab5a6bb-517d-4d48-b0b1-a6f914e0c124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd41086-d90f-4c5a-9972-ad8fddec8640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32252023-d6cd-446a-bfef-d7808df5ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39ab6f8-03b6-4b88-9bc3-b4e71fdaf522",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01f44a1-72d0-4b0f-b458-f4e76fe02e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4338b25-abdb-4bef-8170-6bcf5cfac41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6907d946-bd54-4c60-af7c-aa404c6e4f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2aef103c-ba96-4acc-8bcc-3c002755d9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bb6744-5c79-4944-b7bc-dd465b15198b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc48377-49d3-45fb-a269-d04d3f0b7ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec30a6b-ab95-48a7-b91d-19225b35a4c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfd8030-1d5a-4493-adec-56ba9ab4cc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9303ca95-da86-4dca-9134-c1fa0b35a889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031a978f-7422-4086-be83-227823afccae",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7540b3-e3a3-4586-bb4c-ed8300d1a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cd9c4d-fb85-4e77-abde-4610d7e4aa41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966bd613-5985-471c-881a-2b15b3417b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5024fce-2abb-4eed-bdff-925342a47c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb07dee-4326-45bf-845a-daf60d64068e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1d72c2-54c7-4607-be6d-c67d7094ba7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31efc399-ce38-4c1f-94d3-df796e29eb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc4e351-e764-4dca-a6f4-c34acc8d1908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5b642fab-d76d-4326-9a15-ab1705ea4a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac6ae94-05c5-4d57-8678-8902b4a167e2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94297545-05b6-4908-bed9-8bdda7998073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae9fdc2-5c77-4faa-a261-b320daf07d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bbb762-01f5-4cad-9b57-476f8bc236c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f9dfad8-ae12-4675-9f14-b4ab54ef3712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2967d63d-0e4c-4184-91bb-405761b9f1e8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67aa8b7a-b3ca-4cd7-b986-7408d3fdb068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88308d43-0f5c-493f-a72c-42f263132344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311bf100-480e-4e79-a2c8-6e0d36f5eb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "36621f07-d3d1-4bdc-a563-51ec3aea47b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6af898b-bcfd-4753-a330-26fd1d315f80",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa05a97d-a8ef-4a13-87f6-e94acdf45810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2de0a08-e589-46d3-930a-7861b89c5b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36bf8f4b-3989-4cde-a336-2513b7753e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7efc9b98-43b0-4f4e-af2d-f0b879f5ae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0250ce5-5fa4-4080-89f9-ecdbe5996f7a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aca46e-af74-4bd4-965a-8b1027804d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6d8508-3e1d-4d9e-9994-c5812c093959"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6af3cbb-01ae-4b66-80ac-6fa5c3889ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1c7c38-90f1-4bff-8bac-3a652ea70dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf83e12-81c1-42ba-87c0-565f1e291749",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb6bdc8-6272-4d04-b3c8-4bf6a5defb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "314a1bba-4dcf-426c-8642-e81bc8935caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4c929f-d675-48f7-9c30-3b9cb080aeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c1a8bcd-df85-485a-b66d-6ce49700d1a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf70154c-3cee-4450-a234-d287a454c033",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a149d31-2b0a-4928-9f2f-711db98d9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88b20e9-cb14-417a-b41e-0f98934bafdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef2476-5a2f-41c6-be8d-c598748dc4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "698695cb-c64a-4084-b92d-3f2a1f74b556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a7cbbd-d5cb-4f75-a54c-e1641e32c558",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35146ee-a033-429b-8714-7b34c65e030b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65df1c91-9621-4c23-be92-64de7e2a32e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806c179a-1455-45af-bcf0-933853f24baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03a6a3e9-0849-46c8-b558-399d12fec097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c97f4c-c2b1-4079-98d1-1e5821dc795a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed549533-98f9-47a4-ab7d-af826d8a3644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740f07c9-0774-48b0-80cf-4454fe082b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0433d0e9-39c7-42de-a30b-7ecf13a6b904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "683972b1-4cdd-40a3-8e6d-2227d14bdfc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74991e3b-8380-459c-be4f-680712e03faa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fe5594-5b61-46f1-84ef-48870ecad748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0fbd7b8-6dd4-4933-b1da-9efbd45fb3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08d194a-50d2-429d-b6c3-bfaa8b3e280e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34308d46-e0a6-4d19-af21-49ceb7dcb29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72160ec-91c0-4a91-91c3-eef2e1dfd52b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c13dab-0809-4e70-9127-1d8c06698478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6ead83-e786-42c7-a427-215886d7d90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70253141-51ce-47c9-843a-1ecc1ab46250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "248d79ef-7aa4-4284-8ca8-30d4b2a93ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7644ae21-02f8-4aed-8e65-208bb494e1d9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fed531e-14e4-48c3-8371-eb25f6d4ba6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ade014-ab79-45ea-9204-5d71444b062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd92f0fd-d4c7-4b35-b6a9-a80b38445f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5deb6fb-ef2d-4aae-8b94-9fbd24124107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3af86b5-e775-465b-8f46-cadb7f6308cb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b18dab-7402-4e3b-8fe9-a7082e69329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57175ed-8435-408e-87b9-f1f91b2dc55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede1ebac-53de-4417-9558-7a42b0bf24e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1db5615-6d0f-4a95-b8d7-b865c39f689f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc876063-4b38-4769-9e50-c6d3d8d4d834",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9eab41-a945-419a-8197-89d12ef038bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813765a4-ed50-4629-b5f9-b5ffd0bdd147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74335146-86af-4a70-9433-da28065a2257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0c909a-3674-43a8-98c6-d657a23fedee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e02ea8-408f-4c99-bb6f-db19b8ac7934",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a84ef9-6e31-4b52-b0f7-3f4dc7eac0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7850dd42-160c-4258-bfb4-5d7cf28e9b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49063096-1d85-4e2e-bf73-973619ce7392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7de5e2-454c-435d-8c33-605383fd9a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f9226c-a480-4633-8686-76aaff93250a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402188f1-e859-4d17-9da5-af4f52a3cd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d640e465-57cc-4411-84cc-167cf0f097ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18b16d3-2a29-44ad-9b9f-39375addba9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c6c7080-e13e-43cd-a15a-c7405d251650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835ff47c-7f8c-434b-a45f-17287d25918e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817239ee-c68f-41e4-9ec2-88d1f0031b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5590d028-40f6-41a7-9aba-b1c22a23da9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416f9932-2eb3-4dd2-aabf-a22b6e949d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e893881-2507-4746-b8b0-5e2cdfc5bd47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80bec70-4f94-404a-8e48-fc555e10b580",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbf9d3a-0828-44ce-9037-88feed30396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd8624a-60c4-4c13-9d22-1f7062f7259f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6125ac55-044b-4f92-b577-70a62cc211bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f61a53-eeeb-4e4b-914f-e8265d15c71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0eae354-c8c2-421b-9ab5-3f2e53f4963d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d849acf-812d-4514-afef-245008d7e580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb4abda-8e92-4a59-a0f4-b00c28a7b45b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d875b09-ceb1-4d14-b17f-ca33249c36be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "919144e2-3fd2-484a-90b5-7b3445024698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98606c-ebf5-4e0f-aaf0-e8b79b726e67",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e0021d-f380-4c73-ac89-463fbb810ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce50272b-8b35-4ccd-bb24-fb618705bd35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1674d7a-03c7-44c8-a4c0-bad26e44eea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ce486d-7349-4bdd-95e6-28c56def2a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba9bd2bb-f40b-43a2-8311-aa2defd89a99",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1876daa3-8ee1-4466-9f35-c114415ae96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf48d020-8fa0-4d07-b693-99fb494d02a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e159d09a-b88b-402a-bedd-33be64dc8385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e867d229-f3b3-4054-b9cd-b9b1cd1e5bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b34306-a39f-4e5d-8047-7b25c3076637",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a42c65-9a56-453d-9782-7fe724f9b198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d46a08-98a2-4374-a066-229ea0a59b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c585156-43db-4c79-954f-314195397300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "61e0c312-8a2a-41ed-8e45-a4678dd711f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86613e7e-01de-48bb-8b08-fec83d371259",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "750c94a6-b375-485e-b093-b64e929f4e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86777d3a-f126-4e5c-8d8b-222ef3cea9dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143e725b-0789-4123-8616-d219527d55ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b4fdc0-1ad8-4a19-be99-4f5969cca888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac7fead-4e86-4263-865d-ddd82ae8b627",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f8c9991-c8d9-4960-8d55-1627be13e9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b646854-d8cd-44ab-874f-bd99ab02479a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0fed36-5024-47e5-824d-f0c8d2416d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34579ca-526c-41c6-b995-0da9689ba37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7977be1-262b-4653-8969-36e13b792a3b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5796fc31-29c5-4330-9982-7ec0a9a02599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe43e037-53d9-4542-95ac-8395c2b1d1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b6f74b-1241-484f-98c9-37ac78758443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cccfffe-c916-49d8-bc13-efd3d4dbe29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11d347-d900-4c04-bea3-8467d89dbe70",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c34537-60b5-4a6c-a831-939e3d7fa9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18a6b61-dbdb-4976-b28f-56fd11bd257c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f57e75-8a55-4c09-b4c1-dc2d8c24ecf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "677260dd-1533-4b02-bdd5-40226882e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0d6f4b-6ef2-4c1b-a3b3-bd0b76c0f11e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31488dcd-2fa2-4aac-81d7-406196efb9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948becfe-4d68-4afa-8123-4878f79ac488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d0e387-91ab-4d39-990c-cd537d4015b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e20e9d32-1cd1-4aad-b5dc-78b2928a5b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f041d6-53b5-455d-9c37-8a8d09832ccc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c709d97-1e3b-4dc9-93df-f479a67c9a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577cf097-59a8-4548-a5ca-445f216c7a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc03160d-accc-4b2d-a78a-4e480fdee017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08d704df-ae91-46c1-8cf9-f03379ec8ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1a82b-5347-4400-a3e3-d2e78dc5938e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1f7c84-d289-4892-a5a7-8dbbc369d667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5f76be-993c-4bd4-82ed-08f8126b6a61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146e0d58-c0d8-43bc-a1b6-1ed8fbda0b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa863b8-e78c-48ec-884e-a40f0739d4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78847631-8e44-45c5-b89e-d89094ba9196",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ccd127-1976-4772-bd82-9efe0a3582a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa7dd40-a082-41a9-9933-e0734dedbb03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e5d281-c84c-4839-8c25-661c301bd4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4502f6f5-9e9b-4a02-9443-05c94ad12bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e3570e-cb5d-47c0-afd6-6a7bfaa89810",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf9a462-5ec2-4de7-986f-632afd3ce80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ee1e19-2268-4c84-abe9-9fbab8cce481"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dcc562e-c57c-4e92-b4cd-33a2d2ade11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fe09cb6-e29d-4c01-a7c1-aef657e85196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ff5dbe-f943-41a2-9c69-69b38a862181",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3a45a7-4593-4434-b397-9e2698236a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d028cc0c-8abf-40e0-9f8f-4b1537e32dcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2aec448-bf10-4741-ab4e-6cc37e32a128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8da00401-3697-49be-b912-6184517093ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e73fc8dc-3668-43ff-830c-00a5854aeea8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da352d7e-c096-4d33-9f6a-0fa170f10d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c3ba84-dfae-43e3-a65c-dcb9ff8a7c74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3873e781-db96-4bfe-8f54-16c0f14e2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "37e140a3-0091-4b1c-ae80-db4fdb82fd13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e278dd-916e-4f30-b2e9-616fd9ec2426",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fec714-ab47-4e69-853f-e2ad4a53bf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d48513-3ede-441a-83cf-d97b8e0b9316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea43d5d3-8952-4919-9eb3-14fa86d1052e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "247e5925-2f6d-426d-8f98-5ea294422572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3c528b-7e4d-41da-a53d-cb9af1830cca",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da40057d-0a1a-4f9d-a9f2-dac3109d489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3396e1fd-ca17-41c2-ac45-45be12b120b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4227132-11c0-4d22-a05e-c41cd19c4941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e05db9-b0d9-4c1e-98e1-c03a1a4d0208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5708cc-4bfe-44c0-9878-988052b2b31e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f112e5b5-467d-49fa-90a5-aaebfbdae1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8171fab-d406-4652-b336-3aee8015c45f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac0ddeb-5a1c-412c-bf8b-388b34259642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "461039cf-d762-4433-861a-42d86eae9828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11aee042-5730-422e-b669-53c9fab3e5f0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45eadd5-fef4-4014-96bd-246563318f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5cfa06-906a-4f72-8ca0-16f7b57935d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4bc1be-8035-4efb-96d2-9a1c9bbed136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d5c755d-e628-4aea-83ea-9cb328c7d97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52af67a-773b-4edd-9452-836047b20010",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb3daeb-07f6-464a-abd0-09f671de8942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cb8889-a7b2-4c03-b330-3f54865a6639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1125a8-87a4-48e7-8609-a26d5a47b1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89aa88a8-19fe-42bc-8f46-ac3e1dc81428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43dc4f17-5fc1-47ef-8e90-8305a45f63a9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3239ec0c-65ec-439a-922b-2f143b08059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d73245c-6d7b-49dc-bd3d-829997c3fb5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2e72c-4d67-49d2-b14c-c31fbfb23a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9671261f-e766-4ab7-bf59-b681c4b98541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d1b0a7-c455-4af0-9b2d-4c125587174b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd480c7a-64a0-423a-9269-5fd17520dfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3206b314-01eb-48a3-8831-47095103d3f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949713d3-a7cd-421e-9467-dfc093536aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e848984-a9fe-48bd-a204-511327d9c302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2699091c-6416-4308-9583-ec98899ad314",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77131c10-1f0e-4c20-b5c6-5e22f67c7e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fc0669-0a79-42a0-b8d9-5ca669ac7c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed244464-211a-43be-a1c2-af67dfe53991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "342e5223-aad1-42b5-b654-2763a906d827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b1cd9e-9e33-4b0e-a2c8-49a5db678667",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befe96d9-6d74-4bc0-94d1-9da2b54172bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "930c5431-6a62-49b3-b14c-4c3e20a740f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37433b2-b14a-4afc-b313-d9abcf37ce42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df17dd78-e10a-46b1-9546-a402112e432d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7844f13c-1060-4d1c-a1d0-ec00d8600521",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04b2f61-d031-4e06-9d1c-0db31eefb4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f43881-5d27-4987-b604-8addb926cf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d5916b-e547-4430-9881-f1c4ca97328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da85937-c3f7-47be-b5b5-91a5a37eb590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775903fd-8135-425d-9f7a-6e615682c7ca",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe841d2c-d348-4e0c-874e-9d907f1385cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80cd69a6-0d70-44a0-b35f-5e2e96a3c870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9463db0-ccf8-4635-b9fc-1455445196bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d4355383-5535-4e15-af89-df895ecf0be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b3d63f-f483-41c4-9fd8-2b47c2de073a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed346a45-1101-4539-a70a-582d3dc21831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c6a9af-3d67-43a7-9481-a1cd15e62494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4a2bc2-d514-49d0-b5ae-390a7cfee6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0992490-aa0b-4538-b2be-ef959e840006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207eed0d-f011-45ce-a480-7590401288ec",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104bd03b-2f54-4c9e-91c9-1b01aa5e7db8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189dfaf8-97cd-4cb9-b4fe-93f0205ebf6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86263ad9-ba6c-492f-ba0d-6b3703ea5ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d21318e-ec21-4003-b6b7-f5cc16a982bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5e19ce5-088d-4f41-aada-f4fae42e7b70",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b54c406-07dd-4f9e-9db0-12ae575b7f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa62076f-3959-4069-bb10-2800512c97c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6ea208-de02-4837-a06c-56f2b90d6a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f323d9cc-b08c-4a28-ab34-cbf7f750722f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a0d80b-7445-46fc-bae3-9c09f2fd9ebf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c879ee-b7f4-4ec2-880a-8f7eecce0f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa93e3d8-c013-4a12-85a7-4884ff5e022a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c23f638-d628-4b6c-89b6-7aa9fef4b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70781314-deea-462f-a870-855ca0a96ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c5726-06dd-4bdd-9927-c410bf846d9b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea19968-d6c1-47e2-82f9-975bc23d7ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86ea4e-a521-4f42-8a91-8bb324755412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe34b49b-a253-4c43-a5cc-082b77c66955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3552d88e-a133-4ed2-b379-0f909c24b339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24655cf-0457-474a-968d-1dcd5fbf801f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38509fc1-6704-4fc8-87b1-9798e4ac68ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa745f2-15b2-4d64-92ad-497544c4cae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b710d3-7bdf-4296-bc8f-f1773b960e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "21411a95-fa04-43aa-8719-cce654230622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3dd2bf8-1632-4ed9-9461-ec716e9e9fed",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97dcebc-2819-4e2f-a186-afe0aa2f9fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ce67c0a-7f2e-4aed-831d-e01ae29b0fe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b38fb0-75fa-4782-a445-75b48fbfbd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "be22b681-7b1d-4379-a0bc-97702f407d78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9e93b2d1-fcc3-4dfa-b6e5-802464b0c6bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2c714e8-8638-4003-aeb6-50bca3c637f0",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafbfe4b-772d-455d-b06b-8d9f16728b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3573bb9a-72cb-42d0-8dd8-2fd3a3eada12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f07152a-c25a-4bd9-9b93-5bfc5994e095",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5641629f-9798-4078-9c13-fd75a6427b57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b94e635-a290-42bb-ac1f-c01128a2e719",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9ad5283-9e49-4f86-abb4-94fedc268452"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34cd169c-f72b-4794-976c-d9a51638e44d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f183c23-cd60-4ea9-a098-ed5fa4ada538"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cb9064db-4e11-4d0c-835e-bc65834a5aaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad58c446-f353-4a5e-97d6-ec10e46399b1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fd767001-9fc5-4401-99af-3364ef870cd0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0fce9ce0-995a-42bf-9681-5c75783640fa"
                }
              }
            ]
          },
          {
            "id": "7c3abae8-38c3-44fa-815f-392e9bc26ccf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "21dcf7e4-8e9f-4112-aae5-d5e8010ee0ad",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4d579a-491f-4485-a0c4-775a9b5b15a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "46142e11-2f31-4ecc-b3d1-3f30b0de8def"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f94b0093-1fad-4b64-bbde-42d537b87b17",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ff780ab9-1463-485a-b7ba-9bb23f65300d"
                    }
                  }
                ]
              },
              {
                "id": "ee2ef92e-8fd4-444d-8d17-3d340128e001",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8fc9c17-75a0-4fce-b738-e524df06b9da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78bdc7ea-deb8-4e95-a4f1-cbdbd13e09d1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37e7343b-aff6-4760-b93b-b01cb9894778",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3194d584-6e39-45ad-85bb-b898f5f22801"
                    }
                  }
                ]
              },
              {
                "id": "82a195c6-188f-49f2-9b7a-da35d43027fb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed1722f5-975d-4e9b-9a03-39e1afe4f2c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e17baf3-405c-4a2a-8eea-ddb4803f2e05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d665dce9-16ee-40c7-942e-7e5522390378",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b59dbf6-596f-4791-a60e-597b6b80e725"
                    }
                  }
                ]
              },
              {
                "id": "0c86783b-7c79-4f40-b0f0-7811ba1b22d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0085ecdc-1ab4-4586-b01c-1ba6786fb7c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98b52b0c-bee9-41d4-9426-efd6de915eff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b393985-eab5-459a-a329-4b8fd2a3c02e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "56399860-b498-4439-a51f-fc6e52814414"
                    }
                  }
                ]
              },
              {
                "id": "4e34dc70-d2e0-4eea-96e6-0bec97a250ef",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abe638c7-500f-498d-8262-01e326526acf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3616108-01eb-4dbb-b7d4-af87becc59d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e1b067c-fd89-45ee-b229-d2c02d13ff11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7c838383-323e-471a-ac26-1cd0878b6829"
                    }
                  }
                ]
              },
              {
                "id": "0c34ebe3-88a8-4d10-8fdc-619d784cff5b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b2a6c1e-ab56-4e0a-83bb-67546550efdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e2fe58a-6478-4647-8b4a-dbd293cdf8f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "256a35c9-4af3-4951-a270-02bd9846c045",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d2181871-ff7d-4405-8d8f-e8cacec728f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a01f05e-ba14-4d31-9a54-3509fefb97a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "742b2ce0-109c-4d4c-949f-02e320282d15"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0931eda6-fbd8-4f9d-9228-e1ea6b503581",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d23348c2-1fa2-4c8c-a92f-95f2b4ffb1aa"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1fbe5b1-c0a9-46b1-9e39-a338472199c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "62895e9d-cf29-4870-9bc7-f1baa0d5ab3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "198d1be9-b3a6-40c8-84f6-5f833ce2d019",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "15aa83ef-aaa3-438a-82eb-32c82993acf9"
            }
          }
        ]
      },
      {
        "id": "a3f3071d-6a65-4310-b3c4-c707a8bf5987",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3f37ce5c-0ed3-4702-9c18-af74aff15e88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f44b4667-e525-4759-9e33-41960288831e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "00b8acd6-a2bc-444d-abc3-1b39c90a72db",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc6392d-6219-45e7-8703-5d289ecc478b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa80e7e-6c89-459e-8316-d1c022f4bfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051aba72-7224-46a0-957a-00a74a1e34cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "090393b3-a60e-41e1-b728-67034a272fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf682b4d-e857-4f8a-a112-efa89ae10f76",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b45ea9-db5b-4e17-9a58-3917083ac5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386b0997-95be-413f-b190-4ad33f977bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99295183-67de-4dd2-8000-590c66ac975f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7e05aa-ac55-4068-b311-c7f0b27603ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3c428e-24ca-4fc1-a3af-04c50b2eab32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4385fd81-87bc-4248-b819-ef5207588f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63d9b49-be63-49ab-bc7d-83ee8087424e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc91f09-5676-4319-ab20-4fd2cf045245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b7cdd0-ac86-42eb-ab98-2cda43030218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f86299-5e30-47bf-972c-c6a2ac48cf06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a32f1b-39cd-4256-9ef8-6cf4cd49caa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522e83ba-ba2d-49e3-b955-728a6ae948f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981d2e51-10f1-4fcd-bb17-6c2c5046b545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb517de-4744-42be-b5a6-6d45be3ec7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc4ac79-92b0-4a88-914e-30a522e80a12",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41f7cd0-c2af-4356-889f-1508f97fe317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333b1566-c124-4441-93fc-bc2c05e0defa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76c3b91-1173-4a4a-be72-a1411e7f50f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26d7e3f3-3995-4e8d-9cfa-b4414b4ca888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d276f3-f80a-4937-9360-ee06a713c646",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "563a1db1-c752-4b46-a7a4-e7d5d2c1230f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdb65f5-e73b-45b0-9881-08b205315ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48f9566-ef33-456c-9778-a21e2d80e1d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "97ad7116-ace9-4b38-8b9f-e20fba20905b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a616e58-3150-4949-b25d-e52aefeecd88",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c829d59b-f4d2-4b3d-b373-75d536310c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39144da8-70ff-4a10-97b1-2a8330ec30b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9fcc62a-d4ab-4880-8e70-5c9cb08158f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "127590a1-d22e-41d8-b533-1ff9f90d33d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b8dae4-8519-4d8a-bffc-6d6dba250c8f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd563fa-746e-4e0a-8869-00416f5bbe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d6d5a1-2d42-438a-af9f-f0859950fa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37fa305b-7632-4bb4-a787-4b5ac18d26b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "627c1c61-16eb-477f-9d1b-f0983de67eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2c4454-c2bd-4762-8a9c-7e3d358308e6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf944b1b-07b1-45de-b9f3-69f653610750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fda65c-1377-43df-a32c-a2de90a4598b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2833bfd5-41fc-4fc1-b4f8-3748b24a4070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30ff7b4a-5db6-4104-91ed-af9437137d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4eae76-ee22-4e5d-9e47-7f8d6505da2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff55ec64-e09d-4f04-8b34-a5865fa5029f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5e4000-dcab-425a-8cf4-6aad7dbd28e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261ba805-8459-468c-979f-c1aa0e4f27ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "115a6c54-a729-45f5-a6a4-c11be01d3bc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71217eca-df60-48eb-917d-f65906fda6ed",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faf28a6-40b0-41c5-b360-f38e1f70b1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1a46c6-6709-4dcf-a694-afc3b0762882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3896139b-82f0-41e8-988f-4e4b9d7195af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "574c200b-21db-4ff3-a260-07a63792d775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aacf93c-31ec-43cc-8959-ecb31ed3c891",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6c8f50-4136-4b55-85d8-05b41741f2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4518021a-3e93-46e1-9aa7-950a26c7c150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966378fe-a667-4bd1-b2b6-81a4be4abe0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f491271-82a1-40c9-a490-6653082ff5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d3028-f4df-4d5d-82c5-4abc63ec0f65",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfe385e-f2ea-4545-ae17-6f246a442599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86fab9a-b112-4062-abd6-030e56c8ebe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccafca13-36cb-4c1e-a9b5-b479c7a63dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "88762fd9-6641-4f09-bacc-11c7d1549ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0664eb4a-b539-4eee-8046-e9c29137ced9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb73e0c0-ff49-424d-9cb0-2999e69580d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69481b89-2da1-4578-8a3e-5ba0782c7c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e32e57-9644-4444-88dc-bdf62f31eb0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "75f61583-6a02-4999-914f-140c52364a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d980a69f-665e-4dfa-8984-0202b4185f19",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c55407-4b6c-4a91-923c-31d3efb4b1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf29be-7a8c-4a5d-a106-e5205cb9db18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a423dd-aac4-4c7c-95a4-f0cd63c94529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9ac9cb3-e1c3-4e5c-8a99-382d22e8b408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e1ed86-2de3-42fa-bd8e-4d2169eb7011",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bf8bb4a-ad98-480f-8885-d0d5edbc41e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd073f24-070e-4215-8af7-998bcb75f069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588046b-556d-494b-8293-dff5395ce982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "522fa597-ed95-49cc-b66a-047df23149c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff9c559-f5f6-4e96-a68c-f8994bd78efa",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e072f60e-bdf4-451b-831c-55c31882b377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c7c4db-f8d7-4adf-9d59-8f108a925f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eab23c-eed1-4272-acd7-31e50d79708e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba1d67a-1e12-4cd3-9e94-69c52fb6a1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767e5129-b083-4007-8ced-79336c27e214",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c78656b-6148-4b5d-ab2d-fc48e7d3a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d3e354-7c70-4dd0-a7a3-1fd35f1e5f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c36e40-5f6e-4095-b08e-b5bdeb274006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "486da955-ff08-47bf-8f4f-6df35454d031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311156d9-83cf-4db0-808b-83cd85eab7e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe32f53-3a6e-4d5f-ad27-d4ad6f98c36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af157cc-202f-4f0e-ad15-df3cc0d25bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f4f974-31ac-43f5-aa76-71f17dd0f8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fac560-a175-4a74-97cf-895c7d229db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d53b9c-227e-43c6-a47b-ab20333f8c23",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453ff65c-ece8-4fa6-a2f3-9a399693f4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8873d0db-dc30-4a65-832f-808f7b3a0136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ced8a3-f29f-445f-8d0a-3f1cdad878ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c6a6bd-0460-4860-8b3b-b1fdc5794b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4316abe-3319-4087-a45a-9ef4763b295f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cf798b-dab6-4c92-8126-08dfec06b33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cf6854-a630-4d40-b8d2-d85409fc64d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "664ae9fb-3186-4de5-b3b5-c5bb878f5210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafd7172-4004-4810-86de-6daad26a5caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebfc6d4-b737-43e0-9960-eddfbec2bd60",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b35272a-475a-4d88-b176-5a98d4e28ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7ad0f4-1799-4175-b90d-3bd8222a4860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c0798a-c518-4974-846c-df3c0cb68378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "840c10fb-8e1d-4abb-8250-16100b352cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f3144b-0cbb-4b0e-b7ae-5c96fd1c2a3d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eba5e3-41d2-4d1a-95bb-bc323116a0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14e0aae-4c42-4da9-8961-16717c952222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4fbc2e-ebd4-4e36-a642-89c1b00631f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f10d0e6c-4c1e-4e48-abd6-ee6e4d42947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039ee7d8-bd27-4027-9955-4c8d4d24adcb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdd5c87-9ef7-4006-9f3a-dba083136668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2df640-bafb-430e-9c99-bf67c4e09b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f20a08e3-dc78-45d5-b640-e315fe374d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a777bdcb-4ac8-4b7d-b2b6-241852a74a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575b6052-f6d9-48a5-9e49-127320e072d8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17c44d27-85f6-4b58-92df-595e52ed760b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2e135f-c5b0-4974-8a51-775cb6822f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d73616-6002-4552-bf53-d841f9826e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176e6d21-fefa-4c15-827a-a6e8f3fb3f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d889ea-32b5-466f-8ac1-f24c3824fea1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fd004a-79b9-417a-a93d-af6667964804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f701c64-9d3f-46c3-9a14-833ed7e19035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c28ac626-a5c2-4139-8282-74773020843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc16099b-f20d-43fa-bc76-f85dee4d55e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81176ff0-552d-4205-910e-211b68f4e957",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155d088e-6d0d-4c50-9a49-9c398baffb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e873288d-a507-422c-9b57-9f56568161f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889889fb-4338-4bb8-ae8d-4e801513309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b83cf699-0d29-42fe-bb39-7420653dca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e60935d-1925-4f04-a17d-faa97cc96fa3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "579a6f91-9f05-4a6e-b71a-5cfde1302eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d303028-c2be-4944-80c9-ba68d0e09b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d743e47f-aca6-4c1e-9460-130fe205234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9faea0f1-1533-47e2-89d2-57c36142b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ffe637-6a45-4ed9-b13e-03234e0122ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5501266-8590-4664-9ed6-b43f36d1345f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193956c4-0982-4f7c-b3c4-92269237f8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd85316-1a9a-45ca-bb0c-a52928fdd7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffc9f2e2-3ea2-4602-9b66-8db472cdbc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f202824f-a762-4e96-9762-1422281775f6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d50bb17-59df-4b16-bc8b-22274e5088d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9488d3-402f-4a5e-bba1-197f8b15d67f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990d8e94-ebe2-4fff-b557-5d44bb9c2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dfd5d4-4166-4f03-a351-5749d10eb745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2356715-6152-4130-8ca3-34710507fefa",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d171007-4fc9-4615-a003-21dce2245352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7975fc-0e04-4b26-8e50-115761280b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cbe819-4529-4ab7-ba7c-68f001721e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a9f4a3-1f55-4820-8f4d-2d03a74e50cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e394ca0-c4de-4924-ba6d-d1017bfd59eb",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd7ce5-49d9-46c7-9ee0-0369c338b07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1802495c-ed90-475b-8e5f-599a8c72fd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114c9323-c16f-40f3-8764-ad8e99cf578f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b72b5ecf-6ac1-42fd-b7a3-d063b12bdf03"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2f5cfde2-acc9-430e-a24b-325b9097ecaf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7929408a-3fcb-424f-88a8-c3eb1d49fbe2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e190e13-d5db-4e43-9428-15589db291a7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "262f892c-2f1d-463b-9cbf-0ffab58581ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99d70e4-a56a-40f1-ae73-d01553b751a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93fe4ee6-dda3-4eb1-b6b0-7d6320fc33a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7db348a-fb92-4722-a558-4a40b28018c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "afb6153b-e7cc-41b0-a70d-b4e5dc72acfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12670d59-6281-4064-a1db-c6d46cf141f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28dd6522-ffd9-462b-808c-2bd0390257dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11d23db5-08b4-4d31-8ef8-75b947b0fc07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cedddb43-7f2b-45d9-84d5-e5b5874debcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "056c185a-8615-4f35-9c0f-189c9806ec1a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e83cf7b8-3245-4201-b6e8-32ae3137f211"
            }
          }
        ]
      },
      {
        "id": "6b88f4c1-4751-4aab-a309-614927e58335",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ef9faf99-4d58-478d-8120-035e38d72f66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ad1fc41-5c82-4738-8537-98dd79464da0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ffb52d5-6f95-47bd-a093-e5bca44cdac7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48854c23-a281-4352-9d77-f1f5bdb0d335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "030fbb39-6d19-443f-87c4-635716b48bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c683ead-7416-4cbf-9a8f-c5da8ab93d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8116fd6d-87c4-45d3-93b5-9fb07ce4410a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1054e57-9b29-4452-85dd-717dc7080009",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c48a7f-6da1-4f17-8221-cab8931dc2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a12d1e-2e93-4671-818d-1a4b7d3fcd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2148c1-6ac6-4593-9f9a-ff3c5f44deda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "770b5e4d-2b7e-477c-bc2e-fe7e4b7bc8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1234cc34-6f85-4c7e-a9f4-a21ace378152",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471a0817-4f45-4e17-bba6-d4a2914e5b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d84309b-3f77-497a-aff9-c92aa62872bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5465ee-d36b-413a-8064-1f663b3104b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50070927-2c27-47c5-8164-e04eac77d194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bc6c3a-396d-4b77-812d-7623cc241cc5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c20dc6-51e9-4ccf-b665-15c81c8666f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8fbbd8-49e6-4568-8b61-357d5ff884a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d135afda-9ae1-4a60-ba33-232d09e7751c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47843fb-acb9-4f3b-b22c-ca64b27ce4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fea3dfa-8feb-4a24-b136-3d9f1a7f0a10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493d87f8-d873-421b-8882-bacd5863f6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbc5aa6e-2633-47e4-be39-da6a2067df33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdf2628-2fdd-4ce6-b94a-e479098fba7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4437374-be62-48e3-b55f-fc5a6e2a6b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec46ccc-7f08-4f05-ac78-5db5da3d4ff4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b036cd-d1b3-4297-b55d-9be0cf72aa97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04f0a80-12ee-4c7e-a93a-8b309d48349a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01112b0d-8874-4d9f-9bd8-af4ddfa4d112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a544950e-4b61-4e1c-bd17-b2f10e9fa014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3c961bb-cc34-4bbf-9572-a1788b1a5423",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce65674-4d1f-4490-bcff-3f899aa01876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64ecb77-cd59-468b-8ce6-cbb3a10fd473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1368ee1-d5bb-44d8-9f83-6f146d534186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6354b721-c204-44b9-8387-e7e6a4bc1c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ee0c81-d85c-4568-9b0e-3feea6858ecb",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b19254-cdff-40e4-b8eb-8ef2f3fe813c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09c3a6a-161d-40af-a627-da0a218c586a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f507754-d217-44f4-a30b-d6912f81ad86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbf7eb4b-54b1-4d03-a45f-9aaee3fcb200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1167bd8-4b8f-4532-b6a3-4f7043f6e01e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fbaf8-7fad-400f-a9a0-027c1f3c3997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54fbc16c-0c67-467a-a7a1-ae28e6d0f412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c1b509-670d-413b-947d-86009f21f2c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7bdd68b-bffd-4e9d-a3ce-3b908519d948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd7ff8a-ed7c-438d-9bcd-71dfb72ec567",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f4f072-5a95-4deb-a103-83dd37cdbe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fcf51b2-b591-45bc-8bfd-ed30a854b469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97642ad5-1e45-4c0e-9289-bc9f7260b65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcbb65b-635a-4691-a4b9-1881a41896b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8de031-04e4-44e1-889f-e6d14aca8506",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16546388-475d-4054-b69a-1a35e91d110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638b13ec-2943-405e-84ff-c78934d467b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1353ed4e-daea-44c0-89e5-2aeb065e3b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "54b49a2f-9ed3-4116-89ca-03f74c310a37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaf4f2d-511b-4cbf-9b41-352974211e45",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e80cfe6-db1e-48c8-b341-029124df109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b12734-c906-4c18-80e5-88a54d5075cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94008ba2-0360-46ea-b718-3ad81bd1f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aee425eb-93e6-4789-811b-9ceb16f2c579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1328be9-dcb7-4fd0-8512-57486fc028c8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21285cc-9001-4aa0-87ff-d9a91cc40553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637b4ac7-054d-4547-ab8e-c89e2316f9b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a027013d-dc7f-4eb1-b61d-71ab37be35da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "84a3550c-4471-44ef-8412-6e030addfc33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8329d1-9453-40b9-bbf8-16610d7884dc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e9172a8-d955-4999-bbb8-322804d76a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321abe8f-70c4-4963-9f03-b8dea04633f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e052113-7de8-4d57-9832-ac59cb7d9795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7dd000-a938-4aed-acb4-7feb070939ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcfce62-47f8-4a58-a5d5-ba66cbd58f86",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22e0d62-d6ac-4743-88b4-3137b7c4f624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b728855a-40c4-498e-87ce-3dbef3bd7073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2240ee57-a3b8-405b-b98e-05d54d95b708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5999ae00-b181-4dd8-9d53-dd9a61cba189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecbee2a-44ee-4271-b834-acc34dc83355",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db20c65-a5aa-4cdf-839e-1a1523f461bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d21c5f-7cad-4a5e-862b-fd3b94a360a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffd8eb1-0e0e-444c-92d8-b3a6b695a435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2567df-4ad0-464d-b85f-abeb192a7da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f6c519-998c-40ae-9c13-87a38ec1eddb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86b904e-b9ef-44ef-ab7b-e06d21910c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d5a9ad-74d0-4d71-8022-5d3565cc990b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30fb57c-ed5f-441a-9254-7d098fd12d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67fe606-c1f1-4fb3-b38a-98912b36b869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e3f91ed-6c78-457c-9f03-ed8ea18d8dfd",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67527d46-4162-472a-870f-9f8e39f7f26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e77501f-267c-45ac-9b76-e6f9fa5abc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc29622-c838-49c4-95eb-4d2435067de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be716f45-1bd8-47e1-be3c-d5b4417f7c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c6e6c7-f74d-488f-9545-3778a1e78c7a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9c496c-1eea-41c7-a40c-c4e77e175603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a1fc4eb-ba59-4686-b255-5fdccd03961a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db6130df-7110-4052-8ed5-34941cab330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ff590e-982d-4834-a52a-ee2c713c64ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6006dd5-21c4-4bf0-af73-ef7c7e469578",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b6991f-eb02-48d2-9d88-c4e53c5516d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0dab58-c206-441a-9a7f-9f46727e6da6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ab6707-a705-4ae4-94e4-0afe2994fd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "303a26d4-405f-465c-865e-02f650a256c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9eecab6-50fb-4b47-9ad2-9c730d1ea82c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7d85b9-1089-45f5-9f1f-1996f8665061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e7ff8e-618e-467a-959b-8a3133c51de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8f07c3-d5b0-4299-b5ff-4a7ce13940c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "327d3e7f-179d-4482-bc54-00aea2033408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961519f1-0241-4ed0-9909-0a9b1d26dba5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afab49bf-e01c-400d-bc20-77e61401fb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990aca2b-de77-47bb-88c0-77f5a0a00b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680f2b93-8a5b-4040-9709-95b50e18b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41395aa7-a901-48b1-81d1-371a9d2b5238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2fc0db-7f45-4415-9935-8e08cae9effd",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617197cc-59f5-4080-88b0-912b8cd269c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a574d65-d39f-44e6-b137-10d07eb133e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a824563a-e069-455c-8d6c-345b6b35e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e52235c2-4840-4197-a05d-d9919e48a848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e256a7-e771-4c3f-8ba7-d9b2ef356451",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fc601c-4696-451a-af25-f6ddcbb84aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf2ed0d4-8f8f-46f8-803b-7e795c6372ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c047585e-5174-4b64-b752-e1d467875551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebdd1202-7a5e-4c30-9633-58ff1a3736bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e3d8f4-247d-47e5-8216-c941032e0d23",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f2ecc1-3044-41af-a926-7abe279d4acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ab1a97-f2b2-403e-a122-8aa0203290c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a59e7a-ea57-42b6-ae23-0b4a88d3affe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17b6bbd3-f8b1-472f-8f7e-01fbc76110de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e473967f-d3fb-4e85-ab60-98e677425ad0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682528a9-bea8-4c4e-af82-8d13e7fa32f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a84959-d119-43ba-8333-57ce3f06986b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a4da5d-72be-49d0-a10b-3b8c1efa3c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ae7a529-9b82-4b2c-b196-ca3ed6cc35f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ac92f6-049b-4e1e-bc0f-e3546077444e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3fb902-d26e-4578-9b55-c774427a07b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4dbb7d-b4a2-4593-9956-254c15739e79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda6da4-c18a-4d62-980e-bad849b0a804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95dddb64-5cf6-4c7a-9798-6e8ca7982a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d447439a-dc1e-45a0-97c6-d3ba42291dc3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0459e5ac-d8a0-419b-a812-8960de8e9135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e45d0b4-3c60-4539-9544-0e1d30fdda63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c8a40f-cf3c-477b-83f3-7512780ab9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39beb58d-f2f2-4138-b510-70f2c7409b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5753218c-292e-4380-86e2-1ddf8cec30e9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc5b022-ab45-4d97-8f03-252964d844e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc348f0-3a8d-4b38-9f95-d367f1f61aad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413ea367-1eae-4e1c-86ef-0a3c37d22142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bdc169-2c84-484d-acb3-7fb4c520c92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b92285-c227-4693-b7c9-736b7a10ec95",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a84a3-34eb-4f0d-ac34-94fb34e99cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa02dad-92c0-4dbe-99d6-2efff069283d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc76aa6-41c6-4021-863d-8faee9b5381b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22228863-d3d9-4c3b-bdc6-c2a629c30909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebdd0a9-9443-465f-8fb3-effcc1d1a06a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "351ed6bc-161d-4891-9788-951632a847d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80c50af6-9995-4396-b18f-4d509d8e94cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c963d189-2f52-4714-91f9-55109e45030a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99a2bdfb-e144-4a00-b660-0da863629671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d68c335-8972-45b4-8444-e7c3c89eb2fe",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae7c2d1-4abc-4bee-97ed-ca10d5a3d7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e2ac0f-8dfe-43f3-aede-13e736c4bd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae3019c-b030-4a02-a586-7ad282d8c5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "102b84a9-f1b4-4126-baf3-8308731795c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407ba18d-576d-4e59-884e-2b71412a51a3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b48f341-f0a4-4ed6-8d06-788663dec266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9efb429b-643e-47ee-86f9-f9a75e242ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6589cd-7345-4bf3-8c0c-fbfbe791bf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ede6fa-8200-43be-a88b-15358bf5e758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4224f05a-f9ae-493f-91b2-2c5e8a4ae22a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c18643-84f3-491b-9fe4-9ed1cc8bdeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cbfd135-c8b5-45a6-a0a2-e2b320aed0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd243170-e822-4c62-961f-adad80924178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b88a27-ed90-4133-b05c-b4f54f9463ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c6f993-b48c-45e1-95d3-f0f30b8eab6a",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac7469c-ce7c-4f25-ad5d-429fea2fcb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2abe78-aa22-445a-be80-c3854b3e7723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b88aca-e3fb-4358-a8f4-25beacae7e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67cc8dd-6b4a-404a-90b7-357f1588a802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49ea4c0-5991-4681-8acd-0350e6655442",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7418d84-43b9-410b-9bd0-173a4ace34f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6b7bf2-8b48-4b37-b684-1b41460cfece"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4546029d-d426-45a9-95bb-52f7ef72adc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7836cda-b7dd-4c56-a0a4-1141b4ebee10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c074ce99-6f20-4c06-a856-5522dd8d9ff7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1045b384-0252-4906-aef3-fcb3ed730f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463336d2-aa95-482b-b4ab-33ecab7faf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f59d604-6d6e-4508-9505-c0a3a48eb2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39fe5656-badd-4a1e-9633-a155a6dc9af3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b73e298-48ee-48af-9ea3-d097a86db3b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39565f7a-ac10-4430-9095-856ac236b177",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ca764a-6468-480f-9e48-9fdfe6e78c06",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8c23b2b6-dff4-406e-944f-44eb8691ff5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7ffdbf-88d9-44ed-b42e-206b69b78f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7f337665-345c-430d-a1fd-64443b598ca0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6671f690-f783-406c-a1cf-06ac2e55f9e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a2434f8-aa3a-4c0e-a17d-c6cb7bb5ad0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e5890c6-b3e7-4acf-964a-e073e3ba0bd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f8299b6-f40d-4cab-95a7-fc03c71cf76b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83e4e148-5df0-4c49-864b-490dbff575ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ecf20c2d-5420-4ae6-a129-615835e346bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "073e40b3-7ed7-46ae-b09b-3e723cf9ba90",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3bf9f71e-14cb-467c-bc7a-14508cd8d9b1"
            }
          }
        ]
      },
      {
        "id": "083ba8be-defd-4c15-989d-b60d0f7a2c2c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "acb5a751-9010-43f7-93bd-3abab6893c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbf2f55b-40d8-4874-bf52-61d6f3ea84b1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2ee1489-686e-4dd8-a8e6-c36bde5b7222",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07522800-b106-40fc-beab-e87c577756e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63d9b88-f511-477b-b17c-4c04dfa5750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2817d909-525c-4228-b079-d69bce7fd46b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff08d00-b498-42e1-9ac0-2bb363829761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b694bc15-e12c-4bf6-863b-6ff45c1d804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94be0768-b8a5-4d8a-8948-cc430900f4f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f39341-c05d-42f1-bd12-13065d0cf91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e76bdc8-052e-4140-8c25-27751479a062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e2461c-7923-475b-a662-48dc024cabd2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac9c7e0b-4a33-4e43-afec-820c56a10909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d236847-4cb6-4401-bd26-241f01048bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af092a08-1222-415c-96a1-18aa052570a2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5801065-31b0-4e82-90fa-61285a2c42ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fec2163-aefd-42c6-95ce-4259d21a0cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f07a77-4015-4d1f-9a94-252b28375985",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f826211f-416f-4901-9958-b8ea979e87b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71abf8da-fdb9-430a-86fe-6a883ecced12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e4a3965-7da1-4f4e-b175-15349f0f195e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad360d2-1c70-47b7-973d-0ab710ee76fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b520c1a-dcf0-4537-8788-1b33c2ae0b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a67442-2051-4200-b932-6e90c9323d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc3f518-3164-4000-a907-a563bc02da55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9026da-8b20-4ce6-b90f-f28d4e944cd7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812e6232-f6ba-4233-b401-a9385a5ed319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024bd173-4561-4dbe-bdde-89509b8b9f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8946619a-758d-4d7e-a563-4993ba61879a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7516cdd9-f4c2-4b6d-ab59-b0919fa89064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572ff3dc-9538-4433-8fa7-1a9e681b0622",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b97aee-7e38-467d-bc99-394bcaadad58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69d2659-2dc3-41c9-9239-a484a3fabfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "496f09f5-b81b-4e33-aff9-ccf0568f0302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "585f9352-7aba-4929-bf37-765f3a1358d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251dbef8-8d4c-4857-bc0b-4df85072101d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf19e4e-6f2f-468d-8dd6-aa2c6c7d72af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e2789dc-bcbc-4baa-91aa-7208b86042e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4267b5-812c-4772-8d8e-c542483ee7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae5ee6f-0721-45ac-8c8c-7be0177e2bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ce9a58-b022-4021-84db-90c18ccc77da",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63eb52a-3cbb-479b-8b6f-3d33bae0a06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e931a6d1-b833-4bd2-a75c-bdffed4fbd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada47bbc-7ddd-4f05-9a5c-a5c620e1be76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a8d0576-7ccf-4fe5-a330-53fd7da7f34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e328a0-522b-4328-b29f-798c64a51c5e",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afdb953-4a8e-4b3d-a7bd-ad6dd5992fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8ca1b2-a65f-456b-8c0a-15a4b6b7804b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c368b8d-8126-4615-84e8-8fad577fc186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb396db-a6a5-43a0-94ba-ee26afae7d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc7def9-c719-48c1-b651-2770b918168f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757f4687-e92f-4bde-83c4-371e699824ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84052157-c17e-4f00-b728-62e96446f461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfba3012-2bfe-403d-b6d9-d1e61987c056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90907bb5-d682-44f6-b34c-c52e26df5256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22d35cc-099d-42c1-81af-78c60424fa31",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e3b3ea-53e3-4630-915d-3f9c24b65f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ef7dcf-7fc1-4f35-9aa8-03b4c7e57d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4abf574-6f46-48bc-bc96-386aba17120f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4acd0c6-1920-4d19-bedf-c6ea45f20e79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518eaf58-f415-4b57-8068-e421b3799953",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456feba2-cda6-4ff8-bd93-1cfec83d5d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998b0885-5f71-4b50-9f0a-32167fe3faf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13d433f-c1a9-4970-af06-565e306d15aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40b146d-43c9-4ca2-b1ec-d2c3f75df2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b86a80b-e139-41c3-ae59-229a6340803e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b65e20b2-907e-4641-bdb8-eccea6b787b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0527291-ca68-42b5-9f3b-81b28b4b48d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51fdbc9-d68d-487b-a318-6389318b9395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0fffeb2-8eeb-4c40-988d-57e13a0d39fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1817757f-7eb9-4354-9fdc-e340598ee88e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ebf923-2041-4943-ae95-051d0f6ac4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f76aa7-673f-4596-844e-9683b47375f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d8beed-c175-4abd-8200-3ae1d02c8d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67cb6299-a3f0-4c69-9568-ae861f6fc89f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124e3bb4-45d4-4a8f-8572-ffa84dee647b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a796209-799a-492f-b66c-abb190c4ad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fc6a05-59d1-4958-9970-a939c7c4600e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b3952e-e5fd-4f57-b4b1-39b89b6f63f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce8faf86-115c-45e6-80bd-58ccf2b4cee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f5757b-1500-45c9-bf26-7e0d1b3df099",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791a7b00-fd5f-4f91-8414-5f795c104c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25456dd1-5c60-4b71-8d7d-73c243bc7195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf416322-3ea3-4524-aea4-91a3d806d39e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79c03ee-ce98-4822-b748-4ae705978f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c4e6ca-6956-4fb9-9b7e-b6486e545a10",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02479dd-768f-453f-b968-fccd4b5de253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f65e415-3df2-4b1e-b987-ae128aae0780"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f8b5dd-689a-4ac7-8d9b-79b6e1daa197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27311bae-d6c7-41bc-a614-7629b0466f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba8be94-7499-4939-be58-e4455578c98e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fece96-7e82-418c-a617-f8f610d135d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8edfd3b9-23d9-4c36-963c-1bcc1549e93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fee1baf-ce87-4aca-be05-7cda404744b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35ca4f5a-d72f-432b-b0d3-49d364ebeca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7623ca0a-f737-4349-9f03-e7ac7f0d242f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c454ef6-efa4-49d4-89e5-c8dc31740d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6dc1b5-0579-4b34-9ad7-c8ee0a8fd918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c845d6-2d2f-466c-9acd-ca2c97ee9a6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec9862a-6cf3-4c4a-84d1-bec72458faa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd8be0-95c2-4cca-ac07-62f877a4895a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20aecc65-a605-4ad1-9ea1-aa1086b7117c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a8672c-2ba6-4e54-a231-ee5c9da9b6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa03e6eb-0d11-4fef-a1bc-fbf73aaee3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9263370-8424-461b-aed5-302726175c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a9d6e5-9f5d-46b5-a508-a14a2df0d01c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1c220d-f25d-4ac3-bca8-e6a8d4d8c5ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a86cd4d-4e42-488a-9b7b-114648a272f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b685330-27df-4282-9ef7-f53c53c79331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0675d519-9b8f-4c2a-8ac7-575e0b537c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3597e59-69a9-438e-a42b-c7cf4e196591",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdd36b5-c14a-49e2-ada8-398626a1f749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c161170-385f-402c-957c-44ce50b5d793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed54cc7-c64f-46ce-b1f2-101e71aa55d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e85ad63-0ab5-4799-8e1c-fb675ed7583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22195b52-2052-4eac-9e16-af12fb6149bb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2e73d4-4877-4475-8d5a-9b1ba5fe21c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbf4246d-1987-4d29-a1d2-4142bfda0488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bde582e-449d-41dc-90c0-ca95605c7dac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f0c668-0805-409d-8564-073cb371a8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3920614a-fad1-4981-af7e-863bd3eb0a8c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaec8bd8-9fcf-498d-a058-47bd203ca552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61ae3ac3-f2a1-445f-853b-3fed733a1a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c56ced4-241f-4ad0-89e8-d75a22dbfa8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a1f530-39df-4dc6-8ec5-d0d20991645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffcb955-bef2-4092-aaea-9a391b9ec7e7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c81926-8e3a-4ba0-9abc-e9201a0f0e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72783f9f-ecbf-47c9-9635-e8aec3037b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c7e538-cb2b-4577-b8df-c29b0b460f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4008a4c7-6e88-47fb-a6af-b44bb5110150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cebc1ce-dec4-4c1a-90f3-fc9256dbdf6f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6fb584-14bd-49ac-bc80-e4c2dc751ba0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eca2a898-2992-4b4b-87ad-7a5c05276fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3192284a-cd50-4694-915b-c9fe90630cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862ce789-9bf6-45f1-88db-70ba4543d776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1afa53-5233-4a73-9c29-1d8b3e04a3c6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c4e6f4-32f6-426c-8b0c-b7fc71ca90ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db9aa14-3889-4037-a19d-3c282ac7ca28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d9ac08-aa05-40dd-82aa-5f053adab774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd2b3712-6ef2-493e-945d-220b949825d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94484e85-9de9-4c5c-9820-9bce81b42d3b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65824922-b6b9-4ccc-970a-56db860cb55e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a9018fd-1b5d-4394-9028-f08781506ba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ab0d47-f8f6-45d7-bee9-d4211f7e3da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2071d97b-956c-4289-ba7c-d61001c7299e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41d8bab-63bb-448c-aa80-123822a5efc2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6761e18e-55d9-4b88-9fd8-5ed81dafe740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe545e3-d1f0-4fb8-a96f-ab324bf90a7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5334614f-a5f5-420e-8969-fe2d5f00c814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce034d9-dbda-444d-9e83-5b4ee88796f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd10030-dd00-4271-8f04-51d9638ec839",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a6b6b6-be98-48ec-a06a-382a2ce0a2af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4715c00c-4eca-4162-81aa-3e87102a8fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28539edf-cfce-4c35-8cb2-a277273c36dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b130960e-aed6-4588-a3ee-dd9afae232db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31e906c-7abb-4680-9ebc-bd6724350e17",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b3b0b0-81dc-42d4-9bd5-a0549d6b859b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "184fedfc-603b-4d37-8be2-7a98a3927ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074e1801-56c1-4dbe-9179-597f58d15aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd35c360-b2ac-42a3-8d0b-7b0163da2bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c613ba3-2451-49a2-b6a5-205cecf05b40",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b7e7f-656f-4c63-95dc-3294df697049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84b798bd-7884-4cd2-8893-75cd02746d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fd25ca-ecd5-4682-af3d-6d804303534e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a637c316-4773-42fe-b7fe-42e854f56297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268f2e1e-f8e6-43e3-9e52-17ba806f9ca0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35b12c6-3977-4528-9e23-e53d4c0726aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7042839-5f20-404f-aae3-0923e4940738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9e8f9b-e3f9-4c99-bd9e-d4c977bc0819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511360a1-3ab5-41a6-8b60-1322216fbc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c1706-3f82-44bc-a9d1-7c77e0c33c7c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15597722-95b8-4421-b424-db358e922bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71e3cf6-7d90-448b-9f51-9cb8558f8bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d2d51a-d499-4980-a9ee-e183396fc5cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f5e719-2818-4ca4-a33b-ae573457e48c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580be8f3-df94-4b9d-b918-2334e6776732",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddda2fc5-c9b2-47f9-a34c-be3049de6b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09c7f0b-0443-44e7-9a2c-f5bf2e9a6475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8ddb30-6046-4354-9cc5-687b9e43e527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d5c997-ddcc-4a27-829e-754e9c907ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de23bea-44b0-415d-8ed8-0c9d6fc1056f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04aaf948-28a1-449c-8558-9a9e9cbb2e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1411f7-aa85-41b2-9ac3-f844b0578984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2205d60a-8627-424a-b338-31b8e0dc799d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abfce1db-9d33-4cda-99ae-a3c726ff4181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e315d59-0af2-49b2-9262-7c2c53ac8ea5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a6e935-fd7f-4029-84a1-2b50c7410aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03153a08-84bf-4cfa-9824-bcbf6ae12973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c23278-acaa-4be6-8a0c-035a1238156a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabf603c-7623-4d9d-bdcb-0d19e022a0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e79a7b0-5d94-478e-bf66-361e0e73305c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a70dbc-64e6-4c12-add9-05ffec64f892",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af028262-e741-45c1-892a-fc90ce35bca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bcd047-d37c-475b-a45d-e08654fdceec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "636e134b-ee3c-478c-94cd-05cf83ce62f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eedd021-135a-4592-b0a7-62f263a29fef",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dad129-fc71-46df-bf81-cc4a91b078ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b84303-8ef0-4fd5-905a-ca67e04237ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "281edc7c-0859-445f-9b29-fc45f619bb08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bdd1f8-560a-4930-b934-daa15af725c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad2a569b-3bc8-4bf8-8a51-366706b3fbbe",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890e73d0-2fe9-477f-b082-7d46f3f4dcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4be6904-67e9-4ed5-b040-f172e2714d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef902ad-b8dc-45e9-ad8d-c0a1b525035b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27c9af6-2005-4a69-be4c-53be986eacbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d260f1-f508-41b0-bec4-4f0ab4ebdccc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07395ff7-101a-44f5-9a7a-370b76678850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd106ee-4cf8-4e64-953c-c5079e0db9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856e1ad8-d431-4c02-85a1-ee84400aa376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "593324de-2df2-473d-8b4a-ead2105bdc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bed8a7-fc08-42bb-9b6b-a281cdaa00fc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e910565d-f33f-4b00-ba56-f151c0396771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a356a2c-ec4c-41a1-ac2f-530684cc66ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28199789-9dbb-4d9a-b038-43bf77d168bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe8c207d-b393-4cc3-87ab-febbaa19a53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8ee67a-ad74-47fb-938b-5e80413c66b0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b1443f-e30b-414d-a0c0-fabd02195fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f39c2c83-b1d4-4dea-8963-9f9f9ddb79a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d95bdc5-bd51-44c1-bb29-3310176917a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34595869-cfcb-4e1c-9ee7-7bc70cbb1551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97d836a-7c4d-4acd-9fd3-7a5eeec4ea80",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25899203-97f3-470f-ad10-76c6388cf757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f99e34d-33c3-42c2-b317-6342da6e6e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecc71e8-684a-4c3a-9485-919df2a4f992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c10a6e-35f3-4013-875d-5d28c3caa748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f1881e-c538-4f78-b481-ccff1e4c5df8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ba14e9-ee98-4cb3-b0f6-ceec98eb941d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f17ee44-0d99-4b52-8e26-af19b6bc4b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254a5fe4-3909-4455-b396-5b9d90e3fdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4feeb1-6d9b-4811-b244-4821cbd36934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d35a1ba-f982-46e8-8e9c-c7144147f80d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c56c31-962c-42cf-b6a2-e12ceae16226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8946e23-5ef4-4211-b0d7-de1d03312025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d612ba-253b-46dd-baf5-f0f7e79ed556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03958c4c-b3a7-4cf1-9064-0a5291532275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d4eb29-be20-43c9-b47d-12ab0b19a272",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127d4f88-2300-4b4b-89e7-19c3e460267d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1086fe3a-d605-44f0-8054-6d735f700f42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9ca727-dbfe-4d84-a47b-23a0f39e9fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90777fda-8081-4854-bc31-7dae7122ee79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1efe59dd-89e6-4cad-8b8a-21cbe46b3f6c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4d765d-baae-494a-b810-1d5e24ba6535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c70c109-50e5-49bb-84d6-e17fe303a2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f34c95-85b0-4c1d-9a01-1b14bd5f4496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3625e9af-5c40-4629-8a56-8e6984f7ac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2158111b-c9ef-4485-98f6-c996e0a72c65",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8902a182-bf81-471d-95ba-2836c1d46ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa47405e-2ebb-4300-9f8e-be887e9a9b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c0005f-b073-4033-8986-b8322a30ee0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27ba270-6783-4d4c-9d71-c51b7a1f6a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9071bb1e-c96d-45e8-ac78-0397c91ded12",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7df2d6-9f39-49ad-ac3a-4df0d375e427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9519fc16-e1d2-4281-8d57-407a6e96c154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d88612-7b8f-4e70-91a7-f47cfcefaa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a0902f-d4db-4258-9ddf-78cff941cfb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4b0d23-1a13-4621-ae82-f6afad64edae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa1c853-15bf-44c4-b60b-6afa3332b341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169fe10d-c591-463c-b84f-a15abc7cf4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff211cc-541c-4957-ba60-1e28a9d204fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154f8127-3f26-4565-b3ca-0c7540e328ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443b7fee-99c9-4f4e-80dc-d5fc142407e4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b239859-85d3-4241-bce7-3b2a91c8f40c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a817b2a0-1404-4f69-b7d0-1284212e64c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eda80d-f8e6-4122-ab44-48295d312b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c32e7fe-f5d7-45b8-9d60-fd5b68e9eeb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38e989d-d7f3-46f1-8a9a-14a304b3fd74",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec516bb-0bd4-4117-9b54-571b468f1e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fc9a48-a82f-413a-b2a1-253b9032aa6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c03620-f213-401b-9395-7201ad0b63f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07fb6eb-1a83-4b51-a0bd-bf623e24592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaff8f71-a806-4505-bf01-00ffbd4f05e9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315b7651-486e-44cc-9224-ff6ccd569cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5431ea5b-d24a-417d-a8a8-98e6c34bec23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed2a55f3-317d-4522-8c91-d0b54240b431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c28e612-723d-4b5e-9b3c-8672da0b0048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c535347-e28a-4bac-9beb-f2c9ad24fd09",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55116051-d0a5-425c-8dea-f445636e0e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099934ba-56c4-4b25-85ca-e5f0ec47eb59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7277f827-782b-44d9-9b8a-f77b4d43c743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feee53de-24ed-43a0-b7a5-347352930b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8574dd-56de-462c-a30c-fb8c509a4675",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee86e675-a7f4-4cc2-a075-299a848bb64f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a34aa42-3d51-4f95-b38b-ce754407cf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b660ebe-c36b-465d-85f0-a0e69ca9cc8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7727ab2-e3e8-4508-9bdc-7c4284069412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1539f23b-0449-4688-8c7d-7108aed98782",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce2c67f-c4e4-4bb4-89a8-6f199af739cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6e7428f-ec38-4c5c-bdf9-d628620d8b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee07863-c8c5-4780-b200-09bc1cfba30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4b8e39-6115-4ad2-bd6c-e2abe37ba808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a08f333-c306-47ca-b738-76d0c28b9551",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e8a2042-d041-4a74-8821-7537221ae31d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c5a700-627c-446e-8011-4ac3e1eb9040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b80d38-7b04-44b9-9592-73b0fecee91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d62112-a68d-4b79-b0cd-88d2ed5fea14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5273a96-b104-4d1e-a039-3bcb638747d9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4529687-81e5-48e5-9592-aa40d29c054a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06779065-3ead-4174-9f86-a15652ab9da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bc9c5e-4ee5-4889-8d2c-c82a0c8df31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b5c15a-16c5-4fd0-bdbc-ab6c40ba8576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62d65da-f8aa-45d5-adb6-b979c0ad02b2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef74878-99e7-4365-a0ba-f35647b9c0c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd25a80-d4dd-4c95-a565-3f7fdfe2ad71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc7c85-3518-42dc-9d28-940453c75155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e67a062-630c-4991-ae8f-3628ccaaac15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cc33a7-2f91-4191-af6d-fc66e6cf7a7a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd673bb-af64-4b46-9265-283fc15dd422",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e02c7b0-cfdb-40b5-8dcc-14dede0f1041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931d81dc-ff59-4fe1-af77-f723b76e8b7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a38a2ed-db87-4310-999a-e8f2bfcad8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9512f126-585b-4ed7-b984-c1a3728fd5dd",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f74405-9719-4208-9088-2ac56ab5f5ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1841884c-aabc-460e-91a1-1cf74b8d82e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec55498-242c-47f9-baab-e53912d63d55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d47f841-e317-4d59-90cb-20eb1223b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1515ef82-31e9-4cab-b80c-692c968c3c57",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e26b4c4-d167-453d-a18e-9e44a4982c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41dd89a-bcb0-41b8-a39c-b727d85c4174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c29933c-d87e-4afe-b6cf-1ac24cbe6339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba16dfc9-e1a7-4fa7-a29e-03ec9b7166f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2f4379-7f58-4d2f-8567-25c850edc686",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c768b391-c85f-4758-aafc-f18c7c9cded0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6452b734-6ffc-4993-b90f-7796fdebfa1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8317dd0-29f6-42f0-adb9-ff2920da1769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095351fa-0c79-4c88-bb95-e3f5e21b146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee864ece-7b13-410e-9da4-feae939a0bdc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb6ae624-1ed4-4de6-aed3-7b6995839f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e5c6b2b-5c61-4612-aa99-8e6c155549fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c353868b-f0fd-4beb-aa43-325c0345679f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e11dd3e-759f-4c78-aa57-0267258b188f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacc13e2-953a-4202-ac48-038cd074eafe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c9669f-d6ae-49dd-8c24-f10196621b93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b64f6a6f-29fe-4cf4-b16d-d71c4349a7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a447178-f773-4d4d-94d1-40a581742945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae450606-395b-4068-aabd-e5078f024226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66993069-a667-4caf-ae40-23da24a79d70",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4d2fe8-6a48-48da-8790-c4eaf6ea90b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cde2e8db-9886-42f2-aec8-d32147f53f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42795c3b-2d06-4547-87ee-c26e67bf0154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fc4e88-921a-4fee-9519-d2fada54eb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab9ad7e-38a7-45a5-a1b9-9cf8c97abe72",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a21a29e-7a49-4e9b-9190-7ada191ed8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698c0e2d-4020-4617-8960-4a27804e3aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03463565-4161-47fa-be09-a2512d8df246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf64cc72-feff-4693-849d-b489e44677ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc34a243-03be-47d1-80ba-28dab9dabc2f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2e649a-9c58-457c-aca3-17891e3fa224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0950770-6b4b-4ba1-9165-f06239f8458c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af5971c-150a-473c-9252-a0a5b1702fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6621701a-13e9-4fe7-9c91-cd48ef81d447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062a40a3-3e7e-49cb-bd21-3f736e1ea659",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f038d66c-4d21-4e25-b8b7-5e804a7df3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb69518-0943-472e-841d-15c9a45aa5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91902a03-9113-4db6-892d-70c0bcabb7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332f539d-2f31-4333-bfe5-c378ac540f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7019a297-52fd-4ba7-895f-ecd863cd818b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca631f4f-dd71-42b7-b715-cb88c9bf5a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92f4270e-c25b-4a30-8c3b-dc5a459033e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb51eaa7-3e8a-47be-ace2-a44ad6668123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fff11f0-147a-46fd-ae43-0950a8abe41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4495bafa-1eda-4c80-9e3c-862cb84ce5e3",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb053512-f167-459e-8901-fe9e6508674b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a59690e6-4a80-43a5-8346-cf90b9bd171e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f6518e-bd74-4f80-94e4-a2a18255b992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ba0ed3-330a-494e-9fb1-c31753b971b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4aa70e-dd51-4189-8135-0c386f1a41d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13c7896-1281-4f79-9cbb-1dee84582c96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79a23a4e-cd5b-47c8-9edb-f461ab15eed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb3f9ff-1c36-4648-b677-74c3ce6dbfba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650e5401-adff-4bd5-b6fc-4a66d45ac36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0de63dd-0ca8-4656-952a-97787a0205da",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5eb98b-5141-4a4d-a3c8-dbb3757e8afb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2130049-49e4-4e30-9b76-949fd9cbdc09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17160af9-ef0a-4872-ae78-35a243f127b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f13a04-769c-4284-be5f-a8c5acba2a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190d5336-621f-4d6b-bc6f-d117f24ed490",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2216c8a-a3c2-41db-b9ed-c592b7ad94be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c0536ef-37f5-4a1e-84c4-6cfb51a31e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4535fb-f300-4e17-8058-b43698fca542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d25b1b-8470-454c-ab84-8b53ae22d55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e80cc54-0b5b-433d-af27-0052ef2bc509",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868405dc-2fd9-438f-ab61-830d1219348b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb4af9e7-348f-473e-a2bb-76d229813778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f507bd-6aaa-4380-8226-d33d6368132d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cfd91f-3153-4ef5-911d-05464eae8c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b115d164-22ed-4350-9117-f245e8b8d4b2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97731e6f-7401-4f5f-8a08-2d46d77c5700",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88f7c17e-92aa-4ec5-a9e8-97b2ee64bd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c7a876-c4ae-450f-ad85-cafbd18acd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87df1d86-105b-45d2-b831-cb41faad713a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f551558-a5d7-42d2-a720-1af106baf52d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2461a2a-a8de-4cf5-9544-53a68ff27bee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b15bae25-4503-4469-86eb-00bcc2c17c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5f8cd4-093d-4d6b-bd9e-a5cfec9d7ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43566236-f00e-4097-9378-8a2716eaa3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c15601-d84a-412a-8b38-08c9227a8cdb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00c098a-ba81-45c9-8da5-360b2852d3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d122966-9634-4e6b-afe1-b57ca6d3ae77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbda7a66-d03a-4c81-9caf-a21eaf44be80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7619b74b-0c61-4efc-8303-62c6d85e9116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce21fbb0-1aaf-422a-b518-ed4431e508a7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f40ab0-85bb-425b-b4ae-3c8cf4c5d642",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "408eaa3a-d712-4308-8949-7b2773b31491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fbfeaf-a399-4426-b84c-8988e72e5ab4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cb677f9-6d42-4ab2-bb46-b3a7914016e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc96287-f1a9-41cf-a6d0-3587ff6d70e3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae12adfb-b21f-4929-a74f-9568d257fc00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480b7c3c-41a7-4b51-947c-1138c6e5ce2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8260fbe-f9f3-4a2f-b36f-93be99368234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9579bf33-1757-448f-be05-4ba87d959e45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70011a95-b8ae-4ae0-8f4a-d106b28730fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138a841d-eccd-4d4e-97d5-bf0ad4bc4224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "136d029b-b01a-464b-a7eb-61205d0e8206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1feaf9d-f61b-465d-a1ce-9635750599d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cd7eb7-71d8-4166-90bb-c25639f01407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48cbd56-c80f-49f7-810b-d1305e6b33f1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2ff81a-38b1-4017-abed-71d80abeb8d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2a80279-2bb2-48a8-bbe5-58d6c7d99e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4039d24f-7aa2-48fa-9944-280ce49edcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c832f43c-3592-4f7c-a3fe-8e09a0ce3f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2bb776-cd9a-4cdb-a180-bc1be09ed7c6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0090de9b-443e-4e6e-9e73-01d2ed1a7a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "117b2ac6-3590-441e-943a-d59a19f0fbd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f70f16f-b03c-4c7b-8c5e-ba4ecc217680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5797da-caab-4c86-8810-89f333063651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3613d1-01b7-4a33-b062-9a09af0a7d02",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d76e06-5239-4d6b-903c-46c0360d0fdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cfbed40-f019-463d-81f6-da6a25afe479"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7966e3-2772-4f38-af4b-39f3219a9eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf92a9a-b954-4f46-9e48-2f79ace034f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34da639c-45b9-4dd8-871f-1d8f0a9afbb8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98fa477-27ec-4d9f-a9f8-6ea38ef13469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bf8dcd6-a448-48bc-9c66-aa5cbfc47d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09807368-94a9-4962-9c85-cd300234dba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5dfecbc-f606-4ef9-beff-5a818ea3c1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae123b3d-1a6a-4478-816e-610a69ec29dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3505e60-8486-4544-9d0d-7ae6534e662c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64fca6c0-3c18-4ea7-b3f5-c20f0784dc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99fcdd59-5566-4022-b231-8b357701fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30b0ee43-fe96-4c2c-84dd-543f1c20adb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3739643f-23fe-4465-a0a4-340b9cb0c77d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a64f9f-8429-4216-83b8-037093a9f9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6c7c6a-c37e-4bc9-b40b-c76de3148df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef1b886-d96d-487d-ad8a-8e9a68ba6d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a2997e-cf34-42fe-939d-cf71e55f9efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec991c9-b25e-4265-93a6-fb35b27cfc54",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99153e9-f497-404b-97c9-abd60d2a6de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e5b763-c284-44c7-aff5-1eabd6da37e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "646e2129-36f9-4a82-ac45-78e4a10e3af5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ddbffa-115b-4f4c-83e9-8069279acf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627eb81-bc68-45e3-be43-20e42b4bca0c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979772ca-3388-4190-aef1-21e73ad327b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84095875-c60b-45b1-954d-b2af7e5ff685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f9f5fe-8d48-4c57-abd9-421a3ce72b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a2f3d77-0a4f-46ac-8081-9b787d43e7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5cb4484-61e3-4a53-b22b-1469d0a753ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe152e43-cbdd-4fcf-a3e6-a79676c41e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a600d5a3-fe3f-49e8-a2ff-f986f00b0520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c62ce7-5d2d-4b8d-a187-6cac583a093d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd24d1fb-99d5-4e85-9b43-6448ac349688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c494957-c216-4347-80fa-96c5e592e8d5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542844e6-d67e-492b-9c9f-f0d5f3c5ea8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5e4fd8-035c-4c8c-96c3-3a5502523fed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8762931f-8c5f-4554-8c6f-53340db898ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9332b64a-9412-4077-98bb-eaeef829efe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534e842d-1b67-4b1a-97b0-50ce1d6a98a7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f00c5a-9fd4-4c2b-b0a5-45e918cf1ace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4665c1d-7ddf-419b-ba4a-6af448388540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb5c420-7ab2-4ba5-8698-5ef60e23360a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1580b5c9-a542-4496-8921-5a798f1582b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656fd92b-cd2e-4665-8fb6-02f3d9f77c4f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07e0087-1680-4b50-b40b-92b11a3d3845",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf00d8ef-6129-43f7-92ad-1e729aeec7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb001c6-f062-42aa-af80-92967a17d9ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d39ffc4-e566-4156-8639-70e0678fd54f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "425fb9a9-dc59-4e77-9d9e-dfcdc6816365",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc89cd74-90fb-4f4f-8816-c9f263c84687"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5efb55b-20a6-455c-bf09-520b3dadb085",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "587f9354-0557-49d8-9783-fcc08c04ffb1"
                    }
                  }
                ]
              },
              {
                "id": "3a3f4a62-012b-45ff-8246-b32714662bed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a145095-83e1-418f-8804-2dd879638815",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baa23e86-1f28-4c23-905a-c3677229cc37",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "52efb6f7-44de-462e-9fa8-b42c1dba4a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa26be4a-0954-46ef-95c9-de7816a330dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af39a11c-82e9-4f88-8fa3-bfcb002e98ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "802628db-8dd1-4ca7-bc98-fa663d44cc31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6900ec89-9649-4c6c-a212-dbd028991d07"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "164429a8-ca2f-423d-b197-97399a08dc29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07a2212f-08f3-418a-a4fd-3d978c1bc2a6"
                    }
                  }
                ]
              },
              {
                "id": "5b0afda1-5971-4dcb-be13-676298e51c91",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "0972d102-2014-467e-a9e8-17c8a9eb551b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d43fedd-01c5-44f8-9adf-89efdae4927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e5124bb7-f109-4548-9b35-23a4268e53ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e8a154-79ea-4719-8af4-117d317079c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6f2fa-4d78-427b-a3e3-f8af6fbe6a0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e23441ef-dc48-4e4a-a8e3-9b61240c1fd6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd8274aa-2eba-4372-a33e-440c2ab4085b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e654fe3-5b08-41bc-b69b-2cb967d986d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f772025a-a614-4d68-adf9-9a25e0451c0f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65af19ca-76d5-4f6a-99c9-98c7eab09713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "219e0790-680d-4734-9ffc-6558212781aa"
                    }
                  }
                ]
              },
              {
                "id": "5b235f4b-6814-4e2f-be85-2d2978ff0393",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7107f6d-9e9d-4028-8cc8-7ce7d2a92308",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "26e34ff6-d117-40c6-8486-ccb2bc51f79f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dd19397d-f434-4799-84bd-160ef00a77f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac234228-9ee5-4e9a-97f8-3bfe0254f842"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "53235f48-96a0-4dc7-af40-b1781caaf6c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c3fd6054-dd7b-49b2-9a6e-a5e95944dc37"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd1c167f-77af-4b2b-b100-e0b90b417bd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c2e5d47-a556-4b01-a4b5-f5ff821eaae7"
            }
          }
        ]
      },
      {
        "id": "33bb401a-8f8a-45fe-81c2-d7632652f6d0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1ae93c4f-78f8-4b3d-87ec-fb1a0eace764",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8cc83387-874d-43d7-8ff0-710477d20ac5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bc4e7ca6-f582-4737-8e49-eb5b1c2ffce3",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922fb671-c1cc-41f5-bb39-8fd41037b958",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1df5735a-ca85-4f9d-93bb-e6c98f794e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3b6568-59e3-4203-b33c-e8922deee3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6140f80-b71c-4c27-8b55-1229cb984a6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1709fcc8-e683-4a31-a8e6-533e72742f4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d710cbce-9bc5-4f78-808d-47a6f16f43ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9996817-f7ae-491a-8aa0-f6e7e984c6e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c5ebde9-9644-4059-9ed5-680e16730373"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f153bba-2a49-44d5-8a93-f433f9d2cffa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0b3ca12a-9fff-4074-95b9-49fefa472945"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d23cdb9-07f2-4317-9eda-6490c55c3fc6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd455981-1faa-4401-a866-7be63eb53fa9"
            }
          }
        ]
      },
      {
        "id": "bc5ac3a9-63af-46ee-92a0-06e6d61b5dee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0882e108-4005-4d8d-adec-af060a7394ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdba2929-33e3-4dc1-a570-cbce89faa349",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df32e74e-a24c-4b78-bd28-3451f88bbee3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e712024-8e16-45b3-b451-5e5cf229e4fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ddd83b7-5fc1-4ecb-aaf1-dd54be79599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2749701-98c4-4186-a54a-6c9fa62c70e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6a56e13-34a9-4a32-b1be-066ed353edab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "215828b9-9ed5-4d36-8621-4c5e7333b013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b4511b6-6fd9-4a95-a15c-498e99b781f8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ba06e1a-0659-40fe-b01a-a7d1cc8aa500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2444cff5-aeb3-4445-85e1-482103538156"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da6eb310-eebe-44a1-b53b-b6c2c9d14f06",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c0a29a4-3384-4307-93f6-9b47b2cf1bc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "223bfe4c-555e-4eb7-b8a7-80d6ac09ddf4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "092c2761-0690-4d64-ab5b-a642784a35a3"
            }
          }
        ]
      },
      {
        "id": "c1901efa-59db-44cf-9af9-1f05182baccb",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6cda0de5-3c63-4e47-a71c-b18d0732c849",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8888faee-241f-4eb4-a3ce-cfb91b3025a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "462ebd47-3c29-4e0a-9396-16709a549e2c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e354b85b-0ec7-47d9-8b1f-4bf3364a85ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6b0b2aa-8890-4370-9ab7-89973dde6bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ca02c9-cf24-4809-807b-225eb7ecc71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e474d46d-00a0-461f-93a2-a711f1f4fcb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12f545c9-c99e-4339-badb-a0f644f57099",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a7c9b48-5355-4d3f-9855-6f8aeab4e7f3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a23b3893-38a6-4800-92d6-82cb36e03717",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c3a5adb8-a462-41f4-bff6-a757d7a17101"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0bf8667-a978-4298-ab18-b200795030cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2b65b360-667c-4208-a33d-290bfce53d87"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "608192f2-6f2e-48fb-b935-ac0276461e03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d72dd3fe-b9e4-41a9-abe9-b03b8369e1e3"
            }
          }
        ]
      },
      {
        "id": "bf95b7b9-a0aa-4ca0-a6bf-2de15ecaf8a3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfe7fc59-25c5-4552-9e6b-a764921e685e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d96eb610-62b3-4cc1-89cb-bf6c9b0d6b23",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fb3087fe-2183-4699-8b1e-5cda45023fdd",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8145a510-f808-4580-a8eb-2b66b0c809cc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "719990dc-69f6-4713-a6fd-3a09e2e1f552",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 220.02112676056336,
      "responseMin": 14,
      "responseMax": 7072,
      "responseSd": 446.8535927532384,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691455084607,
      "completed": 1691455158871
    },
    "executions": [
      {
        "id": "a3987a12-a58c-4e13-8a36-61c723658ffe",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d1c10853-e97c-44de-aa99-289808e8946c",
          "httpRequestId": "291bbdec-737e-4f0e-8938-75325affd10e"
        },
        "item": {
          "id": "a3987a12-a58c-4e13-8a36-61c723658ffe",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5036353d-26be-4496-88d8-5bef5b4f3cf5",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 0
        }
      },
      {
        "id": "029ed5f4-c964-4ca6-9f48-6d93cc965b13",
        "cursor": {
          "ref": "68d072ea-bf1d-4024-a89c-2e36e06b567e",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b1454dfc-6f59-41e1-9fd0-46b06a9c328b"
        },
        "item": {
          "id": "029ed5f4-c964-4ca6-9f48-6d93cc965b13",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "18ed344c-b333-4a46-aa5b-288be85f83f3",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "ff3b8a9d-dfa7-4eef-be17-5ba2c27ee25c",
        "cursor": {
          "ref": "97c4c35f-37c5-40a3-aad9-65f3289533d8",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "87494ce6-cc61-43e6-bfed-19c7bca5badc"
        },
        "item": {
          "id": "ff3b8a9d-dfa7-4eef-be17-5ba2c27ee25c",
          "name": "did_json"
        },
        "response": {
          "id": "40f84571-8e32-4dab-86a5-e3a73c12e5df",
          "status": "OK",
          "code": 200,
          "responseTime": 1156,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac9329b-74e7-4d01-92ef-ddfc01b8bd0c",
        "cursor": {
          "ref": "1b75d3d1-6cc3-4ca0-a9e6-6de935838fde",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4c4f93c2-4d6f-4343-abc1-d71d857f58f1"
        },
        "item": {
          "id": "4ac9329b-74e7-4d01-92ef-ddfc01b8bd0c",
          "name": "did:invalid"
        },
        "response": {
          "id": "46aba54b-4abc-4e52-b8ff-8173aeefdc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac9329b-74e7-4d01-92ef-ddfc01b8bd0c",
        "cursor": {
          "ref": "1b75d3d1-6cc3-4ca0-a9e6-6de935838fde",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4c4f93c2-4d6f-4343-abc1-d71d857f58f1"
        },
        "item": {
          "id": "4ac9329b-74e7-4d01-92ef-ddfc01b8bd0c",
          "name": "did:invalid"
        },
        "response": {
          "id": "46aba54b-4abc-4e52-b8ff-8173aeefdc17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697f7961-5d8b-44c0-adbb-69c4e511548d",
        "cursor": {
          "ref": "0b1c78e2-d5ee-4093-ae3d-590c368dc1e2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "36e82d14-cc9f-44bd-ab1d-0c73981c8518"
        },
        "item": {
          "id": "697f7961-5d8b-44c0-adbb-69c4e511548d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8e49f575-df26-49c8-b3a7-7629e5db232a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 484,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae08330a-575a-4fc2-8154-60bd68aac5e0",
        "cursor": {
          "ref": "a16cdae0-5ad2-42c7-81bd-6fe6293a3e87",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ab98d621-06d7-4db1-b192-9a46eb8e11ea"
        },
        "item": {
          "id": "ae08330a-575a-4fc2-8154-60bd68aac5e0",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "bee5405d-5ecf-47a5-8fca-a5f87501366b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 266,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa8125c-769c-46b7-bf3a-0f043b0168d7",
        "cursor": {
          "ref": "e989d67f-a20f-4fef-871d-6a198adb759d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1913c5e6-b44a-4a7e-b395-2a23cda0b7b6"
        },
        "item": {
          "id": "3aa8125c-769c-46b7-bf3a-0f043b0168d7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4f294290-252d-4d39-b297-497072796c22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcfe20f-a5f9-4ac9-b7ff-80e10a545d64",
        "cursor": {
          "ref": "4822f700-303c-49a3-ac97-ed3d0a887155",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "46693d22-e36a-44d2-b1df-438ef0d7a312"
        },
        "item": {
          "id": "2dcfe20f-a5f9-4ac9-b7ff-80e10a545d64",
          "name": "identifiers"
        },
        "response": {
          "id": "5af0d197-3764-490a-ac74-520d1e557cb7",
          "status": "OK",
          "code": 200,
          "responseTime": 1093,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c2b412-4d33-4564-803b-00e632120f24",
        "cursor": {
          "ref": "6f5fcd04-0210-4138-ba28-9f562e558372",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "bd93c521-fa15-4b00-b728-99c9681ce4fc"
        },
        "item": {
          "id": "62c2b412-4d33-4564-803b-00e632120f24",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6b844849-a9ed-40f2-a89e-4ad248486d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f938987-0123-469d-aff0-35440104b8dc",
        "cursor": {
          "ref": "a9ce5965-6d3f-4fb4-afe1-cb965219f7e8",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "61272a84-d759-4ff2-9cc3-375dc45e4960"
        },
        "item": {
          "id": "1f938987-0123-469d-aff0-35440104b8dc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ef05ec0d-579b-4874-b87b-7467994e4306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da7de9d8-24b9-4e10-bd22-8638abf71e83",
        "cursor": {
          "ref": "282b72c4-a59e-475b-8cc3-f75e2c5f5ecd",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bd142a30-dd1e-488a-a039-81c2532bafee"
        },
        "item": {
          "id": "da7de9d8-24b9-4e10-bd22-8638abf71e83",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4e45d80d-4b3a-491a-8504-48a742e8c75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098ae14c-8d7c-49b7-a503-0c04f79ab067",
        "cursor": {
          "ref": "2dbad0f8-e240-4579-91f4-699ae000bde2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f8cd1b80-be5e-42d9-8e27-c9d00d2bf6df"
        },
        "item": {
          "id": "098ae14c-8d7c-49b7-a503-0c04f79ab067",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "db1fedd8-c54a-4646-8fe7-b91c2245c7b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf091d28-7cb4-49b8-af02-c288efa1ce38",
        "cursor": {
          "ref": "4e414042-8cad-4126-8a92-8868c0680a71",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9afebefd-66e6-4048-90f7-49fa84ff9b66"
        },
        "item": {
          "id": "bf091d28-7cb4-49b8-af02-c288efa1ce38",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e966963d-e144-4e6b-b0c9-e4e0c70cac86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7184120-9d3d-4660-9633-0cc64e227c36",
        "cursor": {
          "ref": "c3116f52-e30c-49ad-bd1d-f91210e71d5f",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "70a1d460-b9d6-46df-b1c1-c9d4c542a001"
        },
        "item": {
          "id": "c7184120-9d3d-4660-9633-0cc64e227c36",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5e295387-4a54-440b-9cef-2efcb5ffa8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf22a7d-4ed0-4b63-8081-a646aee94aa4",
        "cursor": {
          "ref": "dcaaeda3-d0d3-4413-884f-a5d696c831ac",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "646d2f2f-7034-4b6e-8fdc-76df68b21657"
        },
        "item": {
          "id": "ccf22a7d-4ed0-4b63-8081-a646aee94aa4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "005b0a99-852a-4bd5-b205-64ed049810cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec291989-9e92-44fd-a5eb-ce17eb2d786b",
        "cursor": {
          "ref": "ed35c6e8-1d93-441c-a3bb-43da6f9a7a65",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5732dd52-4e06-4945-870a-1e6a0976e1cc"
        },
        "item": {
          "id": "ec291989-9e92-44fd-a5eb-ce17eb2d786b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "083a3d04-577e-429e-83dc-b66c3c402ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16059438-1da1-4a05-81d8-2777a96a0669",
        "cursor": {
          "ref": "40f90f62-d5b4-473d-8d0c-7836520fbeae",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "891fc138-c6f8-4f24-9642-55b56aa910df"
        },
        "item": {
          "id": "16059438-1da1-4a05-81d8-2777a96a0669",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "34e110bd-ee28-4486-a714-e8c950078441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2791f227-a4aa-45c7-b3f1-6fdb4d30437a",
        "cursor": {
          "ref": "d135294a-7866-4250-a446-6cfad567fef3",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "21c4aec3-d06b-433e-8417-93079286b8e2"
        },
        "item": {
          "id": "2791f227-a4aa-45c7-b3f1-6fdb4d30437a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "80e3bcdd-1816-403d-939a-ded9cd6667ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee0eaa5-0644-4880-a162-18132e38fdd2",
        "cursor": {
          "ref": "77022fbe-4813-45c4-ac4f-3242b0e85d08",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1f6e4f52-841f-442d-91fd-ff88e2ccedd0"
        },
        "item": {
          "id": "aee0eaa5-0644-4880-a162-18132e38fdd2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2557f62f-85a1-492b-8920-9150dd3fe695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcc47a6-b581-4c7f-8609-416b65e325df",
        "cursor": {
          "ref": "0b33cc5a-f0ab-40ca-9f0a-db16355498f4",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c2925d3-1381-480b-966a-6213b6383e29"
        },
        "item": {
          "id": "8dcc47a6-b581-4c7f-8609-416b65e325df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a252e0a7-5088-4a32-a453-282aa44626f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4662fcd9-7c8e-4082-a1f6-0a830a0c7df8",
        "cursor": {
          "ref": "bc0c170e-1f43-475a-9a03-ff8a3b856265",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "e1ff1681-cd4f-4449-b957-0421b7056d7b"
        },
        "item": {
          "id": "4662fcd9-7c8e-4082-a1f6-0a830a0c7df8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d74cdb16-d810-46bf-9cdc-97c2dc828dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc582d3-ec34-4055-b67a-197ec86ecdab",
        "cursor": {
          "ref": "8ddd5a09-32f5-4541-8a5e-753a84636c5b",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e88ff362-d055-42e2-afa2-e63d7638e24e"
        },
        "item": {
          "id": "bdc582d3-ec34-4055-b67a-197ec86ecdab",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "294458ae-8289-46e7-9129-b1f0bd1a110d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e028af98-6622-4d06-a41b-01ce1f0d365f",
        "cursor": {
          "ref": "156ec522-867f-4c5d-9170-72afdd6abd3c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bd05ae98-fffe-4224-8243-94bc09c26e8f"
        },
        "item": {
          "id": "e028af98-6622-4d06-a41b-01ce1f0d365f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e36dcdf-0517-4ab2-8666-59a6c23cedee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcddaf7-e2c5-4b40-9a32-5190bd386984",
        "cursor": {
          "ref": "3c9c799a-5470-4d16-a84c-fec34ad18ec0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0d3cbab8-6592-4495-a0ae-b8fb2c94a6fe"
        },
        "item": {
          "id": "bbcddaf7-e2c5-4b40-9a32-5190bd386984",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b877ea10-c973-4653-bca5-84287110dc27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62d157e-8c0f-4e83-85bc-6d6807984f29",
        "cursor": {
          "ref": "9f795207-4949-4fbc-9c72-7a4cbf3e02aa",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3d027673-f3fe-44d7-9eb8-d9b5a8a90884"
        },
        "item": {
          "id": "e62d157e-8c0f-4e83-85bc-6d6807984f29",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "083006b1-dd3e-4322-97b6-e007621038aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75ecfbd-757e-4a4a-81df-776e43dfc626",
        "cursor": {
          "ref": "67e92953-afc6-4280-a664-9331829c81ad",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "fc20270b-2c5d-412d-9c47-63fec1d4b851"
        },
        "item": {
          "id": "b75ecfbd-757e-4a4a-81df-776e43dfc626",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "11f26ca4-7c97-4d16-8346-8e37562493a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f20a8-45e7-49ba-847f-226b2811de8a",
        "cursor": {
          "ref": "4a58dd10-6083-444d-9dbf-8d1ce875ab79",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e4a30a08-2b63-4e17-b8fc-b95fa2162218"
        },
        "item": {
          "id": "446f20a8-45e7-49ba-847f-226b2811de8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "183ae28b-a075-40c6-95fa-f27bfdc84380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "769f3cb0-b208-4194-9262-bc7a9e3a1dd2",
        "cursor": {
          "ref": "33c2633b-82d2-4f2d-80d3-fd2854c90817",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "81022c79-1627-4994-99cb-00e9a151b019"
        },
        "item": {
          "id": "769f3cb0-b208-4194-9262-bc7a9e3a1dd2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6fc2166b-fd31-4390-8697-0d8afaacf0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ada9675-5ad4-41e5-b1b8-a5643c22b90a",
        "cursor": {
          "ref": "78df3062-7bca-485e-afd8-dbf241ea21a3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b06b2dcc-0aa4-4adc-848e-f148cfd7b52c"
        },
        "item": {
          "id": "1ada9675-5ad4-41e5-b1b8-a5643c22b90a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fbc73b13-fd4b-477e-893c-2fb03aae8146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b2c60c-17c5-4aa0-8e89-cba517822134",
        "cursor": {
          "ref": "12d4ec1a-01af-4f82-8770-0a978b63bfdc",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "94a9febb-83e8-4d57-ade3-ea053bae3a74"
        },
        "item": {
          "id": "52b2c60c-17c5-4aa0-8e89-cba517822134",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "167e7dbe-49b8-4c0d-b7c7-0dd013fd6a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07775d45-dd65-43e0-b8e2-224e5cc3bd21",
        "cursor": {
          "ref": "20290204-d2ef-471d-9076-07612a8f536e",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a99f20cd-f823-40be-9cce-7c1879768458"
        },
        "item": {
          "id": "07775d45-dd65-43e0-b8e2-224e5cc3bd21",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f7986edc-61fe-4a13-9c90-7c2b22a5e0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38cadbf-c835-437b-858d-5b341f8d4024",
        "cursor": {
          "ref": "51cadf54-227a-470a-b47e-78f3e681ebaf",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "387b0397-211a-4908-9ab6-999286a717fb"
        },
        "item": {
          "id": "e38cadbf-c835-437b-858d-5b341f8d4024",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4aadc2c8-d6d4-4b76-a5a5-67d67e002b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7044fc-71d8-490c-9c25-f06fc6a4ac67",
        "cursor": {
          "ref": "0547c08c-6111-4c26-bea6-aa6a4cc01556",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42520301-d2a5-4182-b6a1-4c28dc3c2ded"
        },
        "item": {
          "id": "4c7044fc-71d8-490c-9c25-f06fc6a4ac67",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "26486f26-ccde-430a-a7e6-72452750fb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19769d15-a191-4442-abba-63eb802cbda7",
        "cursor": {
          "ref": "c251ff6c-c43f-4545-8c17-3c961d7cf69d",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "25df0e6f-78a0-45c1-910f-7f3ca57aaf0a"
        },
        "item": {
          "id": "19769d15-a191-4442-abba-63eb802cbda7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "54152fec-c16b-4971-9838-ed7473430dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bb607c-d6a1-46dd-a7e7-a2b4ba853e7f",
        "cursor": {
          "ref": "c62b9341-69b5-4be9-a166-844a1e0d97ba",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c460d9d3-ead7-460b-9329-c94a9af368e2"
        },
        "item": {
          "id": "97bb607c-d6a1-46dd-a7e7-a2b4ba853e7f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b152ad8a-6c2f-49df-a4f4-e7fa951c977f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d1cd4-0f0b-4fd1-9b08-8672ac78a8a2",
        "cursor": {
          "ref": "b6f9b7a5-f91e-4fbb-acc9-a62265d8285c",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "69cf7db4-6e21-47d1-8545-c9d12420ebd9"
        },
        "item": {
          "id": "4b4d1cd4-0f0b-4fd1-9b08-8672ac78a8a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "30ae99eb-e16d-4676-9298-8abdfa575472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5789b03-e952-4435-9a5a-4dafdc131edc",
        "cursor": {
          "ref": "752048dd-b603-4982-adf4-0c112e187e4c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c90ece08-c359-4268-ae61-527cd03d7556"
        },
        "item": {
          "id": "e5789b03-e952-4435-9a5a-4dafdc131edc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "30cbac87-2504-45ba-9833-73626fd3d1d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c154ae61-69ab-48f1-8f8c-bd5e1b8e2769",
        "cursor": {
          "ref": "494c3e3e-52b2-4314-9dfc-7b664628606a",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "884d6034-b590-4a23-bae9-430277a16fee"
        },
        "item": {
          "id": "c154ae61-69ab-48f1-8f8c-bd5e1b8e2769",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "21b54a78-af58-4096-8acf-7d886e6d0c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63afaefa-29f7-4e61-9abf-7b92fd9d6f77",
        "cursor": {
          "ref": "15038a89-7aa5-4692-866d-61f7b7b701dd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "12910b55-b310-4090-bc92-34e373c283c5"
        },
        "item": {
          "id": "63afaefa-29f7-4e61-9abf-7b92fd9d6f77",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e13d16c6-1ab6-48ed-97cb-52ddca95e3bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ec14f6-c88b-48b0-ae20-e3743ec4a358",
        "cursor": {
          "ref": "aa02d899-3129-4487-94fc-c87fdb308110",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6a8c979d-acd5-40c8-bfa1-a3b8ee00ce8e"
        },
        "item": {
          "id": "36ec14f6-c88b-48b0-ae20-e3743ec4a358",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ef41d464-e294-4cca-9210-2e430a87dc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f981c5-523e-4e49-a62e-e6f1402296b1",
        "cursor": {
          "ref": "ba1b06bd-34f4-4294-ade9-aa09e9e7215f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3c530e68-ae4c-41bb-8c2a-41009029cb2a"
        },
        "item": {
          "id": "98f981c5-523e-4e49-a62e-e6f1402296b1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e315f656-4baf-4207-b278-02333b9fbd6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa91780-a6df-4f23-8d2e-0e14879465dc",
        "cursor": {
          "ref": "8eae4f07-21f3-469b-b5f3-bce4057ccd84",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c440b047-6728-498f-9b75-1737b3e081db"
        },
        "item": {
          "id": "2fa91780-a6df-4f23-8d2e-0e14879465dc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "50819083-d2fe-4c0e-901a-d19f0b803ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953ea161-e3ed-42be-8afc-149384726df5",
        "cursor": {
          "ref": "b8260f2a-8d41-4948-8b96-89dd286a5ea4",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7f6c0dc3-2aeb-4385-be43-21900430c9d1"
        },
        "item": {
          "id": "953ea161-e3ed-42be-8afc-149384726df5",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "159f0a2b-d613-4e6a-9d6d-b71a1992d751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0746c23c-0589-4759-9ed0-45d4cfd3d705",
        "cursor": {
          "ref": "ff208138-6755-45ac-b756-d0ea08e0288f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4feadbde-fb8a-4aae-8835-92a61724e6a9"
        },
        "item": {
          "id": "0746c23c-0589-4759-9ed0-45d4cfd3d705",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ca24d826-1454-43ad-8d01-17fad0cf8283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602f1de4-6670-4377-96b9-9c3d88444ed3",
        "cursor": {
          "ref": "d98e850d-8e5d-4857-95ae-f845f9d14a65",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ae3b583a-2d8a-45d7-99c3-5c3b15595fe6"
        },
        "item": {
          "id": "602f1de4-6670-4377-96b9-9c3d88444ed3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "682098c0-dd7d-4408-980a-8c7a1b9824b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09620fcc-d1b8-442b-8745-89ddf9cdf015",
        "cursor": {
          "ref": "1cf40c81-faea-4e20-a7e7-040001e8e1ea",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b78b10e-9c19-4b4d-89c5-d7e84c416005"
        },
        "item": {
          "id": "09620fcc-d1b8-442b-8745-89ddf9cdf015",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8ca2bafe-6be2-4cc8-8d05-e53e151fb3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39ab6f8-03b6-4b88-9bc3-b4e71fdaf522",
        "cursor": {
          "ref": "2cf12996-7379-4750-9db6-cb72ddc00cb5",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ced8f501-8c7d-41c7-9434-3847cf8c6efe"
        },
        "item": {
          "id": "e39ab6f8-03b6-4b88-9bc3-b4e71fdaf522",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "94183850-e4c3-4625-8e93-a1b03987ce64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bb6744-5c79-4944-b7bc-dd465b15198b",
        "cursor": {
          "ref": "1e72cc79-0ab9-429f-aca4-616ffcad8b85",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a793978-5bec-4586-9221-65e119b236ba"
        },
        "item": {
          "id": "02bb6744-5c79-4944-b7bc-dd465b15198b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "27c15ea0-5935-4471-9c56-d42a073947ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031a978f-7422-4086-be83-227823afccae",
        "cursor": {
          "ref": "6337e54b-c425-4d4a-b6d5-2a8baab9b7cc",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c171eb74-b2ad-4288-860e-8dd5a9e8fe16"
        },
        "item": {
          "id": "031a978f-7422-4086-be83-227823afccae",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c4a44b0e-f5b9-4efd-a8c6-4042783fcc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb07dee-4326-45bf-845a-daf60d64068e",
        "cursor": {
          "ref": "a6d48ba6-739b-492f-b0fc-72283381bc6e",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fef9c513-c7a4-4b06-b044-407a23473205"
        },
        "item": {
          "id": "bfb07dee-4326-45bf-845a-daf60d64068e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ca7593a2-6b41-4158-91f7-92fa51474b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac6ae94-05c5-4d57-8678-8902b4a167e2",
        "cursor": {
          "ref": "33d99a98-407c-4883-b73f-dda42a735ec1",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b0c6f15e-ffc9-47fd-8626-f6ced565ec34"
        },
        "item": {
          "id": "eac6ae94-05c5-4d57-8678-8902b4a167e2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7f585920-7837-4db9-b1d2-dea966697975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2967d63d-0e4c-4184-91bb-405761b9f1e8",
        "cursor": {
          "ref": "eed2bf0a-8d3a-478d-b236-d821f191da9d",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8c8eed1c-69ad-4c4b-9032-ba707b1c241e"
        },
        "item": {
          "id": "2967d63d-0e4c-4184-91bb-405761b9f1e8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "526c24ba-4755-4272-acfc-fcf5021841cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6af898b-bcfd-4753-a330-26fd1d315f80",
        "cursor": {
          "ref": "1e66961a-8cd2-46dc-8a63-c46cf7be5c44",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f1782a6a-185d-4d82-b54c-5914db1ebcb3"
        },
        "item": {
          "id": "b6af898b-bcfd-4753-a330-26fd1d315f80",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "67d2accd-5d59-4b5c-9d5f-305f384f96e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0250ce5-5fa4-4080-89f9-ecdbe5996f7a",
        "cursor": {
          "ref": "ef035a54-ba1a-4679-8c60-9d7085f9a7da",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "eb086811-7d4b-4668-b2c0-f3d778e3d03b"
        },
        "item": {
          "id": "b0250ce5-5fa4-4080-89f9-ecdbe5996f7a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8d901502-fcbb-48af-b6c6-66e8336f406b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf83e12-81c1-42ba-87c0-565f1e291749",
        "cursor": {
          "ref": "0a59ec72-7977-4a14-8484-d4039dd5a2e8",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "175580d2-1d22-456c-b225-4544383e44f5"
        },
        "item": {
          "id": "2cf83e12-81c1-42ba-87c0-565f1e291749",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f374313f-e937-4fc5-8982-49129e4ab994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf70154c-3cee-4450-a234-d287a454c033",
        "cursor": {
          "ref": "40531fec-0302-4194-b376-6bcea1064bd9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8dd16529-0f0a-415f-8f97-96d8acbe2341"
        },
        "item": {
          "id": "bf70154c-3cee-4450-a234-d287a454c033",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "85c54a57-8dfb-4707-8e78-3ca1c653235c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a7cbbd-d5cb-4f75-a54c-e1641e32c558",
        "cursor": {
          "ref": "62fcf29b-2940-4d31-90a3-1fb70396bb80",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "782106c3-71d3-496e-8b91-ac4fd57bad01"
        },
        "item": {
          "id": "24a7cbbd-d5cb-4f75-a54c-e1641e32c558",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46d36eba-acfe-4407-a724-12a695404084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c97f4c-c2b1-4079-98d1-1e5821dc795a",
        "cursor": {
          "ref": "04b6ecac-c259-481b-8e0d-48316b1b4199",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c3919378-c9df-47c2-9817-bc35e00a867c"
        },
        "item": {
          "id": "d9c97f4c-c2b1-4079-98d1-1e5821dc795a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e12ffd78-acf7-4feb-b7c3-bc1f73be6f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74991e3b-8380-459c-be4f-680712e03faa",
        "cursor": {
          "ref": "5533d5ac-058d-42bb-8b20-6190a1befb9e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "db019732-65bd-48f0-a896-894165d983e5"
        },
        "item": {
          "id": "74991e3b-8380-459c-be4f-680712e03faa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a123917-8c9e-4868-b588-bb734be5dc75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72160ec-91c0-4a91-91c3-eef2e1dfd52b",
        "cursor": {
          "ref": "c8d887d6-fde3-4fa9-893d-78e1c3a0cd4e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6b42753c-ba15-48c6-b64c-f5547945c774"
        },
        "item": {
          "id": "b72160ec-91c0-4a91-91c3-eef2e1dfd52b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "fb3e7959-8174-407d-9b5a-f120549a2247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7644ae21-02f8-4aed-8e65-208bb494e1d9",
        "cursor": {
          "ref": "3377d0dd-3c32-400b-905c-2f8498404a3d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2082921d-ff74-42b8-8b91-8c91e46a2f83"
        },
        "item": {
          "id": "7644ae21-02f8-4aed-8e65-208bb494e1d9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f780eaaa-73d7-43b5-95fe-902f1dfcb10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3af86b5-e775-465b-8f46-cadb7f6308cb",
        "cursor": {
          "ref": "4e75cbc8-3b93-4b20-8da7-8f59a46613c4",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3cd5a6ec-bfd3-4767-9fa1-50f1d0ab5088"
        },
        "item": {
          "id": "d3af86b5-e775-465b-8f46-cadb7f6308cb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bba82abf-781a-43e4-a084-8fc3dbd3b7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc876063-4b38-4769-9e50-c6d3d8d4d834",
        "cursor": {
          "ref": "bf798147-ab29-437b-bc8f-c88a61873701",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "38cb5a45-f46a-4ff1-b8ef-010ff89241fd"
        },
        "item": {
          "id": "bc876063-4b38-4769-9e50-c6d3d8d4d834",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2d8d2545-34f6-4be8-86b2-0d8d6a3f38a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e02ea8-408f-4c99-bb6f-db19b8ac7934",
        "cursor": {
          "ref": "cbbc773d-1546-43d6-b6d6-76e4d523da66",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "54e9c476-b9c9-44bb-9969-09e88f851c85"
        },
        "item": {
          "id": "c8e02ea8-408f-4c99-bb6f-db19b8ac7934",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "bfb07111-46d5-4ce0-a14e-4a8f669351ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f9226c-a480-4633-8686-76aaff93250a",
        "cursor": {
          "ref": "797da11a-6ef3-4978-b6eb-339fb159c364",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "15fdf182-fd84-4faa-be5c-683763037d1f"
        },
        "item": {
          "id": "15f9226c-a480-4633-8686-76aaff93250a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6c9759d5-905c-4aa0-b912-9f1714e3e747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835ff47c-7f8c-434b-a45f-17287d25918e",
        "cursor": {
          "ref": "5363126a-6fad-4953-bd79-013d061b23d2",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e6cc4434-0ab4-4667-a224-ef5546fc7187"
        },
        "item": {
          "id": "835ff47c-7f8c-434b-a45f-17287d25918e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5af26b3c-b092-4948-a1b4-031ab03b041b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80bec70-4f94-404a-8e48-fc555e10b580",
        "cursor": {
          "ref": "e0468ade-4677-4a16-8870-66619f4a3d1e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fbd3ed8b-9e20-4fe9-8237-d954df999e4d"
        },
        "item": {
          "id": "b80bec70-4f94-404a-8e48-fc555e10b580",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d338abcc-9585-4bab-ab2e-e41be0c23014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0eae354-c8c2-421b-9ab5-3f2e53f4963d",
        "cursor": {
          "ref": "99225366-8216-41a5-bc55-a6ec1a307328",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d064278-2823-4039-af7e-a878046fd361"
        },
        "item": {
          "id": "f0eae354-c8c2-421b-9ab5-3f2e53f4963d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e7308ea-e868-4a60-b02f-1108ec1f90b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98606c-ebf5-4e0f-aaf0-e8b79b726e67",
        "cursor": {
          "ref": "bb22d990-8085-4d2b-92a4-f9ffbf17be91",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8dd9a1f6-9570-4214-9fb4-288444289cd4"
        },
        "item": {
          "id": "5e98606c-ebf5-4e0f-aaf0-e8b79b726e67",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "47de004e-91b2-4c8d-b4cd-084756fcab70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9bd2bb-f40b-43a2-8311-aa2defd89a99",
        "cursor": {
          "ref": "d34c2b61-5fff-4519-95af-7cc5391b6c6b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4900352d-97fe-461e-9b0b-d3b8943c00c4"
        },
        "item": {
          "id": "ba9bd2bb-f40b-43a2-8311-aa2defd89a99",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ca2639a1-f439-4593-8484-02c90a96c7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b34306-a39f-4e5d-8047-7b25c3076637",
        "cursor": {
          "ref": "ad057375-fa5b-4a05-a8f2-ef940ebb0258",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6358e86b-0945-4dfb-8075-9e493491d9a6"
        },
        "item": {
          "id": "66b34306-a39f-4e5d-8047-7b25c3076637",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cef85fc3-c1ad-4b6e-bfde-314147f7628a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86613e7e-01de-48bb-8b08-fec83d371259",
        "cursor": {
          "ref": "ae4cfb69-744e-44af-9bfc-83e4b97c4566",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a137b0dc-cbda-4014-86f4-bc4cf9e067d2"
        },
        "item": {
          "id": "86613e7e-01de-48bb-8b08-fec83d371259",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0b080084-0e58-487f-aa17-0a8015bd2ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac7fead-4e86-4263-865d-ddd82ae8b627",
        "cursor": {
          "ref": "d50e575c-4b88-4a7c-865b-a3826813e770",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a18e3f0f-a053-4e4e-9551-4c6b5d6bd517"
        },
        "item": {
          "id": "0ac7fead-4e86-4263-865d-ddd82ae8b627",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eae9698e-a03b-46ed-add1-4d6c399b5dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7977be1-262b-4653-8969-36e13b792a3b",
        "cursor": {
          "ref": "8be8ad9e-f1e0-439d-bcd0-0da4b88fdf3b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4546153b-6de9-420d-a7b9-8f7b0dac34be"
        },
        "item": {
          "id": "c7977be1-262b-4653-8969-36e13b792a3b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "57d2ff25-af11-48af-b421-4e88a677cda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11d347-d900-4c04-bea3-8467d89dbe70",
        "cursor": {
          "ref": "c38d3022-5f91-483e-a2c4-63e769b6a3a5",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aa6d35fc-811e-4360-a98c-5ad94507cbce"
        },
        "item": {
          "id": "db11d347-d900-4c04-bea3-8467d89dbe70",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ffb7095-6370-4890-953b-5b4a10395ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0d6f4b-6ef2-4c1b-a3b3-bd0b76c0f11e",
        "cursor": {
          "ref": "6dbf4512-f65a-461f-bf41-8330e11a5681",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1c4c18e3-8885-478b-8379-0c82b0bf52ea"
        },
        "item": {
          "id": "3b0d6f4b-6ef2-4c1b-a3b3-bd0b76c0f11e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "43b1243e-ae7f-46d0-b7e4-f8e8e21eada6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f041d6-53b5-455d-9c37-8a8d09832ccc",
        "cursor": {
          "ref": "bf32210e-00a2-435c-9b4e-9a9e2f97005e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f40c72f4-69a3-48fd-adbf-19d56fe6a776"
        },
        "item": {
          "id": "f9f041d6-53b5-455d-9c37-8a8d09832ccc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "671936b3-bf28-430f-b43c-eb20a3ce6b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1a82b-5347-4400-a3e3-d2e78dc5938e",
        "cursor": {
          "ref": "f7a954bc-6e30-496a-b838-0f1fdde5f70d",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c3350ff5-b9d1-4993-a69d-14d77e7a109f"
        },
        "item": {
          "id": "3ba1a82b-5347-4400-a3e3-d2e78dc5938e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6212797a-a594-47e9-b7a3-4c31e4c5a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78847631-8e44-45c5-b89e-d89094ba9196",
        "cursor": {
          "ref": "d2c57685-474f-4586-a635-93084c4a30c7",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6d9dc632-b546-4e24-8859-5b7ed4afb909"
        },
        "item": {
          "id": "78847631-8e44-45c5-b89e-d89094ba9196",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "552aa6c5-929b-4263-a9fd-fa4bd852445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e3570e-cb5d-47c0-afd6-6a7bfaa89810",
        "cursor": {
          "ref": "238e3c63-0388-482e-a0ad-dd96909a588f",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "497736e1-454a-4df3-9e9a-704025da9c4f"
        },
        "item": {
          "id": "25e3570e-cb5d-47c0-afd6-6a7bfaa89810",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6fc082a1-cd77-44f4-9f01-242878f5f5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ff5dbe-f943-41a2-9c69-69b38a862181",
        "cursor": {
          "ref": "238f333b-c7a0-49c4-abe4-87e50d2a4991",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "883d5016-8c13-48c6-9452-3f2f8014b455"
        },
        "item": {
          "id": "15ff5dbe-f943-41a2-9c69-69b38a862181",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "32d60264-4bea-47aa-8cbe-17616b402dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e73fc8dc-3668-43ff-830c-00a5854aeea8",
        "cursor": {
          "ref": "6966ecd4-d2e6-4d24-9fc9-2be4a84980a5",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "00504ddc-b4ee-46da-9792-e6f7293aa13b"
        },
        "item": {
          "id": "e73fc8dc-3668-43ff-830c-00a5854aeea8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7e26e0ab-f401-4755-962e-c8f5f34cfce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e278dd-916e-4f30-b2e9-616fd9ec2426",
        "cursor": {
          "ref": "16e0b106-bda3-4751-9ef5-e5c471fff0ec",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b82baf53-d57b-4e05-a443-c1c2dc3b9f11"
        },
        "item": {
          "id": "88e278dd-916e-4f30-b2e9-616fd9ec2426",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7d6b321e-147b-423d-8156-7e2a1ccb53bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3c528b-7e4d-41da-a53d-cb9af1830cca",
        "cursor": {
          "ref": "1066d5c0-20ab-4c67-a1db-319db3af71dc",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9de88218-12c7-4af4-a30e-f0f498b30cc9"
        },
        "item": {
          "id": "9c3c528b-7e4d-41da-a53d-cb9af1830cca",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "95531d59-9d21-4294-a44d-add0c68fc604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5708cc-4bfe-44c0-9878-988052b2b31e",
        "cursor": {
          "ref": "6ef4ec20-798e-45ca-8bca-bc6a7fb2b375",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "30033dd0-3488-48a4-9671-bb4b75d4367c"
        },
        "item": {
          "id": "1c5708cc-4bfe-44c0-9878-988052b2b31e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ef79c65a-89ad-4fc8-b23a-336bbf869591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11aee042-5730-422e-b669-53c9fab3e5f0",
        "cursor": {
          "ref": "005fe35e-2abb-4ce4-8287-2077e4323437",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8f9de4dd-a104-4e9d-8153-e1abac573e97"
        },
        "item": {
          "id": "11aee042-5730-422e-b669-53c9fab3e5f0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "41421a0d-dea5-4a59-beb6-f7a4fc9fe108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52af67a-773b-4edd-9452-836047b20010",
        "cursor": {
          "ref": "d7ed4603-2bc2-48c1-a490-99ff32c3d315",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c30c2d62-6a6e-4c0f-80a9-3672b53e6e0e"
        },
        "item": {
          "id": "e52af67a-773b-4edd-9452-836047b20010",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "454c5048-dc18-4828-b256-10b860197ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43dc4f17-5fc1-47ef-8e90-8305a45f63a9",
        "cursor": {
          "ref": "cd29c0b5-67c8-4c66-9c5e-ba43544e6f95",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a91419dd-1660-4d1f-943b-c2521e1a1dae"
        },
        "item": {
          "id": "43dc4f17-5fc1-47ef-8e90-8305a45f63a9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f46390c0-329a-4fec-89a7-87d84b262611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d1b0a7-c455-4af0-9b2d-4c125587174b",
        "cursor": {
          "ref": "533779ff-f1a0-49a6-9e14-e96a9c73435e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bed087ee-5a73-410f-85c6-9551b3f20d4b"
        },
        "item": {
          "id": "c7d1b0a7-c455-4af0-9b2d-4c125587174b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "dcae25c5-f99e-4ac1-811f-0eb5b02ea2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2699091c-6416-4308-9583-ec98899ad314",
        "cursor": {
          "ref": "60870a05-c500-49bd-9441-869e6376df85",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ab6bc718-79f5-4a55-a406-25663019a5db"
        },
        "item": {
          "id": "2699091c-6416-4308-9583-ec98899ad314",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "266eec44-3a9d-475d-b2e6-3666e51aad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b1cd9e-9e33-4b0e-a2c8-49a5db678667",
        "cursor": {
          "ref": "a1e43aa1-e295-49a6-bc6b-a462e9c2d44f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6c482359-f5df-4a5f-b4ca-6980ef8a4d71"
        },
        "item": {
          "id": "72b1cd9e-9e33-4b0e-a2c8-49a5db678667",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0c592a4e-97ee-4ca6-9da4-71fccccb8fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7844f13c-1060-4d1c-a1d0-ec00d8600521",
        "cursor": {
          "ref": "2de5aaab-bbbd-4fda-9a2c-df4e35159407",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "50c4afe3-6b7c-4983-9c05-e075e569bc61"
        },
        "item": {
          "id": "7844f13c-1060-4d1c-a1d0-ec00d8600521",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c22f4930-8814-4984-b0b0-a7a52a1b9226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775903fd-8135-425d-9f7a-6e615682c7ca",
        "cursor": {
          "ref": "521e262a-e97a-495c-83a4-eeff6e219afb",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "6f9135cc-2395-4eaf-ae35-9bd3db00c823"
        },
        "item": {
          "id": "775903fd-8135-425d-9f7a-6e615682c7ca",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bef7897e-81d2-4a7f-8b11-6f45a66032f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b3d63f-f483-41c4-9fd8-2b47c2de073a",
        "cursor": {
          "ref": "3fdd0d14-7de7-45a8-9c03-8d67c362e70b",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d4884498-2b2b-4365-becc-09333f8c0fdb"
        },
        "item": {
          "id": "81b3d63f-f483-41c4-9fd8-2b47c2de073a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a0949798-e894-4eca-96f9-e38d730ff835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207eed0d-f011-45ce-a480-7590401288ec",
        "cursor": {
          "ref": "839a9d9a-63c1-4046-b294-a5d59dbd8a16",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a6f00991-b5ff-480d-8490-1b1b084978df"
        },
        "item": {
          "id": "207eed0d-f011-45ce-a480-7590401288ec",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "99ad150e-3ba0-49d4-bba5-a379435b4b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5e19ce5-088d-4f41-aada-f4fae42e7b70",
        "cursor": {
          "ref": "8a020700-e566-4c77-aa80-423e48b854df",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7979d961-f594-4883-8913-bcd1cc9fc10d"
        },
        "item": {
          "id": "b5e19ce5-088d-4f41-aada-f4fae42e7b70",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0bb466bd-a8f4-479e-b59c-ca6489334d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a0d80b-7445-46fc-bae3-9c09f2fd9ebf",
        "cursor": {
          "ref": "61a38d08-1dbe-4144-a92f-53a2952bd42e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "431068ac-17e6-4a76-bf95-3e364a628623"
        },
        "item": {
          "id": "b9a0d80b-7445-46fc-bae3-9c09f2fd9ebf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8ada957e-1c29-41ed-899a-aad68683babb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c5726-06dd-4bdd-9927-c410bf846d9b",
        "cursor": {
          "ref": "51a979e0-03c3-430c-a11d-0a5571237154",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "e523733d-d1f2-440d-aac7-e68bfd06b97c"
        },
        "item": {
          "id": "1f0c5726-06dd-4bdd-9927-c410bf846d9b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d0e80983-a9c1-485d-ab68-349998a40fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24655cf-0457-474a-968d-1dcd5fbf801f",
        "cursor": {
          "ref": "637e6dc6-7f9f-419b-addd-826057fcb128",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc124ba8-59d5-477c-b9e2-3376ad42cf51"
        },
        "item": {
          "id": "a24655cf-0457-474a-968d-1dcd5fbf801f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "302314a5-44b4-460c-825e-acc065923419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3dd2bf8-1632-4ed9-9461-ec716e9e9fed",
        "cursor": {
          "ref": "f4509221-464a-4b95-a19f-c00293fd5642",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3ffe4f4e-ff5d-4868-bd8f-6697c353f107"
        },
        "item": {
          "id": "b3dd2bf8-1632-4ed9-9461-ec716e9e9fed",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2190cf0d-86e2-45a3-9ad4-82764cc8348e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c714e8-8638-4003-aeb6-50bca3c637f0",
        "cursor": {
          "ref": "0b4517f7-33c3-4e3f-a7cd-98c346328b4a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3bd6430d-5d40-473b-8ab1-0f02ca32c419"
        },
        "item": {
          "id": "f2c714e8-8638-4003-aeb6-50bca3c637f0",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f42eba3b-1e00-4d0d-8591-0878153df927",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21dcf7e4-8e9f-4112-aae5-d5e8010ee0ad",
        "cursor": {
          "ref": "3dce9e43-9f6b-4c8d-970c-4857c9c7e385",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "726fb40a-1eb2-4a8c-8293-a3c714b0e135"
        },
        "item": {
          "id": "21dcf7e4-8e9f-4112-aae5-d5e8010ee0ad",
          "name": "credentials_issue"
        },
        "response": {
          "id": "99625654-4637-49ad-a42d-ff2d920e8415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "ee2ef92e-8fd4-444d-8d17-3d340128e001",
        "cursor": {
          "ref": "603c6e32-32bc-4d70-bcfd-a3c3b37e694d",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea5d4b7f-ae7a-4cc0-a369-8ffcb7032421"
        },
        "item": {
          "id": "ee2ef92e-8fd4-444d-8d17-3d340128e001",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "907dcc27-8159-4614-83ac-16e9f3e199da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "82a195c6-188f-49f2-9b7a-da35d43027fb",
        "cursor": {
          "ref": "55285cdf-e030-4e4a-a7a9-1b4e94be5737",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c6230eb7-a687-4298-b194-33c352fdcbce"
        },
        "item": {
          "id": "82a195c6-188f-49f2-9b7a-da35d43027fb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "22d2adf1-85fa-48c9-a7a6-2b10f60eb5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0c86783b-7c79-4f40-b0f0-7811ba1b22d3",
        "cursor": {
          "ref": "24b39226-7b6c-4799-bb5b-9467e853bfda",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "466bcba5-a175-4713-b9df-d18a4ea7c250"
        },
        "item": {
          "id": "0c86783b-7c79-4f40-b0f0-7811ba1b22d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bee87b20-f863-42ee-872c-0c62db63f3f8",
          "status": "Created",
          "code": 201,
          "responseTime": 7072,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e34dc70-d2e0-4eea-96e6-0bec97a250ef",
        "cursor": {
          "ref": "1fc7d4ef-d6e2-4cae-a067-08b4d3b4631d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6bdd79cf-371d-429a-9a87-722b4aae3859"
        },
        "item": {
          "id": "4e34dc70-d2e0-4eea-96e6-0bec97a250ef",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "562883bd-b7ad-418c-b76e-75747920931e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "0c34ebe3-88a8-4d10-8fdc-619d784cff5b",
        "cursor": {
          "ref": "df5e8b5e-6e46-431f-8af3-aa37ce522964",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "5b5aee73-edbd-4cb8-a1b1-68f1d7ae096c"
        },
        "item": {
          "id": "0c34ebe3-88a8-4d10-8fdc-619d784cff5b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ba7ff599-7231-4d59-8ee7-597d17a9b131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "00b8acd6-a2bc-444d-abc3-1b39c90a72db",
        "cursor": {
          "ref": "a978544c-0fc3-4352-ae76-6cddc7e844a8",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "30f458f0-7b33-4bed-96e3-909bb5063a4f"
        },
        "item": {
          "id": "00b8acd6-a2bc-444d-abc3-1b39c90a72db",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b8e42c8-44ba-4f34-8f40-30a651138c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf682b4d-e857-4f8a-a112-efa89ae10f76",
        "cursor": {
          "ref": "51051ee1-c2c6-454e-999b-b41b666d231d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "25da293f-3c31-4276-9edd-a7cc97dd808e"
        },
        "item": {
          "id": "bf682b4d-e857-4f8a-a112-efa89ae10f76",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cb755c66-2ae8-4d2e-8c69-e1db37f51a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3c428e-24ca-4fc1-a3af-04c50b2eab32",
        "cursor": {
          "ref": "be5bf513-8686-44ed-8326-33386a55958c",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0737af67-9084-4e65-8cb3-63f1621e8158"
        },
        "item": {
          "id": "ab3c428e-24ca-4fc1-a3af-04c50b2eab32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "147c65f1-616a-4ad6-ae2e-c3accf9a4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f86299-5e30-47bf-972c-c6a2ac48cf06",
        "cursor": {
          "ref": "c8bfd998-6f3f-4ad3-9f6d-1c7beead8a1d",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "621d5734-f481-4f2e-8f19-93f6d1d2fb9e"
        },
        "item": {
          "id": "f9f86299-5e30-47bf-972c-c6a2ac48cf06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71484390-aa29-4e6d-bd16-bd22b3b48c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc4ac79-92b0-4a88-914e-30a522e80a12",
        "cursor": {
          "ref": "2d2b46fc-c2aa-4388-a3de-62a10bba5683",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cc3acf42-0963-4dd7-a3fd-fdf858ec2798"
        },
        "item": {
          "id": "dcc4ac79-92b0-4a88-914e-30a522e80a12",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "013dcd97-3376-48ce-bfe8-4e5c3d3d6a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d276f3-f80a-4937-9360-ee06a713c646",
        "cursor": {
          "ref": "95db6839-c403-4ab7-9d58-ff0e6a4b2bc5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e5defff9-4f10-439c-9072-295f73968d14"
        },
        "item": {
          "id": "f8d276f3-f80a-4937-9360-ee06a713c646",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e8d016e-c159-4af3-9dda-54f3e20413b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a616e58-3150-4949-b25d-e52aefeecd88",
        "cursor": {
          "ref": "0e19ce3a-1ef8-48b1-9faf-10d718c4d676",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6bbb35a8-9d40-4a23-b7e1-b3b43996e820"
        },
        "item": {
          "id": "6a616e58-3150-4949-b25d-e52aefeecd88",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c077fa4b-7b0f-41ba-a36b-c163c8366673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b8dae4-8519-4d8a-bffc-6d6dba250c8f",
        "cursor": {
          "ref": "22b5a53e-2290-4de3-918e-3bc118a7fef5",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "961cade9-d68a-4dee-a10d-379058bcf8e3"
        },
        "item": {
          "id": "63b8dae4-8519-4d8a-bffc-6d6dba250c8f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "18d823d1-85b5-4972-bd6f-b9cc6846df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2c4454-c2bd-4762-8a9c-7e3d358308e6",
        "cursor": {
          "ref": "b98d1ec9-eb29-4edb-ae43-ea5c58ca2f46",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "70c9a54a-33ae-4716-9c37-09e4d4f545e7"
        },
        "item": {
          "id": "1e2c4454-c2bd-4762-8a9c-7e3d358308e6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8e9ab067-3400-476a-8e45-5665b8db0f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4eae76-ee22-4e5d-9e47-7f8d6505da2c",
        "cursor": {
          "ref": "e03fde22-d9c6-4e1d-809b-b7c78ec91a28",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "17f22cff-24b8-463f-8453-4c511041193c"
        },
        "item": {
          "id": "cc4eae76-ee22-4e5d-9e47-7f8d6505da2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "58f80cdf-34c4-43df-96d3-19c926dc2b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71217eca-df60-48eb-917d-f65906fda6ed",
        "cursor": {
          "ref": "0be2658e-6fad-4219-8c70-f41aeb2fd195",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "356c7bfd-fd7d-478f-9696-60d34898e016"
        },
        "item": {
          "id": "71217eca-df60-48eb-917d-f65906fda6ed",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c94d6226-d6f7-4a97-94b6-28a2d965b8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aacf93c-31ec-43cc-8959-ecb31ed3c891",
        "cursor": {
          "ref": "0ade9c6c-1041-4156-a15c-d16e437e4103",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "71607f12-1c0c-4064-95e1-cdf2a569eaed"
        },
        "item": {
          "id": "1aacf93c-31ec-43cc-8959-ecb31ed3c891",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bf3f4216-148c-4dd2-ae0b-f5591a1efc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d3028-f4df-4d5d-82c5-4abc63ec0f65",
        "cursor": {
          "ref": "3d3b2d58-5f12-49d1-b427-7aedb72f0f9b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1968c542-6c7c-4767-8a28-edcd4284eb59"
        },
        "item": {
          "id": "7d7d3028-f4df-4d5d-82c5-4abc63ec0f65",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "36f15e09-29de-4766-a98d-3dfe9fed6ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0664eb4a-b539-4eee-8046-e9c29137ced9",
        "cursor": {
          "ref": "b2b1ee74-2717-4974-8b34-05622accd290",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "04e12709-64e0-46d2-856d-d0c8cb2f022d"
        },
        "item": {
          "id": "0664eb4a-b539-4eee-8046-e9c29137ced9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "43d09a53-f510-4769-a296-c20997779fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d980a69f-665e-4dfa-8984-0202b4185f19",
        "cursor": {
          "ref": "f0bfdc4b-ce14-4c07-a145-d022c97e8a75",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d40cec21-2dcf-4714-afca-8f87d98e5c3d"
        },
        "item": {
          "id": "d980a69f-665e-4dfa-8984-0202b4185f19",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "52ef72d1-f8c3-4a5f-bf6e-eeed6a51a945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e1ed86-2de3-42fa-bd8e-4d2169eb7011",
        "cursor": {
          "ref": "d9a537f2-b71a-4f4b-ba17-4193272e4c3a",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b4bfe117-fc0d-46d7-ae75-e6b86055528f"
        },
        "item": {
          "id": "43e1ed86-2de3-42fa-bd8e-4d2169eb7011",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ae1323cf-6386-4b61-a4c9-4cd22cded5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff9c559-f5f6-4e96-a68c-f8994bd78efa",
        "cursor": {
          "ref": "a18f4d33-51ff-4344-88ec-4529688fd20e",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "16665ad3-ba34-40f3-966d-d23c3f30693d"
        },
        "item": {
          "id": "5ff9c559-f5f6-4e96-a68c-f8994bd78efa",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e250a7f6-2b96-491b-a782-89840b100ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767e5129-b083-4007-8ced-79336c27e214",
        "cursor": {
          "ref": "2dd251b0-0926-47ff-a4f0-25d6e29dcd3f",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "791e23dd-5e4e-4d07-a89f-901aad43edf1"
        },
        "item": {
          "id": "767e5129-b083-4007-8ced-79336c27e214",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "d9bc83cb-2d29-4de6-b12a-327a245d7b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311156d9-83cf-4db0-808b-83cd85eab7e5",
        "cursor": {
          "ref": "50fd0f2b-c695-47a9-8733-b0e342a8a006",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5000a579-8af6-48ee-a713-b9c84bb6b9e2"
        },
        "item": {
          "id": "311156d9-83cf-4db0-808b-83cd85eab7e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1057d83c-6f82-4bd9-85d3-31d709aabd45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d53b9c-227e-43c6-a47b-ab20333f8c23",
        "cursor": {
          "ref": "f0f81c58-d3bf-49c5-870c-3de654e83ed4",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9d1ff7b4-2d32-40c8-9e45-0fdb84cf1a1f"
        },
        "item": {
          "id": "53d53b9c-227e-43c6-a47b-ab20333f8c23",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f6a8113f-8c72-4a16-a187-f9d194d3fc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4316abe-3319-4087-a45a-9ef4763b295f",
        "cursor": {
          "ref": "cdf05b02-efb4-40a6-b052-06d7f6383c48",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "56ae47f4-5e33-4eb7-8900-5df829d2a592"
        },
        "item": {
          "id": "c4316abe-3319-4087-a45a-9ef4763b295f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b472a3c4-5ac4-46a5-ad13-10542aa7812e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebfc6d4-b737-43e0-9960-eddfbec2bd60",
        "cursor": {
          "ref": "b8480c19-4243-463d-9094-4402c785a4b6",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "51db90a7-c3c5-40c8-8ad1-80c8cac26011"
        },
        "item": {
          "id": "6ebfc6d4-b737-43e0-9960-eddfbec2bd60",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2ba27415-d812-459d-b5b2-a084c2b19235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f3144b-0cbb-4b0e-b7ae-5c96fd1c2a3d",
        "cursor": {
          "ref": "3ad7d523-3956-483e-8017-f3ea60c98fea",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8784c026-a434-47f6-a073-c748fc4fe87c"
        },
        "item": {
          "id": "79f3144b-0cbb-4b0e-b7ae-5c96fd1c2a3d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c70dd176-4489-406a-8d38-2a9124a2f0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039ee7d8-bd27-4027-9955-4c8d4d24adcb",
        "cursor": {
          "ref": "cfccac87-52bf-4570-b4d5-3de96ff4badb",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7a308d8e-b337-4e11-8604-e538b1f5e5e8"
        },
        "item": {
          "id": "039ee7d8-bd27-4027-9955-4c8d4d24adcb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8df9bcca-dc48-489d-9961-3b19c9575040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575b6052-f6d9-48a5-9e49-127320e072d8",
        "cursor": {
          "ref": "e3afbd5b-e91e-48bd-affb-e98ee17f9397",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0d680dde-b07e-4d56-9da9-a19f0aeef41e"
        },
        "item": {
          "id": "575b6052-f6d9-48a5-9e49-127320e072d8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a4aff3c8-ebb0-4771-8507-de6798307a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d889ea-32b5-466f-8ac1-f24c3824fea1",
        "cursor": {
          "ref": "dcb45a98-7929-4c44-afe2-4db78a8ba6b9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ac292a6e-9715-4559-8cff-cb4456b1eeef"
        },
        "item": {
          "id": "e2d889ea-32b5-466f-8ac1-f24c3824fea1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "914e55f4-3365-4d5b-89de-ac8efd8218f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81176ff0-552d-4205-910e-211b68f4e957",
        "cursor": {
          "ref": "0c82e2f1-3540-45a1-a17d-7045c1b1f50f",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "76ad67e4-e2d8-4110-a8dc-8faedc225b06"
        },
        "item": {
          "id": "81176ff0-552d-4205-910e-211b68f4e957",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bbb04cc5-2dd3-434f-837a-783b32661634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e60935d-1925-4f04-a17d-faa97cc96fa3",
        "cursor": {
          "ref": "37a808ce-77d9-4eac-b42d-22ad8d433786",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1b7772c5-c295-4f67-8d64-9feda3293903"
        },
        "item": {
          "id": "4e60935d-1925-4f04-a17d-faa97cc96fa3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "323d61a3-489d-40da-aebe-0aba3bad5938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ffe637-6a45-4ed9-b13e-03234e0122ce",
        "cursor": {
          "ref": "e7231359-a4ec-487c-a7f5-09a53d68a54f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d9ecbb64-5b79-4aaf-8f08-8ce2f5f88a97"
        },
        "item": {
          "id": "e1ffe637-6a45-4ed9-b13e-03234e0122ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bf10e0b6-286a-4583-b7f1-927c5856c8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f202824f-a762-4e96-9762-1422281775f6",
        "cursor": {
          "ref": "1cfef22a-4fde-401d-9f63-653886c84a30",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c5340933-ebbe-4716-8645-253b143282ab"
        },
        "item": {
          "id": "f202824f-a762-4e96-9762-1422281775f6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d286781-c905-47ac-972f-d660e097e00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2356715-6152-4130-8ca3-34710507fefa",
        "cursor": {
          "ref": "80fb8198-5074-47fb-a7f2-6f146b036bdd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "808584a3-b5b9-4114-bd41-0e44614c7e53"
        },
        "item": {
          "id": "d2356715-6152-4130-8ca3-34710507fefa",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "affeeb66-a810-4daf-9837-d349d364e7a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e394ca0-c4de-4924-ba6d-d1017bfd59eb",
        "cursor": {
          "ref": "ffa030a1-9fce-4106-9e4c-53cbed2ea3c6",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "3511426a-6a6c-4fdd-a63f-faf64c95cf28"
        },
        "item": {
          "id": "4e394ca0-c4de-4924-ba6d-d1017bfd59eb",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "aea0156b-0d09-4345-8cf1-e5683b3f710f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7929408a-3fcb-424f-88a8-c3eb1d49fbe2",
        "cursor": {
          "ref": "516cef0e-7dc0-4868-aa74-433eca71d8c4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8ca37b9a-01bd-46f8-b909-9be908e8ff1c"
        },
        "item": {
          "id": "7929408a-3fcb-424f-88a8-c3eb1d49fbe2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b88e53f5-66ef-4b3c-9e39-70451a91ab74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffb52d5-6f95-47bd-a093-e5bca44cdac7",
        "cursor": {
          "ref": "aa6ce62b-f2cd-445b-a56f-b557939e15a0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4034ebe8-b669-4d8e-9c26-18ef37d57371"
        },
        "item": {
          "id": "7ffb52d5-6f95-47bd-a093-e5bca44cdac7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "41d36ffa-354e-4ce2-982e-15cad56663e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1054e57-9b29-4452-85dd-717dc7080009",
        "cursor": {
          "ref": "5c026ae4-7b9f-4930-89b6-f2382c8c61b7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "99afeb06-c39e-416f-9614-70b556d039b1"
        },
        "item": {
          "id": "c1054e57-9b29-4452-85dd-717dc7080009",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "aed16f2c-2f2d-48a9-9d9d-28aeed0c7fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1234cc34-6f85-4c7e-a9f4-a21ace378152",
        "cursor": {
          "ref": "2fdd32bc-bfde-4812-8ae2-60deece1c53e",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "bb52ab96-b0dc-400a-9fb2-3a97e3914772"
        },
        "item": {
          "id": "1234cc34-6f85-4c7e-a9f4-a21ace378152",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6799c16f-f2f0-481f-9780-51e6de19fc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bc6c3a-396d-4b77-812d-7623cc241cc5",
        "cursor": {
          "ref": "d439e6c8-aa26-4c55-b154-46ea6d89d242",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e3271fa8-d2bd-4097-8f06-f5c2e67dd4f0"
        },
        "item": {
          "id": "20bc6c3a-396d-4b77-812d-7623cc241cc5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4cd04408-e448-4fa4-b48e-4cecac746aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fea3dfa-8feb-4a24-b136-3d9f1a7f0a10",
        "cursor": {
          "ref": "95a527a3-925f-4a9b-b2ef-c34e88f45c89",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "186bc870-fe79-4c4b-a460-e1854b86b5b9"
        },
        "item": {
          "id": "7fea3dfa-8feb-4a24-b136-3d9f1a7f0a10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b3588a4c-9be8-4b26-98a8-4b91e284f594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec46ccc-7f08-4f05-ac78-5db5da3d4ff4",
        "cursor": {
          "ref": "7ac497c1-d384-4647-b907-b7e241e38bf1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "093dc6e5-cb88-484b-abcb-bf5e08afd5e5"
        },
        "item": {
          "id": "7ec46ccc-7f08-4f05-ac78-5db5da3d4ff4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5cb020da-af55-4e77-a03d-b0cc6380b113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3c961bb-cc34-4bbf-9572-a1788b1a5423",
        "cursor": {
          "ref": "f91abc1b-5f38-49b5-9867-41b2598ca963",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cf7b3510-61cb-48c3-8c8d-9e8cd00bc7b2"
        },
        "item": {
          "id": "c3c961bb-cc34-4bbf-9572-a1788b1a5423",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6a82ce07-a9e3-4285-828a-86643ac479d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ee0c81-d85c-4568-9b0e-3feea6858ecb",
        "cursor": {
          "ref": "f62d6283-8a0e-44f2-a202-d44d1749c220",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "20dfc1fb-381a-48df-bcca-69ad09e418c3"
        },
        "item": {
          "id": "c0ee0c81-d85c-4568-9b0e-3feea6858ecb",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a5d73246-a899-45e3-902e-609d3ee7f505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1167bd8-4b8f-4532-b6a3-4f7043f6e01e",
        "cursor": {
          "ref": "0117f74a-a7a8-4736-93cb-63191b89bef6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fa782a26-4034-4a6e-9821-9c6cb20f684d"
        },
        "item": {
          "id": "e1167bd8-4b8f-4532-b6a3-4f7043f6e01e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df9e845a-8ab7-4f69-892c-dab13dd7ed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd7ff8a-ed7c-438d-9bcd-71dfb72ec567",
        "cursor": {
          "ref": "76dbc97c-7dce-4aec-8c60-2d381f959ac6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "275e45d6-6315-44ac-9389-f834d48441a2"
        },
        "item": {
          "id": "7dd7ff8a-ed7c-438d-9bcd-71dfb72ec567",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a3a5025a-1cd7-4d62-8db9-06ddb1253f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8de031-04e4-44e1-889f-e6d14aca8506",
        "cursor": {
          "ref": "5325c0ed-5865-4447-b988-e63cab20ad75",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9f3bcf31-944c-40ca-b0c4-fed3c628eae9"
        },
        "item": {
          "id": "0c8de031-04e4-44e1-889f-e6d14aca8506",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "510789b0-f736-4ab1-8269-4c6b186ba604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaf4f2d-511b-4cbf-9b41-352974211e45",
        "cursor": {
          "ref": "2ce25d02-1768-4c76-ab6b-4ce19b863c03",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c4accc75-6841-4ddf-8138-6044d2b607dd"
        },
        "item": {
          "id": "0eaf4f2d-511b-4cbf-9b41-352974211e45",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "45659f30-2385-4b99-aa3d-d0c0c9cd429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1328be9-dcb7-4fd0-8512-57486fc028c8",
        "cursor": {
          "ref": "cb2aa6aa-67b3-4f44-b934-27c90707c2d0",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "14dcb2ec-f6f3-479c-bcd5-26aaebfdcbc6"
        },
        "item": {
          "id": "c1328be9-dcb7-4fd0-8512-57486fc028c8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "81c2bb27-3f6a-4a07-8e92-9c1cfe0b74e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8329d1-9453-40b9-bbf8-16610d7884dc",
        "cursor": {
          "ref": "6cb9a459-8fc1-4174-b6a9-da71ce14ff72",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "879fd7c1-dc0c-473b-be92-ef7f7a2a1367"
        },
        "item": {
          "id": "ee8329d1-9453-40b9-bbf8-16610d7884dc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "84cf7a58-407a-4b4a-8f26-ed88d2fe4024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcfce62-47f8-4a58-a5d5-ba66cbd58f86",
        "cursor": {
          "ref": "e49b506d-5997-4ca2-aaf7-342cb52f9254",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "14f50b0c-16da-4aed-86c3-cd66718484e1"
        },
        "item": {
          "id": "5fcfce62-47f8-4a58-a5d5-ba66cbd58f86",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c276cc9a-305d-4a75-977c-895982ea8219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecbee2a-44ee-4271-b834-acc34dc83355",
        "cursor": {
          "ref": "9d66b1b9-1787-42c2-8518-ee98b85a6fab",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f4a7b1c1-38e7-4eab-bd06-2a33da5ae6d4"
        },
        "item": {
          "id": "7ecbee2a-44ee-4271-b834-acc34dc83355",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a0229f6a-22d0-44f9-a8ac-8613f7d34391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f6c519-998c-40ae-9c13-87a38ec1eddb",
        "cursor": {
          "ref": "8fb81e84-2256-46bb-9d47-07185b1e679e",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "541402f4-2470-4d74-99fb-19b3fa53e8a6"
        },
        "item": {
          "id": "b3f6c519-998c-40ae-9c13-87a38ec1eddb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f56a8c6a-599d-4891-95e2-442eab9512ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e3f91ed-6c78-457c-9f03-ed8ea18d8dfd",
        "cursor": {
          "ref": "2b3950a6-80d0-4616-a877-d215be960a5b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a3c57146-a57b-4c10-a7d2-3025d3a9c815"
        },
        "item": {
          "id": "7e3f91ed-6c78-457c-9f03-ed8ea18d8dfd",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bd82ef9f-baea-4720-8fb4-a31632b24e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c6e6c7-f74d-488f-9545-3778a1e78c7a",
        "cursor": {
          "ref": "faf05763-6b11-450c-9d8e-7d28b16b96e8",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c4a13b77-8429-4343-8a49-23377c4b7709"
        },
        "item": {
          "id": "e7c6e6c7-f74d-488f-9545-3778a1e78c7a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d16b004e-551e-429b-b873-9f4a77b4cc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6006dd5-21c4-4bf0-af73-ef7c7e469578",
        "cursor": {
          "ref": "baea35e0-0ee8-42d3-a521-98224398f245",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "020a4662-6cda-4693-9ab8-2520c0533272"
        },
        "item": {
          "id": "c6006dd5-21c4-4bf0-af73-ef7c7e469578",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "38e4337a-7fe3-4d06-8485-8de926ef0d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9eecab6-50fb-4b47-9ad2-9c730d1ea82c",
        "cursor": {
          "ref": "4d4f87f8-b89f-4ca1-aaf5-d5d00a019dea",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ca98fcb-d536-4e5a-ba7b-8266f63a17c4"
        },
        "item": {
          "id": "f9eecab6-50fb-4b47-9ad2-9c730d1ea82c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5a9aa38b-b908-492e-b0c0-e4629497aa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961519f1-0241-4ed0-9909-0a9b1d26dba5",
        "cursor": {
          "ref": "76fb548e-8f4b-4f83-a9b8-e685bcc35175",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6670e820-850f-4c57-ac78-f02239bb0439"
        },
        "item": {
          "id": "961519f1-0241-4ed0-9909-0a9b1d26dba5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9f2566f0-12e6-42ea-8de4-191f9047e95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2fc0db-7f45-4415-9935-8e08cae9effd",
        "cursor": {
          "ref": "1900d768-5365-404d-839e-83126504a287",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "95275b4b-203c-47e5-953d-c87b9f412499"
        },
        "item": {
          "id": "6f2fc0db-7f45-4415-9935-8e08cae9effd",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3af81507-a2f1-4485-a031-b0741259886b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e256a7-e771-4c3f-8ba7-d9b2ef356451",
        "cursor": {
          "ref": "ec8cf657-0074-43d7-bd71-24b514e947c0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "40951dee-b387-4c30-8c89-e4063818b380"
        },
        "item": {
          "id": "19e256a7-e771-4c3f-8ba7-d9b2ef356451",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40f63316-63d4-4383-b588-924494e73fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e3d8f4-247d-47e5-8216-c941032e0d23",
        "cursor": {
          "ref": "6e757ce8-50e8-45d3-ae3c-20f01cafcde8",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9c9296f3-1971-430b-ad85-c27eb3b8d574"
        },
        "item": {
          "id": "d4e3d8f4-247d-47e5-8216-c941032e0d23",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3401a31a-02a6-4f04-8a35-5f50146683f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e473967f-d3fb-4e85-ab60-98e677425ad0",
        "cursor": {
          "ref": "2e023e85-7985-41d7-a3a2-5d8731d71111",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3c1b53d6-e0b0-4020-b411-9e1146314512"
        },
        "item": {
          "id": "e473967f-d3fb-4e85-ab60-98e677425ad0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7904f2dc-a26b-43c0-a376-5891e956a399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ac92f6-049b-4e1e-bc0f-e3546077444e",
        "cursor": {
          "ref": "82460ddf-a3fc-4522-9c0f-413ff4515de1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "efced1c7-4f6a-43dc-880a-1b85aa864bc1"
        },
        "item": {
          "id": "b8ac92f6-049b-4e1e-bc0f-e3546077444e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "90b28c8e-6304-4c57-86c9-0c096a8f351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d447439a-dc1e-45a0-97c6-d3ba42291dc3",
        "cursor": {
          "ref": "2bd1f565-139f-4766-9379-cca891b761fa",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "9c2eb2b4-ca44-4764-808e-80ad47c5c134"
        },
        "item": {
          "id": "d447439a-dc1e-45a0-97c6-d3ba42291dc3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9bfe5b38-3484-4ad6-a353-a83804d1c27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5753218c-292e-4380-86e2-1ddf8cec30e9",
        "cursor": {
          "ref": "e2731901-b6a6-4218-9c83-ae3c8eb7b936",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3027ed24-2042-4b9d-af5a-1fdd8bc1c9f8"
        },
        "item": {
          "id": "5753218c-292e-4380-86e2-1ddf8cec30e9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12065281-fab8-442f-85a1-1ee5ac4b8396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b92285-c227-4693-b7c9-736b7a10ec95",
        "cursor": {
          "ref": "5ef1e502-e520-4437-b01f-2f1f5b0eebd2",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c8445faf-b4ef-4bb8-9bd7-9f1a835e5d4e"
        },
        "item": {
          "id": "67b92285-c227-4693-b7c9-736b7a10ec95",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "22fcf697-089f-4046-ad3e-eb40f9e83322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebdd0a9-9443-465f-8fb3-effcc1d1a06a",
        "cursor": {
          "ref": "42db6c30-7cb5-4271-af9d-aa7c4355ff84",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9eeb598a-b715-441d-924f-fc9ff2157e41"
        },
        "item": {
          "id": "bebdd0a9-9443-465f-8fb3-effcc1d1a06a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "671267dd-352a-4fa0-862e-1feb8ae9b8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d68c335-8972-45b4-8444-e7c3c89eb2fe",
        "cursor": {
          "ref": "7a10c203-eac9-4127-9eb6-e707ac308424",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ebb4d1ce-171f-48d7-9150-f88aa6628e89"
        },
        "item": {
          "id": "3d68c335-8972-45b4-8444-e7c3c89eb2fe",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "92d5d04b-e438-4f86-936b-481fe9abbe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407ba18d-576d-4e59-884e-2b71412a51a3",
        "cursor": {
          "ref": "e8db424b-4868-4edb-88f6-882318e73273",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6b6c8cea-48c9-4a84-982b-21d9e482c69b"
        },
        "item": {
          "id": "407ba18d-576d-4e59-884e-2b71412a51a3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "191fd963-2d73-4773-9c23-d366717b4ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4224f05a-f9ae-493f-91b2-2c5e8a4ae22a",
        "cursor": {
          "ref": "76503c29-4928-41f0-b189-e908ac852aab",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "75f19883-6439-46c5-8805-e5e9bf6d5790"
        },
        "item": {
          "id": "4224f05a-f9ae-493f-91b2-2c5e8a4ae22a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "51a2569b-efbd-407d-8119-8a8ea4218a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c6f993-b48c-45e1-95d3-f0f30b8eab6a",
        "cursor": {
          "ref": "e5126afc-8150-4f3c-a54d-47f4f14c2394",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "612e2a20-b007-4ae2-a098-a0fc7e24918c"
        },
        "item": {
          "id": "d1c6f993-b48c-45e1-95d3-f0f30b8eab6a",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c2ce6c21-2306-4cb7-8a40-9838d1c3b9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49ea4c0-5991-4681-8acd-0350e6655442",
        "cursor": {
          "ref": "ebf91140-ad44-464e-90aa-fc716176fd8b",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5659bab2-6420-48bc-bfc6-8d5d62d1a663"
        },
        "item": {
          "id": "a49ea4c0-5991-4681-8acd-0350e6655442",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f4158003-457f-4a3f-8a61-135ae02242fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c074ce99-6f20-4c06-a856-5522dd8d9ff7",
        "cursor": {
          "ref": "cd791996-f258-4c7d-8d04-a458b2f57312",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5325b42f-0d30-4489-b7f0-ba56f22d8f14"
        },
        "item": {
          "id": "c074ce99-6f20-4c06-a856-5522dd8d9ff7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "40aca7a6-54e1-4b5a-b325-6d110b6ae48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39565f7a-ac10-4430-9095-856ac236b177",
        "cursor": {
          "ref": "bec329e5-d5bc-4599-8bd6-4d7a9e91851e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4aeb44b2-bca2-46ca-9f80-0479233240d5"
        },
        "item": {
          "id": "39565f7a-ac10-4430-9095-856ac236b177",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "22deda88-09b6-4a71-8613-1fb06696de53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ee1489-686e-4dd8-a8e6-c36bde5b7222",
        "cursor": {
          "ref": "d3bd6f49-066a-4cb1-b085-0edd28dcd060",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4baf4026-53df-4268-b258-f2bb03ada4c4"
        },
        "item": {
          "id": "a2ee1489-686e-4dd8-a8e6-c36bde5b7222",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b5ed4773-8c2b-4150-91df-fa536fe534f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2817d909-525c-4228-b079-d69bce7fd46b",
        "cursor": {
          "ref": "bde54a5a-18e4-4bd8-9a90-c16db45b55d0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2e90f814-8997-4760-bee9-8f370a019683"
        },
        "item": {
          "id": "2817d909-525c-4228-b079-d69bce7fd46b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e7474020-218e-4090-ba7e-b57a772f6c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94be0768-b8a5-4d8a-8948-cc430900f4f5",
        "cursor": {
          "ref": "18e9b9fc-ba0d-4475-9f86-6f2566cd6f8a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c3121320-0258-4954-bd9a-2fa9feb18934"
        },
        "item": {
          "id": "94be0768-b8a5-4d8a-8948-cc430900f4f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "545e95cb-82c7-401f-b8b3-7048ccc27ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2461c-7923-475b-a662-48dc024cabd2",
        "cursor": {
          "ref": "a9ef61ee-6b36-4923-bfa6-a34a58af3e6e",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "55b2b27b-c1ea-4f55-8465-1aa1f91010ea"
        },
        "item": {
          "id": "17e2461c-7923-475b-a662-48dc024cabd2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "48ad0e5a-608e-4aa5-94dc-0ba1428e19b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af092a08-1222-415c-96a1-18aa052570a2",
        "cursor": {
          "ref": "707a6518-ca17-413e-bd91-5cbbac41dc9d",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "62433785-6f93-41e9-866f-9ea05b5b16ab"
        },
        "item": {
          "id": "af092a08-1222-415c-96a1-18aa052570a2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3027be8c-3adb-4d1c-8afa-8f37adc87a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f07a77-4015-4d1f-9a94-252b28375985",
        "cursor": {
          "ref": "6a37381b-2259-4028-9e43-f01a8acf7f32",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "34bba1f4-a08d-4cf7-abf4-df2aa636b869"
        },
        "item": {
          "id": "32f07a77-4015-4d1f-9a94-252b28375985",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1245eca0-8cdf-4e3d-b339-47ea31b53597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e4a3965-7da1-4f4e-b175-15349f0f195e",
        "cursor": {
          "ref": "02ce66e8-e782-4a8f-b503-40498e543796",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d366df17-d70a-4684-bfd6-3a939ca04717"
        },
        "item": {
          "id": "4e4a3965-7da1-4f4e-b175-15349f0f195e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26d5a4e0-1898-4365-a371-362dbf11e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9026da-8b20-4ce6-b90f-f28d4e944cd7",
        "cursor": {
          "ref": "a3a140b9-60b4-4384-835b-d16b588661c8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "45768385-8900-4ae1-8596-e8ec2dc6c8bb"
        },
        "item": {
          "id": "fc9026da-8b20-4ce6-b90f-f28d4e944cd7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "aece4339-ec22-4324-af4a-9a03f21a3fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572ff3dc-9538-4433-8fa7-1a9e681b0622",
        "cursor": {
          "ref": "95fe4ab0-4466-4a57-9b0e-4cbac2edefcb",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3a9ad788-45e6-4347-a2b2-b8b22eb389cb"
        },
        "item": {
          "id": "572ff3dc-9538-4433-8fa7-1a9e681b0622",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b9dd96aa-6689-4814-910f-d2cfbb998c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251dbef8-8d4c-4857-bc0b-4df85072101d",
        "cursor": {
          "ref": "64405797-601a-4117-9afc-4a3ba17aed78",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a83eebf3-8158-4c35-844b-4c5cdf9d2e25"
        },
        "item": {
          "id": "251dbef8-8d4c-4857-bc0b-4df85072101d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a797cf78-5644-48f4-a591-6486fdebc083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ce9a58-b022-4021-84db-90c18ccc77da",
        "cursor": {
          "ref": "21cec2c1-0540-4a2a-8739-8168d7045a79",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "54709440-af37-43fa-a973-eb3805c6e54a"
        },
        "item": {
          "id": "68ce9a58-b022-4021-84db-90c18ccc77da",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "91066f59-a1db-42c6-8e21-e5b5f0781228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e328a0-522b-4328-b29f-798c64a51c5e",
        "cursor": {
          "ref": "40ee5105-9459-401a-911f-b06732c5f4db",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ed49ae89-03ee-4f32-a361-0ba0bc2adc0d"
        },
        "item": {
          "id": "37e328a0-522b-4328-b29f-798c64a51c5e",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07ded353-617e-4e5e-ac65-209e6850e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc7def9-c719-48c1-b651-2770b918168f",
        "cursor": {
          "ref": "0f759107-bbeb-4e7f-8860-2de4fab5731c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "49d9b64f-0e16-455e-b8c6-9a6296db2ca5"
        },
        "item": {
          "id": "7bc7def9-c719-48c1-b651-2770b918168f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c4782594-9d14-47e0-a076-1aac3e6341f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22d35cc-099d-42c1-81af-78c60424fa31",
        "cursor": {
          "ref": "40b1acd5-3b16-40dc-89b2-8321bb385656",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "59dd6fd9-abde-4195-925b-aeea94ba7345"
        },
        "item": {
          "id": "c22d35cc-099d-42c1-81af-78c60424fa31",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "801ba75d-e2c3-473a-88e8-6e9806e3807b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518eaf58-f415-4b57-8068-e421b3799953",
        "cursor": {
          "ref": "f63fadf3-004b-413e-8242-d2cce9424414",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "90e0ffea-33ea-4a79-bceb-d5a334b1ced8"
        },
        "item": {
          "id": "518eaf58-f415-4b57-8068-e421b3799953",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "87a0fed1-493d-4cb1-bf86-c22bd31656dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b86a80b-e139-41c3-ae59-229a6340803e",
        "cursor": {
          "ref": "76cc6a1f-ccf0-4dc1-b12d-dbd4e0b68dbe",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "098e0245-c026-41f7-a851-155c64def0a4"
        },
        "item": {
          "id": "5b86a80b-e139-41c3-ae59-229a6340803e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "fd3760dc-9814-4397-9a98-c9b372e6e5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1817757f-7eb9-4354-9fdc-e340598ee88e",
        "cursor": {
          "ref": "a6bae166-2110-48a6-a95b-28d25656546a",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "53c3ffd0-b50c-4fae-8248-58eeee4a6d02"
        },
        "item": {
          "id": "1817757f-7eb9-4354-9fdc-e340598ee88e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8fb2978f-86a1-4b32-a3de-0c2fd4cf1f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124e3bb4-45d4-4a8f-8572-ffa84dee647b",
        "cursor": {
          "ref": "beb076da-106f-46c6-a804-c137a24b9a83",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2d3522de-fba4-402f-8d98-6ea607357e12"
        },
        "item": {
          "id": "124e3bb4-45d4-4a8f-8572-ffa84dee647b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f5a31a18-2660-4654-b161-29aaa97d8e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f5757b-1500-45c9-bf26-7e0d1b3df099",
        "cursor": {
          "ref": "56487593-06e5-4b8f-a97a-d8e831cd23b8",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fcbff8c0-4e07-487d-9044-bb679eab4b88"
        },
        "item": {
          "id": "d5f5757b-1500-45c9-bf26-7e0d1b3df099",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "10e8ad2a-505d-49e1-a8d3-9d1af76a29b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c4e6ca-6956-4fb9-9b7e-b6486e545a10",
        "cursor": {
          "ref": "015d5c36-bfef-46fb-8007-1333bd6b6881",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "50fd8b45-f69f-48c5-aac4-625c553e92c1"
        },
        "item": {
          "id": "13c4e6ca-6956-4fb9-9b7e-b6486e545a10",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "287a7a2e-c10d-478f-a0ed-acfa35694273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba8be94-7499-4939-be58-e4455578c98e",
        "cursor": {
          "ref": "fcf2ea27-29ec-4824-b85d-788270722d42",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9ab9d22b-432c-4446-9336-f18f97cdd519"
        },
        "item": {
          "id": "7ba8be94-7499-4939-be58-e4455578c98e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "95ddfb47-c561-4328-aaaa-68c38e8f6351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7623ca0a-f737-4349-9f03-e7ac7f0d242f",
        "cursor": {
          "ref": "fbc368c4-648c-4be3-b80e-a52463edf3b6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1e33868b-1dc0-4708-bd41-c2ff49356b0c"
        },
        "item": {
          "id": "7623ca0a-f737-4349-9f03-e7ac7f0d242f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c196e889-6e33-4fa7-b8c0-53a2067399dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd8be0-95c2-4cca-ac07-62f877a4895a",
        "cursor": {
          "ref": "dd0cc51c-4c44-46c1-a18d-de691f44733d",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dd76c448-97c1-40af-8ae8-15672c186ccc"
        },
        "item": {
          "id": "27bd8be0-95c2-4cca-ac07-62f877a4895a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e04d9b25-2c00-48e6-84d4-3bc110426c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a9d6e5-9f5d-46b5-a508-a14a2df0d01c",
        "cursor": {
          "ref": "2113ebd8-2182-435a-9f02-2a088c69e42e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e1d4d834-2662-4319-9bb0-5259d97e4608"
        },
        "item": {
          "id": "23a9d6e5-9f5d-46b5-a508-a14a2df0d01c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ec72085d-4613-41c3-8d70-d85cb489f66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3597e59-69a9-438e-a42b-c7cf4e196591",
        "cursor": {
          "ref": "98c54050-0e95-496c-8e04-03532823de52",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "68240840-45cc-4b12-a89f-bf9b3a84626a"
        },
        "item": {
          "id": "e3597e59-69a9-438e-a42b-c7cf4e196591",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "319ea9c8-ac92-42d4-b6c6-220ec7fe2a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22195b52-2052-4eac-9e16-af12fb6149bb",
        "cursor": {
          "ref": "beeef194-a742-4a1d-bfdb-c9eb8c70925d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "bdb47313-9cec-4f8a-bb5a-b9612733d4cc"
        },
        "item": {
          "id": "22195b52-2052-4eac-9e16-af12fb6149bb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "48e99bae-8828-47be-93f8-fcc2b7602b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3920614a-fad1-4981-af7e-863bd3eb0a8c",
        "cursor": {
          "ref": "4401d27b-2c73-4a95-9b02-573bf6184a17",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8693d42-f7b0-4085-9762-1934c2a09d55"
        },
        "item": {
          "id": "3920614a-fad1-4981-af7e-863bd3eb0a8c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a5011c1c-06ac-4127-8827-2fb4d91926cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffcb955-bef2-4092-aaea-9a391b9ec7e7",
        "cursor": {
          "ref": "1f990ccb-82f7-459e-a4f1-faff01a93116",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fa72b2f8-92a4-400a-8af8-bf9e7a1c6b8a"
        },
        "item": {
          "id": "7ffcb955-bef2-4092-aaea-9a391b9ec7e7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "edbdd7e9-f3ba-4c29-8514-50b052f47216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cebc1ce-dec4-4c1a-90f3-fc9256dbdf6f",
        "cursor": {
          "ref": "37b787af-e494-41ce-8343-8a13eb1405fd",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2136d8fb-620d-4064-8a08-01dcf8c8085f"
        },
        "item": {
          "id": "6cebc1ce-dec4-4c1a-90f3-fc9256dbdf6f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0cb8cdea-cc05-4945-9f8b-939ff4d958b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1afa53-5233-4a73-9c29-1d8b3e04a3c6",
        "cursor": {
          "ref": "e8ec7de1-06ea-4fe0-9fa8-26e3dc12d819",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "29a7f49c-5683-4d55-a718-af3baaaeac87"
        },
        "item": {
          "id": "da1afa53-5233-4a73-9c29-1d8b3e04a3c6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "137dccdf-577d-46f4-83fa-3bfb871e1090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94484e85-9de9-4c5c-9820-9bce81b42d3b",
        "cursor": {
          "ref": "1b27a162-168c-449b-938e-b4d8b2e21f24",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "18de44f1-96cc-4b88-9b48-c688a25f3971"
        },
        "item": {
          "id": "94484e85-9de9-4c5c-9820-9bce81b42d3b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "aad74ec2-91fd-4985-98db-6663eef6e756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41d8bab-63bb-448c-aa80-123822a5efc2",
        "cursor": {
          "ref": "de5f4c11-09fc-4206-96f8-42479b348b19",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e650fa69-5012-4e1a-bb66-7c1d28783802"
        },
        "item": {
          "id": "a41d8bab-63bb-448c-aa80-123822a5efc2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4eea56c1-bc63-4244-b1f1-405b3d47c27c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd10030-dd00-4271-8f04-51d9638ec839",
        "cursor": {
          "ref": "dcb80e18-4574-4f70-83b3-8dace17906e5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1c220288-e2fc-43ef-a1cf-43157ae738ab"
        },
        "item": {
          "id": "6fd10030-dd00-4271-8f04-51d9638ec839",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c77baeef-15ad-4033-ac70-197241f1b9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31e906c-7abb-4680-9ebc-bd6724350e17",
        "cursor": {
          "ref": "c0383889-b79a-44d1-9219-66528a62b4a8",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6cbb2cb6-6466-42dd-91fa-df18fb3287d7"
        },
        "item": {
          "id": "f31e906c-7abb-4680-9ebc-bd6724350e17",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7dad6641-2971-4f71-8599-8439eaada7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c613ba3-2451-49a2-b6a5-205cecf05b40",
        "cursor": {
          "ref": "b13a077a-ea45-43e8-b918-fdcec901d01f",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "caff06d6-fc80-4d14-9c50-add0c412ed0f"
        },
        "item": {
          "id": "9c613ba3-2451-49a2-b6a5-205cecf05b40",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "769d2806-1491-4f98-b7af-ed7416a7dcc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268f2e1e-f8e6-43e3-9e52-17ba806f9ca0",
        "cursor": {
          "ref": "d0b3b293-98ce-49c0-a974-9ccc18c2ff14",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "cb9102ab-6f02-4074-b840-50fb474a05fb"
        },
        "item": {
          "id": "268f2e1e-f8e6-43e3-9e52-17ba806f9ca0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "09eabc20-6f96-4069-b183-622b8041f539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c1706-3f82-44bc-a9d1-7c77e0c33c7c",
        "cursor": {
          "ref": "dac25953-5d15-494f-bf6e-40f307935273",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "9b11cd12-cc74-43aa-bfe5-e43e61029f78"
        },
        "item": {
          "id": "2d2c1706-3f82-44bc-a9d1-7c77e0c33c7c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f53f0a56-b7f0-4fbc-b67b-8a11dece43d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580be8f3-df94-4b9d-b918-2334e6776732",
        "cursor": {
          "ref": "87e61eb7-876f-427a-8c5f-02bc465ef725",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "86065147-4ab3-4d4e-ab2c-0952ee4c93cd"
        },
        "item": {
          "id": "580be8f3-df94-4b9d-b918-2334e6776732",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "faace1ed-9000-4660-819f-3f2d9fadf57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de23bea-44b0-415d-8ed8-0c9d6fc1056f",
        "cursor": {
          "ref": "bb487d26-e0ca-4216-9331-5c9809edb8bd",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "358e7d08-0492-404f-97ac-5ef5e0959b57"
        },
        "item": {
          "id": "5de23bea-44b0-415d-8ed8-0c9d6fc1056f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "05b7a9b8-405d-4d0a-ad90-0b73c1ea4a33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e315d59-0af2-49b2-9262-7c2c53ac8ea5",
        "cursor": {
          "ref": "05eee84a-32be-47ec-899a-c45a6f3d3465",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5a8b07a2-7771-4746-b340-7211a8c280a4"
        },
        "item": {
          "id": "9e315d59-0af2-49b2-9262-7c2c53ac8ea5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a28fc395-192f-4698-a8be-aeddbfbe954b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e79a7b0-5d94-478e-bf66-361e0e73305c",
        "cursor": {
          "ref": "74b9b667-a6c0-40a0-9707-f69568e8a160",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "00b2bbcc-c867-4e8b-abbc-1bcfea21b5df"
        },
        "item": {
          "id": "5e79a7b0-5d94-478e-bf66-361e0e73305c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "367ae6d5-eeae-4188-b79c-c6ad78a76329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eedd021-135a-4592-b0a7-62f263a29fef",
        "cursor": {
          "ref": "9ed64c0d-2227-4235-8619-d018b67f0282",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a54830fb-b3b7-418b-98e8-13961fab0e7f"
        },
        "item": {
          "id": "5eedd021-135a-4592-b0a7-62f263a29fef",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a0790ba2-2564-4570-9367-83f5a52dc233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad2a569b-3bc8-4bf8-8a51-366706b3fbbe",
        "cursor": {
          "ref": "3ecd108d-f9e6-4549-9408-a124bbbc7ef2",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5d4ef750-bd38-4b76-8c78-fba1f1843559"
        },
        "item": {
          "id": "ad2a569b-3bc8-4bf8-8a51-366706b3fbbe",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "cb226b30-62c6-46e5-b843-367fa3f3863e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d260f1-f508-41b0-bec4-4f0ab4ebdccc",
        "cursor": {
          "ref": "b6ed0220-8e6e-4505-9195-a7a7da717280",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f9708dc2-a3e3-4596-959a-bfe98e667144"
        },
        "item": {
          "id": "00d260f1-f508-41b0-bec4-4f0ab4ebdccc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "afbfafd0-a6d7-428a-84e8-b37271868219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bed8a7-fc08-42bb-9b6b-a281cdaa00fc",
        "cursor": {
          "ref": "6991e749-d247-4f7b-bafd-57f54eb94566",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7bea8ce6-42aa-48bb-8d3e-66c0c670929c"
        },
        "item": {
          "id": "46bed8a7-fc08-42bb-9b6b-a281cdaa00fc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "921be220-8d23-49bb-a02a-abaee693e255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8ee67a-ad74-47fb-938b-5e80413c66b0",
        "cursor": {
          "ref": "93e35eca-ef11-4669-a78f-d4827be4e1e6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "16bc0b16-d871-415c-b767-00eb151ff1a2"
        },
        "item": {
          "id": "4f8ee67a-ad74-47fb-938b-5e80413c66b0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "60f9ce5f-2772-4a12-b1fe-08ae8d62d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97d836a-7c4d-4acd-9fd3-7a5eeec4ea80",
        "cursor": {
          "ref": "e638cede-7d28-4bed-a8c6-1da0b7ffd610",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "18e376c5-91b6-43bf-bacc-e93a5ae0eb13"
        },
        "item": {
          "id": "a97d836a-7c4d-4acd-9fd3-7a5eeec4ea80",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "960c37e0-e26c-4f1d-9296-4635fb4a7402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f1881e-c538-4f78-b481-ccff1e4c5df8",
        "cursor": {
          "ref": "33251ad9-588f-41ec-8d48-b97523f325fc",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a2110604-ba8f-4ac6-8143-85a7550705d5"
        },
        "item": {
          "id": "e4f1881e-c538-4f78-b481-ccff1e4c5df8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "16616207-ea1f-4745-bf02-db00377a05e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d35a1ba-f982-46e8-8e9c-c7144147f80d",
        "cursor": {
          "ref": "3f511d1a-bb6f-4b55-8792-4a0a4dbe628a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bcdc1ec2-c681-4de8-8b1a-28e07a50e9f0"
        },
        "item": {
          "id": "0d35a1ba-f982-46e8-8e9c-c7144147f80d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b1e8ab1c-74b0-40a7-87f1-6d5820adf90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d4eb29-be20-43c9-b47d-12ab0b19a272",
        "cursor": {
          "ref": "5f2ceebd-5cd3-44a1-bbf3-58070b3b5a20",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03362126-4f9e-4de3-be52-a61904814f3e"
        },
        "item": {
          "id": "92d4eb29-be20-43c9-b47d-12ab0b19a272",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d9fe8886-7e2a-4367-aba9-538fbaf47bfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efe59dd-89e6-4cad-8b8a-21cbe46b3f6c",
        "cursor": {
          "ref": "a7a80157-cf64-44e0-b116-16faf2fd30f3",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a8221967-9f27-4d32-afac-2f40c5e3f106"
        },
        "item": {
          "id": "1efe59dd-89e6-4cad-8b8a-21cbe46b3f6c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "49085f42-7be5-4c3c-9a50-f7b39f910146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2158111b-c9ef-4485-98f6-c996e0a72c65",
        "cursor": {
          "ref": "c0c50432-0ee3-48cb-a2c0-af60cce5a8ef",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "73b306e8-b8fb-43a8-af51-ff4729aa1779"
        },
        "item": {
          "id": "2158111b-c9ef-4485-98f6-c996e0a72c65",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c8722eb3-85ce-4742-997d-54db7fb1ada4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9071bb1e-c96d-45e8-ac78-0397c91ded12",
        "cursor": {
          "ref": "877a5e67-eec0-4c39-b0e5-e9fed7ba8f6f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "44b41260-9fa9-4885-aefa-b37dd84cb4df"
        },
        "item": {
          "id": "9071bb1e-c96d-45e8-ac78-0397c91ded12",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bbf79972-fbb5-4f9a-9e09-05be9487d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4b0d23-1a13-4621-ae82-f6afad64edae",
        "cursor": {
          "ref": "2d75b00a-fc45-4809-9cc2-9b9adaf19667",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d3aa1984-be3b-4df4-a2a0-db294336736a"
        },
        "item": {
          "id": "9d4b0d23-1a13-4621-ae82-f6afad64edae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5b1686f1-afa7-41a7-9485-e50245ebcbfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443b7fee-99c9-4f4e-80dc-d5fc142407e4",
        "cursor": {
          "ref": "a41b3cb4-2289-42af-b892-e0b330a3b1bf",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7bd5dd42-2043-4980-b3a3-738ce7c357bb"
        },
        "item": {
          "id": "443b7fee-99c9-4f4e-80dc-d5fc142407e4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "89e6ede8-2569-41f2-869b-1dac28483086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38e989d-d7f3-46f1-8a9a-14a304b3fd74",
        "cursor": {
          "ref": "c4192a4b-8e83-46ee-842e-d67a0e79964e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d622463b-82c6-485e-822a-f9a288dbff5b"
        },
        "item": {
          "id": "b38e989d-d7f3-46f1-8a9a-14a304b3fd74",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "13ee668e-6feb-4377-9f8c-57936d94e533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaff8f71-a806-4505-bf01-00ffbd4f05e9",
        "cursor": {
          "ref": "0a823843-d58d-477c-9a4b-59089dff50d4",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44a72d3a-3866-416b-b355-38ab1a276146"
        },
        "item": {
          "id": "eaff8f71-a806-4505-bf01-00ffbd4f05e9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "49ea4d85-385d-42d5-a263-9ef89b5803b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c535347-e28a-4bac-9beb-f2c9ad24fd09",
        "cursor": {
          "ref": "ceaf3e21-a90d-4ee4-8d7a-f70792ae0a42",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2f2cff32-a2a2-4493-8fc6-f04969c63166"
        },
        "item": {
          "id": "9c535347-e28a-4bac-9beb-f2c9ad24fd09",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c795e1a4-0e97-40fd-89ff-3d98a895b7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8574dd-56de-462c-a30c-fb8c509a4675",
        "cursor": {
          "ref": "f0e8b7af-7d9e-4788-8fc0-bace46929d30",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4b2e1c9-4535-440e-8c8c-791bd9a6295b"
        },
        "item": {
          "id": "ad8574dd-56de-462c-a30c-fb8c509a4675",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8eb6c3ef-d3ee-4370-9244-6bcdc2830102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1539f23b-0449-4688-8c7d-7108aed98782",
        "cursor": {
          "ref": "3e5c3b71-ab52-4f77-b69d-3399cf08c0d5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "23c69d78-1aaf-453e-a858-7e86a30d5a73"
        },
        "item": {
          "id": "1539f23b-0449-4688-8c7d-7108aed98782",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "bef296d4-5fd3-4f42-b4dc-707a818d38c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a08f333-c306-47ca-b738-76d0c28b9551",
        "cursor": {
          "ref": "7a7e7be2-9f55-414c-814a-fa0654251366",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "87f79a2d-5ada-4f70-a8ad-f9797c6b9d76"
        },
        "item": {
          "id": "4a08f333-c306-47ca-b738-76d0c28b9551",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "478b2f63-cf82-4598-a0d3-023acec82a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5273a96-b104-4d1e-a039-3bcb638747d9",
        "cursor": {
          "ref": "ec375af0-49f7-48e8-92e9-27e1093f85b6",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "fc93c7e2-32f1-498a-8f8f-a7d69e6ae8d8"
        },
        "item": {
          "id": "c5273a96-b104-4d1e-a039-3bcb638747d9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6a5ed4b3-dd07-4dab-a134-ce8a664eea97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62d65da-f8aa-45d5-adb6-b979c0ad02b2",
        "cursor": {
          "ref": "4351d941-d98f-4bb4-abeb-9c626b0d16da",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "316d3a8e-1d81-46a9-9169-f59a84fe86ba"
        },
        "item": {
          "id": "f62d65da-f8aa-45d5-adb6-b979c0ad02b2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "cd8da3fb-55e0-40cd-a975-d29b6cc7f070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cc33a7-2f91-4191-af6d-fc66e6cf7a7a",
        "cursor": {
          "ref": "3a32cd77-a86c-4988-aae6-c4b0335c9b80",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9a62a4d5-8cd9-407a-8cc5-1f7138ad9384"
        },
        "item": {
          "id": "f4cc33a7-2f91-4191-af6d-fc66e6cf7a7a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6c235a96-1c17-46d0-adb6-af517a1d3acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9512f126-585b-4ed7-b984-c1a3728fd5dd",
        "cursor": {
          "ref": "56ff560b-a967-4737-a6c3-ff7db22e4b39",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "00288aa3-ecfc-4ea7-8019-e935a15f4a12"
        },
        "item": {
          "id": "9512f126-585b-4ed7-b984-c1a3728fd5dd",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "97c86559-3b6c-45b2-8aa7-71f5b80141b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1515ef82-31e9-4cab-b80c-692c968c3c57",
        "cursor": {
          "ref": "187fac86-7c82-4962-9111-60499944d087",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0a991c45-e139-4194-bbb9-aa0af594d254"
        },
        "item": {
          "id": "1515ef82-31e9-4cab-b80c-692c968c3c57",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "88f3aebe-f288-4099-ac88-37b10a4ee3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2f4379-7f58-4d2f-8567-25c850edc686",
        "cursor": {
          "ref": "fb699f33-f71a-477a-9331-f2a31b73c3a9",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "58bf1b65-f657-4ce3-946e-70613379a90f"
        },
        "item": {
          "id": "8f2f4379-7f58-4d2f-8567-25c850edc686",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c520c00f-afbb-416e-957e-3332dc1deec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee864ece-7b13-410e-9da4-feae939a0bdc",
        "cursor": {
          "ref": "da03b127-5b0c-45cd-b887-ecbb1069a6fd",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1cc5b1b8-87e6-496a-b00d-d41317bb3809"
        },
        "item": {
          "id": "ee864ece-7b13-410e-9da4-feae939a0bdc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "70f095db-6c16-4587-867b-654b4ed66c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacc13e2-953a-4202-ac48-038cd074eafe",
        "cursor": {
          "ref": "beac9f38-f12a-4482-8c0a-2b6526a2a3b6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "166b12ba-64db-4cb7-8e66-0ab02b5b5491"
        },
        "item": {
          "id": "aacc13e2-953a-4202-ac48-038cd074eafe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3d47619f-029b-491a-8770-127612a15eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66993069-a667-4caf-ae40-23da24a79d70",
        "cursor": {
          "ref": "9c653a2a-c712-4e30-86c6-021bede15dd2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3c11d5b8-1f42-4b27-84b7-10f075fe3908"
        },
        "item": {
          "id": "66993069-a667-4caf-ae40-23da24a79d70",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ba90e6ab-cd47-4759-bb9b-7767f679f852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab9ad7e-38a7-45a5-a1b9-9cf8c97abe72",
        "cursor": {
          "ref": "c8fc8232-ea0a-434d-abce-5b422d6f3788",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "31ec08bf-7539-46f1-b8e5-d9fe5c460005"
        },
        "item": {
          "id": "1ab9ad7e-38a7-45a5-a1b9-9cf8c97abe72",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b6925aec-7543-47ed-b2f1-b8f17142b5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc34a243-03be-47d1-80ba-28dab9dabc2f",
        "cursor": {
          "ref": "479b3029-53d3-4b77-9fba-53b9ba024c36",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c3670b66-f684-450d-999b-3dd162054e16"
        },
        "item": {
          "id": "fc34a243-03be-47d1-80ba-28dab9dabc2f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "72629278-0785-45d2-b750-658d245be7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062a40a3-3e7e-49cb-bd21-3f736e1ea659",
        "cursor": {
          "ref": "ad7bfb2d-e4f4-4411-b5ee-df6021eb8854",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c264ef48-2fec-44e2-a324-b718d999fdb3"
        },
        "item": {
          "id": "062a40a3-3e7e-49cb-bd21-3f736e1ea659",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d4976712-59aa-4045-82a5-81b7b9631bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7019a297-52fd-4ba7-895f-ecd863cd818b",
        "cursor": {
          "ref": "4da8c147-bfca-46ba-a2ef-7eb64e5b7f89",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c677bf0e-29cc-47d1-9fc0-58db3ebc0d8b"
        },
        "item": {
          "id": "7019a297-52fd-4ba7-895f-ecd863cd818b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8d93cd54-02a1-4b5d-aef8-0bbe08c3d38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4495bafa-1eda-4c80-9e3c-862cb84ce5e3",
        "cursor": {
          "ref": "78219387-94c8-4c7a-b552-d2d1764bc2eb",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9403f86e-4b4b-41db-8926-cbb19442d87a"
        },
        "item": {
          "id": "4495bafa-1eda-4c80-9e3c-862cb84ce5e3",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "673083ab-3ca8-4821-829a-007ef6fa3f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4aa70e-dd51-4189-8135-0c386f1a41d0",
        "cursor": {
          "ref": "c1d01a2a-ed49-430f-baf9-99241f96912c",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9f403f0e-863c-43a4-ab18-83d99db69bfe"
        },
        "item": {
          "id": "2e4aa70e-dd51-4189-8135-0c386f1a41d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f9b6f438-1ae7-4235-a00f-805b425d305d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0de63dd-0ca8-4656-952a-97787a0205da",
        "cursor": {
          "ref": "3316482c-1079-4087-8b74-aa675304d1cd",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "254eabbc-459f-4d05-b182-21d08b0ad4f8"
        },
        "item": {
          "id": "b0de63dd-0ca8-4656-952a-97787a0205da",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1659f1f5-4cc1-4461-a2e3-78e36fb53458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190d5336-621f-4d6b-bc6f-d117f24ed490",
        "cursor": {
          "ref": "a039e352-9c8d-4e84-b048-bad50cae4796",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b52b28cc-da0d-4a1d-a17a-65262a1af85e"
        },
        "item": {
          "id": "190d5336-621f-4d6b-bc6f-d117f24ed490",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d44aa52c-f34d-4470-8049-b1855cbcd804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e80cc54-0b5b-433d-af27-0052ef2bc509",
        "cursor": {
          "ref": "cafcedef-f9fe-4eda-8257-bfb2714f2502",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2ca9b28e-3c2c-40fb-978f-6cef722569eb"
        },
        "item": {
          "id": "0e80cc54-0b5b-433d-af27-0052ef2bc509",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2e14cef7-8085-4003-8e65-cee45f1b542c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b115d164-22ed-4350-9117-f245e8b8d4b2",
        "cursor": {
          "ref": "04ee6d6a-740d-4e66-9c25-2b7b1ea32bb6",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e605ffcd-768f-499e-b61e-8638e6dbc5f6"
        },
        "item": {
          "id": "b115d164-22ed-4350-9117-f245e8b8d4b2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d3aa1379-b61b-4270-ba81-52fe0929e179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f551558-a5d7-42d2-a720-1af106baf52d",
        "cursor": {
          "ref": "0c279f8e-0dcc-4166-a111-8a96290cd938",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "23f399e4-9447-430a-b3c2-7bdd15fcf965"
        },
        "item": {
          "id": "6f551558-a5d7-42d2-a720-1af106baf52d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cc53c305-9fb0-4df6-9ca0-dc435a14be88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c15601-d84a-412a-8b38-08c9227a8cdb",
        "cursor": {
          "ref": "52ec96c7-497e-4369-b546-9531c5a1397e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0e9d7469-1a18-43c8-a7fb-303407542bee"
        },
        "item": {
          "id": "55c15601-d84a-412a-8b38-08c9227a8cdb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "86bc65ce-1661-4471-a648-e9993d76fa38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce21fbb0-1aaf-422a-b518-ed4431e508a7",
        "cursor": {
          "ref": "bd80f537-c33b-41ee-bf5a-abf6456213ed",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4a98f254-9e9a-4e9d-92ee-ef97ed794c4e"
        },
        "item": {
          "id": "ce21fbb0-1aaf-422a-b518-ed4431e508a7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75193c3c-87b7-4f37-aa4e-e568f7e9839f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc96287-f1a9-41cf-a6d0-3587ff6d70e3",
        "cursor": {
          "ref": "f5f48b01-63ca-419d-97cb-f0ae3ff2ae3f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "889191b0-d1fd-40fd-aa8d-aaaf225131dd"
        },
        "item": {
          "id": "1cc96287-f1a9-41cf-a6d0-3587ff6d70e3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "57959d9f-f524-4409-862a-9669d77bedf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70011a95-b8ae-4ae0-8f4a-d106b28730fa",
        "cursor": {
          "ref": "625f2853-3327-49ed-bc9b-5d5af21cc55f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "059a4b0f-5fcc-4e21-b3cf-2550670057bb"
        },
        "item": {
          "id": "70011a95-b8ae-4ae0-8f4a-d106b28730fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "818eba74-7edb-4b36-b6c4-e47e15a11928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48cbd56-c80f-49f7-810b-d1305e6b33f1",
        "cursor": {
          "ref": "72efa4c6-d15b-435e-ada6-750f21acf2cc",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "cf7782e9-7b79-4b26-979a-b740817163db"
        },
        "item": {
          "id": "b48cbd56-c80f-49f7-810b-d1305e6b33f1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "89502dd4-ccec-49d0-a8c6-e8f609ddd73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2bb776-cd9a-4cdb-a180-bc1be09ed7c6",
        "cursor": {
          "ref": "2bbf4d89-3d25-487e-b2c8-f65795b9c75f",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "0db30075-723a-4492-8af0-71cb3b7e5929"
        },
        "item": {
          "id": "4e2bb776-cd9a-4cdb-a180-bc1be09ed7c6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7222ec52-f56f-4624-a099-3a598971e9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3613d1-01b7-4a33-b062-9a09af0a7d02",
        "cursor": {
          "ref": "293f8f12-a9c0-49e3-ba55-4c60229c7d26",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f7bd8929-a224-4e2e-b6eb-fd01c4cbfd45"
        },
        "item": {
          "id": "3c3613d1-01b7-4a33-b062-9a09af0a7d02",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f8662162-9f2f-46c0-acde-2770d9479afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34da639c-45b9-4dd8-871f-1d8f0a9afbb8",
        "cursor": {
          "ref": "32a409fb-a1a2-4c04-af42-3318e99cde45",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "fcbe6751-3cca-4b8f-be95-bfa3a145e1a9"
        },
        "item": {
          "id": "34da639c-45b9-4dd8-871f-1d8f0a9afbb8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3ae3880c-dfef-4ab6-ae94-c4fbfa32dd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae123b3d-1a6a-4478-816e-610a69ec29dc",
        "cursor": {
          "ref": "70ca8825-0bf4-4752-ac2e-a42bec3220fd",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1f46385c-56ab-48e5-9a89-af36c64f3657"
        },
        "item": {
          "id": "ae123b3d-1a6a-4478-816e-610a69ec29dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "edffe98b-1eff-41ac-941b-64f165e5d4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3739643f-23fe-4465-a0a4-340b9cb0c77d",
        "cursor": {
          "ref": "760694aa-4b76-4028-9fc7-39bac052f8b4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1fc56484-0313-44f0-95fc-860b66d09e14"
        },
        "item": {
          "id": "3739643f-23fe-4465-a0a4-340b9cb0c77d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dc550bcf-9780-4edd-a6e8-1617911941b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec991c9-b25e-4265-93a6-fb35b27cfc54",
        "cursor": {
          "ref": "98593002-89c7-4f91-9088-ba2e4ec6edf4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9a3cbea5-a772-48a3-912e-1963a59ea777"
        },
        "item": {
          "id": "bec991c9-b25e-4265-93a6-fb35b27cfc54",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f713ea08-eb34-49d3-a6b2-9d8b847c4fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627eb81-bc68-45e3-be43-20e42b4bca0c",
        "cursor": {
          "ref": "90fdf57e-4733-46e7-9f30-71bd9e692dcc",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8ab616a2-c723-494b-8796-3e204d4dc222"
        },
        "item": {
          "id": "d627eb81-bc68-45e3-be43-20e42b4bca0c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5c123d35-1388-4f65-8c2a-9e21b8fcdae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5cb4484-61e3-4a53-b22b-1469d0a753ef",
        "cursor": {
          "ref": "1aca7135-7b7b-4a8e-8029-a3ac93729cf9",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "d4e0e765-d02a-4c03-bba0-2b082da561f6"
        },
        "item": {
          "id": "c5cb4484-61e3-4a53-b22b-1469d0a753ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7a381861-adf1-448c-a1b7-3e121573c86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c494957-c216-4347-80fa-96c5e592e8d5",
        "cursor": {
          "ref": "43852ae9-72c7-4f5c-994d-2b7c44099a85",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "b67f13e8-af76-49ca-8507-b6bea7a09a0f"
        },
        "item": {
          "id": "3c494957-c216-4347-80fa-96c5e592e8d5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56cd4710-3fdd-4d4a-be9e-8b6b09ad0cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534e842d-1b67-4b1a-97b0-50ce1d6a98a7",
        "cursor": {
          "ref": "913ce4ee-472b-42a5-a5b1-055466357dae",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "0cb1ed68-470d-412c-aa5e-bf8616ff6353"
        },
        "item": {
          "id": "534e842d-1b67-4b1a-97b0-50ce1d6a98a7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "42450d12-0955-4967-840c-70f48bdf0b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656fd92b-cd2e-4665-8fb6-02f3d9f77c4f",
        "cursor": {
          "ref": "d130fffc-2224-47b7-a576-958d55106069",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "fc006f5a-1f51-4e60-bb8a-c07e32156b4f"
        },
        "item": {
          "id": "656fd92b-cd2e-4665-8fb6-02f3d9f77c4f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1df0ba82-5801-4db0-881b-5e80e44f60fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a145095-83e1-418f-8804-2dd879638815",
        "cursor": {
          "ref": "1ed408b6-bd49-4ccc-9df3-96ef8426eb99",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "22f24bfb-2568-4d02-82ab-4ca434012c01"
        },
        "item": {
          "id": "4a145095-83e1-418f-8804-2dd879638815",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9d199322-eb48-4a76-a0e7-4eaa02da3f3c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0972d102-2014-467e-a9e8-17c8a9eb551b",
        "cursor": {
          "ref": "9883e50f-933d-4e39-8131-8b2ad2cbd509",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "f8af9d6f-326a-406f-8a23-75ddf972adb1"
        },
        "item": {
          "id": "0972d102-2014-467e-a9e8-17c8a9eb551b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "45d7a27a-6bbb-4b14-ba88-e8155dcbb19e",
          "status": "OK",
          "code": 200,
          "responseTime": 126,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8274aa-2eba-4372-a33e-440c2ab4085b",
        "cursor": {
          "ref": "561a3995-225e-4e39-a7c2-595fc1481d3b",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f97f086f-8f2b-432c-a2e0-e98ab49260ce"
        },
        "item": {
          "id": "dd8274aa-2eba-4372-a33e-440c2ab4085b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c327b5e9-d01f-429c-8a42-f9c372dd2d97",
          "status": "OK",
          "code": 200,
          "responseTime": 1858,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b235f4b-6814-4e2f-be85-2d2978ff0393",
        "cursor": {
          "ref": "ba059bb4-21a2-4cb0-b460-7c1f4df84ca6",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e3e18480-68c9-40b2-bc7b-c37997fa4714"
        },
        "item": {
          "id": "5b235f4b-6814-4e2f-be85-2d2978ff0393",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc00b9f6-12f7-4afb-b8df-30376bc4b280",
          "status": "OK",
          "code": 200,
          "responseTime": 1402,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e7ca6-f582-4737-8e49-eb5b1c2ffce3",
        "cursor": {
          "ref": "4d6d14d2-de9a-403a-acea-2ffb10da1dca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5beca17d-b312-4602-878c-db3193432a1e"
        },
        "item": {
          "id": "bc4e7ca6-f582-4737-8e49-eb5b1c2ffce3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea53b05d-7ceb-44cb-ae16-8dda58fb11f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc4e7ca6-f582-4737-8e49-eb5b1c2ffce3",
        "cursor": {
          "ref": "4d6d14d2-de9a-403a-acea-2ffb10da1dca",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5beca17d-b312-4602-878c-db3193432a1e"
        },
        "item": {
          "id": "bc4e7ca6-f582-4737-8e49-eb5b1c2ffce3",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ea53b05d-7ceb-44cb-ae16-8dda58fb11f8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df32e74e-a24c-4b78-bd28-3451f88bbee3",
        "cursor": {
          "ref": "53bdc435-daf6-4279-80b4-b7be10345262",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4b4af68c-d63f-424a-a0a9-bf4d0299e059"
        },
        "item": {
          "id": "df32e74e-a24c-4b78-bd28-3451f88bbee3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "77103558-882b-4c9c-91ec-3e8ffeb81c52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462ebd47-3c29-4e0a-9396-16709a549e2c",
        "cursor": {
          "ref": "1eacf1e5-227c-450a-8156-bc0eb172ce6b",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fd589234-e716-4cfb-a247-2f2b83c4781a"
        },
        "item": {
          "id": "462ebd47-3c29-4e0a-9396-16709a549e2c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a60586b1-dde6-4b1d-864c-7ef5913525fa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}